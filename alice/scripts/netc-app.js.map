{"version":3,"sources":["app-config/netcreate-config.js","app/init-appshell.jsx","app/init.jsx","app/settings.js","app/system/datastore.js","app/system/util/constant.js","app/system/util/enum.js","app/system/util/hdate.js","app/system/util/jscli.js","app/system/util/path.js","app/system/util/prompts.js","app/system/util/reflection.js","app/test.js","app/unisys/client-datalink-class.js","app/unisys/client-lifecycle.js","app/unisys/client-messager-class.js","app/unisys/client-module-class.js","app/unisys/client-network.js","app/unisys/client-react-component.jsx","app/unisys/client-state.js","app/unisys/client.js","app/unisys/common-defs.js","app/unisys/common-netmessage-class.js","app/unisys/common-session.js","app/unisys/component/SessionShell.jsx","app/unisys/server-database.js","app/unisys/server-logger.js","app/unisys/server-network.js","app/unisys/server.js","app/view/default/AppDefault.jsx","app/view/html-frame/HTMLFrame.jsx","app/view/netcreate/NetCreate.jsx","app/view/netcreate/comment-mgr.js","app/view/netcreate/components/AutoComplete.jsx","app/view/netcreate/components/EdgeEditor.jsx","app/view/netcreate/components/EdgeTable.jsx","app/view/netcreate/components/Help.jsx","app/view/netcreate/components/ImportExport.jsx","app/view/netcreate/components/InfoPanel.jsx","app/view/netcreate/components/MarkdownNote.jsx","app/view/netcreate/components/More.jsx","app/view/netcreate/components/NCAutoSuggest.jsx","app/view/netcreate/components/NCDialog.jsx","app/view/netcreate/components/NCDialogCitation.jsx","app/view/netcreate/components/NCDialogInsertImageURL.jsx","app/view/netcreate/components/NCEdge.jsx","app/view/netcreate/components/NCEdgeTable.jsx","app/view/netcreate/components/NCGraph.jsx","app/view/netcreate/components/NCGraphRenderer.js","app/view/netcreate/components/NCNode.jsx","app/view/netcreate/components/NCNodeTable.jsx","app/view/netcreate/components/NCSearch.jsx","app/view/netcreate/components/NetGraph.jsx","app/view/netcreate/components/NodeDetail.jsx","app/view/netcreate/components/NodeSelector.jsx","app/view/netcreate/components/NodeTable.jsx","app/view/netcreate/components/SaveEditsDialog.jsx","app/view/netcreate/components/Search.jsx","app/view/netcreate/components/Template.jsx","app/view/netcreate/components/URComment.jsx","app/view/netcreate/components/URCommentBtn.jsx","app/view/netcreate/components/URCommentPrompt.jsx","app/view/netcreate/components/URCommentStatus.jsx","app/view/netcreate/components/URCommentThread.jsx","app/view/netcreate/components/URCommentThreadMgr.jsx","app/view/netcreate/components/URCommentVBtn.jsx","app/view/netcreate/components/URDateField.jsx","app/view/netcreate/components/URTable.jsx","app/view/netcreate/components/Vocabulary.jsx","app/view/netcreate/components/d3-simplenetgraph.js","app/view/netcreate/components/filter/FilterEnums.js","app/view/netcreate/components/filter/FilterGroup.jsx","app/view/netcreate/components/filter/FilterGroupProperties.jsx","app/view/netcreate/components/filter/FiltersPanel.jsx","app/view/netcreate/components/filter/FocusFilter.jsx","app/view/netcreate/components/filter/HDateFilter.jsx","app/view/netcreate/components/filter/NumberFilter.js","app/view/netcreate/components/filter/SelectFilter.js","app/view/netcreate/components/filter/StringFilter.jsx","app/view/netcreate/edge-mgr.js","app/view/netcreate/filter-mgr.js","app/view/netcreate/hilite-mgr.js","app/view/netcreate/importexport-mgr.js","app/view/netcreate/nc-logic.js","app/view/netcreate/nc-ui.js","app/view/netcreate/nc-utils.js","app/view/netcreate/render-mgr.js","app/view/netcreate/selection-mgr.js","app/view/netcreate/template-schema.js","app/view/netcreate/templateEditor-mgr.js","app/view/netcreate/ui-mgr.js"],"names":["NC_CONFIG","dataset","port","googlea","process","module","exports","window","React","require","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","UNISYS","SETTINGS","NetCreate","AppShell","props","toggle","bind","state","isOpen","redirect","HandleMessage","setState","data","history","push","GetRouteInfoFromURL","location","href","route","routeProps","isLocalHost","IsLocalHost","display","flexFlow","width","height","backgroundColor","padding","Component","NC_DBG","console","log","id","DBG","ReactDOM","document","addEventListener","groupCollapsed","m_SetLifecycleScope","JoinNet","EnterApp","m_RenderApp","SetupDOM","SetupRun","groupEnd","Log","event","UDATA","NewDataLink","LocalCall","ServerDisconnect","url","scope","SetScope","warn","Promise","resolve","reject","render","querySelector","e","alert","EJSPROPS","NC_UNISYS","S","DATE","Date","RELOAD_CHECK","RELOAD_TIMER","MOD","a","b","undefined","ROUTES_PARAMS","plist","fn","hrefParts","split","hrefString","length","stringParts","routeString","queryString","Error","routeParameters","params","key","routeInfo","settings","vars","i","setting","value","dict","pkey","result","queryVars","Set","val","Get","ForceReloadOnNavigation","clearTimeout","setTimeout","reload","CurrentTime","toDateString","EJSProp","propName","ServerHostName","server","hostname","ServerHostIP","ip","ServerAppURL","ubits","URL","hash","protocol","host","suburl","endsWith","IsAdmin","rinfo","urlHasAdmin","admin","TOML","PROMPTS","PR","Pad","NetMessage","load","DSTOR","NewModule","NCDATA","Hook","UpdateDataPromise","UpdateServerDB","BatchUpdateServerDB","InsertServerDB","MergeServerDB","OnAppStateChange","decodedData","isValid","SetSessionGroupID","token","GlobalSetGroupID","Data","IsStandaloneMode","Call","then","res","OK","PromiseCalculateMaxNodeId","NetCall","maxNodeID","JSON","stringify","PromiseNewNodeID","nodeID","PromiseNewNodeIDs","count","nodeIDs","PromiseCalculateMaxEdgeId","maxEdgeID","PromiseNewEdgeID","edgeID","PromiseNewEdgeIDs","edgeIDs","PromiseNewCommentID","comment_id","PromiseJSONFile","jsonFile","promise","xobj","XMLHttpRequest","target","status","responseText","Object","assign","parse","open","send","PromiseTOMLFile","tomlFile","tomlData","PromiseD3Data","SaveTemplateFile","template","GetTemplateTOMLFileName","d3data","mergeData","OverwriteDataPromise","CONSTANT","EDGE_NOT_SET_LABEL","ARROW_DOWN","ARROW_UPDOWN","ARROW_RIGHT","ICON_PENCIL","ICON_VIEW","ENUM","EDITORTYPE","TEMPLATE","IMPORTER","NODE","EDGE","COMMENT","BUILTIN_FIELDS_NODE","BUILTIN_FIELDS_EDGE","chrono","HDATE","erasChrono","casual","clone","parsers","pattern","extract","context","match","year","parseInt","era","toUpperCase","adjustedYear","refiners","refine","results","ERAS","pre","post","CALENDAR","ISO","GREGORIAN","JULIAN","ISLAMIC","HEBREW","CHINESE","DATEFORMAT","AS_ENTERED","MONTH_ABBR","MONTH_FULL","MONTH_NUM","MONTH_PAD","MONTHDAY_ABBR","MONTHDAY_FULL","MONTHDAY_NUM","MONTHDAY_PAD","MONTHDAYYEAR_ABBR","MONTHDAYYEAR_FULL","MONTHDAYYEAR_NUM","MONTHDAYYEAR_PAD","YEARMONTHDAY_ABBR","YEARMONTHDAY_FULL","YEARMONTHDAY_NUM","YEARMONTHDAY_PAD","HISTORICAL_MONTHDAYYEAR_ABBR","HISTORICAL_MONTHDAYYEAR_FULL","HISTORICAL_MONTHDAYYEAR_NUM","HISTORICAL_MONTHDAYYEAR_PAD","HISTORICAL_YEARMONTHDAY_ABBR","HISTORICAL_YEARMONTHDAY_FULL","HISTORICAL_YEARMONTHDAY_NUM","HISTORICAL_YEARMONTHDAY_PAD","MONTHYEAR_ABBR","MONTHYEAR_FULL","MONTHYEAR_NUM","MONTHYEAR_PAD","YEARMONTH_ABBR","YEARMONTH_FULL","YEARMONTH_NUM","YEARMONTH_PAD","HISTORICAL_MONTHYEAR_ABBR","HISTORICAL_MONTHYEAR_FULL","HISTORICAL_MONTHYEAR_NUM","HISTORICAL_MONTHYEAR_PAD","HISTORICAL_YEARMONTH_ABBR","HISTORICAL_YEARMONTH_FULL","HISTORICAL_YEARMONTH_NUM","HISTORICAL_YEARMONTH_PAD","YEAR","HISTORICALYEAR","u_pad","num","toString","padStart","u_monthAbbr","date","toLocaleDateString","month","u_monthName","Parse","dateInputStr","ShowValidationResults","ParsedResult","knownValues","start","dateValidationStr","keys","map","k","ShowMatchingFormats","dateFormat","allowFormatSelection","options","preview","matchingTypes","additionalOptions","knownTypes","text","GetPreviewStr","includes","type","format","day","Math","abs","SHOW_DOM","JSCLI","CMD","AddFunction","f","HelpString","out","forEach","name","ncHelp","DOM_ShowInstructions","E_SHELL","getElementById","E_OUT","createElement","E_HEADER","appendChild","innerHTML","PATH","rx_dir","rx_file","str","exec","Dirname","Basename","StripExt","substr","lastIndexOf","REFLECT","IS_NODE","release","PAD_SIZE","prompt","psize","len","padEnd","Stars","FunctionName","STACKTRACE","ExtractClassName","obj","funcNameRegex","constructor","depth","stack","getSync","frame","functionName","fileName","lineNumber","columnNumber","bits","InspectModule","InspectObject","label","indent","m_DumpObj","proto","Reflect","getPrototypeOf","prop","regexp","args","DBG_Out","msg","selector","Out","DBG_OutClean","TESTS","call","hook","remote","net","PASSED","TEST_GO","ARR_MATCH","m_meta_info","m_failed","m_skipped","m_passed","TM","testname","flag","error","m_ConfigureTestFlags","SetTitle","innerText","SetMeta","meta","MetaString","o","entries","v","Pass","subtest","m_InitShell","Fail","Passed","passed","Assess","m_PreTest","m_TestResults","AssessArrayMatch","arr1","arr2","AllPassed","subtests","stateChange","stateMerge","stateConcat","hookInit1","hookInit2","hookInitDeferred","hookStart","callHndlrReg","callHndlrData","callHndlrDataProp","callDataReturn","callDataAdd","callDataMulti","remoteCall","remoteData","remoteData2","remoteDataReturn","remoteDataAdd","remoteDataMulti","serverCall","serverCallOrder","serverReturn","serverData","serverDataAdd","netMessageReg","netCallHndlr","netSendHndlr","netSendNoEcho","netSignal","netSignalEcho","netData","netDataReturn","netDataAdd","netDataMulti","pair","pass","m_ShowShell","pEntries","testTitle","group","concat","join","tnotes","summary","STATE","Messager","return","register","BAD_OWNER","BAD_NAME","BAD_UID","NO_DATAOBJ","BAD_EJSPROPS","UNODE","Map","UNODE_COUNTER","MESSAGER","UnisysDataLink","owner","optName","msgr_type","msgr_name","uid","has","set","namespace","State","newState","SetState","UID","MergeState","ConcatState","listener","OnStateChange","OffStateChange","mesgName","receiverUID","UnhandleMessage","inData","toNet","toLocal","srcUID","promises","all","resArray","resObj","Send","Signal","MessageNames","ValidateMessageNames","msgs","valid","HasMessageName","lifecycle","BAD_PATH","PHASE_HOOKS","PHASES","PHASE","m_ExecuteScopedPhase","phase","indexOf","info","Function","get","Execute","hooks","icount","retval","filter","values","catch","err","module_path","Scope","TEST","MSGR_IDCOUNT","handlerMap","messager_id","handlerFunc","handlerUID","syntax","udata_id","handlers","umesg","add","arguments","clear","delete","pkt","SocketSend","p","f_MakeResolverFunction","QueueTransaction","LIFECYCLE","NOT_UNIQUE","MODULES","MODULES_COUNTER","UnisysModule","module_id","AutoName","subnameCounter","ModuleID","DEFS","connect","handle","WARN","ERR_NM_REQ","ERR_NO_SOCKET","ERR_BAD_UDATA","NETSOCK","NETCLIENT","NETSERVER","M0_INIT","M1_CONNECTING","M2_CONNECTED","M3_REGISTERED","M4_READY","M_STANDALONE","M_NOCONNECT","m_status","m_options","m_hearbeat_timer","NETWORK","Connect","datalink","opt","GlobalOfflineMode","success","wsURI","uaddr","uport","ws","WebSocket","AddListener","appCache","applicationCache","UNCACHED","IDLE","CHECKING","DOWNLOADING","UPDATEREADY","OBSOLETE","m_HandleRegistrationMessage","msgEvent","regData","HELLO","UADDR","RemoveListener","DefaultServerUADDR","GlobalSetup","netsocket","m_HandleMessage","m_ResetHearbeatTimer","m_RespondToHeartbeat","readyState","OPEN","heartbeatStopped","message","SERVER_HEARTBEAT_INTERVAL","Message","IsOwnResponse","CompleteTransaction","Type","dbgout","startsWith","SocketUADDR","SourceAddress","LocalSignal","ReturnTransaction","LocalSend","SetData","json","SeqNum","Close","code","reason","close","handlerFunction","removeEventListener","LocalInfo","ServerInfo","ServerSocketInfo","UMODULE","UnisysComponent","m","lis","f_deprecated","d","NetSend","NetSignal","ns","AppState","so","SetAppState","AppStateChangeOff","f_unimplemented","f_unsupported","repl","REACT","TYPEOF","BAD_NSPACE","BAD_LISTENR","NO_UID_FLTR","WARN_PROP_MISMATCH","USTATE","STATES","STATES_LISTEN","m_ConformNamespace","m_ConformState","merge","entry","nprop","t_old","t_new","m_GetStateMessager","nspace","msgr","src_uid","namespaceMessager","UniData","UniModule","UniComponent","uniqueName","RegisterMessagesPromise","messages","SystemInitialize","ForceReloadSingleApp","root_module_id","InScope","currentScope","failure","Run","BeforePause","Paused","PostPause","CleanupRun","ExitApp","items","transact","m_id_counter","m_id_prefix","m_transactions","m_netsocket","m_group_id","M_INIT","M_ONLINE","M_CLOSED","m_mode","ERR","ERR_NOT_NETMESG","ERR_BAD_PROP","ERR_ERR_BAD_CSTR","ERR_BAD_SOCKET","ERR_DUPE_TRANS","ERR_UNKNOWN_TYPE","ERR_NOT_PACKET","ERR_UNKNOWN_RMODE","KNOWN_TYPES","ROUTING_MODE","m_SeqIncrement","m_CheckType","MakeNewID","rmode","memo","seqnum","seqlog","s_uaddr","s_group","s_uid","msgstr","propOrVal","IsTransaction","SourceGroupID","idStr","socket","GlobalGroupID","dst","dbg","IsServerMessage","m_GetHashKey","m_CheckRMode","resolverFunc","deleteProperty","config","GlobalCleanup","CustomEvent","detail","dispatchEvent","mode","HashIds","SESUTIL","HASH_ABET","HASH_MINLEN","m_current_groupid","DecodeToken","DELIMITER","tokenBits","classId","projId","hashedId","groupId","subId","salt","hashids","decode","Number","isInteger","test","substring","userId","decoded","IsValidToken","MakeToken","MAX_SAFE_INTEGER","encode","SetGroupID","good","GroupID","SESSION","ReactStrap","InputGroup","InputGroupAddon","Button","Col","Row","Form","FormGroup","FormFeedback","Input","Label","INPUT_STYLE","border","fontFamily","fontWeight","fontSize","textAlign","textTransform","GROUP_STYLE","color","marginTop","LABEL_STYLE","verticalAlign","marginBottom","NAV_LOGIN_STYLE","margin","zIndex","NAV_LOGIN_FEEDBACK_STYLE","position","right","SessionShell","renderLogin","renderLoggedIn","handleChange","onSubmit","previousIsValid","classproj","gid","subid","formFeedback","tip","input","marginRight","prevProps","preventDefault","replace","standalone","timestamp","TOMLtemplateFilePath","m_GetTemplateTOMLFilePath","FS","ensureDirSync","dirname","existsSync","m_LoadTOMLTemplate","JSONTemplatePath","RUNTIMEPATH","m_LoadJSONTemplate","copySync","m_DefaultTemplatePath","m_LoadTemplate","Loki","LOGGER","TEMPLATE_SCHEMA","FILTER","TEMPLATEPATH","TEMPLATE_EXT","BACKUPPATH","DB_CLONEMASTER","db_file","m_db","m_max_edgeID","m_max_nodeID","m_max_commentID","m_dupe_set","NODES","EDGES","COMMENTS","READBY","m_locked_nodes","m_locked_edges","m_locked_comments","m_open_editors","BL","s","YL","DB","m_BackupDatabase","toISOString","backupDBFilePath","m_GetValidDBFilePath","InitializeDatabase","getCollection","addCollection","dupeNodes","mapReduce","m_CleanObjID","max","arr","WriteRLog","m_CleanEdgeEndpoints","saveDatabase","m_MigrateTemplate","m_ValidateTemplate","f_DatabaseInitialize","ropt","autoload","autoloadCallback","autosave","autosaveCallback","f_AutosaveStatus","autosaveInterval","nodeCount","edgeCount","commentCount","readbyCount","m_MigrateJSONtoTOML","JSONtemplate","jt","SCHEMA","properties","TOMLtemplate","description","requireLogin","default","hideDeleteNodeButton","nodePrompts","hidden","allowLoggedInUserToImport","duplicateWarning","nodeIsLockedMessage","sourceNodeIsLockedMessage","edgeIsLockedMessage","edgePrompts","templateIsLockedMessage","nodeDefaultTransparency","defaultTransparency","edgeDefaultTransparency","searchColor","sourceColor","citation","citationPrompts","nodeDefs","field","displayLabel","exportLabel","help","includeInGraphTooltip","updated","created","edgeDefs","templatePath","JSONTEMPLATE","readJsonSync","WriteTemplateTOML","Loaded","templateFilePath","templateFile","readFile","DEFAULT_TEMPLATE","ParseTemplateSchema","NODEDEFS","EDGEDEFS","importIsLockedMessage","filterFade","filterReduce","filterFocus","filterFadeHelp","filterReduceHelp","filterFocusHelp","nodeSizeDefault","nodeSizeMax","edgeSizeDefault","edgeSizeMax","weight","provenance","comments","coments","version","source","Array","isArray","notes","category","templateFileName","PKT_GetDatabase","nodes","chain","removeMeta","edges","readby","Info","m_MigrateNodes","m_MigrateEdges","InfoObj","PKT_SetDatabase","insert","PKT_InsertDatabase","PKT_MergeDatabase","node","n","PKT_Update","edge","c","comment","r","PKT_UpdateDatabase","update","m_CalculateMaxNodeID","PKT_CalculateMaxNodeID","m_GetNewNodeID","PKT_GetNewNodeID","PKT_GetNewNodeIDs","firstId","m_CalculateMaxEdgeID","PKT_CalculateMaxEdgeID","m_GetNewEdgeID","PKT_GetNewEdgeID","PKT_GetNewEdgeIDs","m_GetNewCommentID","PKT_GetNewCommentID","m_CalculateMaxCommentID","PKT_RequestLockNode","errcode","m_IsInvalidNode","m_MakeLockError","locked","PKT_RequestUnlockNode","unlocked","PKT_IsNodeLocked","isLocked","isNaN","matches","find","NOP","INFO","PKT_RequestLockEdge","m_IsInvalidEdge","PKT_RequestUnlockEdge","PKT_IsEdgeLocked","PKT_RequestLockComment","commentID","PKT_RequestUnlockComment","PKT_IsCommentLocked","PKT_RequestUnlockAllNodes","PKT_RequestUnlockAllEdges","PKT_RequestUnlockAllComments","PKT_RequestUnlockAll","RequestUnlock","replacementNodeID","readbys","AppendNodeLog","updatedNode","findOne","op","findAndUpdate","AppendEdgeLog","updatedEdge","m_CleanID","edgesToProcess","where","sourceEdges","findAndRemove","targetEdges","AppendCommentLog","updatedComment","retvals","AppendReadbyLog","updatedReadby","PKT_BatchUpdate","item","collection_ref","m_CommentUpdate","m_CommentRemove","_nlog","el","FilterNodeLog","newNode","_elog","FilterEdgeLog","newEdge","FilterCommentLog","newComment","FilterReadbyLog","newReadby","WriteDbJSON","filePath","db","writeFileSync","WriteTemplateJSON","m_GetTemplateTOMLFileName","filename","path","backupFilePath","toml","outputFile","CloneTemplateTOML","RegenerateDefaultTemplate","GetEditStatus","my_uaddr","templateBeingEdited","importActive","nodeOrEdgeBeingEdited","commentBeingEditedByMe","comment_uaddr","lockedNodes","lockedEdges","lockedComments","RequestEditLock","editor","ReleaseEditLock","findIndex","splice","propertyName","property","isRequired","defaultValue","int","regex","FSE","LOG_DIR","Tracer","LOG_DELIMITER","LOG_CONFIG","dateformat","preprocess","line","zeroPad","colorConsole","fs_log","e_weekday","dir","__dirname","ensureDir","logname","str_TimeDatedFilename","pathname","createWriteStream","fieldnames","fields","write","LogResearchLine","str_DateStamp","str_TimeStamp","LogLine","str_ShortDateStamp","hh","getHours","slice","mm","getMinutes","ss","getSeconds","getMonth","dd","getDate","getDay","yyyy","getFullYear","hms","LOG","PKT_LogEvent","Write","m_PromiseServerHandlers","m_PromiseRemoteHandlers","IsType","notsrv","pktArray","reduce","pdata","STAT","WSS","Server","ERR_SS_EXISTS","ERR_NULL_SOCKET","DBG_SOCK_BADCLOSE","ERR_INVALID_DEST","ERR_UNKNOWN_PKT","DEFAULT_NET_PORT","DEFAULT_NET_ADDR","mu_wss","mu_options","mu_sockets","mu_sid_counter","m_server_handlers","m_message_map","m_socket_msgs_list","m_heartbeat_interval","m_pong_timer","UNET","SERVER_UADDR","InitializeNetwork","StartNetwork","on","m_NewSocketConnected","RegisterRemoteHandlers","regd","registered","m_SocketAdd","m_SocketClientAck","m_SocketMessage","m_SocketDelete","m_StartHeartbeat","setInterval","sendHeartbeat","m_ResetPongTimer","pongTimedOut","m_HandleState","f_make_resolver_func","srcPkt","f_make_remote_resolver_func","d_uaddr","verbose","d_sock","newpkt","CopySourceAddress","sid","m_GetNewUADDR","m_ListSockets","prefix","cstr","rmesgs","change","UDB","override","RegisterHandlers","serverSays","sprint_message","src","AppDefault","flex","HTMLFrame","loc","UR","URADD","NCSearch","NCNode","NCGraph","InfoPanel","FiltersPanel","NCLOGIC","FILTERMGR","EDGEMGR","SELECTIONMGR","HILITEMGR","CMTMGR","ClientTest","AddonClientTest","SM","StateMgr","_initializeState","prop_1","Init","isConnected","isLoggedIn","disconnectMsg","layoutNodesOpen","layoutFiltersOpen","commentStatusMessage","OnDOMReady","OnReset","OnStart","OnAppReady","OnRun","OnDisconnect","onStateChange_SESSION","onDisconnect","onFilterBtnClick","time","toLocaleTimeString","dragger","onmousedown","handleMouseDown","handleMessageUpdate","hideGraph","flexGrow","overflow","visibility","maxWidth","overflowY","overflowX","flexDirection","borderTopLeftRadius","paddingBottom","alignItems","boxShadow","PANEL_LABEL","left","bottom","UMOD","DATASTORE","NCUI","NCDialog","dialogContainerId","LoadDB","HandleCOMMENTS_UPDATE","HandleCOMMENT_UPDATE","HandleREADBY_UPDATE","m_UpdatePermissions","LoadTemplate","COMMENTTYPES","COMMENTICON","ICN_COMMENT_UNREAD","ICN_COMMENT_UNREAD_SELECTED","ICN_COMMENT_READ","ICN_COMMENT_READ_SELECTED","m_SetAppStateCommentCollections","COMMENTCOLLECTION","GetCommentCollections","m_SetAppStateCommentVObjs","COMMENTVOBJS","GetCOMMENTVOBJS","m_UpdateComment","cobj","comment_id_parent","comment_id_previous","comment_type","comment_createtime","comment_modifytime","comment_isMarkedDeleted","commenter_id","commenter_text","GetCurrentUserId","UpdateComment","VIEWMODE","GetNodeCREF","nodeId","GetEdgeCREF","edgeId","GetProjectCREF","projectId","DeconstructCref","cref","GetCREFSourceLabel","typeLabel","sourceNode","targetNode","sourceLabel","OpenReferent","OpenComment","cid","commentEl","scrollIntoView","behavior","SetCurrentUserId","GetUserName","GetCommentTypes","GetCommentType","slug","GetDefaultCommentType","MarkAllRead","crefs","GetCrefs","m_DBUpdateReadBy","MarkRead","DeriveAllThreadedViewObjects","GetCommentCollection","uiref","OpenCommentCollection","UpdateCommentUIState","ToggleCommentCollection","open_uiref","GetOpenComments","CloseCommentCollection","OKtoClose","GetCommentStats","GetCommentThreadPosition","btn","commentButtonId","cmtbtnx","getBoundingClientRect","windowWidth","min","screen","innerWidth","x","y","top","scrollY","GetCommentUIState","openState","cvobjs","GetThreadedViewObjects","isBeingEdited","GetCommentBeingEdited","cvobj","GetThreadedViewObjectsCount","GetCommentVObj","GetComment","GetUnreadRepliesToMe","GetUnreadComments","AddComment","newCommentID","m_DBUpdateComment","RemoveComment","parms","cb","confirmMessage","okmessage","cancelmessage","showCancelDialog","isAdmin","dialog","m_ExecuteRemoveComment","m_CloseRemoveCommentDialog","container","queuedActions","m_DBRemoveComment","unmountComponentAtNode","RemoveAllCommentsForCref","dataArray","updatedComments","removedComments","updatedCrefs","HandleRemovedComments","HandleUpdatedComments","DeriveThreadedViewObjects","LockComment","UnlockComment","commenter_ids","GetReadby","Autosuggest","MODE_STATIC","MODE_DISABLED","MODE_LINK","MODE_ACTIVE","_IsMounted","AutoComplete","suggestions","onStateChange_SEARCH","onStateChange_SELECTION","onStateChange_AUTOCOMPLETE","onInputChange","getSuggestionValue","renderSuggestion","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","onSuggestionHighlighted","shouldRenderSuggestions","onBlur","identifier","activeAutoCompleteId","searchLabel","disabledValue","inactiveMode","shouldIgnoreSelection","newValue","method","AppCall","searchString","suggestion","suggestedNodes","inputProps","placeholder","onChange","jsx","selectNode","linkID","mdReact","mdEmoji","FormText","NodeDetail","EdgeEditor","editLockMessage","formData","sourceId","targetId","isNewEdge","isStandalone","dbIsLocked","disableEdit","isExpanded","sourceIsEditable","hasValidSource","targetIsEditable","hasValidTarget","hideModal","setTemplate","updateEditState","setEditState","handleSelection","handleEdgeSelection","handleEdgeEdit","handleEdgeClose","onEdgeClick","onDeleteButtonClick","onEditButtonClick","onCiteButtonClick","onCloseCiteClick","dateFormatted","requestEdit","onSwapSourceAndTarget","onChangeSource","onChangeTarget","onRelationshipChange","onNotesChange","onInfoChange","onWeightChange","onProvenanceChange","onCommentsChange","onCitationChange","onCategoryChange","checkUnload","doUnload","sourceNodes","targetNodes","parentNodeLabel","session","provenance_str","loadSourceAndTarget","originalEdge","parentNode","clearForm","today","String","toTimeString","dateTime","swap","parentNodeIsLocked","me","fontStyle","sameSourceAndTarget","borderColor","minHeight","hyphens","helpText","option","markdownDisplay","paddingRight","returnValue","onIterate","markdownIterate","markdownOptions","typographer","linkify","plugins","Tag","children","level","EdgeTable","selectedEdgeId","selectedEdgeColor","filteredEdges","sortkey","onEDGE_OPEN","updateEdgeFilterState","handleDataUpdate","handleFilterDataUpdate","OnTemplateUpdate","onViewButtonClick","onToggleExpanded","onHighlightNode","m_FindMatchingObjsByProp","m_FindMatchingEdgeByProp","m_FindEdgeById","setSortKey","sortSymbol","lookupNodeLabel","sortDirection","FILTEREDNCDATA","nodeEdge","revision","titleString","tag","FILTERDEFS","filterAction","ACTION","REDUCE","FOCUS","filteredEdge","isFiltered","targetLabel","sortTable","FADE","sort","akey","bkey","localeCompare","attributes","source_a","source_b","TYPES","STRING","NUMBER","da","order","hour","minute","second","countededges","commentcount","sortByID","sortBySourceLabel","sortByTargetLabel","sortByComment","sortByKey","stopPropagation","obj_list","match_me","tableHeight","styles","hasTypeField","maxHeight","opacity","filteredTransparency","size","Markdownify","formattedDateString","Table","Help","IMPORTEXPORT","NODEFILESTATUS_DEFAULT","EDGEFILESTATUS_DEFAULT","ImportExport","preventImport","importIsActive","nodefile","nodefileStatus","nodeValidationMsgs","nodeOkToImport","edgefile","edgefileStatus","edgeValidationMsgs","edgeOkToImport","okToImport","importMsgs","handleEditStateUpdate","onNodesExportSelect","onEdgesExportSelect","onNodeImportFileSelect","onEdgeImportFileSelect","clearNodefileSelect","clearEdgefileSelect","clearFileSelect","onDoImport","unlockAll","nextNodeId","nextEdgeId","ExportNodes","ExportEdges","files","NodefileValidate","messageTitle","messageJsx","EdgefileValidate","ResetNodeImportData","ResetEdgeImportData","ResetImportData","Import","ISADMIN","importDisabled","importBtnDisabled","importjsx","unlockAlljsx","TabContent","TabPane","classnames","NCNodeTable","NCEdgeTable","More","TABS","GRAPH","NODESTABLE","EDGESTABLE","MORE","defaultTabPanelHeight","activeTab","tabpanelTop","draggerMouseOffsetY","tabpanelHeight","savedTabpanelHeight","draggerTop","hideDragger","filtersSummary","endDrag","handleDrag","UpdateFilterSummary","OnClearBtnClick","CloseMore","actionType","ga","hitType","eventCategory","eventAction","eventLabel","tab","sendGA","offsetTop","clientY","onmouseup","onmousemove","tabpanel","active","cursor","MDReactComponent","MarkdownNote","np","bReturn","Vocabulary","Template","toggleTab","borderTop","NCAutoSuggest","higlightedLine","isValidNode","uShowMatchlist","m_UIInputFocus","m_UIInputClick","m_UIUpdate","m_UISelectByLabel","m_UISelectById","m_UIKeyDown","m_UIMouseHighlightLine","m_UIMouseUnhighlightLine","m_UIHighlightLine","m_UIClickOutside","select","selstart","selectionStart","inputEl","selectionEnd","parentKey","onSelect","matchedNodeViaID","keystroke","lastLine","newHighlightedLine","highlightedNode","defaultPrevented","matchList","Draggable","onOK","onCancel","OKBtn","CancelBtn","NCDialogCitation","copiedMessage","m_UIOnCopy","onClose","messageEl","execCommand","copymessage","CopyBtn","background","NCDialogInsertImageURL","m_UIOpenDialog","m_UIInputChange","m_UIOnOK","m_UIOnCancel","ATTRIBUTES","PROVENANCE","NCEdge","animateHeight","ResetState","UpdateSession","UpdateNCData","IsLoggedIn","SetPermissions","UpdatePermissions","CheckUnload","DoUnload","ClearSelection","UpdateSelection","ReqLoadEdge","LoadEdge","DeleteEdge","LoadAttributes","LoadProvenance","LockEdge","UnlockEdge","IsEdgeLocked","EditEdge","UpdateDerivedValues","ValidateSourceTarget","OfferToCreateNewNode","CreateNode","BackToEditing","SetSourceTarget","ThenSaveSourceTarget","SaveEdge","SetBackgroundColor","SetSourceTargetNodeColor","SwapSourceAndTarget","EdgeDisplayName","EnableEditMode","UIEnableEditMode","UISelectTab","UIRequestEditEdge","UIDeselectEdge","UICancelEditMode","UIDisableEditMode","UIDeleteEdge","UIInputUpdate","UIProvenanceInputUpdate","UIEnableSourceTargetSelect","UISourceTargetInputUpdate","UISourceTargetInputSelect","UICitationShow","UICitationClose","RenderView","RenderEdit","RenderSourceTargetButton","uEditBtnDisable","uEditBtnHide","uViewMode","VIEW","uSelectedTab","uSelectSourceTarget","uBackgroundColor","uIsLockedByDB","uIsLockedByTemplate","uIsLockedByImport","uEditLockMessage","uNewNodeKey","uNewNodeLabel","uShowCitationDialog","dSourceNode","dSourceNodeColor","dTargetNode","dTargetNodeColor","EDIT","edgeIsLocked","sourceTargetSelect","selectedNode","toLocaleString","createdBy","updatedBy","attr_def","isProvenance","provenance_def","lockSuccess","unlockSuccess","keyType","COLORMAP","edgeColorMap","nodeColorMap","swappedTargetId","swappedSourceId","swappedTargetNode","swappedSourceNode","swappedTargetNodeColor","swappedSourceNodeColor","previousState","updatedState","bgcolor","defs","uShowCitationButton","disableSourceTargetInView","DateFormatted","RenderLabel","RenderStringValue","RenderTabSelectors","RenderAttributesTabView","RenderProvenanceTabView","marginLeft","parentNodeId","AskNodeDialog","saveIsDisabled","RenderOptionsInput","RenderAttributesTabEdit","RenderProvenanceTabEdit","justifyContent","disabled","SELECTION","isSecondarySelection","selectedSecondary","selected","u_GetButtonId","dummy","COLUMNDEFS","onUpdateCommentUI","SetColumnDefs","attributeDefs","ui_ClickViewEdge","ui_ClickEditEdge","ui_ClickViewNode","ui_ClickComment","RenderViewOrEdit","RenderNode","RenderCommentBtn","hasUnreadComments","SortNodes","tdata","sortedData","SortCommentsByCount","ATTRIBUTE_COLUMNDEFS","title","renderer","sorter","TABLEDATA","sourceDef","targetDef","html","raw","ccol","commentVBtnDef","NCGraphRenderer","RENDERMGR","ncGraphRenderer","nodeTypes","edgeTypes","updateVData","updateTemplate","updateColorMap","updateSelection","onZoomReset","onZoomIn","onZoomOut","constructGraph","ProcessNCData","forceUpdate","UpdateGraph","skipForceUpdate","ZoomReset","ZoomIn","ZoomOut","netgraph","remove","Deregister","dom","lineHeight","d3","m_width","m_height","M_FORCEPROPERTIES","center","charge","enabled","strength","distanceMin","distanceMax","collide","iterations","radius","forceX","forceY","link","distance","rootElement","d3svg","zoom","zoomWrapper","simulation","clickFn","m_HandleZoom","append","attr","nodeLabels","selectAll","transition","duration","style","svg","clientWidth","clientHeight","forceSimulation","ClearSVG","m_Initialize","m_UpdateForces","m_Tick","ZoomPanReset","m_Transition","m_Dragstarted","m_Dragged","m_Dragended","newData","svgNodes","oldNodes","alpha","restart","force","forceLink","forceManyBody","forceCollide","forceCenter","nodeElements","linkElements","elementG","enter","classed","drag","strokeColor","strokeWidth","textColor","exit","links","selectorArrows","scaleTo","transform","zoomIdentity","translate","scale","zoomLevel","scaleBy","self","alphaTarget","fx","fy","SelectEdgeAndEdit","SelectEdge","DeselectEdge","LoadNode","LoadEdges","LockNode","UnlockNode","IsNodeLocked","SaveNode","DeleteNode","UpdateMatchingList","UIRequestEditNode","UIReplacementNodeIdUpdate","UIAddEdge","UILabelInputUpdate","UIViewEdge","UIEditEdge","RenderEdgesTab","degrees","uIsLockedByComment","uHideDeleteNodeButton","uReplacementNodeId","uIsValidReplacementNodeID","nodeIsLocked","linkedEdges","matchingNodes","replacementNodeId","editableTab","isDuplicate","RenderStringInput","LookupEdgeColor","selectedNodeId","hilitedNodeId","selectedNodeColor","hilitedNodeColor","filteredNodes","onStateChange_HILITE","displayUpdated","updateNodeFilterState","onHighlightRow","userHighlightNodeId","autosuggestHiliteNodeId","filteredNode","ui_ClickEditNode","ui_ClickCommentBtn","UIOnChange","UIOnSelect","UINewNode","newNodeBtnHidden","newNodeBtnDisabled","D3NetGraph","NetGraph","d3NetGraph","updateLegend","findDOMNode","hilitedNode","minWidth","thisIdentifier","NodeSelector","isNewNode","edgesAreLocked","isDuplicateNodeLabel","duplicateNodeID","isValidReplacementNodeID","releaseOpenEditor","getNewNodeID","loadFormFromNode","validateForm","onLabelChange","onTypeChange","onReplacementNodeIDChange","onNewNodeButtonClick","requestEditNode","editNode","onAddNewEdgeButtonClick","onCancelButtonClick","onEditOriginal","onCloseDuplicateDialog","onForceUnlock","needsUpdate","currentNodeID","updatedNodeID","sourceID","targetID","updatedNodeIDs","thisId","usage","sensitivity","newNodeID","newEdgeID","originalNode","NodeTable","countednodes","sortByEdgeCount","sortByLabel","SaveChangesDialog","handleEdit","handleCancel","Modal","ModalBody","Search","TEMPLATE_MGR","EDITOR","typeOptions","editScope","tomlfile","tomlfileStatus","tomlfileErrors","tomlfilename","loadEditor","disableOrigLabelFields","onNewTemplate","onCurrentTemplateLoad","onEditNodeTypes","onEditEdgeTypes","onTOMLfileSelect","onDownloadTemplate","onSaveChanges","onCancelEdit","destroy","schema","startval","theme","disable_edit_json","disable_properties","object_layout","no_additional_properties","JSONEditor","origLabelFields","getElementsByClassName","setAttribute","schemaNodeTypeOptions","NODETYPEOPTIONS","nodeTypeEditorSchema","GetTypeEditorSchema","schemaEdgeTypeOptions","EDGETYPEOPTIONS","edgeTypeEditorSchema","ValidateTOMLFile","templateJSON","errorMsg","DownloadTemplate","getValue","UpdateTemplate","SaveTemplateToFile","editorjsx","gridTemplateColumns","columnGap","rowGap","UDATAOwner","URComment","element","setElement","commenter","createtime_string","modifytime_string","selected_comment_type","comment_error","uIsSelected","uIsBeingEdited","uIsEditable","uIsDisabled","uAllowReply","c_LoadCommentVObj","urmsg_UpdatePermissions","prevState","urstate_UpdateCommentVObjs","c_ValidateCommentType","isSelected","isEditable","allowReply","defaultCommentTypeObject","evt_EditBtn","evt_SaveBtn","evt_ReplyBtn","evt_DeleteBtn","evt_CancelBtn","savedCommentIsEmpty","t","evt_TypeSelector","selection","evt_CommentText","index","commentTypes","isAllowedToEditOwnComment","EditBtn","DeleteBtn","SaveBtn","ReplyBtn","TypeSelector","CommentComponent","isMarkedRead","URCommentBtn","uuiid","btnid","c_GenerateBtnId","c_GenerateCommentButtonId","setCommentButtonId","commentIsOpen","setCommentIsOpen","commentBtnIsSelected","setCommentBtnIsSelected","isDisabled","setIsDisabled","setPosition","setDummy","urstate_UpdateCommentCollection","urmsg_COMMENT_SELECT","evt_OnResize","c_GetCommentThreadPosition","uistate","c_OpenComment","evt_OnClick","updatedIsOpen","css","hasReadComments","CHECKBOX_DELIMITER","URCommentPrompt","commentType","commenterText","isMarkedDeleted","viewMode","errorMessage","foundIndex","prompts","promptIndex","foundTextArea","u_TextareaId","focus","u_IsEmpty","commenterTextStr","u_SplitCheckboxCommentText","u_SelectedIndex2CommentText","evt_OnCheck","optionIndex","selectedCheckboxes","checked","RenderEditMode","inputJSX","feedback","RenderViewMode","NOTHING_SELECTED","displayJSX","AppearTimer","DisappearTimer","ResetTimer","URCommentStatus","setMessage","setMessages","activeCSS","setActiveCSS","uiIsExpanded","setUiIsExpanded","urmsg_DUMMY_COMMENTS_UPDATE","urmsg_COMMENT_UPDATE","isNotMe","c_GetCommentItemJSX","prevMessages","evt_ExpandPanel","evt_Close","evt_MarkAllRead","evt_OpenReferent","evt_OpenComment","trim","countRepliesToMe","countUnread","unreadRepliesToMe","unreadRepliesToMeItems","unreadComments","unreadCommentItems","UnreadRepliesToMeButtonJSX","UnreadButtonJSX","URCommentThread","evt_OnAddComment","commentVObjs","numComments","lastComment","reverse","evt_OnClose","evt_OnReferentClick","CloseBtn","windowHeight","innerHeight","commentMaxHeight","URCommentThreadMgr","cmtBtns","setCmtBtns","urmsg_THREAD_OPEN","urmsg_THREAD_CLOSE","urmsg_THREAD_CLOSE_ALL","prevBtns","URCommentVBtn","icon","URDateField","readOnly","isFilter","inputRef","cursorPos","hdate","setHDate","setValidationStr","formatMenuOptions","setFormatMenuOptions","ParsingResult","dateValidationResults","c_HandleChange","current","eventWithFormat","evt_OnInputUpdate","evt_OnFormatSelect","READONLY","NORMAL","URTable","columns","tabledata","setTableData","columndefs","setColumnDefs","columnWidths","setColumnWidths","sortColumnIdx","setSortColumnIdx","sortOrder","setSortOrder","tableRef","resizeRef","u_CalculateColumnWidths","m_ExecuteSorter","definedColWidths","col","definedColWidthSum","remainingWidth","colWidths","ui_MouseDown","startX","clientX","startWidth","nextStartWidth","maxCombinedWidth","ui_MouseMove","delta","newWidths","ui_MouseUp","ui_ClickSorter","m_SortByText","m_SortByMarkdown","m_SortByNumber","m_SortByHDate","dateorder","m_ExecuteRenderer","idx","customRenderer","customSorter","mouseoverNodeId","_SetDefaultValues","_HandleZoom","_UpdateLinkStrokeWidth","_HandleD3DataUpdate","_HandleTemplateUpdate","_ClearSVG","_SetData","_Initialize","_UpdateGraph","tooltipForNode","_UpdateForces","_Tick","_UpdateLinkStrokeColor","_ColorMap","_ZoomReset","_ZoomIn","_ZoomOut","_ZoomPanReset","_Transition","_Dragstarted","_Dragged","_Dragended","titleText","author","SELECT","MARKDOWN","HIDDEN","KEY","SOURCE","TARGET","OPERATORS","NO_OP","CONTAINS","NOT_CONTAINS","IS_EMPTY","IS_NOT_EMPTY","EQ","NOT_EQ","GT","GT_EQ","LT","LT_EQ","FilterGroupProperties","NumberFilter","SelectFilter","StringFilter","HDateFilter","FilterGroup","filters","transparency","OnChangeValue","TriggerChangeHandler","OnSubmit","FocusFilter","ButtonGroup","filterGroups","onFiltersChange","UpdateFilterDefs","UpdateFilteredNCData","LookupFilterHelp","SelectFilterAction","focusSourceLabel","focusRange","statsSummary","filterActionHelp","range","stats","labelFade","labelReduce","labelFocus","FilterControlPanel","def","OnFilterChange","keylabel","operator","onChangeHandler","m_ClearFilters","OnChangeOperator","inputval","newstate","inputString","ey","m_RenderEdges","typeOption","DEFAULT_SIZE","VDATA","colorsAreDefined","edgeMap","edgeColorWeightMap","edgeKey","m_GetEdgeKey","currEdge","eWeight","colorWeightMap","colorWeight","m_GetWeightiestColor","skey","tkey","colors","UTILS","FILTERDEFS_RESTORE","NODE_DEFAULT_TRANSPARENCY","EDGE_DEFAULT_TRANSPARENCY","RemovedNodes","DATASET","TEMPLATE_URL","m_UpdateFilters","m_FilterDefine","m_ImportFilters","m_SetFocus","fdefs","m_ImportPrompts","m_ReplaceSourceTargetIdsWithStrings","counter","reorderedFilters","sourceIndex","sourceLabelIndex","targetIndex","targetLabelIndex","nodeFilters","edgeFilters","m_FiltersApply","m_FiltersApplyToNodes","m_FiltersApplyToEdges","RecalculateAllEdgeSizes","RecalculateAllNodeDegrees","m_UpdateFilterStats","transparencyNode","transparencyEdge","filteredNodeCount","filteredEdgeCount","m_UpdateFilterSummary","typeSummary","nodeSummary","m_FiltersToString","edgeSummary","m_OperatorToString","clean","EscapeRegexChars","m_MatchString","needle","haystack","contains","ANDNeedles","ORNeedleArrs","ands","ResultsOR","m_MatchStringSnippet","ResultsAND","RegExp","m_MatchNumber","filterVal","objVal","m_MatchHDate","formattedString","dakeys","dbkeys","commonKeys","m_FocusPrep","m_NodeIsFiltered","keepNode","m_IsNodeMatchedByFilter","bacon_value","nodeValue","m_EdgeIsFiltered","keepEdge","m_IsEdgeMatchedByFilter","edgeValue","m_FindConnectedNodeIds","puredata","returnMatches","m_SetBaconValue","max_bacon_value","newNodes","connectedNodeIds","selectedNodeLabel","m_UserHighlightNode","m_AutoSuggestHiliteNode","m_TableHiliteNode","HILITE","tableHiliteNodeId","missingKeys","NODEKEYS","fileKeys","lines","REGEXMatchLFNotInQuotes","headers","shift","nodeKeys","m_flattenKeys","m_NodefileCheckHeaders","EDGEKEYS","edgeKeys","m_EdgefileCheckHeaders","NEW_ID_KEYWORD","REGEXMatchCommasNotInQuotes","m_formatDate","toUTCString","m_encode","m_decode","flattenedKeys","flat","m_renderNodeValues","RESULT","prototype","subKeys","hasOwnProperty","m_GenerateNodesArray","nodekeys","nodesArr","m_renderEdgeValues","m_GenerateEdgesArray","edgekeys","edgeArr","DATA","EXPORT","nodeHeadersArr","nodeHeaders","unshift","commaDelimitedNodes","blob","Blob","createObjectURL","download","body","click","removeChild","edgeHeadersArr","edgeHeaders","edgesArr","commaDelimitedEdges","nodeFile","edgeFile","nodesToImport","edgesToImport","IMPORT_NCDATA","m_hasValidSourceTarget","edgeImportErrors","row","m_NodefileLoadNodes","INTERNAL_FIELDS_MAP","l","subcategories","importFields","keysplit","subcategory","subkey","internalLabel","NaN","getTime","m_NodefileValidateNodes","nodesAdded","nodesReplaced","nodeImportErrors","toLowerCase","existingNodeIdx","nodeFileName","headerResults","importResults","nodeResults","m_EdgefileLoadEdges","m_EdgefileValidateEdges","edgesAdded","edgesReplaced","existingEdgeIdx","edgeFileName","edgeResults","importedFiles","importedFileNames","D3","DESELECTED_COLOR","DEFAULT_SEARCH_COLOR","DEFAULT_SOURCE_COLOR","TARGET_COLOR","m_PromiseLoadDB","m_MigrateData","USE_CACHE","lstore","localStorage","ld3","getItem","tem","urlParams","URLSearchParams","search","p1","p2","m_UpdateColorMap","setItem","m_UnStrokeAllNodes","m_SetStrokeColorThatMatch","m_sourceSelect","nodeLabel","newSelection","newHilite","m_FindNodeById","m_FindMatchingNodesByLabel","updatedNodes","m_SetMatchingNodesByProp","replacementNode","m_DeleteMatchingNodesByProp","nodeTypesChanges","changeMap","replacement","searchParameters","m_FindMatchingNodeByProp","edgeTypesChanges","updatedEdges","m_SetMatchingEdgesByProp","m_DeleteMatchingEdgeByProp","m_HandleAutoCompleteSelect","timeout","m_SetMatchingObjsByProp","yes","no","matched","m_SetAllObjs","SetAllObjs","defaultEdgeColor","del_me","u_EscapeRegexChars","m_SetMatchingNodesByLabel","REGEX_REGEXCHARS","string","Node_Type","Notes","Relationship","Citations","Category","m_UnMarkAllNodes","m_MarkNodesThatMatch","deselect","notmatched","m_MarkSelectedEdges","ncRegenerateDefaultTemplate","ncPushDatabase","ncEmptyDatabase","ncUnlockAll","ncUnlockAllNodes","ncUnlockAllEdges","ncNodeColorMap","ncDumpData","ncMakeSharedTokens","clsId","numGroups","ncMakeTokens","pad","MD","MDEMOJI","use","MDPARSE","htmlString","hackedHtmlString","m_UIMarkdownInputUpdate","m_UIStringInputUpdate","m_UINumberInputUpdate","m_UISelectInputUpdate","m_UIDateInputUpdate","m_UIInsertImageURL","parentId","currentValue","m_UICancelInsertImageURL","onclick","columnsDef","RenderMarkdownValue","RenderDateValue","onchange","RenderMarkdownInput","RenderDateInput","m_RenderNumberInput","RenderProvenanceItemsView","RenderProvenanceItemsEdit","RenderProvenanceByline","by","rows","onFocus","GenerateUUID","random","inc","getKey","w","m_UpdateNodes","m_UpdateEdges","SetNCData","SEARCH","selectedNodes","foundNodes","highlightStrokeColor","foundStrokeColor","isAutosuggestHilited","isTabletHilited","isSecondarySelected","isFound","m_GetHelp","m_GetUpdatedDateText","SELECTION_MODE","EDGE_EDIT","SOURCETARGET","COMMENT_EDIT","m_SelectionMode","m_SetMode","m_D3SelectNode","m_SelectSecondary","m_DeselectSecondary","newmode","m_GetNode","m_SendSelectionUpdate","m_SendSourceTargetSelectionUpdate","searchdata","nid","disable_collapse","disable_array_add","disable_array_delete","disable_array_delete_all_rows","disable_array_delete_last_row","disable_array_reorder","inputAttributes","schemaTypeOptions","class","currNodeOrEdge","u_ParseOptions","optionsDefinition","u_ParseProperty","u_ParseProperties","currJson","templatePropertyKey","tomlText","templateSnippet","numOfEmptyLabels"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA,IAAMA,YAAY;AAChBC,WAAS,kBADO;AAEhBC,QAAM,MAFU;AAGhBC,WAAS;AAHO,CAAlB;AAKA,IAAI,QAAOC,OAAP,yCAAOA,OAAP,OAAmB,QAAvB,EAAiCC,OAAOC,OAAP,GAAiBN,SAAjB;AACjC,IAAI,QAAOO,MAAP,yCAAOA,MAAP,OAAkB,QAAtB,EAAgCA,OAAOP,SAAP,GAAmBA,SAAnB;;;;;;;;;;;;;;ACRhC;;;;;;;;;AASA;AACA;AACA,IAAMQ,QAAQC,QAAQ,OAAR,CAAd;;eACqBA,QAAQ,YAAR,C;IAAbC,Q,YAAAA,Q;;gBAC0BD,QAAQ,YAAR,C;IAA1BE,M,aAAAA,M;IAAQC,a,aAAAA,a;;gBAC+BH,QAAQ,YAAR,C;IAAvCI,W,aAAAA,W;IAAaC,G,aAAAA,G;IAAKC,O,aAAAA,O;IAASC,O,aAAAA,O;;gBACcP,QAAQ,YAAR,C;IAAzCQ,oB,aAAAA,oB;IAAsBC,c,aAAAA,c;;gBACST,QAAQ,YAAR,C;IAA/BU,Y,aAAAA,Y;IAAcC,Y,aAAAA,Y;AACtB;;;AACA,IAAMC,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAMa,WAAWb,QAAQ,UAAR,CAAjB;AACA,IAAMc,YAAYd,QAAQ,0BAAR,CAAlB;AACA;AACA;;AAEA;AACA;AACA;;;;IAGMe,Q;;;AACJ;AACA,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACXA,KADW;;AAEjB,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,OAAd;AACA,UAAKC,KAAL,GAAa;AACXC,cAAQ;AADG,KAAb;AAGA;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcH,IAAd,OAAhB;AACA;AACA,UAAKI,aAAL,CAAmB,gBAAnB,EAAqC,MAAKD,QAA1C;AATiB;AAUlB;AACD;;;;;6BACS;AACP,WAAKE,QAAL,CAAc;AACZH,gBAAQ,CAAC,KAAKD,KAAL,CAAWC;AADR,OAAd;AAGD;AACD;;;;6BACSI,I,EAAM;AAAA,UACPH,QADO,GACMG,IADN,CACPH,QADO;;AAEb,WAAKL,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwBL,QAAxB;AACD;AACD;AACA;;;;;2BAEOL,K,EAAO;AAAA,kCACkBH,SAASc,mBAAT,CAA6B7B,OAAO8B,QAAP,CAAgBC,IAA7C,CADlB;AAAA,UACJC,KADI,yBACJA,KADI;AAAA,UACGC,UADH,yBACGA,UADH;;AAEZ,UAAMC,cAAcnB,SAASoB,WAAT,EAApB;AACA,aACE;AAAA;AAAA;AACE,qBAAU,YADZ;AAEE,iBAAO;AACLC,qBAAS,MADJ;AAELC,sBAAU,eAFL;AAGLC,mBAAO,MAHF;AAILC,oBAAQ;AAJH;AAFT;AASE;AAAC,gBAAD;AAAA;AACE,uBAAU,mBADZ;AAEE,mBAAM,KAFR;AAGE,uBAHF;AAIE,oBAAO,IAJT;AAKE,mBAAO,EAAEC,iBAAiB,SAAnB,EAA8BC,SAAS,UAAvC;AALT;AAOE;AAAC,uBAAD;AAAA,cAAa,MAAK,GAAlB,EAAsB,OAAO,EAAEA,SAAS,GAAX,EAA7B;AACE,yCAAK,KAAI,2BAAT,EAAqC,QAAO,MAA5C;AADF,WAPF;AAUE,8BAAC,aAAD,IAAe,SAAS,KAAKtB,MAA7B,GAVF;AAWE;AAAC,oBAAD;AAAA,cAAU,QAAQ,KAAKE,KAAL,CAAWC,MAA7B,EAAqC,YAArC;AAEE,gCAAC,GAAD,IAAK,WAAU,SAAf,EAAyB,YAAzB,EAAgC,QAAQ,CAACY,WAAzC;AAFF;AAXF,SATF;AA2DE,4BAAC,SAAD;AA3DF,OADF;AA+DD,K,CAAC;;;;;EA7FmBpB,OAAO4B,S,GA8F5B;;AAEF;AACA;;;AACA5C,OAAOC,OAAP,GAAiBkB,QAAjB;;;;;;;;AClIA;AACA,IAAIjB,OAAO2C,MAAX,EAAmBC,QAAQC,GAAR,UAAmB/C,OAAOgD,EAA1B;AACnB;;;;;;;AAOA,IAAMC,MAAM,KAAZ;;AAEA;AACA;AACA;AACA;AACA7C,QAAQ,gBAAR,E,CAA2B;;AAE3B;AACA;AACA,IAAMD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM8C,WAAW9C,QAAQ,WAAR,CAAjB;;AAEA;AACA;AACA;AACA,IAAMa,WAAWb,QAAQ,UAAR,CAAjB;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;AACA,IAAMe,WAAWf,QAAQ,eAAR,CAAjB;;AAEA;AACA;AACA;AACA+C,SAASC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClDN,UAAQO,cAAR,CAAuB,oBAAvB;AACAP,UAAQC,GAAR,CACE,uDADF,EAEE,YAFF,EAGE,YAHF;AAKAO;AACA,0DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOtC,OAAOuC,OAAP,EADP;;AAAA;AAAA;AAAA,mBAEOvC,OAAOwC,QAAP,EAFP;;AAAA;AAAA;AAAA,mBAGOC,aAHP;;AAAA;AAAA;AAAA,mBAIOzC,OAAO0C,QAAP,EAJP;;AAAA;AAAA;AAAA,mBAKO1C,OAAO2C,QAAP,EALP;;AAAA;AAK0B;AACzBb,oBAAQC,GAAR,CACE,mDADF,EAEE,YAFF,EAGE,YAHF;AAKAD,oBAAQc,QAAR;;AAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;AAaD,CArBD;;AAuBA;AACA;AACA;;;;;AAKAT,SAASC,gBAAT,CAA0B,kBAA1B,EAA8C,iBAAS;AACrDN,UAAQC,GAAR,CACE,4DADF,EAEE,YAFF,EAGE,YAHF;AAKA;AACA/B,SAAO6C,GAAP,CAAW,gCAAX,EAA6CC,KAA7C;AACA;AACA,MAAIC,QAAQ/C,OAAOgD,WAAP,CAAmB,EAAnB,CAAZ;AACAD,QAAME,SAAN,CAAgB,YAAhB,EAA8BH,KAA9B;AACA,0DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACO9C,OAAOkD,gBAAP,EADP;;AAAA;AACkC;AACjCpB,oBAAQC,GAAR,CACE,0CADF,EAEE,YAFF,EAGE,YAHF;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;AAQD,CAnBD;;AAqBA;AACA;AACA;;;;AAIA,SAASO,mBAAT,GAA+B;AAC7B;AACA,MAAMa,MAAMjE,OAAO8B,QAAP,CAAgBC,IAA5B;;AAF6B,8BAGXhB,SAASc,mBAAT,CAA6BoC,GAA7B,CAHW;AAAA,MAGrBC,KAHqB,yBAGrBA,KAHqB;;AAI7B,MAAIA,KAAJ,EAAW;AACT,QAAInB,GAAJ,EAASH,QAAQC,GAAR,gCAAyCqB,KAAzC;AACTpD,WAAOqD,QAAP,CAAgBD,KAAhB;AACD,GAHD,MAGO;AACLtB,YAAQwB,IAAR,kDAA4DH,GAA5D;AACD;AACF;AACD;AACA;;AAEA,SAASV,WAAT,GAAuB;AACrB,MAAIR,GAAJ,EACEH,QAAQC,GAAR,CAAY,kCAAZ,EAAgD,YAAhD,EAA8D,YAA9D;AACF,SAAO,IAAIwB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAI;AACFvB,eAASwB,MAAT,CAAgB,oBAAC,QAAD,OAAhB,EAA8BvB,SAASwB,aAAT,CAAuB,gBAAvB,CAA9B,EAAwE,YAAM;AAC5E7B,gBAAQC,GAAR,CACE,qCADF,EAEE,YAFF,EAGE,YAHF;AAKAyB;AACD,OAPD;AAQD,KATD,CASE,OAAOI,CAAP,EAAU;AACV;AACAC;AAGA;AACD;AACF,GAjBM,CAAP,CAHqB,CAoBjB;AACL;;;;;;;;;;AC5HD,IAAI3E,OAAO2C,MAAX,EAAmBC,QAAQC,GAAR,UAAmB/C,OAAOgD,EAA1B;AACnB;;;;;;;AAOA;AACA;AACA;AACA,IAAI8B,WAAW5E,OAAO6E,SAAP,IAAoB,EAAnC;;AAEA;AACA;AACA,IAAIC,IAAI,EAAR;AACA,IAAIC,OAAO,IAAIC,IAAJ,EAAX;AACA,IAAIC,eAAe,CAAnB;AACA,IAAIC,eAAe,IAAnB;;AAEA;AACA;AACA;;;AAGA,IAAIC,MAAM,SAANA,GAAM,CAACC,CAAD,EAAIC,CAAJ,EAAU;AAClB,MAAID,MAAME,SAAV,EAAqB,MAAM,0CAAN;AACrB,MAAI,OAAOF,CAAP,KAAa,QAAjB,EAA2B,MAAM,mCAAN;;AAE3B,MAAIC,MAAMC,SAAV,EAAqB;AACnB,WAAOR,EAAEM,CAAF,CAAP;AACD,GAFD,MAEO;AACLN,MAAEM,CAAF,IAAOC,CAAP;AACA,WAAOA,CAAP;AACD;AACF,CAVD;;AAYA;AACA;AACA,IAAME,gBAAgB;AACpB,OAAK,EAAErB,OAAO,WAAT,EADe;AAEpB,WAAS,EAAEA,OAAO,WAAT,EAAsBsB,OAAO,CAAC,OAAD,CAA7B,EAFW;AAGpB,aAAW,EAAEtB,OAAO,WAAT;AAHS,CAAtB;AAKA;AACA;;;;AAIAiB,IAAItD,mBAAJ,GAA0B,YAAgC;AAAA,MAA/BoC,GAA+B,uEAAzBjE,OAAO8B,QAAP,CAAgBC,IAAS;;AACxD,MAAM0D,KAAK,sBAAX;AACA;AACA,MAAMC,YAAYzB,IAAI0B,KAAJ,CAAU,KAAV,CAAlB;AACA,MAAMC,aAAaF,UAAUG,MAAV,KAAqB,CAArB,GAAyB,EAAzB,GAA8BH,UAAU,CAAV,CAAjD;AACA;AACA,MAAMI,cAAcF,WAAWD,KAAX,CAAiB,GAAjB,CAApB;AACA,MAAII,cAAc,EAAlB;AACA,MAAIC,cAAc,EAAlB;AACA,MAAIF,YAAYD,MAAZ,KAAuB,CAA3B,EAA8B;AAC5BE,kBAAcD,YAAY,CAAZ,CAAd;AACD,GAFD,MAEO,IAAIA,YAAYD,MAAZ,KAAuB,CAA3B,EAA8B;AACnCE,kBAAcD,YAAY,CAAZ,CAAd;AACAE,kBAAcF,YAAY,CAAZ,CAAd;AACD,GAHM,MAGA,MAAMG,MAASR,EAAT,+BAAqCxB,GAArC,CAAN;;AAEP;AACA,MAAMiC,kBAAkBH,YAAYJ,KAAZ,CAAkB,GAAlB,CAAxB;;AAjBwD,kCAkB7BO,eAlB6B;AAAA,MAkBjDlE,KAlBiD;AAAA,MAkBvCmE,MAlBuC;;AAmBxD,MAAMC,YAAUpE,KAAhB;AACA,MAAMqE,YAAYd,cAAca,GAAd,CAAlB;;AApBwD,aAqB1BC,aAAa,EArBa;AAAA,MAqBhDnC,KArBgD,QAqBhDA,KArBgD;AAAA,wBAqBzCsB,KArByC;AAAA,MAqBzCA,KArByC,8BAqBjC,EArBiC;;AAuBxD;;;AACA,MAAMc,WAAWN,YAAYL,KAAZ,CAAkB,GAAlB,CAAjB;AACA,MAAMY,OAAO,EAAb;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,SAAST,MAA7B,EAAqCW,GAArC,EAA0C;AACxC,QAAMC,UAAUH,SAASE,CAAT,CAAhB;;AADwC,yBAEnBC,QAAQd,KAAR,CAAc,GAAd,CAFmB;AAAA;AAAA,QAEjCS,IAFiC;AAAA,QAE5BM,KAF4B;;AAGxCH,SAAKH,IAAL,IAAYM,KAAZ;AACD;AACD;AACA,MAAMC,OAAO,EAAb;AACA,OAAK,IAAIH,KAAI,CAAb,EAAgBA,KAAIhB,MAAMK,MAA1B,EAAkCW,IAAlC,EAAuC;AACrC,QAAMI,OAAOpB,MAAMgB,EAAN,CAAb;AACAG,SAAKC,IAAL,IAAaT,OAAOK,EAAP,CAAb;AACD;AACD;AACA,MAAMK,SAAS;AACb7E,WAAOoE,GADM;AAEblC,gBAFa;AAGbjC,gBAAY0E,IAHC;AAIbG,eAAWP;AAJE,GAAf;AAMA,SAAOM,MAAP;AACD,CA7CD;;AA+CA;AACA;AACA;;AAEA1B,IAAI4B,GAAJ,GAAU,UAACX,GAAD,EAAMY,GAAN,EAAc;AACtB7B,MAAIiB,GAAJ,EAASY,GAAT;AACD,CAFD;AAGA;AACA;;AAEA7B,IAAI8B,GAAJ,GAAU,eAAO;AACf,SAAO9B,IAAIiB,GAAJ,CAAP;AACD,CAFD;AAGA;AACA;;;AAGAjB,IAAI+B,uBAAJ,GAA8B,YAAM;AAClCjC;AACA,MAAIA,eAAe,CAAnB,EAAsB;AACpBrC,YAAQwB,IAAR;AACA,QAAIc,YAAJ,EAAkBiC,aAAajC,YAAb;AAClBA,mBAAekC,WAAW,YAAM;AAC9BtF,eAASuF,MAAT;AACD,KAFc,EAEZ,GAFY,CAAf;AAGD,GAND,MAMO;AACLzE,YAAQwB,IAAR;AACD;AACF,CAXD;AAYA;AACA;;AAEAe,IAAImC,WAAJ,GAAkB,YAAM;AACtB,SAAOvC,KAAKwC,YAAL,EAAP;AACD,CAFD;;AAIA;AACA;AACA;;;AAGApC,IAAIqC,OAAJ,GAAc,oBAAY;AACxB,MAAIC,aAAanC,SAAjB,EAA4B,OAAOV,QAAP;AAC5B,SAAOA,SAAS6C,QAAT,CAAP;AACD,CAHD;AAIA;AACAtC,IAAIuC,cAAJ,GAAqB,YAAM;AACzB,SAAO9C,SAAS+C,MAAT,CAAgBC,QAAhB,IAA4B,OAAnC;AACD,CAFD;AAGA;AACAzC,IAAI0C,YAAJ,GAAmB,YAAM;AACvB,SAAOjD,SAAS+C,MAAT,CAAgBG,EAAhB,IAAsB,OAA7B;AACD,CAFD;AAGA;AACA3C,IAAI4C,YAAJ,GAAmB,kBAAU;AAC3B,MAAIC,QAAQ,IAAIC,GAAJ,CAAQjI,OAAO8B,QAAf,CAAZ;AACA,MAAIoG,OAAOF,MAAME,IAAN,CAAWvC,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAX;AACA;AACA,MAAI1B,MAAS+D,MAAMG,QAAf,UAA4BH,MAAMI,IAAlC,SAA0CF,IAA9C;AACA,MAAI,OAAOG,MAAP,KAAkB,QAAtB,EAAgCpE,OAAOoE,MAAP;AAChC,SAAOpE,GAAP;AACD,CAPD;;AASA;AACA;AACA;AACAkB,IAAIhD,WAAJ,GAAkB,YAAM;AACtB,MAAM2F,KAAK3C,IAAIqC,OAAJ,CAAY,QAAZ,EAAsBM,EAAjC;AACA,SAAOA,GAAGQ,QAAH,CAAY,WAAZ,CAAP;AACD,CAHD;AAIA;AACA;;;;;AAKAnD,IAAIoD,OAAJ,GAAc,YAAM;AAClB,MAAMrG,cAAciD,IAAIhD,WAAJ,EAApB;AACA,MAAMqG,QAAQrD,IAAItD,mBAAJ,GAA0BiF,SAA1B,IAAuC,EAArD;AACA,MAAM2B,cAAcD,MAAME,KAAN,KAAgB,MAApC;AACA;AACA,SAAOxG,eAAeuG,WAAtB;AACD,CAND;;AAQA;AACA;AACA3I,OAAOC,OAAP,GAAiBoF,GAAjB;;;;;;ACtLA;;;;;;;;;AASA,IAAMwD,OAAOzI,QAAQ,aAAR,CAAb;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;AACA,IAAM0I,UAAU1I,QAAQ,qBAAR,CAAhB;AACA,IAAM2I,KAAKD,QAAQE,GAAR,CAAY,WAAZ,CAAX;AACA,IAAMC,aAAa7I,QAAQ,gCAAR,CAAnB;;AAEA;AACA;AACA,IAAM6C,MAAM,EAAEiG,MAAM,IAAR,EAAZ;;AAEA;AACA;AACA,IAAIC,QAAQnI,OAAOoI,SAAP,CAAiBpJ,OAAOgD,EAAxB,CAAZ;AACA,IAAIe,QAAQ/C,OAAOgD,WAAP,CAAmBmF,KAAnB,CAAZ;AACA,IAAIE,SAAS,EAAb;;AAEA;AACA;AACA;;AAEAF,MAAMG,IAAN,CAAW,YAAX,EAAyB,YAAM;AAC7B;AACA;AACAvF,QAAMrC,aAAN,CAAoB,cAApB,EAAoC,UAAUE,IAAV,EAAgB;AAClDuH,UAAMI,iBAAN,CAAwB3H,IAAxB;AACD,GAFD;;AAIA;AACA;AACAmC,QAAMrC,aAAN,CAAoB,WAApB,EAAiC,UAAUE,IAAV,EAAgB;AAC/CuH,UAAMK,cAAN,CAAqB5H,IAArB;AACD,GAFD;;AAIA;AACA;AACAmC,QAAMrC,aAAN,CAAoB,gBAApB,EAAsC,UAAUE,IAAV,EAAgB;AACpDuH,UAAMM,mBAAN,CAA0B7H,IAA1B;AACD,GAFD;;AAIA;AACA;AACAmC,QAAMrC,aAAN,CAAoB,WAApB,EAAiC,UAAUE,IAAV,EAAgB;AAC/CuH,UAAMO,cAAN,CAAqB9H,IAArB;AACD,GAFD;;AAIA;AACA;AACA;AACAmC,QAAMrC,aAAN,CAAoB,UAApB,EAAgCyH,MAAMQ,aAAtC;;AAEA5F,QAAM6F,gBAAN,CAAuB,SAAvB,EAAkC,UAAUC,WAAV,EAAuB;AAAA,QACjDC,OADiD,GACrCD,WADqC,CACjDC,OADiD;;AAEvDhH,YAAQC,GAAR,CAAYgG,EAAZ,EAAgB,kBAAhB,EAAoCe,WAAW,kBAA/C;AACA,QAAIA,OAAJ,EAAaX,MAAMY,iBAAN,CAAwBF,WAAxB;AACd,GAJD;AAKD,CAnCD;;AAqCA;AACA;AACA;;;AAGAV,MAAMY,iBAAN,GAA0B,UAAUF,WAAV,EAAuB;AAAA,MACzCG,KADyC,GACtBH,WADsB,CACzCG,KADyC;AAAA,MAClCF,OADkC,GACtBD,WADsB,CAClCC,OADkC;;AAE/C,MAAIA,OAAJ,EAAa;AACXb,eAAWgB,gBAAX,CAA4BD,KAA5B;AACAlH,YAAQC,GAAR,CAAY,6BAAZ,EAA2CiH,KAA3C;AACD,GAHD,MAGO;AACLlH,YAAQwB,IAAR,CAAa,4BAAb,EAA2C0F,KAA3C;AACD;AACF,CARD;;AAUA;AACA;AACA;;AAEAb,MAAMe,IAAN,GAAa,YAAY;AACvB,SAAOb,MAAP;AACD,CAFD;AAGA;AACA;;AAEAF,MAAMK,cAAN,GAAuB,UAAU5H,IAAV,EAAgB;AACrC;AACA,MAAIZ,OAAOmJ,gBAAP,EAAJ,EAA+B;AAC7BrH,YAAQwB,IAAR,CAAayE,EAAb;AACA;AACD;AACD;AACAhF,QAAMqG,IAAN,CAAW,cAAX,EAA2BxI,IAA3B,EAAiCyI,IAAjC,CAAsC,eAAO;AAC3C,QAAIC,IAAIC,EAAR,EAAY;AACVzH,cAAQC,GAAR,CAAYgG,EAAZ,2BAAyCnH,IAAzC;AACD,KAFD,MAEO;AACLkB,cAAQC,GAAR,CAAYgG,EAAZ,EAAgB,0BAAhB,EAA4CuB,GAA5C;AACD;AACF,GAND;AAOD,CAdD;AAeA;AACA;;AAEAnB,MAAMM,mBAAN,GAA4B,UAAU7H,IAAV,EAAgB;AAC1C;AACA,MAAIZ,OAAOmJ,gBAAP,EAAJ,EAA+B;AAC7BrH,YAAQwB,IAAR,CAAayE,EAAb;AACA;AACD;AACD;AACAhF,QAAMqG,IAAN,CAAW,mBAAX,EAAgCxI,IAAhC,EAAsCyI,IAAtC,CAA2C,eAAO;AAChD,QAAIC,IAAIC,EAAR,EAAY;AACVzH,cAAQC,GAAR,CAAYgG,EAAZ,2BAAyCnH,IAAzC;AACD,KAFD,MAEO;AACLkB,cAAQC,GAAR,CAAYgG,EAAZ,EAAgB,0BAAhB,EAA4CuB,GAA5C;AACD;AACF,GAND;AAOD,CAdD;AAeA;AACA;;AAEAnB,MAAMqB,yBAAN,GAAkC,YAAY;AAC5C,SAAO,IAAIjG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,UAAM0G,OAAN,CAAc,yBAAd,EAAyCJ,IAAzC,CAA8C,gBAAQ;AACpD,UAAIzI,KAAK8I,SAAL,KAAmBlF,SAAvB,EAAkC;AAChC,YAAIvC,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,+BAAhB,EAAiDnH,KAAK8I,SAAtD;AACTlG,gBAAQ5C,KAAK8I,SAAb;AACD,OAHD,MAGO;AACLjG,eAAO,IAAI0B,KAAJ,CAAU,kBAAkBwE,KAAKC,SAAL,CAAehJ,IAAf,CAA5B,CAAP;AACD;AACF,KAPD;AAQD,GATM,CAAP;AAUD,CAXD;AAYA;AACA;;AAEAuH,MAAM0B,gBAAN,GAAyB,YAAY;AACnC,SAAO,IAAItG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,UAAM0G,OAAN,CAAc,iBAAd,EAAiCJ,IAAjC,CAAsC,gBAAQ;AAC5C,UAAIzI,KAAKkJ,MAAT,EAAiB;AACf,YAAI7H,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,0BAAhB,EAA4CnH,KAAKkJ,MAAjD;AACTtG,gBAAQ5C,KAAKkJ,MAAb;AACD,OAHD,MAGO;AACL,YAAI9J,OAAOmJ,gBAAP,EAAJ,EAA+B;AAC7B1F,iBACE,IAAI0B,KAAJ,CACE,qEADF,CADF;AAKD,SAND,MAMO;AACL1B,iBAAO,IAAI0B,KAAJ,CAAU,kBAAkBwE,KAAKC,SAAL,CAAehJ,IAAf,CAA5B,CAAP;AACD;AACF;AACF,KAfD;AAgBD,GAjBM,CAAP;AAkBD,CAnBD;AAoBA;AACA;;AAEAuH,MAAM4B,iBAAN,GAA0B,UAAUC,KAAV,EAAiB;AACzC,SAAO,IAAIzG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,UAAM0G,OAAN,CAAc,kBAAd,EAAkC,EAAEO,YAAF,EAAlC,EAA6CX,IAA7C,CAAkD,gBAAQ;AACxD,UAAIzI,KAAKqJ,OAAT,EAAkB;AAChB,YAAIhI,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,0BAAhB,EAA4CnH,KAAKqJ,OAAjD;AACTzG,gBAAQ5C,KAAKqJ,OAAb;AACD,OAHD,MAGO;AACLxG,eAAO,IAAI0B,KAAJ,CAAU,kBAAkBwE,KAAKC,SAAL,CAAehJ,IAAf,CAA5B,CAAP;AACD;AACF,KAPD;AAQD,GATM,CAAP;AAUD,CAXD;AAYA;AACA;;AAEAuH,MAAM+B,yBAAN,GAAkC,YAAY;AAC5C,SAAO,IAAI3G,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,UAAM0G,OAAN,CAAc,yBAAd,EAAyCJ,IAAzC,CAA8C,gBAAQ;AACpD,UAAIzI,KAAKuJ,SAAL,KAAmB3F,SAAvB,EAAkC;AAChC,YAAIvC,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,+BAAhB,EAAiDnH,KAAKuJ,SAAtD;AACT3G,gBAAQ5C,KAAKuJ,SAAb;AACD,OAHD,MAGO;AACL1G,eAAO,IAAI0B,KAAJ,CAAU,kBAAkBwE,KAAKC,SAAL,CAAehJ,IAAf,CAA5B,CAAP;AACD;AACF,KAPD;AAQD,GATM,CAAP;AAUD,CAXD;AAYA;AACA;;AAEAuH,MAAMiC,gBAAN,GAAyB,YAAY;AACnC,SAAO,IAAI7G,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,UAAM0G,OAAN,CAAc,iBAAd,EAAiCJ,IAAjC,CAAsC,gBAAQ;AAC5C,UAAIzI,KAAKyJ,MAAT,EAAiB;AACf,YAAIpI,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,2BAAhB,EAA6CnH,KAAKyJ,MAAlD;AACT7G,gBAAQ5C,KAAKyJ,MAAb;AACD,OAHD,MAGO;AACL,YAAIrK,OAAOmJ,gBAAP,EAAJ,EAA+B;AAC7B1F,iBACE,IAAI0B,KAAJ,CACE,qEADF,CADF;AAKD,SAND,MAMO;AACL1B,iBAAO,IAAI0B,KAAJ,CAAU,kBAAkBwE,KAAKC,SAAL,CAAehJ,IAAf,CAA5B,CAAP;AACD;AACF;AACF,KAfD;AAgBD,GAjBM,CAAP;AAkBD,CAnBD;AAoBA;AACA;;AAEAuH,MAAMmC,iBAAN,GAA0B,UAAUN,KAAV,EAAiB;AACzC,SAAO,IAAIzG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,UAAM0G,OAAN,CAAc,kBAAd,EAAkC,EAAEO,YAAF,EAAlC,EAA6CX,IAA7C,CAAkD,gBAAQ;AACxD,UAAIzI,KAAK2J,OAAT,EAAkB;AAChB,YAAItI,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,2BAAhB,EAA6CnH,KAAK2J,OAAlD;AACT/G,gBAAQ5C,KAAK2J,OAAb;AACD,OAHD,MAGO;AACL9G,eAAO,IAAI0B,KAAJ,CAAU,kBAAkBwE,KAAKC,SAAL,CAAehJ,IAAf,CAA5B,CAAP;AACD;AACF,KAPD;AAQD,GATM,CAAP;AAUD,CAXD;AAYA;AACA;;AAEAuH,MAAMqC,mBAAN,GAA4B,YAAY;AACtC,SAAO,IAAIjH,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,UAAM0G,OAAN,CAAc,oBAAd,EAAoCJ,IAApC,CAAyC,gBAAQ;AAC/C,UAAIzI,KAAK6J,UAAT,EAAqB;AACnB,YAAIxI,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,6BAAhB,EAA+CnH,KAAK6J,UAApD;AACTjH,gBAAQ5C,KAAK6J,UAAb;AACD,OAHD,MAGO;AACL,YAAIzK,OAAOmJ,gBAAP,EAAJ,EAA+B;AAC7B1F,iBACE,IAAI0B,KAAJ,CACE,wEADF,CADF;AAKD,SAND,MAMO;AACL1B,iBAAO,IAAI0B,KAAJ,CAAU,kBAAkBwE,KAAKC,SAAL,CAAehJ,IAAf,CAA5B,CAAP;AACD;AACF;AACF,KAfD;AAgBD,GAjBM,CAAP;AAkBD,CAnBD;;AAqBA;AACA;AACA;;AAEAuH,MAAMuC,eAAN,GAAwB,UAAUC,QAAV,EAAoB;AAC1C,MAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChC,UAAM,IAAIxF,KAAJ,CAAU,oCAAV,CAAN;AACD;AACD,MAAIyF,UAAU,IAAIrH,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,QAAIoH,OAAO,IAAIC,cAAJ,EAAX;AACAD,SAAKzI,gBAAL,CAAsB,MAAtB,EAA8B,iBAAS;AACrC,UAAIU,MAAMiI,MAAN,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAC/BvH,eAAO,IAAI0B,KAAJ,kBAAP;AACA;AACD;AACD,UAAIvE,OAAOkC,MAAMiI,MAAN,CAAaE,YAAxB;AACA5C,eAAS6C,OAAOC,MAAP,CAAc9C,MAAd,EAAsBsB,KAAKyB,KAAL,CAAWxK,IAAX,CAAtB,CAAT;AACA4C,cAAQ6E,MAAR;AACD,KARD;AASAwC,SAAKQ,IAAL,CAAU,KAAV,OAAoBV,QAApB,EAAgC,IAAhC;AACAE,SAAKS,IAAL;AACD,GAba,CAAd;AAcA,SAAOV,OAAP;AACD,CAnBD;AAoBA;AACA;;AAEAzC,MAAMoD,eAAN,GAAwB,UAAUC,QAAV,EAAoB;AAC1C,MAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChC,UAAM,IAAIrG,KAAJ,CAAU,oCAAV,CAAN;AACD;AACD,MAAIyF,UAAU,IAAIrH,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,QAAIoH,OAAO,IAAIC,cAAJ,EAAX;AACAD,SAAKzI,gBAAL,CAAsB,MAAtB,EAA8B,iBAAS;AACrC,UAAIU,MAAMiI,MAAN,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAC/BvH,eAAO,IAAI0B,KAAJ,kBAAP;AACA;AACD;AACD,UAAMvE,OAAOkC,MAAMiI,MAAN,CAAaE,YAA1B;AACA,UAAMQ,WAAWP,OAAOC,MAAP,CAAc9C,MAAd,EAAsBR,KAAKuD,KAAL,CAAWxK,IAAX,CAAtB,CAAjB;AACA4C,cAAQiI,QAAR;AACD,KARD;AASAZ,SAAKQ,IAAL,CAAU,KAAV,OAAoBG,QAApB,EAAgC,IAAhC;AACAX,SAAKS,IAAL;AACD,GAba,CAAd;AAcA,SAAOV,OAAP;AACD,CAnBD;AAoBA;AACA;;AAEAzC,MAAMuD,aAAN,GAAsB,YAAY;AAChC;AACA,SAAO3I,MAAMqG,IAAN,CAAW,WAAX,EAAwB,EAAxB,CAAP,CAFgC,CAEI;AACrC,CAHD;AAIA;AACA;;AAEAjB,MAAMwD,gBAAN,GAAyB,oBAAY;AACnC;AACA,SAAO5I,MAAMqG,IAAN,CAAW,kBAAX,EAA+B,EAAEwC,kBAAF,EAA/B,CAAP,CAFmC,CAEkB;AACtD,CAHD;AAIA;AACA;;;AAGAzD,MAAM0D,uBAAN,GAAgC,YAAM;AACpC,SAAO9I,MAAMqG,IAAN,CAAW,+BAAX,CAAP;AACD,CAFD;AAGA;AACA;;AAEAjB,MAAMI,iBAAN,GAA0B,UAAUuD,MAAV,EAAkB;AAC1C,SAAO,IAAIvI,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,UAAMqG,IAAN,CAAW,kBAAX,EAA+B0C,MAA/B,EAAuCzC,IAAvC,CAA4C,eAAO;AACjD,UAAIC,IAAIC,EAAR,EAAY;AACVzH,gBAAQC,GAAR,CAAYgG,EAAZ;AACAvE,gBAAQ8F,GAAR;AACD,OAHD,MAGO;AACL7F,eAAO,IAAI0B,KAAJ,CAAUwE,KAAKC,SAAL,CAAeN,GAAf,CAAV,CAAP;AACD;AACF,KAPD;AAQD,GATM,CAAP;AAUD,CAXD;AAYA;AACA;;AAEAnB,MAAMO,cAAN,GAAuB,UAAUoD,MAAV,EAAkB;AACvC,SAAO,IAAIvI,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,UAAMqG,IAAN,CAAW,cAAX,EAA2B0C,MAA3B,EAAmCzC,IAAnC,CAAwC,eAAO;AAC7C,UAAIC,IAAIC,EAAR,EAAY;AACVzH,gBAAQC,GAAR,CAAYgG,EAAZ;AACAvE,gBAAQ8F,GAAR;AACD,OAHD,MAGO;AACL7F,eAAO,IAAI0B,KAAJ,CAAUwE,KAAKC,SAAL,CAAeN,GAAf,CAAV,CAAP;AACD;AACF,KAPD;AAQD,GATM,CAAP;AAUD,CAXD;AAYA;AACA;;;;;;;AAOAnB,MAAMQ,aAAN,GAAsB,UAAUoD,SAAV,EAAqB;AACzC,SAAO,IAAIxI,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,UAAMqG,IAAN,CAAW,aAAX,EAA0B2C,SAA1B,EAAqC1C,IAArC,CAA0C,eAAO;AAC/C,UAAIC,IAAIC,EAAR,EAAY;AACVzH,gBAAQC,GAAR,CAAYgG,EAAZ;AACAvE,gBAAQ8F,GAAR;AACD,OAHD,MAGO;AACL7F,eAAO,IAAI0B,KAAJ,CAAUwE,KAAKC,SAAL,CAAeN,GAAf,CAAV,CAAP;AACD;AACF,KAPD;AAQD,GATM,CAAP;AAUD,CAXD;AAYA;AACA;;AAEAnB,MAAM6D,oBAAN,GAA6B,UAAUF,MAAV,EAAkB;AAC7C,SAAO,IAAIvI,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,UAAMqG,IAAN,CAAW,WAAX,EAAwB0C,MAAxB,EAAgCzC,IAAhC,CAAqC,eAAO;AAC1C,UAAIC,IAAIC,EAAR,EAAY;AACVzH,gBAAQC,GAAR,CAAYgG,EAAZ;AACAvE,gBAAQ8F,GAAR;AACD,OAHD,MAGO;AACL7F,eAAO,IAAI0B,KAAJ,CAAUwE,KAAKC,SAAL,CAAeN,GAAf,CAAV,CAAP;AACD;AACF,KAPD;AAQD,GATM,CAAP;AAUD,CAXD;;AAaA;AACA;AACAtK,OAAOC,OAAP,GAAiBkJ,KAAjB;;;;;;ACtYA;;;;;;AAMA,IAAMhJ,QAAQC,QAAQ,OAAR,CAAd;;AAEA;AACA;AACA,IAAM6M,WAAW,EAAjB;;AAEAA,SAASC,kBAAT,GAA8B,KAA9B;AACAD,SAASE,UAAT;AACAF,SAASG,YAAT;AACAH,SAASI,WAAT;;AAEA;AACA;AACAJ,SAASK,WAAT,GACE;AAAA;AAAA,IAAK,IAAG,aAAR,EAAsB,OAAM,4BAA5B,EAAyD,SAAQ,WAAjE;AACE,gCAAM,IAAG,QAAT,EAAkB,GAAE,wSAApB;AADF,CADF;AAKAL,SAASM,SAAT,GACE;AAAA;AAAA,IAAM,IAAG,WAAT,EAAqB,OAAM,4BAA3B,EAAwD,SAAQ,WAAhE;AACE,gCAAM,IAAG,KAAT,EAAe,GAAE,2oBAAjB;AADF,CADF;;AAMA;AACA;AACAvN,OAAOC,OAAP,GAAiBgN,QAAjB;;;;;;AChCA;;;;;;AAMA;AACA;AACA,IAAMO,OAAO,EAAb;AACA;AACAA,KAAKC,UAAL,GAAkB;AAChBC,YAAU,UADM;AAEhBC,YAAU,UAFM;AAGhBC,QAAM,MAHU,EAGF;AACdC,QAAM,MAJU,EAIF;AACdC,WAAS;AALO,CAAlB;AAOA;AACAN,KAAKO,mBAAL,GAA2B,CACzB,IADyB,EAEzB,OAFyB,EAGzB,MAHyB,EAIzB,SAJyB,EAKzB,SALyB,EAMzB,WANyB,EAOzB,SAPyB,EAQzB,WARyB,EASzB,UATyB,CAA3B;AAWAP,KAAKQ,mBAAL,GAA2B,CACzB,IADyB,EAEzB,QAFyB,EAGzB,MAHyB,EAIzB,QAJyB,EAKzB,QALyB,EAMzB,SANyB,EAOzB,SAPyB,EAQzB,WARyB,EASzB,SATyB,EAUzB,WAVyB,EAWzB,UAXyB,EAYzB,aAZyB,EAYV;AACf,aAbyB,CAaX;AAbW,CAA3B;;AAgBA;AACA;AACAhO,OAAOC,OAAP,GAAiBuN,IAAjB;;;;;;ACvCA;;IAAYS,M;;;;oMARZ;;;;;;;;;;AAUA,IAAMC,QAAQ,EAAd;;AAEA;AACA;AACA;AACA;AACAA,MAAMC,UAAN,GAAmBF,OAAOG,MAAP,CAAcC,KAAd,EAAnB;AACAH,MAAMC,UAAN,CAAiBG,OAAjB,CAAyBxM,IAAzB,CACE;AACAyM,WAAS,mBAAM;AACX;AACA;AACA;AACA,WAAO;AAAP;AACH,GAND;AAOAC,WAAS,iBAACC,OAAD,EAAUC,KAAV,EAAoB;AAC3B,QAAMC,OAAOC,SAASF,MAAM,CAAN,CAAT,EAAmB,EAAnB,CAAb;AACE,QAAMG,MAAMH,MAAM,CAAN,IAAWA,MAAM,CAAN,EAASI,WAAT,EAAX,GAAoC,IAAhD,CAFyB,CAE6B;AACxD;AACA,QAAMC,eAAeF,QAAQ,KAAR,IAAiBA,QAAQ,IAAzB,GAAgC,CAACF,IAAjC,GAAwCA,IAA7D;AACA,WAAO,EAAEA,MAAMI,YAAR,EAAP;AACD;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA,CADF;AAqCAb,MAAMC,UAAN,CAAiBa,QAAjB,CAA0BlN,IAA1B,CACE;AACEmN,UAAQ,gBAACR,OAAD,EAAUS,OAAV,EAAsB;AAC5B;AACA,WAAOA,OAAP;AACD;AAJH,CADF;;AASA;AACA;AACA;AACA;AACAhB,MAAMiB,IAAN,GAAa;AACXC,OAAK,KADM;AAEXC,QAAM;AAFK,CAAb;AAIA;AACA;AACAnB,MAAMoB,QAAN,GAAiB;AACfC,OAAK,SADU;AAEfC,aAAW,SAFI;AAGfC,UAAQ,QAHO;AAIfC,WAAS,SAJM;AAKfC,UAAQ,QALO;AAMfC,WAAS;AANM,CAAjB;AAQA;AACA1B,MAAM2B,UAAN,GAAmB;AACjBC,cAAY,YADK;;AAGjB;AACAC,cAAY,KAJK;AAKjBC,cAAY,OALK;AAMjBC,aAAW,GANM;AAOjBC,aAAW,IAPM;;AASjB;AACAC,iBAAe,OAVE;AAWjBC,iBAAe,SAXE;AAYjBC,gBAAc,KAZG;AAajBC,gBAAc,OAbG;;AAejB;AACAC,qBAAmB,aAhBF;AAiBjBC,qBAAmB,eAjBF;AAkBjBC,oBAAkB,UAlBD;AAmBjBC,oBAAkB,YAnBD;AAoBjBC,qBAAmB,YApBF;AAqBjBC,qBAAmB,cArBF;AAsBjBC,oBAAkB,UAtBD;AAuBjBC,oBAAkB,YAvBD;AAwBjBC,gCAA8B,gBAxBb;AAyBjBC,gCAA8B,kBAzBb;AA0BjBC,+BAA6B,aA1BZ;AA2BjBC,+BAA6B,eA3BZ;AA4BjBC,gCAA8B,eA5Bb;AA6BjBC,gCAA8B,iBA7Bb;AA8BjBC,+BAA6B,aA9BZ;AA+BjBC,+BAA6B,eA/BZ;;AAiCjB;AACAC,kBAAgB,UAlCC;AAmCjBC,kBAAgB,YAnCC;AAoCjBC,iBAAe,QApCE;AAqCjBC,iBAAe,SArCE;AAsCjBC,kBAAgB,UAtCC;AAuCjBC,kBAAgB,YAvCC;AAwCjBC,iBAAe,QAxCE;AAyCjBC,iBAAe,SAzCE;AA0CjBC,6BAA2B,aA1CV;AA2CjBC,6BAA2B,eA3CV;AA4CjBC,4BAA0B,WA5CT;AA6CjBC,4BAA0B,YA7CT;AA8CjBC,6BAA2B,aA9CV;AA+CjBC,6BAA2B,eA/CV;AAgDjBC,4BAA0B,WAhDT;AAiDjBC,4BAA0B,YAjDT;;AAmDjB;AACAC,QAAM,MApDW;AAqDjBC,kBAAgB;AArDC,CAAnB;;AAwDA;AACA;AACAtE,MAAMuE,KAAN,GAAc,eAAO;AACnB,MAAI,CAACC,GAAL,EAAU,OAAO,EAAP;AACV,SAAOA,IAAIC,QAAJ,GAAeC,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,CAAP;AACD,CAHD;AAIA;AACA1E,MAAM2E,WAAN,GAAoB,eAAO;AACzB,MAAMC,OAAO,IAAI5N,IAAJ,CAAS,IAAT,EAAewN,MAAM,CAArB,EAAwB,CAAxB,CAAb;AACA,SAAOI,KAAKC,kBAAL,CAAwB,SAAxB,EAAmC,EAAEC,OAAO,OAAT,EAAnC,CAAP;AACD,CAHD;AAIA;AACA9E,MAAM+E,WAAN,GAAoB,eAAO;AACzB,MAAMH,OAAO,IAAI5N,IAAJ,CAAS,IAAT,EAAewN,MAAM,CAArB,EAAwB,CAAxB,CAAb;AACA,SAAOI,KAAKC,kBAAL,CAAwB,SAAxB,EAAmC,EAAEC,OAAO,MAAT,EAAnC,CAAP;AACD,CAHD;;AAKA;AACA;AACA9E,MAAMgF,KAAN,GAAc,wBAAgB;AAC5B,SAAOhF,MAAMC,UAAN,CAAiB/B,KAAjB,CAAuB+G,YAAvB,CAAP;AACD,CAFD;AAGA;AACA;;;;AAIAjF,MAAMkF,qBAAN,GAA8B,wBAAgB;AAC5C;AACA,MAAIC,aAAatN,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,QAAMuN,cAAcD,aAAa,CAAb,EAAgBE,KAAhB,CAAsBD,WAA1C;AACA,QAAME,oBAAoBF,cACtBpH,OAAOuH,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6B;AAAA,aAAQC,CAAR,SAAaL,YAAYK,CAAZ,CAAb;AAAA,KAA7B,CADsB,GAEtB,CAAC,4BAAD,CAFJ;AAGA;AACA,WAAOH,iBAAP;AACD;AACD,SAAOhO,SAAP;AACD,CAXD;AAYA;AACA;;;;;;AAMA0I,MAAM0F,mBAAN,GAA4B,UAACP,YAAD,EAAeQ,UAAf,EAA2BC,oBAA3B,EAAoD;AAC9E,MAAIC,UAAU,CAAC,EAAEnN,OAAO,YAAT,EAAuBoN,SAAS,YAAhC,EAAD,CAAd;AACA,MAAIX,aAAatN,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,QAAI+N,oBAAJ,EAA0B,OAAOC,OAAP,CAA1B,KACK,OAAO,CACV,EAAEnN,OAAOiN,UAAT,EAAqBG,SAAS9F,MAAM2B,UAAN,CAAiBgE,UAAjB,CAA9B,EADU,CAAP;AAGN;;AAED,MAAII,gBAAgB,EAApB;AACA,MAAIC,oBAAoB,EAAxB;AACA,MAAMZ,cAAcD,aAAa,CAAb,EAAgBE,KAAhB,CAAsBD,WAA1C;AACA,MAAMa,aAAajI,OAAOuH,IAAP,CAAYJ,aAAa,CAAb,EAAgBE,KAAhB,CAAsBD,WAAlC,CAAnB;AACA,MAAMH,eAAeE,aAAa,CAAb,EAAgBe,IAArC;;AAEA,MAAI,CAACN,oBAAL,EAA2B;AACzB;AACA,QAAMC,WAAU,CACd,EAAEnN,OAAOiN,UAAT,EAAqBG,SAAS9F,MAAMmG,aAAN,CAAoBlB,YAApB,EAAkCG,WAAlC,EAA+CO,UAA/C,CAA9B,EADc,CAAhB;AAGA,WAAOE,QAAP;AACD;;AAED;AACA,MAAII,WAAWG,QAAX,CAAoB,MAApB,CAAJ,EAAiC;AAC/B,QAAIH,WAAWG,QAAX,CAAoB,OAApB,CAAJ,EAAkC;AAChC,UAAIH,WAAWG,QAAX,CAAoB,KAApB,CAAJ,EAAgC;AAC9B;AACAL,wBAAgB,CACd,mBADc,EAEd,mBAFc,EAGd,kBAHc,EAId,kBAJc,EAKd,mBALc,EAMd,mBANc,EAOd,kBAPc,EAQd,kBARc,EASd,8BATc,EAUd,8BAVc,EAWd,6BAXc,EAYd,6BAZc,EAad,8BAbc,EAcd,8BAdc,EAed,6BAfc,EAgBd,6BAhBc,CAAhB;AAkBD,OApBD,MAoBO;AACL;AACAA,wBAAgB,CACd,gBADc,EAEd,gBAFc,EAGd,eAHc,EAId,eAJc,EAKd,gBALc,EAMd,gBANc,EAOd,eAPc,EAQd,eARc,EASd,2BATc,EAUd,2BAVc,EAWd,0BAXc,EAYd,0BAZc,EAad,2BAbc,EAcd,2BAdc,EAed,0BAfc,EAgBd,0BAhBc,CAAhB;AAkBD;AACF,KA1CD,MA0CO;AACL;AACAA,sBAAgB,CAAC,MAAD,EAAS,gBAAT,CAAhB;AACD;AACF,GA/CD,MA+CO,IAAIE,WAAWG,QAAX,CAAoB,OAApB,CAAJ,EAAkC;AACvC,QAAIH,WAAWG,QAAX,CAAoB,KAApB,CAAJ,EAAgC;AAC9BL,sBAAgB,CACd,eADc,EAEd,eAFc,EAGd,cAHc,EAId,cAJc,CAAhB;AAMD,KAPD,MAOO;AACLA,sBAAgB,CAAC,YAAD,EAAe,YAAf,EAA6B,WAA7B,EAA0C,WAA1C,CAAhB;AACD;AACF;;AAEDC,sBAAoBD,cAAcP,GAAd,CAAkB,gBAAQ;AAC5C,WAAO,EAAE9M,OAAO2N,IAAT,EAAeP,SAAS9F,MAAMmG,aAAN,CAAoBlB,YAApB,EAAkCG,WAAlC,EAA+CiB,IAA/C,CAAxB,EAAP;AACD,GAFmB,CAApB;AAGAR,yCAAcG,iBAAd,sBAAoCH,OAApC;AACA,SAAOA,OAAP;AACD,CAzFD;AA0FA;AACA;;;;;;AAMA7F,MAAMmG,aAAN,GAAsB,UAAClB,YAAD,EAAeG,WAAf,EAA4BkB,MAA5B,EAAuC;AAC3D,MAAMxB,QAAQM,YAAYN,KAAZ,IAAqB,IAAnC;AACA,MAAMyB,MAAMnB,YAAYmB,GAAZ,IAAmB,IAA/B;AACA,MAAM9F,OAAO2E,YAAY3E,IAAZ,IAAoB,IAAjC;AACA,UAAQ6F,MAAR;AACE,SAAK,YAAL;AACE,kBAAUtG,MAAM2E,WAAN,CAAkBG,KAAlB,CAAV;AACF,SAAK,YAAL;AACE,kBAAU9E,MAAM+E,WAAN,CAAkBD,KAAlB,CAAV;AACF,SAAK,WAAL;AACE,kBAAUA,KAAV;AACF,SAAK,WAAL;AACE,kBAAU9E,MAAMuE,KAAN,CAAYO,KAAZ,CAAV;AACF,SAAK,eAAL;AACE,aAAU9E,MAAM2E,WAAN,CAAkBG,KAAlB,CAAV,SAAsCyB,GAAtC;AACF,SAAK,eAAL;AACE,aAAUvG,MAAM+E,WAAN,CAAkBD,KAAlB,CAAV,SAAsCyB,GAAtC;AACF,SAAK,cAAL;AACE,aAAUzB,KAAV,SAAmByB,GAAnB;AACF,SAAK,cAAL;AACE,aAAUvG,MAAMuE,KAAN,CAAYO,KAAZ,CAAV,SAAgC9E,MAAMuE,KAAN,CAAYgC,GAAZ,CAAhC;AACF,SAAK,mBAAL;AACE,aAAUvG,MAAM2E,WAAN,CAAkBG,KAAlB,CAAV,SAAsCyB,GAAtC,UAA8C9F,IAA9C;AACF,SAAK,mBAAL;AACE,aAAUT,MAAM+E,WAAN,CAAkBD,KAAlB,CAAV,SAAsCyB,GAAtC,UAA8C9F,IAA9C;AACF,SAAK,kBAAL;AACE,aAAUqE,KAAV,SAAmByB,GAAnB,SAA0B9F,IAA1B;AACF,SAAK,kBAAL;AACE,aAAUT,MAAMuE,KAAN,CAAYO,KAAZ,CAAV,SAAgC9E,MAAMuE,KAAN,CAAYgC,GAAZ,CAAhC,SAAoD9F,IAApD;AACF,SAAK,mBAAL;AACE,aAAUA,IAAV,SAAkBT,MAAM2E,WAAN,CAAkBG,KAAlB,CAAlB,SAA8CyB,GAA9C;AACF,SAAK,mBAAL;AACE,aAAU9F,IAAV,SAAkBT,MAAM+E,WAAN,CAAkBD,KAAlB,CAAlB,SAA8CyB,GAA9C;AACF,SAAK,kBAAL;AACE,aAAU9F,IAAV,SAAkBqE,KAAlB,SAA2ByB,GAA3B;AACF,SAAK,kBAAL;AACE,aAAU9F,IAAV,SAAkBT,MAAMuE,KAAN,CAAYO,KAAZ,CAAlB,SAAwC9E,MAAMuE,KAAN,CAAYgC,GAAZ,CAAxC;AACF,SAAK,8BAAL;AACE,aAAO9F,OAAO,CAAP,GACAT,MAAM2E,WAAN,CAAkBG,KAAlB,CADA,SAC4ByB,GAD5B,UACoCC,KAAKC,GAAL,CAAShG,IAAT,CADpC,SACsDT,MAAMiB,IAAN,CAAWC,GADjE,GAEAlB,MAAM2E,WAAN,CAAkBG,KAAlB,CAFA,SAE4ByB,GAF5B,UAEoC9F,IAFpC,SAE4CT,MAAMiB,IAAN,CAAWE,IAF9D;AAGF,SAAK,8BAAL;AACE,aAAOV,OAAO,CAAP,GACAT,MAAM+E,WAAN,CAAkBD,KAAlB,CADA,SAC4ByB,GAD5B,UACoCC,KAAKC,GAAL,CAAShG,IAAT,CADpC,SACsDT,MAAMiB,IAAN,CAAWC,GADjE,GAEAlB,MAAM+E,WAAN,CAAkBD,KAAlB,CAFA,SAE4ByB,GAF5B,UAEoC9F,IAFpC,SAE4CT,MAAMiB,IAAN,CAAWE,IAF9D;AAGF,SAAK,6BAAL;AACE,aAAOV,OAAO,CAAP,GACAqE,KADA,SACSyB,GADT,SACgBC,KAAKC,GAAL,CAAShG,IAAT,CADhB,SACkCT,MAAMiB,IAAN,CAAWC,GAD7C,GAEA4D,KAFA,SAESyB,GAFT,SAEgB9F,IAFhB,SAEwBT,MAAMiB,IAAN,CAAWE,IAF1C;AAGF,SAAK,6BAAL;AACE,aAAOV,OAAO,CAAP,GACAT,MAAMuE,KAAN,CAAYO,KAAZ,CADA,SACsB9E,MAAMuE,KAAN,CAAYgC,GAAZ,CADtB,SAC0CC,KAAKC,GAAL,CAAShG,IAAT,CAD1C,SAC4DT,MAAMiB,IAAN,CAAWC,GADvE,GAEAlB,MAAMuE,KAAN,CAAYO,KAAZ,CAFA,SAEsB9E,MAAMuE,KAAN,CAAYgC,GAAZ,CAFtB,SAE0C9F,IAF1C,SAEkDT,MAAMiB,IAAN,CAAWE,IAFpE;AAGF,SAAK,8BAAL;AACE,aAAOV,OAAO,CAAP,GACA+F,KAAKC,GAAL,CAAShG,IAAT,CADA,SACkBT,MAAM2E,WAAN,CAAkBG,KAAlB,CADlB,SAC8CyB,GAD9C,SACqDvG,MAAMiB,IAAN,CAAWC,GADhE,GAEAT,IAFA,SAEQT,MAAM2E,WAAN,CAAkBG,KAAlB,CAFR,SAEoCyB,GAFpC,SAE2CvG,MAAMiB,IAAN,CAAWE,IAFtD,MAAP;AAGF,SAAK,8BAAL;AACE,aAAOV,OAAO,CAAP,GACA+F,KAAKC,GAAL,CAAShG,IAAT,CADA,SACkBT,MAAM+E,WAAN,CAAkBD,KAAlB,CADlB,SAC8CyB,GAD9C,SACqDvG,MAAMiB,IAAN,CAAWC,GADhE,GAEAT,IAFA,SAEQT,MAAM+E,WAAN,CAAkBD,KAAlB,CAFR,SAEoCyB,GAFpC,SAE2CvG,MAAMiB,IAAN,CAAWE,IAF7D;AAGF,SAAK,6BAAL;AACE,aAAOV,OAAO,CAAP,GACA+F,KAAKC,GAAL,CAAShG,IAAT,CADA,SACkBqE,KADlB,SAC2ByB,GAD3B,SACkCvG,MAAMiB,IAAN,CAAWC,GAD7C,GAEAT,IAFA,SAEQqE,KAFR,SAEiByB,GAFjB,SAEwBvG,MAAMiB,IAAN,CAAWE,IAF1C;AAGF,SAAK,6BAAL;AACE,aAAOV,OAAO,CAAP,GACA+F,KAAKC,GAAL,CAAShG,IAAT,CADA,SACkBT,MAAMuE,KAAN,CAAYO,KAAZ,CADlB,SACwC9E,MAAMuE,KAAN,CAAYgC,GAAZ,CADxC,SAC4DvG,MAAMiB,IAAN,CAAWC,GADvE,GAEAT,IAFA,SAEQT,MAAMuE,KAAN,CAAYO,KAAZ,CAFR,SAE8B9E,MAAMuE,KAAN,CAAYgC,GAAZ,CAF9B,SAEkDvG,MAAMiB,IAAN,CAAWE,IAFpE;AAGF,SAAK,gBAAL;AACE,aAAUnB,MAAM2E,WAAN,CAAkBG,KAAlB,CAAV,SAAsCrE,IAAtC;AACF,SAAK,gBAAL;AACE,aAAUT,MAAM+E,WAAN,CAAkBD,KAAlB,CAAV,SAAsCrE,IAAtC;AACF,SAAK,eAAL;AACE,aAAUqE,KAAV,SAAmBrE,IAAnB;AACF,SAAK,eAAL;AACE,aAAUT,MAAMuE,KAAN,CAAYO,KAAZ,CAAV,SAAgCrE,IAAhC;AACF,SAAK,gBAAL;AACE,aAAUA,IAAV,SAAkBT,MAAM2E,WAAN,CAAkBG,KAAlB,CAAlB;AACF,SAAK,gBAAL;AACE,aAAUrE,IAAV,SAAkBT,MAAM+E,WAAN,CAAkBD,KAAlB,CAAlB;AACF,SAAK,eAAL;AACE,aAAUrE,IAAV,SAAkBqE,KAAlB;AACF,SAAK,eAAL;AACE,aAAUrE,IAAV,SAAkBT,MAAMuE,KAAN,CAAYO,KAAZ,CAAlB;AACF,SAAK,2BAAL;AACE,aAAOrE,OAAO,CAAP,GACAT,MAAM2E,WAAN,CAAkBG,KAAlB,CADA,SAC4B0B,KAAKC,GAAL,CAAShG,IAAT,CAD5B,SAC8CT,MAAMiB,IAAN,CAAWC,GADzD,GAEAlB,MAAM2E,WAAN,CAAkBG,KAAlB,CAFA,SAE4BrE,IAF5B,SAEoCT,MAAMiB,IAAN,CAAWE,IAFtD;AAGF,SAAK,2BAAL;AACE,aAAOV,OAAO,CAAP,GACAT,MAAM+E,WAAN,CAAkBD,KAAlB,CADA,SAC4B0B,KAAKC,GAAL,CAAShG,IAAT,CAD5B,SAC8CT,MAAMiB,IAAN,CAAWC,GADzD,GAEAlB,MAAM+E,WAAN,CAAkBD,KAAlB,CAFA,SAE4BrE,IAF5B,SAEoCT,MAAMiB,IAAN,CAAWE,IAFtD;AAGF,SAAK,0BAAL;AACE,aAAOV,OAAO,CAAP,GACAqE,KADA,SACS0B,KAAKC,GAAL,CAAShG,IAAT,CADT,SAC2BT,MAAMiB,IAAN,CAAWC,GADtC,GAEA4D,KAFA,SAESrE,IAFT,SAEiBT,MAAMiB,IAAN,CAAWE,IAFnC;AAGF,SAAK,0BAAL;AACE,aAAOV,OAAO,CAAP,GACAT,MAAMuE,KAAN,CAAYO,KAAZ,CADA,SACsB0B,KAAKC,GAAL,CAAShG,IAAT,CADtB,SACwCT,MAAMiB,IAAN,CAAWC,GADnD,GAEAlB,MAAMuE,KAAN,CAAYO,KAAZ,CAFA,SAEsBrE,IAFtB,SAE8BT,MAAMiB,IAAN,CAAWE,IAFhD;AAGF,SAAK,2BAAL;AACE,aAAOV,OAAO,CAAP,GACA+F,KAAKC,GAAL,CAAShG,IAAT,CADA,SACkBT,MAAM2E,WAAN,CAAkBG,KAAlB,CADlB,SAC8C9E,MAAMiB,IAAN,CAAWC,GADzD,GAEAT,IAFA,SAEQT,MAAM2E,WAAN,CAAkBG,KAAlB,CAFR,SAEoC9E,MAAMiB,IAAN,CAAWE,IAFtD;AAGF,SAAK,2BAAL;AACE,aAAOV,OAAO,CAAP,GACA+F,KAAKC,GAAL,CAAShG,IAAT,CADA,SACkBT,MAAM+E,WAAN,CAAkBD,KAAlB,CADlB,SAC8C9E,MAAMiB,IAAN,CAAWC,GADzD,GAEAT,IAFA,SAEQT,MAAM+E,WAAN,CAAkBD,KAAlB,CAFR,SAEoC9E,MAAMiB,IAAN,CAAWE,IAFtD;AAGF,SAAK,0BAAL;AACE,aAAOV,OAAO,CAAP,GACA+F,KAAKC,GAAL,CAAShG,IAAT,CADA,SACkBqE,KADlB,SAC2B9E,MAAMiB,IAAN,CAAWC,GADtC,GAEAT,IAFA,SAEQqE,KAFR,SAEiB9E,MAAMiB,IAAN,CAAWE,IAFnC;AAGF,SAAK,0BAAL;AACE,aAAOV,OAAO,CAAP,GACA+F,KAAKC,GAAL,CAAShG,IAAT,CADA,SACkBT,MAAMuE,KAAN,CAAYO,KAAZ,CADlB,SACwC9E,MAAMiB,IAAN,CAAWC,GADnD,GAEAT,IAFA,SAEQT,MAAMuE,KAAN,CAAYO,KAAZ,CAFR,SAE8B9E,MAAMiB,IAAN,CAAWE,IAFhD;AAGF,SAAK,MAAL;AACE,kBAAUV,IAAV;AACF,SAAK,gBAAL;AACE,aAAOA,OAAO,CAAP,GAAc+F,KAAKC,GAAL,CAAShG,IAAT,CAAd,SAAgCT,MAAMiB,IAAN,CAAWC,GAA3C,GAAsDT,IAAtD,SAA8DT,MAAMiB,IAAN,CAAWE,IAAhF;AACF,SAAK,YAAL;AACA;AACE;AACA,aAAO,KAAG8D,YAAH,IAAqB,KAA5B;AAxHJ;AA0HD,CA9HD;;AAgIA;AACA;AACAnT,OAAOC,OAAP,GAAiBiO,KAAjB;;;;;;AC3ZA,IAAIhO,OAAO2C,MAAX,EAAmBC,QAAQC,GAAR,UAAmB/C,OAAOgD,EAA1B;AACnB;;;;;;AAMA,IAAMhC,SAASZ,QAAQ,eAAR,CAAf;AACA;;AAEA;AACA;AACA,IAAMwU,WAAW,IAAjB;;AAEA;AACA;AACA,IAAIC,QAAQ7T,OAAOoI,SAAP,CAAiBpJ,OAAOgD,EAAxB,CAAZ;AACA;AACA,IAAI8R,MAAM,EAAV;;AAEA;AACA;AACAD,MAAME,WAAN,GAAoB,aAAK;AACvB,MAAI,OAAOC,CAAP,KAAa,UAAjB,EAA6B,MAAM7O,MAAM,sCAAN,CAAN;AAC7B2O,MAAIhT,IAAJ,CAASkT,CAAT;AACD,CAHD;AAIA;AACAH,MAAMI,UAAN,GAAmB,YAAM;AACvB,MAAIC,MAAM,8CAAV;AACAJ,MAAIK,OAAJ,CAAY,aAAK;AACfD,kBAAYF,EAAEI,IAAd;AACD,GAFD;AAGAF,SAAO,IAAP;AACAA,SAAO,iCAAP;AACAA,SAAO,4BAAP;AACAA,SAAO,4BAAP;AACAA,SAAO,6BAAP;AACA,SAAOA,GAAP;AACD,CAXD;AAYA;AACA;;AAEAL,MAAMvL,IAAN,CAAW,OAAX,EAAoB,YAAM;AACxBuL,QAAME,WAAN,CAAkB,SAASM,MAAT,GAAkB;AAClC,WAAOR,MAAMI,UAAN,EAAP;AACD,GAFD;AAGAH,MAAIK,OAAJ,CAAY,aAAK;AACfjV,WAAO8U,EAAEI,IAAT,IAAiBJ,CAAjB;AACD,GAFD;AAGA,MAAIJ,QAAJ,EAAcC,MAAMS,oBAAN;AACf,CARD;AASA;AACAT,MAAMS,oBAAN,GAA6B,YAAM;AACjC,MAAIC,UAAUpS,SAASqS,cAAT,CAAwB,SAAxB,CAAd;AACA,MAAI,CAACD,OAAL,EAAc;AACZ;AACA;AACD;AACD,MAAIE,QAAQtS,SAASuS,aAAT,CAAuB,KAAvB,CAAZ;AACA,MAAIC,WAAWxS,SAASuS,aAAT,CAAuB,IAAvB,CAAf;AACAH,UAAQK,WAAR,CAAoBD,QAApB;AACAJ,UAAQK,WAAR,CAAoBH,KAApB;AACAE,WAASE,SAAT,GAAqB,qBAArB;AACAJ,QAAMI,SAAN,GAAkBhB,MAAMI,UAAN,EAAlB;AACD,CAZD;;AAcA;AACA;AACAjV,OAAOC,OAAP,GAAiB4U,KAAjB;;;;;;ACpEA;;;;;;;AAOA;AACA;AACA,IAAIiB,OAAO,EAAX;AACA;AACA,IAAMC,SAAS,iBAAf;AACA,IAAMC,UAAU,SAAhB;;AAEA;AACA;;AAEAF,KAAK5C,KAAL,GAAa,UAAU+C,GAAV,EAAe;AAC1B;AACA;AACA;AACA,SAAOF,OAAOG,IAAP,CAAYD,GAAZ,KAAoBD,QAAQE,IAAR,CAAaD,GAAb,CAA3B;AACD,CALD;AAMA;AACA;;AAEAH,KAAKK,OAAL,GAAe,UAAUF,GAAV,EAAe;AAC5B;AACA,SAAO,CAACF,OAAOG,IAAP,CAAYD,GAAZ,KAAoBD,QAAQE,IAAR,CAAaD,GAAb,CAArB,EAAwC,CAAxC,CAAP;AACD,CAHD;AAIA;AACA;;AAEAH,KAAKM,QAAL,GAAgB,UAAUH,GAAV,EAAe;AAC7B;AACA,SAAO,CAACF,OAAOG,IAAP,CAAYD,GAAZ,KAAoBD,QAAQE,IAAR,CAAaD,GAAb,CAArB,EAAwC,CAAxC,CAAP;AACD,CAHD;AAIA;AACA;;AAEAH,KAAKO,QAAL,GAAgB,UAAUJ,GAAV,EAAe;AAC7B,SAAOA,IAAIK,MAAJ,CAAW,CAAX,EAAcL,IAAIM,WAAJ,CAAgB,GAAhB,CAAd,CAAP;AACD,CAFD;;AAIA;AACA;AACAvW,OAAOC,OAAP,GAAiB6V,IAAjB;;;;;;AC9CA;;;;;;AAMA,IAAMU,UAAUpW,QAAQ,cAAR,CAAhB;;AAEA;AACA;AACA;AACA,IAAMqW,UACJ,OAAO1W,OAAP,KAAmB,WAAnB,IACAA,QAAQ2W,OADR,IAEA3W,QAAQ2W,OAAR,CAAgBtB,IAAhB,KAAyB,MAH3B;AAIA,IAAIuB,WAAWF,UACX,CADW,CACT;AADS,EAEX,CAFJ,C,CAEO;AACP;AACA;AACA,IAAI3N,UAAU,EAAd;;AAEA;AACA;AACA;;;AAGAA,QAAQE,GAAR,GAAc,YAAyC;AAAA,MAA/B4N,MAA+B,uEAAtB,EAAsB;AAAA,MAAlBC,KAAkB,uEAAVF,QAAU;;AACrD,MAAIG,MAAMF,OAAO7Q,MAAjB;AACA,MAAI0Q,OAAJ,EAAa,OAAOG,OAAOG,MAAP,CAAcF,KAAd,EAAqB,GAArB,IAA4B,GAAnC;AACb;AACA,MAAI,CAACA,KAAL,EAAY,OAAOD,SAAS,GAAhB;AACZ;AACA,MAAIE,OAAOD,KAAX,EAAkBD,SAASA,OAAON,MAAP,CAAc,CAAd,EAAiBO,QAAQ,CAAzB,CAAT,CAAlB,KACKD,OAAOG,MAAP,CAAcF,KAAd,EAAqB,GAArB;AACL,SAAOD,SAAS,GAAhB;AACD,CATD;AAUA;AACA;;AAEA9N,QAAQkO,KAAR,GAAgB,UAAUhM,KAAV,EAAiB;AAC/B,MAAIA,UAAUxF,SAAd,EAAyB,OAAO,GAAGuR,MAAH,CAAU/L,KAAV,EAAiB,GAAjB,CAAP;AACzB,SAAO,GAAG+L,MAAH,CAAUJ,QAAV,EAAoB,GAApB,CAAP;AACD,CAHD;AAIA;AACA;;AAEA7N,QAAQmO,YAAR,GAAuB,YAAY;AACjC,SAAOT,QAAQS,YAAR,CAAqB,CAArB,CAAP;AACD,CAFD;;AAIA;AACA;AACAjX,OAAOC,OAAP,GAAiB6I,OAAjB;;;;;;;;ACrDA;;;;;;AAMA,IAAMoO,aAAa9W,QAAQ,eAAR,CAAnB;AACA,IAAM0V,OAAO1V,QAAQ,QAAR,CAAb;;AAEA;AACA;AACA,IAAIoW,UAAU,EAAd;AACA;AACA;;;AAGAA,QAAQW,gBAAR,GAA2B,UAAUC,GAAV,EAAe;AACxC,MAAIC,gBAAgB,oBAApB;AACA,MAAInI,UAAUmI,cAAcnB,IAAd,CAAmBkB,IAAIE,WAAJ,CAAgB3E,QAAhB,EAAnB,CAAd;AACA,SAAOzD,WAAWA,QAAQnJ,MAAR,GAAiB,CAA5B,GAAgCmJ,QAAQ,CAAR,CAAhC,GAA6C,EAApD;AACD,CAJD;AAKA;AACA;;AAEAsH,QAAQS,YAAR,GAAuB,YAAqB;AAAA,MAAXM,KAAW,uEAAH,CAAG;;AAC1C,MAAIC,QAAQN,WAAWO,OAAX,EAAZ;AACA,MAAIC,QAAQF,MAAMD,KAAN,CAAZ;AACA,MAAI5R,KAAK+R,MAAMC,YAAf;AACA,MAAI,CAAChS,EAAL,EAAS;AACPA,SAAKmQ,KAAKM,QAAL,CAAcsB,MAAME,QAApB,CAAL;AACAjS,gBAAU+R,MAAMG,UAAhB,SAA8BH,MAAMI,YAApC;AACA,WAAOnS,EAAP;AACD,GAJD,MAIO;AACL,QAAIoS,OAAOpS,GAAGE,KAAH,CAAS,GAAT,CAAX;AACA,uBAAiBkS,KAAK,CAAL,CAAjB,4BAA+CA,KAAK,CAAL,CAA/C;AACD;AACF,CAZD;AAaA;AACA;;;;AAIAvB,QAAQwB,aAAR,GAAwB,UAAU/B,GAAV,EAAe;AACrC,QAAM9P,mFACuE8P,GADvE,CAAN;AAGD,CAJD;AAKA;AACA;;;;AAIAO,QAAQyB,aAAR,GAAwB,UAAUb,GAAV,EAAeG,KAAf,EAAsB;AAC5C,MAAI,CAACH,GAAL,EAAU,OAAO,uDAAP;AACV,MAAIlC,MAAM,EAAV;AACA;AACA,iBAAekC,GAAf,yCAAeA,GAAf;AACE,SAAK,QAAL;AACA,SAAK,UAAL;AACE;AACF;AACE,aAAO,+CAA8CA,GAA9C,yCAA8CA,GAA9C,EAAP;AALJ;AAOA;AACAG,UAAQA,SAAS,CAAjB;AACA,MAAIW,QAAQd,IAAIE,WAAJ,CAAgBlC,IAAhB,IAAwB,oBAApC;AACA,MAAI+C,SAAS,EAAb;AACA,OAAK,IAAIzR,IAAI,CAAb,EAAgBA,KAAK6Q,KAArB,EAA4B7Q,GAA5B;AAAiCyR,cAAU,IAAV;AAAjC,GACAjD,OAAOgD,QAAQ,IAAf;AACAhD,SAAO,IAAP;AACAA,SAAOkD,UAAUhB,GAAV,EAAeG,QAAQ,CAAvB,CAAP;AACA,MAAIc,QAAQC,QAAQC,cAAR,CAAuBnB,GAAvB,CAAZ;AACA,MAAIiB,KAAJ,EAAW;AACTnD,WAAO,OAAOiD,MAAP,GAAgB,YAAvB;AACAjD,WAAO,KAAK+C,aAAL,CAAmBI,KAAnB,EAA0Bd,QAAQ,CAAlC,CAAP;AACArC,WAAO,IAAP;AACD;AACD,MAAIqC,UAAU,CAAd,EAAiBrC,MAAM,OAAOA,GAAb;AACjBpS,UAAQC,GAAR,CAAYmS,GAAZ;AACA,SAAOkC,GAAP;AACD,CA5BD;;AA8BA;AACA;AACA;;;AAGA,SAASgB,SAAT,CAAmBhB,GAAnB,EAAwBG,KAAxB,EAA+B;AAC7B,MAAIY,SAAS,EAAb;AACA,OAAK,IAAIzR,IAAI,CAAb,EAAgBA,IAAI6Q,KAApB,EAA2B7Q,GAA3B;AAAgCyR,cAAU,IAAV;AAAhC,GAEA,IAAIlC,MAAM,EAAV;AACA/J,SAAOuH,IAAP,CAAY2D,GAAZ,EAAiBjC,OAAjB,CAAyB,UAAU7O,GAAV,EAAe;AACtC,QAAIkS,OAAOpB,IAAI9Q,GAAJ,CAAX;AACA,QAAIiO,cAAciE,IAAd,yCAAcA,IAAd,CAAJ;AACAvC,WAAOkC,MAAP;AACAlC,WAAO1B,OAAO,IAAP,GAAcjO,GAArB;AACA,YAAQiO,IAAR;AACE,WAAK,UAAL;AACE,YAAIkE,SAAS,uBAAb;AACA,YAAIC,OAAOD,OAAOvC,IAAP,CAAYsC,KAAK7F,QAAL,EAAZ,CAAX;AACAsD,eAAO,OAAOyC,KAAK,CAAL,CAAP,GAAiB,GAAxB;AACA;AACF;AACE;AAPJ;AASAzC,WAAO,IAAP;AACD,GAfD;AAgBA,SAAOA,GAAP;AACD;;AAED;AACA;AACA,IAAI,QAAO/V,MAAP,yCAAOA,MAAP,OAAkB,QAAtB,EAAgC;AAC9BA,SAAO8X,aAAP,GAAuBxB,QAAQwB,aAA/B;AACA9X,SAAO+X,aAAP,GAAuBzB,QAAQyB,aAA/B;AACA/X,SAAOyY,OAAP,GAAiB,UAAUC,GAAV,EAAeC,QAAf,EAAyB;AACxCrC,YAAQsC,GAAR,CAAYF,GAAZ,EAAiB,KAAjB,EAAwBC,QAAxB;AACD,GAFD;AAGA3Y,SAAO6Y,YAAP,GAAsB,UAAUH,GAAV,EAAeC,QAAf,EAAyB;AAC7CrC,YAAQsC,GAAR,CAAYF,GAAZ,EAAiB,IAAjB,EAAuBC,QAAvB;AACD,GAFD;AAGD;;AAED;AACA;AACA7Y,OAAOC,OAAP,GAAiBuW,OAAjB;;;;;;;;;;AC9HA,IAAItW,OAAO2C,MAAX,EAAmBC,QAAQC,GAAR,UAAmB/C,OAAOgD,EAA1B;AACnB;;;;;;AAMA,IAAIC,MAAM,KAAV;;AAEA;AACA;AACA;;AAEA,IAAI+V,QAAQ;AACVC,QAAM,KADI,EACG;AACb1X,SAAO,KAFG,EAEI;AACd2X,QAAM,KAHI,EAGG;AACbC,UAAQ,KAJE,EAIK;AACfC,OAAK,KALK,EAKE;AACZvR,UAAQ,KANE,CAMI;AANJ,CAAZ;AAQA;;AAEA,IAAIwR,SAAS,EAAb;AACA,IAAIC,UAAU,KAAd;AACA;;AAEA,IAAIC,YAAY,EAAhB;AACA,IAAIxQ,KAAK,OAAT;AACA,IAAIyQ,cAAc,EAAlB;;AAEA,IAAIjE,gBAAJ;AAAA,IAAaE,cAAb;AAAA,IAAoBE,iBAApB;AACA,IAAI8D,WAAW,EAAf;AACA,IAAIC,YAAY,EAAhB;AACA,IAAIC,WAAW,EAAf;;AAEA;AACA;;;AAGA,IAAIC,KAAK,SAALA,EAAK,CAACC,QAAD,EAAWC,IAAX,EAAoB;AAC3B,MAAID,aAAarU,SAAjB,EAA4B;AAC1B1C,YAAQwB,IAAR,CACKyE,EADL;AAIAuQ,cAAU,IAAV;AACA,WAAO,IAAP;AACD;AACD,MAAI,OAAOO,QAAP,KAAoB,QAAxB,EAAkC,MAAM,yBAAN;AAClC,MAAI,CAACb,MAAMa,QAAN,CAAL,EAAsB,YAAUA,QAAV;AACtB,MAAI5W,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,IAAhB,EAAsB8Q,QAAtB,EAAgCC,QAAQ,EAAxC;AACT,MAAIA,SAAStU,SAAb,EAAwB;AACtB,QAAI,CAAC8T,OAAL,EAAcxW,QAAQiX,KAAR,CAAiBhR,EAAjB;AACd,QAAIpC,UAAUqS,MAAMa,QAAN,CAAd;AACA,WAAOlT,OAAP;AACD,GAJD,MAIO;AACLqS,UAAMa,QAAN,IAAkBC,IAAlB;AACAE,yBAAqBH,QAArB,EAA+BC,IAA/B;AACA,WAAOA,IAAP;AACD;AACF,CArBD;AAsBA;AACAF,GAAGK,QAAH,GAAc,UAAU7F,IAAV,EAAgB;AAC5BuB,WAASuE,SAAT,GAAqB9F,IAArB;AACD,CAFD;AAGA;AACAwF,GAAGO,OAAH,GAAa,UAAUC,IAAV,EAAgBxT,KAAhB,EAAuB;AAClC,MAAI,OAAOwT,IAAP,KAAgB,QAApB,EAA8B;AAC5B,QAAIhD,MAAM,EAAV;AACAA,QAAIgD,IAAJ,IAAYxT,KAAZ;AACAwT,WAAOhD,GAAP;AACD;AACD,MAAI,QAAOgD,IAAP,yCAAOA,IAAP,OAAgB,QAApB,EAA8B;AAC5BlO,WAAOC,MAAP,CAAcqN,WAAd,EAA2BY,IAA3B;AACD,GAFD,MAEO;AACL,UAAMjU,MAAM,kDAAN,CAAN;AACD;AACF,CAXD;AAYA;AACAyT,GAAGS,UAAH,GAAgB,YAAY;AAC1B,MAAIC,IAAI,EAAR;AACApO,SAAOqO,OAAP,CAAef,WAAf,EAA4BrE,OAA5B,CAAoC,gBAAY;AAAA;AAAA,QAAVxB,CAAU;AAAA,QAAP6G,CAAO;;AAC9CF,SAAQ3G,CAAR,SAAa6G,CAAb;AACD,GAFD;AAGA,SAAOF,CAAP;AACD,CAND;AAOA;AACA;;AAEAV,GAAGa,IAAH,GAAU,UAAUC,OAAV,EAAmB;AAC3BC;AACA;AACA,MAAI1X,GAAJ,EAASH,QAAQC,GAAR,CAAegG,EAAf,kBAA8B2R,OAA9B,EAAyC,aAAzC,EAAwD,aAAxD;AACT,MAAIrB,OAAOqB,OAAP,CAAJ,EAAqB;AACnB,QAAIrB,OAAOqB,OAAP,CAAJ,EAAqB,EAAErB,OAAOqB,OAAP,CAAF,CAArB,KACKrB,OAAOqB,OAAP,IAAkB,CAAlB;AACN,GAHD,MAGO;AACL,UAAMvU,4BAA0BuU,OAA1B,CAAN;AACD;AACF,CAVD;AAWA;AACA;;AAEAd,GAAGgB,IAAH,GAAU,UAAUF,OAAV,EAAmB;AAC3BC;AACA,MAAI1X,GAAJ,EAASH,QAAQiX,KAAR,CAAiBhR,EAAjB,gBAA8B2R,OAA9B,EAAyC,4BAAzC;AACT,MAAIrB,OAAOqB,OAAP,CAAJ,EAAqB;AACnB;AACA;AACA,QAAIZ,OAAOT,OAAOqB,OAAP,CAAX;AACA,QAAI,OAAOZ,IAAP,KAAgB,QAApB,EAA8B;AAC5B;AACAT,aAAOqB,OAAP,IAAkBZ,OAAO,GAAzB;AACA;AACD;AACD,QAAIA,SAAS,IAAb,EAAmB,OATA,CASQ;AAC3B,QAAIA,SAAS,CAAb,EAAgB;AACdT,aAAOqB,OAAP,IAAkB,CAAC,CAAnB,CADc,CACQ;AACtB;AACD;AACD,QAAIZ,QAAQ,CAAZ,EAAe;AACb,QAAET,OAAOqB,OAAP,CAAF,CADa,CACM;AACnB;AACD;AACD;AACA,QAAIZ,OAAO,CAAX,EAAc;AACZT,aAAOqB,OAAP,mBAA+BZ,IAA/B;AACA;AACD;AACF;AACD,QAAM3T,4BAA0BuU,OAA1B,CAAN;AACD,CA5BD;AA6BA;AACA;;AAEAd,GAAGiB,MAAH,GAAY,YAAmB;AAC7B,MAAI5X,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,QAAhB;AACT,MAAI+R,SAAS,IAAb;;AAF6B,oCAANpC,IAAM;AAANA,QAAM;AAAA;;AAG7BA,OAAKvD,OAAL,CAAa,mBAAW;AACtB,QAAI,CAACkE,OAAOqB,OAAP,CAAL,EAAsB,YAAUA,OAAV;AACtBI,aAASA,UAAUzB,OAAOqB,OAAP,CAAnB;AACD,GAHD;AAIA,SAAOI,MAAP;AACD,CARD;AASA;AACA;;AAEAlB,GAAGmB,MAAH,GAAY,YAAY;AACtB,MAAI9X,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,QAAhB;AACT0Q,aAAW,EAAX;AACAC,cAAY,EAAZ;AACAC,aAAW,EAAX;AACAqB;AACAC;AACD,CAPD;AAQA;AACA;;AAEArB,GAAGsB,gBAAH,GAAsB,UAAUR,OAAV,EAAmBS,IAAnB,EAAyBC,IAAzB,EAA+B;AACnD,MAAInY,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,kBAAhB;AACTwQ,YAAUzX,IAAV,CAAe,CAAC4Y,OAAD,EAAUS,IAAV,EAAgBC,IAAhB,CAAf;AACD,CAHD;AAIA;AACA;;;AAGAxB,GAAGyB,SAAH,GAAe,YAAY;AACzB,SAAO5B,SAAS1T,MAAT,KAAoB,CAA3B;AACD,CAFD;;AAIA;AACA;AACA;;AAEA,SAASiU,oBAAT,CAA8BH,QAA9B,EAAwCC,IAAxC,EAA8C;AAC5C,MAAIA,SAAStU,SAAb,EAAwB,MAAM,oDAAN;AACxB;AACA;AACA,MAAIsU,SAAS,KAAb,EAAoBA,OAAO,IAAP;AACpB,MAAIA,SAAS,IAAb,EAAmBA,OAAO,KAAP;AACnB;AACA,MAAIwB,iBAAJ;AACA,UAAQzB,QAAR;AACE,SAAK,OAAL;AACEyB,iBAAW;AACTC,qBAAazB,IADJ;AAET0B,oBAAY1B,IAFH;AAGT2B,qBAAa3B;AAHJ,OAAX;AAKA;AACF,SAAK,MAAL;AACEwB,iBAAW;AACTI,mBAAW5B,IADF;AAET6B,mBAAW7B,IAFF;AAGT8B,0BAAkB9B,IAHT;AAIT+B,mBAAW/B;AAJF,OAAX;AAMA;AACF,SAAK,MAAL;AACEwB,iBAAW;AACTQ,sBAAchC,IADL;AAETiC,uBAAejC,IAFN;AAGTkC,2BAAmBlC,IAHV;AAITmC,wBAAgBnC,IAJP;AAKToC,qBAAapC,IALJ;AAMTqC,uBAAerC;AANN,OAAX;AAQA;AACF,SAAK,QAAL;AACEwB,iBAAW;AACTc,oBAAYtC,IADH;AAETuC,oBAAYvC,IAFH;AAGTwC,qBAAaxC,IAHJ;AAITyC,0BAAkBzC,IAJT;AAKT0C,uBAAe1C,IALN;AAMT2C,yBAAiB3C;AANR,OAAX;AAQA;AACF,SAAK,QAAL;AACEwB,iBAAW;AACToB,oBAAY5C,IADH;AAET6C,yBAAiB7C,IAFR;AAGT8C,sBAAc9C,IAHL;AAIT+C,oBAAY/C,IAJH;AAKTgD,uBAAehD;AALN,OAAX;AAOA;AACF,SAAK,KAAL;AACEwB,iBAAW;AACTyB,uBAAejD,IADN;AAETkD,sBAAclD,IAFL;AAGTmD,sBAAcnD,IAHL;AAIToD,uBAAe,CAJN,EAIS;AAClBC,mBAAWrD,IALF;AAMTsD,uBAAetD,IANN;AAOTuD,iBAASvD,IAPA;AAQTwD,uBAAexD,IARN;AASTyD,oBAAYzD,IATH;AAUT;AACA0D,sBAAc1D;AAXL,OAAX;AAaA;AACF;AACE,+BAAuBD,QAAvB;AA7DJ,GAR4C,CAsE1C;AACF3N,SAAOC,MAAP,CAAckN,MAAd,EAAsBiC,QAAtB;AACD;AACD;AACA,SAASN,SAAT,GAAqB;AACnB;AACAzB,YAAUpE,OAAV,CAAkB,UAAUsI,IAAV,EAAgB;AAChC,QAAIC,OAAO,IAAX;AACA,QAAIhD,UAAU+C,KAAK,CAAL,CAAd;AACA,QAAItC,OAAOsC,KAAK,CAAL,CAAX;AACA,QAAIrC,OAAOqC,KAAK,CAAL,CAAX;AACAC,WAAOA,QAAQvC,KAAKpV,MAAL,KAAgBqV,KAAKrV,MAApC;AACA,SAAK,IAAIW,IAAI,CAAb,EAAgBA,IAAIyU,KAAKpV,MAAzB,EAAiCW,GAAjC,EAAsC;AACpCgX,aAAOA,QAAQvC,KAAKzU,CAAL,MAAY0U,KAAK1U,CAAL,CAA3B;AACD;AACD,QAAIgX,IAAJ,EAAU9D,GAAGa,IAAH,CAAQC,OAAR;AACX,GAVD;AAWD;AACD;AACA;;AAEA,SAASO,aAAT,GAAyB;AACvB0C;AACA;AACA,MAAIC,WAAW1R,OAAOqO,OAAP,CAAelB,MAAf,CAAf;AACA,MAAI1W,UAAU,CAAd;AACA;AACAib,WAASzI,OAAT,CAAiB,iBAAW;AAAA;AAAA,QAAT7O,GAAS;;AAC1B,QAAIA,IAAIP,MAAJ,GAAapD,OAAjB,EAA0BA,UAAU2D,IAAIP,MAAd;AAC3B,GAFD;AAGA;AACA6X,WAASzI,OAAT,CAAiB,iBAAkB;AAAA;AAAA,QAAhB7O,GAAgB;AAAA,QAAXM,KAAW;;AACjC,QAAI0D,MAAM,EAAV;AACA,QAAI1D,UAAU,IAAd,EAAoB;AAClB;AACA8S,gBAAU5X,IAAV,CAAewI,GAAf;AACD,KAHD,MAIE,eAAe1D,KAAf,yCAAeA,KAAf;AACE,WAAK,QAAL;AACE,YAAIA,SAAS,CAAb,EAAgB;AACd,cAAIA,UAAU,CAAd,EAAiB0D,MAAShE,IAAIyQ,MAAJ,CAAWpU,OAAX,CAAT;AACjB,cAAIiE,QAAQ,CAAZ,EAAe0D,MAAShE,IAAIyQ,MAAJ,CAAWpU,OAAX,CAAT,gBAAuCiE,KAAvC;AACf+S,mBAAS7X,IAAT,CAAcwI,GAAd;AACD,SAJD,MAIO;AACL,cAAI1D,UAAU,CAAd,EAAiB;AACf0D,kBAAShE,IAAIyQ,MAAJ,CAAWpU,OAAX,CAAT;AACAgX,qBAAS7X,IAAT,CAAcwI,GAAd;AACD;AACD,cAAI1D,UAAU,CAAC,CAAf,EAAkB;AAChB0D,kBAAShE,IAAIyQ,MAAJ,CAAWpU,OAAX,CAAT;AACA8W,qBAAS3X,IAAT,CAAcwI,GAAd;AACD;AACD,cAAI1D,QAAQ,CAAC,CAAb,EAAgB;AACd0D,kBAAShE,IAAIyQ,MAAJ,CAAWpU,OAAX,CAAT,qBAA4C,CAACiE,KAA7C;AACA6S,qBAAS3X,IAAT,CAAcwI,GAAd;AACD;AACF;AACD;AACF,WAAK,SAAL;AACE,YAAI1D,KAAJ,EAAW;AACT0D,gBAAShE,IAAIyQ,MAAJ,CAAWpU,OAAX,CAAT;AACAgX,mBAAS7X,IAAT,CAAcwI,GAAd;AACD,SAHD,MAGO;AACLA,gBAAShE,IAAIyQ,MAAJ,CAAWpU,OAAX,CAAT;AACA8W,mBAAS3X,IAAT,CAAcwI,GAAd;AACD;AACD;AACF;AACEqP,iBAAS7X,IAAT,CAAiBwE,IAAIyQ,MAAJ,CAAWpU,OAAX,CAAjB,gBAA8CiE,KAA9C;AACA;AAhCJ,KAN+B,CAuC7B;AACL,GAxCD,EAVuB,CAkDnB;;AAEJ,MAAIiX,YAAY,2BAAhB;AACA/a,UAAQgb,KAAR,CAAcD,SAAd;AACA,MAAI3I,MAAMyE,SAASoE,MAAT,CAAgBtE,QAAhB,EAA0BC,SAA1B,EAAqCsE,IAArC,CAA0C,EAA1C,CAAV;;AAEA;AACA,MAAIC,SAAS,EAAb;AACA,MAAI,CAACrE,GAAGiB,MAAH,CAAU,cAAV,CAAL,EACEoD;AACF,MAAI,CAACrE,GAAGiB,MAAH,CAAU,cAAV,CAAL,EACEoD;AACF,MAAI,CAACrE,GAAGiB,MAAH,CAAU,SAAV,CAAL,EACEoD;AACF,MAAIA,MAAJ,EAAY/I,OAAO,OAAO+I,MAAd;;AAEZ;AACA,MAAIC,UAAavE,SAAS5T,MAAtB,YAAJ;AACA,MAAI0T,SAAS1T,MAAb,EAAqBmY,iBAAezE,SAAS1T,MAAxB;AACrB,MAAI2T,UAAU3T,MAAd,EAAsBmY,iBAAexE,UAAU3T,MAAzB;AACtBjD,UAAQC,GAAR,CAAemS,GAAf,UAAuBgJ,OAAvB;AACAtE,KAAGK,QAAH,CAAe4D,SAAf,SAA4BjE,GAAGS,UAAH,EAA5B;AACA5E,QAAMyE,SAAN,GAAqBgE,OAArB;AACAzI,QAAMyE,SAAN,IAAmB,0CAAnB;AACAzE,QAAMyE,SAAN,IAAmB,iCAAnB;AACAzE,QAAMyE,SAAN,IAAmB,4BAAnB;AACAzE,QAAMyE,SAAN,IAAmB,4BAAnB;AACAzE,QAAMyE,SAAN,IAAmB,6BAAnB;AACApX,UAAQc,QAAR;AACD;AACD;AACA;;;AAGA,SAAS+W,WAAT,GAAuB;AACrB,MAAI,CAAClF,KAAL,EAAY;AACVA,YAAQtS,SAASuS,aAAT,CAAuB,KAAvB,CAAR;AACAC,eAAWxS,SAASuS,aAAT,CAAuB,IAAvB,CAAX;AACAC,aAASuE,SAAT,GAAqB,gBAArB;AACAzE,UAAMyE,SAAN,GAAkB,GAAlB;AACD,GALD,MAKO;AACLzE,UAAMyE,SAAN,IAAmB,GAAnB;AACD;AACF;AACD;AACA;GACI,SAASyD,WAAT,GAAuB;AACzBpI,YAAUpS,SAASqS,cAAT,CAAwB,SAAxB,CAAV;AACAD,UAAQK,WAAR,CAAoBD,QAApB;AACAJ,UAAQK,WAAR,CAAoBH,KAApB;AACD;;AAED;AACA;AACAzV,OAAOC,OAAP,GAAiB2Z,EAAjB;;;;;;;;;;;;;;;;AClXA,IAAI1Z,OAAO2C,MAAX,EAAmBC,QAAQC,GAAR,UAAmB/C,OAAOgD,EAA1B;AACnB;;;;;;;;;;;;;;;;;;;AAmBA;AACA;;AAEA,IAAM/B,WAAWb,QAAQ,UAAR,CAAjB;AACA,IAAM+d,QAAQ/d,QAAQ,qBAAR,CAAd;AACA,IAAMge,WAAWhe,QAAQ,8BAAR,CAAjB;;AAEA;AACA;AACA,IAAM6C,MAAM,EAAEqJ,MAAM,KAAR,EAAe+R,QAAQ,KAAvB,EAA8BC,UAAU,KAAxC,EAAZ;AACA;AACA,IAAMC,YACJ,4FADF;AAEA,IAAMC,WAAW,iCAAjB;AACA,IAAMC,UAAU,2BAAhB;AACA,IAAMC,aAAa,mCAAnB;AACA,IAAMC,eACJ,+EADF;AAEA,IAAM5V,KAAK,QAAX;;AAEA;AACA;AACA,IAAI6V,QAAQ,IAAIC,GAAJ,EAAZ,C,CAAuB;AACvB,IAAIC,gBAAgB,GAApB,C,CAAyB;;AAEzB;AACA;AACA,IAAIC,WAAW,IAAIX,QAAJ,EAAf;;AAEA;AACA;AACA;;;;;;IAKMY,c;AACJ;;;;;;AAMA,0BAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAC1B,QAAIC,YAAY,OAAhB;AACA,QAAIC,YAAY,OAAhB;;AAEA,QAAIF,YAAY1Z,SAAZ,IAAyB,OAAO0Z,OAAP,KAAmB,QAAhD,EAA0D;AACxD,YAAM/Y,MAAMqY,QAAN,CAAN;AACD;;AAED;AACA,QAAI,QAAOS,KAAP,yCAAOA,KAAP,OAAiB,QAArB,EAA+B,MAAM9Y,MAAMoY,SAAN,CAAN;;AAE/B;AACA,QAAIU,MAAM7J,IAAV,EAAgB;AACd+J,kBAAY,KAAZ;AACAC,kBAAYH,MAAM7J,IAAN,IAAc8J,OAA1B;AACD,KAHD,MAGO,IAAID,MAAM3H,WAAN,CAAkBlC,IAAtB,EAA4B;AACjC+J,kBAAY,KAAZ;AACAC,kBAAYH,MAAM3H,WAAN,CAAkBlC,IAA9B;AACD,KAHM,MAGA;AACL,YAAMjP,MAAMoY,SAAN,CAAN;AACD;;AAED;AACA,SAAKc,GAAL,GAAcF,SAAd,SAA2BL,eAA3B;AACA,SAAK1J,IAAL,GAAYgK,SAAZ;AACA,QAAIR,MAAMU,GAAN,CAAU,KAAKD,GAAf,CAAJ,EAAyB,MAAMlZ,MAAMsY,UAAU,KAAKY,GAArB,CAAN;;AAEzB;AACAT,UAAMW,GAAN,CAAU,KAAKF,GAAf,EAAoB,IAApB;AACD;;AAED;AACA;AACA;;;;;0BACM;AACJ,aAAO,KAAKA,GAAZ;AACD;;;2BACM;AACL,aAAO,KAAKjK,IAAZ;AACD;;AAED;AACA;AACA;AACA;;;;6BACSoK,S,EAAW;AAClB,aAAOrB,MAAMsB,KAAN,CAAYD,SAAZ,CAAP;AACD;;;gCACWA,S,EAAWE,Q,EAAU;AAC/B;AACAvB,YAAMwB,QAAN,CAAeH,SAAf,EAA0BE,QAA1B,EAAoC,KAAKE,GAAL,EAApC;AACD;;;kCACaJ,S,EAAWE,Q,EAAU;AACjC;AACAvB,YAAM0B,UAAN,CAAiBL,SAAjB,EAA4BE,QAA5B,EAAsC,KAAKE,GAAL,EAAtC;AACD;;;mCACcJ,S,EAAWE,Q,EAAU;AAClC;AACAvB,YAAM2B,WAAN,CAAkBN,SAAlB,EAA6BE,QAA7B,EAAuC,KAAKE,GAAL,EAAvC;AACD;AACD;AACA;;;;qCACiBJ,S,EAAWO,Q,EAAU;AACpC5B,YAAM6B,aAAN,CAAoBR,SAApB,EAA+BO,QAA/B,EAAyC,KAAKH,GAAL,EAAzC;AACD;;;sCACiBJ,S,EAAWO,Q,EAAU;AACrC5B,YAAM8B,cAAN,CAAqBT,SAArB,EAAgCO,QAAhC;AACD;;AAED;AACA;AACA;AACA;;;;kCACcG,Q,EAAUH,Q,EAAU;AAChC;AACA;AACA,UAAI9c,IAAIqb,QAAR,EACExb,QAAQC,GAAR,CAAe,KAAKsc,GAApB,SAA2BtW,EAA3B,EAAoC,KAAKqM,IAAzC,wBAAgE8K,QAAhE;AACFnB,eAASrd,aAAT,CAAuBwe,QAAvB,EAAiCH,QAAjC,EAA2C,EAAEI,aAAa,KAAKP,GAAL,EAAf,EAA3C;AACD;AACD;;;;oCACgBM,Q,EAAUH,Q,EAAU;AAClC,UAAI9c,IAAIqb,QAAR,EACExb,QAAQC,GAAR,CAAe,KAAKsc,GAApB,SAA2BtW,EAA3B,EAAoC,KAAKqM,IAAzC,0BAAkE8K,QAAlE;AACFnB,eAASqB,eAAT,CAAyBF,QAAzB,EAAmCH,QAAnC;AACD;AACD;AACA;;;;;;;0FAGWG,Q;YAAUG,M,uEAAS,E;YAAItM,O,uEAAU,E;;;;;;AAC1CA,0BAAU7H,OAAOC,MAAP,CAAc4H,OAAd,EAAuB,EAAEQ,MAAM,OAAR,EAAvB,CAAV;AACA,oBAAItR,IAAIqJ,IAAR,EAAc;AACRN,wBADQ,GACC,EADD;;AAEZ,sBAAI,CAAC+H,QAAQuM,KAAb,EAAoBtU,UAAU,SAAV;AACpB,sBAAI,CAAC+H,QAAQwM,OAAb,EAAsBvU,UAAU,UAAV;AACtB,sBAAI,EAAE+H,QAAQwM,OAAR,IAAmBxM,QAAQuM,KAA7B,CAAJ,EAAyCtU,SAAS,qBAAT;AACzClJ,0BAAQC,GAAR,CAAe,KAAKsc,GAApB,SAA2BtW,EAA3B,EAAiC,wBAAjC,EAA2DmX,QAA3D,EAAqElU,MAArE;AACD;AACD;AACA;AACA+H,wBAAQyM,MAAR,GAAiB,KAAKZ,GAAL,EAAjB;AACIa,wB,GAAW1B,SAAS3U,IAAT,CAAc8V,QAAd,EAAwBG,MAAxB,EAAgCtM,OAAhC,C;AACf;;AACA,oBAAI9Q,IAAIqJ,IAAR,EAAcxJ,QAAQC,GAAR,CAAe,KAAKsc,GAApB,SAA2BtW,EAA3B,EAAiC,gBAAjC,EAAmD0X,QAAnD;;uBACOlc,QAAQmc,GAAR,CAAYD,QAAZ,C;;;AAAjBE,wB;;AACJ,oBAAI1d,IAAIqJ,IAAR,EAAcxJ,QAAQC,GAAR,CAAe,KAAKsc,GAApB,SAA2BtW,EAA3B,EAAiC,uBAAjC,EAA0DmX,QAA1D;AACd;AACIU,sB,GAAS1U,OAAOC,MAAP,gBAAc,EAAd,4BAAqBwU,QAArB,G;;AACb,oBAAI1d,IAAIob,MAAR,EACEvb,QAAQC,GAAR,CACK,KAAKsc,GADV,SACiBtW,EADjB,QAEMmX,QAFN,iBAGEvV,KAAKC,SAAL,CAAegW,MAAf,CAHF;iDAKKA,M;;;;;;;;;;;;;;;;AAET;AACA;;;;;;yBAGKV,Q,EAAqC;AAAA,UAA3BG,MAA2B,uEAAlB,EAAkB;AAAA,UAAdtM,OAAc,uEAAJ,EAAI;;AACxC,UAAI9Q,IAAIqJ,IAAR,EAAcxJ,QAAQC,GAAR,CAAe,KAAKsc,GAApB,SAA2BtW,EAA3B,EAAiC,kBAAjC,EAAqDmX,QAArD;AACdnM,gBAAU7H,OAAOC,MAAP,CAAc4H,OAAd,EAAuB,EAAEQ,MAAM,OAAR,EAAvB,CAAV;AACA;AACA;AACAR,cAAQyM,MAAR,GAAiB,KAAKZ,GAAL,EAAjB;AACA;AACA;AACAb,eAAS8B,IAAT,CAAcX,QAAd,EAAwBG,MAAxB,EAAgCtM,OAAhC;AACD;AACD;AACA;;;;;2BAEOmM,Q,EAAqC;AAAA,UAA3BG,MAA2B,uEAAlB,EAAkB;AAAA,UAAdtM,OAAc,uEAAJ,EAAI;;AAC1CA,gBAAU7H,OAAOC,MAAP,CAAc4H,OAAd,EAAuB,EAAEQ,MAAM,MAAR,EAAvB,CAAV;AACAwK,eAAS+B,MAAT,CAAgBZ,QAAhB,EAA0BG,MAA1B,EAAkCtM,OAAlC;AACD;AACD;AACA;;;;;8BAEUmM,Q,EAAUG,M,EAAsB;AAAA,UAAdtM,OAAc,uEAAJ,EAAI;;AACxCA,gBAAU7H,OAAOC,MAAP,CAAc4H,OAAd,EAAuB,EAAEQ,MAAM,OAAR,EAAvB,CAAV;AACAR,cAAQwM,OAAR,GAAkB,IAAlB;AACAxM,cAAQuM,KAAR,GAAgB,KAAhB;AACA,aAAO,KAAKlW,IAAL,CAAU8V,QAAV,EAAoBG,MAApB,EAA4BtM,OAA5B,CAAP;AACD;AACD;AACA;;;;;8BAEUmM,Q,EAAUG,M,EAAsB;AAAA,UAAdtM,OAAc,uEAAJ,EAAI;;AACxCA,gBAAU7H,OAAOC,MAAP,CAAc4H,OAAd,EAAuB,EAAEQ,MAAM,OAAR,EAAvB,CAAV;AACAR,cAAQwM,OAAR,GAAkB,IAAlB;AACAxM,cAAQuM,KAAR,GAAgB,KAAhB;AACA,WAAKO,IAAL,CAAUX,QAAV,EAAoBG,MAApB,EAA4BtM,OAA5B;AACD;AACD;AACA;;;;;gCAEYmM,Q,EAAUG,M,EAAsB;AAAA,UAAdtM,OAAc,uEAAJ,EAAI;;AAC1CA,gBAAU7H,OAAOC,MAAP,CAAc4H,OAAd,EAAuB,EAAEQ,MAAM,MAAR,EAAvB,CAAV;AACAR,cAAQwM,OAAR,GAAkB,IAAlB;AACAxM,cAAQuM,KAAR,GAAgB,KAAhB;AACA,WAAKQ,MAAL,CAAYZ,QAAZ,EAAsBG,MAAtB,EAA8BtM,OAA9B;AACD;AACD;AACA;;;;;4BAEQmM,Q,EAAUG,M,EAAsB;AAAA,UAAdtM,OAAc,uEAAJ,EAAI;;AACtCA,gBAAU7H,OAAOC,MAAP,CAAc4H,OAAd,EAAuB,EAAEQ,MAAM,OAAR,EAAvB,CAAV;AACAR,cAAQwM,OAAR,GAAkB,KAAlB;AACAxM,cAAQuM,KAAR,GAAgB,IAAhB;AACA,aAAO,KAAKlW,IAAL,CAAU8V,QAAV,EAAoBG,MAApB,EAA4BtM,OAA5B,CAAP;AACD;AACD;AACA;;;;;4BAEQmM,Q,EAAUG,M,EAAsB;AAAA,UAAdtM,OAAc,uEAAJ,EAAI;;AACtCA,gBAAU7H,OAAOC,MAAP,CAAc4H,OAAd,EAAuB,EAAEQ,MAAM,OAAR,EAAvB,CAAV;AACAR,cAAQwM,OAAR,GAAkB,KAAlB;AACAxM,cAAQuM,KAAR,GAAgB,IAAhB;AACA,WAAKO,IAAL,CAAUX,QAAV,EAAoBG,MAApB,EAA4BtM,OAA5B;AACD;AACD;AACA;;;;;8BAEUmM,Q,EAAUG,M,EAAsB;AAAA,UAAdtM,OAAc,uEAAJ,EAAI;;AACxCA,cAAQwM,OAAR,GAAkB,KAAlB;AACAxM,cAAQuM,KAAR,GAAgB,IAAhB;AACA,WAAKQ,MAAL,CAAYZ,QAAZ,EAAsBG,MAAtB,EAA8BtM,OAA9B;AACD;AACD;;;;mCACe;AACb,UAAI9Q,IAAIqJ,IAAR,EAAcxJ,QAAQC,GAAR,CAAe,KAAKsc,GAApB,SAA2BtW,EAA3B,EAAiC,eAAjC,EAAkD,KAAK6W,GAAL,EAAlD;AACf;;;;KACD;;AAEF;AACA;AACA;;;;;AAGAZ,eAAe+B,YAAf,GAA8B,YAAY;AACxC,SAAOhC,SAASgC,YAAT,EAAP;AACD,CAFD;AAGA;AACA;;AAEA/B,eAAegC,oBAAf,GAAsC,YAAqB;AAAA,MAAXC,IAAW,uEAAJ,EAAI;;AACzD,MAAIC,QAAQ,EAAZ;AACAD,OAAK9L,OAAL,CAAa,gBAAQ;AACnB,QAAI4J,SAASoC,cAAT,CAAwB/L,IAAxB,CAAJ,EAAmC8L,MAAMpf,IAAN,CAAWsT,IAAX,EAAnC,KACK,MAAM,IAAIjP,KAAJ,qDAA2DiP,IAA3D,QAAN;AACN,GAHD;AAIA,SAAO8L,KAAP;AACD,CAPD;;AASA;AACA;AACAlhB,OAAOC,OAAP,GAAiB+e,cAAjB;;;;;;;;AC1RA,IAAI9e,OAAO2C,MAAX,EAAmBC,QAAQC,GAAR,UAAmB/C,OAAOgD,EAA1B;AACnB;;;;;;AAMA;AACA;;AAEA,IAAM8S,OAAO1V,QAAQ,kBAAR,CAAb;;AAEA;AACA;AACA,IAAM6C,MAAM/C,OAAO2C,MAAP,IAAiB3C,OAAO2C,MAAP,CAAcue,SAA3C;AACA,IAAMC,WAAW,kEAAjB;AACA;AACA,IAAIC,cAAc,IAAIzC,GAAJ,EAAlB,C,CAA6B;AAC7B;AACA,IAAM0C,SAAS,CACb,WADa,EACA;AACb,YAFa,EAEC;AACd,YAHa,EAGC;AACd,WAJa,EAIA;AACb,WALa,EAKA;AACb,OANa,EAMJ;AACT,OAPa,EAOJ;AACT,WARa,EAQA;AACb,KATa,EASN;AACP,QAVa,EAUH;AACV,UAXa,EAWD;AACZ,OAZa,EAYJ;AACT,WAba,EAaA;AACb,MAda,EAcL;AACR,YAfa,EAeC;AACd,WAhBa,EAgBA;AACb,cAjBa,EAiBG;AAChB,UAlBa,CAkBF;AAlBE,CAAf;AAoBA;AACA,IAAIC,QAAQD,OAAO,CAAP,IAAY,UAAxB,C,CAAoC;;AAEpC;AACA;AACA,IAAIlc,MAAM;AACR+P,QAAM,WADE;AAERhR,SAAO,gBAFC,CAEgB;AAFhB,CAAV;AAIA;AACA;;;;AAIA,SAASqd,oBAAT,CAA8BC,KAA9B,EAAqCpH,CAArC,EAAwC;AACtC;AACA,MAAIA,EAAElW,KAAF,CAAQud,OAAR,CAAgB,QAAhB,MAA8B,CAAlC,EAAqC,OAAOrH,EAAEtF,CAAF,EAAP;AACrC,MAAIsF,EAAElW,KAAF,CAAQud,OAAR,CAAgB,QAAhB,MAA8B,CAAlC,EAAqC,OAAOrH,EAAEtF,CAAF,EAAP;AACrC;AACA,MAAIsF,EAAElW,KAAF,CAAQkQ,QAAR,CAAiBjP,IAAIjB,KAArB,EAA4B,CAA5B,CAAJ,EAAoC,OAAOkW,EAAEtF,CAAF,EAAP;AACpC;AACA,MAAI/R,GAAJ,EACEH,QAAQ8e,IAAR,2BAC0BF,KAD1B,cACwCpH,EAAElW,KAD1C,0BACoEiB,IAAIjB,KADxE;AAGF,SAAOoB,SAAP;AACD;;AAED;AACA;AACA;;;;AAIAH,IAAIiE,IAAJ,GAAW,UAACoY,KAAD,EAAQ1M,CAAR,EAAW5Q,KAAX,EAAqB;AAC9B;AACA,MAAI,OAAOA,KAAP,KAAiB,QAArB,EACE,MAAM+B,oDAAN;AACF;AACA,MAAI,OAAOub,KAAP,KAAiB,QAArB,EACE,MAAMvb,MAAM,8CAAN,CAAN;AACF,MAAI,CAACob,OAAOjN,QAAP,CAAgBoN,KAAhB,CAAL,EACE,MAAMvb,MAAMub,KAAN,EAAa,qCAAb,CAAN;AACF;AACA,MAAI,EAAE1M,aAAa6M,QAAf,CAAJ,EACE,MAAM1b,MAAM,wDAAN,CAAN;;AAEF;AACA;AACA,MAAI,CAACmb,YAAYhC,GAAZ,CAAgBoC,KAAhB,CAAL,EAA6BJ,YAAY/B,GAAZ,CAAgBmC,KAAhB,EAAuB,EAAvB;AAC7BJ,cAAYQ,GAAZ,CAAgBJ,KAAhB,EAAuB5f,IAAvB,CAA4B,EAAEkT,IAAF,EAAK5Q,YAAL,EAA5B;AACA,MAAInB,GAAJ,EAASH,QAAQC,GAAR,OAAgB2e,KAAhB;AACV,CAlBD;;AAoBA;AACA;;;;;AAKArc,IAAI0c,OAAJ;AAAA,qEAAc,iBAAML,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAERrc,IAAIjB,KAAJ,KAAc,KAFN;AAAA;AAAA;AAAA;;AAAA,kBAGJ+B,8EAHI;;AAAA;AAAA,gBAQPob,OAAOjN,QAAP,CAAgBoN,KAAhB,CARO;AAAA;AAAA;AAAA;;AAAA,kBASJvb,MAASub,KAAT,0CATI;;AAAA;AAURM,iBAVQ,GAUAV,YAAYQ,GAAZ,CAAgBJ,KAAhB,CAVA;;AAAA,kBAWRM,UAAUxc,SAXF;AAAA;AAAA;AAAA;;AAYV,gBAAIvC,GAAJ,EAASH,QAAQC,GAAR,OAAgB2e,KAAhB;AAZC;;AAAA;;AAgBZ;AACAF,oBAAQE,QAAQ,UAAhB;;AAEA;AACIO,kBApBQ,GAoBC,CApBD;;AAqBZ,gBAAIhf,GAAJ,EAASH,QAAQgb,KAAR,CAAc4D,KAAd;AACT;AACA;AACIjB,oBAxBQ,GAwBGuB,MAAMtO,GAAN,CAAU,aAAK;AAC5B,kBAAIwO,SAAST,qBAAqBC,KAArB,EAA4BpH,CAA5B,CAAb;AACA,kBAAI4H,kBAAkB3d,OAAtB,EAA+B;AAC7B0d;AACA,uBAAOC,MAAP;AACD;AACD;AACA,qBAAO1c,SAAP;AACD,aARc,CAxBH;;AAiCZib,uBAAWA,SAAS0B,MAAT,CAAgB,aAAK;AAC9B,qBAAOvd,MAAMY,SAAb;AACD,aAFU,CAAX;AAGA,gBAAIvC,OAAO+e,MAAMjc,MAAjB,EACEjD,QAAQC,GAAR,OAAgB2e,KAAhB,+BAA+CM,MAAMjc,MAArD;AACF,gBAAI9C,OAAOgf,MAAX,EAAmBnf,QAAQC,GAAR,OAAgB2e,KAAhB,+BAA+CO,MAA/C;;AAEnB;AAxCY;AAAA,mBAyCN1d,QAAQmc,GAAR,CAAYD,QAAZ,EACHpW,IADG,CACE,kBAAU;AACd,kBAAIpH,OAAOmf,OAAOrc,MAAlB,EACEjD,QAAQC,GAAR,OAAgB2e,KAAhB,+BAA+CU,OAAOrc,MAAtD,EAAgEqc,MAAhE;AACF,kBAAInf,GAAJ,EAASH,QAAQc,QAAR;AACT,qBAAOwe,MAAP;AACD,aANG,EAOHC,KAPG,CAOG,eAAO;AACZ,kBAAIpf,GAAJ,EAASH,QAAQC,GAAR,OAAgB2e,KAAhB,uBAAuCY,GAAvC;AACT,oBAAMnc,YAAUub,KAAV,uBAAiCY,GAAjC,CAAN;AACD,aAVG,CAzCM;;AAAA;;AAqDZ;AACAd,oBAAQE,KAAR;;AAtDY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA;;AAyDA;AACA;;;AAGArc,IAAIhB,QAAJ,GAAe,uBAAe;AAC5B,MAAI,OAAOke,WAAP,KAAuB,QAA3B,EAAqC,MAAMpc,MAAMkb,QAAN,CAAN;AACrC,MAAIpe,GAAJ,EAASH,QAAQC,GAAR,iCAA0Cwf,WAA1C;AACT;AACAld,MAAIjB,KAAJ,GAAY0R,KAAKK,OAAL,CAAaoM,WAAb,CAAZ;AACD,CALD;AAMA;AACA;;AAEAld,IAAImd,KAAJ,GAAY,YAAM;AAChB,SAAOnd,IAAIjB,KAAX;AACD,CAFD;;AAIA;AACA;AACA;;AAEA;AACA;AACApE,OAAOC,OAAP,GAAiBoF,GAAjB;;;;;;;;;;ACnLA,IAAInF,OAAO2C,MAAX,EAAmBC,QAAQC,GAAR,UAAmB/C,OAAOgD,EAA1B;AACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;;AAEA,IAAMyf,OAAOriB,QAAQ,MAAR,CAAb;AACA,IAAM6I,aAAa7I,QAAQ,gCAAR,CAAnB;;AAEA;AACA;AACA,IAAIsiB,eAAe,CAAnB;AACA,IAAIzf,MAAM,KAAV;;AAEA;AACA;;IACMmb,Q;AACJ;;;;AAIA,sBAAc;AAAA;;AACZ,SAAKuE,UAAL,GAAkB,IAAI9D,GAAJ,EAAlB,CADY,CACiB;AAC7B,SAAK+D,WAAL,GAAmB,EAAEF,YAArB;AACD;;AAED;AACA;AACA;;;;;;;;kCAIcxC,Q,EAAU2C,W,EAA2B;AAAA,UAAd9O,OAAc,uEAAJ,EAAI;AAAA,UAC3C+O,UAD2C,GAC5B/O,OAD4B,CAC3C+O,UAD2C;AAAA,UAE3CC,MAF2C,GAEhChP,OAFgC,CAE3CgP,MAF2C;;AAGjD,UAAI,OAAOF,WAAP,KAAuB,UAA3B,EAAuC;AACrC,cAAM,yBAAN;AACD;AACD,UAAI,OAAOC,UAAP,KAAsB,QAA1B,EAAoC;AAClC;AACA;AACAD,oBAAYG,QAAZ,GAAuBF,UAAvB;AACD;AACD,UAAIG,WAAW,KAAKN,UAAL,CAAgBb,GAAhB,CAAoB5B,QAApB,CAAf;AACA,UAAI,CAAC+C,QAAL,EAAe;AACbA,mBAAW,IAAIhc,GAAJ,EAAX;AACA,aAAK0b,UAAL,CAAgBpD,GAAhB,CAAoBW,QAApB,EAA8B+C,QAA9B;AACD;AACD;AACA,UAAIF,MAAJ,EAAYF,YAAYK,KAAZ,GAAoB,EAAEH,cAAF,EAApB;AACZ;AACAE,eAASE,GAAT,CAAaN,WAAb;AACA,aAAO,IAAP;AACD;AACD;AACA;;;;;oCAEgB3C,Q,EAAU2C,W,EAAa;AACrC,UAAI,CAACO,UAAUrd,MAAf,EAAuB;AACrB,aAAK4c,UAAL,CAAgBU,KAAhB;AACD,OAFD,MAEO,IAAID,UAAUrd,MAAV,KAAqB,CAAzB,EAA4B;AACjC,aAAK4c,UAAL,CAAgBW,MAAhB,CAAuBpD,QAAvB;AACD,OAFM,MAEA;AACL,YAAM+C,WAAW,KAAKN,UAAL,CAAgBb,GAAhB,CAAoB5B,QAApB,CAAjB;AACA,YAAI+C,QAAJ,EAAc;AACZA,mBAASK,MAAT,CAAgBT,WAAhB;AACD;AACF;AACD,aAAO,IAAP;AACD;AACD;AACA;;;;;;;;;yBAMK3C,Q,EAAUG,M,EAAsB;AAAA,UAAdtM,OAAc,uEAAJ,EAAI;AAAA,UAC7ByM,MAD6B,GACZzM,OADY,CAC7ByM,MAD6B;AAAA,UACrBjM,IADqB,GACZR,OADY,CACrBQ,IADqB;AAAA,6BAEIR,OAFJ,CAE7BwM,OAF6B;AAAA,UAE7BA,OAF6B,oCAEnB,IAFmB;AAAA,2BAEIxM,OAFJ,CAEbuM,KAFa;AAAA,UAEbA,KAFa,kCAEL,IAFK;;AAGnC,UAAM2C,WAAW,KAAKN,UAAL,CAAgBb,GAAhB,CAAoB5B,QAApB,CAAjB;AACA;AACA,UAAI+C,YAAY1C,OAAhB;AAAA;AAAA;AAAA;;AAAA;AACE,+BAAwB0C,QAAxB,8HAAkC;AAAA,gBAAzBJ,WAAyB;;AAChC;AACA;AACA;AACA,gBAAIrC,UAAUqC,YAAYG,QAAZ,KAAyBxC,MAAvC,EAA+C;AAC7C,kBAAIvd,GAAJ,EACEH,QAAQwB,IAAR,qBACoB4b,QADpB;AAGF;AACD;AACD;AACA2C,wBAAYxC,MAAZ,EAAoB;AAClB;AADkB,aAApB;AAGD;AAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALmC,CAqB/B;AACJ;AACA,UAAIC,KAAJ,EAAW;AACT,YAAIiD,MAAM,IAAIta,UAAJ,CAAeiX,QAAf,EAAyBG,MAAzB,EAAiC9L,IAAjC,CAAV;AACAgP,YAAIC,UAAJ;AACD,OA1BkC,CA0BjC;AACH;AACD;AACA;;;;;;2BAGOtD,Q,EAAUte,I,EAAoB;AAAA,UAAdmS,OAAc,uEAAJ,EAAI;;AACnC,UAAIA,QAAQyM,MAAZ,EAAoB;AAClB1d,gBAAQwB,IAAR,wBACuByP,QAAQyM,MAD/B;AAGAzM,gBAAQyM,MAAR,GAAiB,IAAjB;AACD;AACD,WAAKK,IAAL,CAAUX,QAAV,EAAoBte,IAApB,EAA0BmS,OAA1B;AACD;AACD;AACA;;;;;yBAEKmM,Q,EAAUG,M,EAAsB;AAAA,UAAdtM,OAAc,uEAAJ,EAAI;AAAA,UAC7ByM,MAD6B,GACZzM,OADY,CAC7ByM,MAD6B;AAAA,UACrBjM,IADqB,GACZR,OADY,CACrBQ,IADqB;AAAA,8BAEIR,OAFJ,CAE7BwM,OAF6B;AAAA,UAE7BA,OAF6B,qCAEnB,IAFmB;AAAA,4BAEIxM,OAFJ,CAEbuM,KAFa;AAAA,UAEbA,KAFa,mCAEL,IAFK;;AAGnC,UAAM2C,WAAW,KAAKN,UAAL,CAAgBb,GAAhB,CAAoB5B,QAApB,CAAjB;AACA,UAAIO,WAAW,EAAf;AACA;AACA,UAAIwC,YAAY1C,OAAhB,EAAyB;AAAA;AAAA;AAAA;;AAAA;AACvB,gCAAwB0C,QAAxB,mIAAkC;AAAA,gBAAzBJ,WAAyB;;AAChC;AACA;AACA;AACA,gBAAIrC,UAAUqC,YAAYG,QAAZ,KAAyBxC,MAAvC,EAA+C;AAC7C,kBAAIvd,GAAJ,EACEH,QAAQwB,IAAR,qBACoB4b,QADpB;AAGF;AACD;AACD;AACA,gBAAIuD,IAAIC,uBAAuBb,WAAvB,EAAoCxC,MAApC,CAAR;AACAI,qBAAS3e,IAAT,CAAc2hB,CAAd;AACD,WAfsB,CAerB;AAfqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBxB;AACD;AACA;AACA;AACA,eAASC,sBAAT,CAAgCb,WAAhC,EAA6C;AAC3C,eAAO,IAAIte,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,cAAIyd,SAASW,YAAYxC,MAAZ,EAAoB;AAC/B;AAD+B,WAApB,CAAb;AAGA7b,kBAAQ0d,MAAR;AACD,SALM,CAAP;AAMD;AACD;AACA,UAAI5B,KAAJ,EAAW;AACT/L,eAAOA,QAAQ,OAAf;AACA,YAAIgP,MAAM,IAAIta,UAAJ,CAAeiX,QAAf,EAAyBG,MAAzB,EAAiC9L,IAAjC,CAAV;AACA,YAAIkP,KAAIF,IAAII,gBAAJ,EAAR;AACAlD,iBAAS3e,IAAT,CAAc2hB,EAAd;AACD,OAxCkC,CAwCjC;;AAEF;AACA,aAAOhD,QAAP;AACD;;AAED;AACA;;;;;mCAEe;AACb,UAAIwC,WAAW,EAAf;AACA,WAAKN,UAAL,CAAgBxN,OAAhB,CAAwB,UAACvO,KAAD,EAAQN,GAAR,EAAgB;AACtC2c,iBAASnhB,IAAT,CAAcwE,GAAd;AACA,YAAIrD,GAAJ,EAASH,QAAQC,GAAR,CAAY,cAAcuD,GAA1B;AACV,OAHD;AAIA,aAAO2c,QAAP;AACD;AACD;AACA;;;;;qCAEyB;AAAA,UAAVrK,GAAU,uEAAJ,EAAI;;AACvB,aAAO,KAAK+J,UAAL,CAAgBrD,GAAhB,CAAoB1G,GAApB,CAAP;AACD;;;;KACD;;AAEF;AACA;;;AACA5Y,OAAOC,OAAP,GAAiBme,QAAjB;;;;;;;;;;AChOA,IAAIle,OAAO2C,MAAX,EAAmBC,QAAQC,GAAR,UAAmB/C,OAAOgD,EAA1B;AACnB;;;;;;;;;;AAUA,IAAM4gB,YAAYxjB,QAAQ,yBAAR,CAAlB;AACA,IAAM0V,OAAO1V,QAAQ,kBAAR,CAAb;;AAEA;AACA;AACA,IAAMoe,WAAW,kDAAjB;AACA,IAAMqF,aAAa,qBAAnB;;AAEA;AACA;AACA,IAAIC,UAAU,IAAIjF,GAAJ,EAAd,C,CAAyB;AACzB,IAAIkF,kBAAkB,CAAtB,C,CAAyB;;AAEzB;AACA;AACA;;;;;IAIMC,Y;AACJ;AACA;;;AAGA,wBAAYhkB,MAAZ,EAAoB;AAAA;;AAClB,QAAIA,WAAWwF,SAAf,EAA0B,MAAMW,MAAMqY,QAAN,CAAN;AAC1B;AACA,QAAIxe,kBAAkBgkB,YAAtB,EAAoC;AAClC,WAAKC,SAAL,GAAiBjkB,OAAOkkB,QAAP,EAAjB;AACD,KAFD,MAEO,IAAI,OAAOlkB,MAAP,KAAkB,QAAtB,EAAgC;AACrC;AACA,WAAKikB,SAAL,GAAiBjkB,MAAjB;AACD;AACD,QAAI8jB,QAAQxE,GAAR,CAAY,KAAKlK,IAAjB,CAAJ,EAA4B,MAAMjP,MAAM0d,UAAN,CAAN;;AAE5B;AACA,SAAKxE,GAAL,aAAmB0E,iBAAnB;;AAEA;AACA,SAAKI,cAAL,GAAsB,CAAtB;;AAEA;AACAL,YAAQvE,GAAR,CAAY,KAAK0E,SAAjB,EAA4B,IAA5B;AACD;;AAED;AACA;AACA;;;;;;+BAEW;AACT,aAAO,KAAKA,SAAZ;AACD;AACD;;;;;iCAEa;AACX,aAAOnO,KAAKM,QAAL,CAAc,KAAK6N,SAAnB,CAAP;AACD;;AAED;AACA;AACA;;;;;+BAEW;AACT,aAAU,KAAKA,SAAf,SAA4B,KAAKE,cAAL,EAA5B;AACD;AACD;;;;;8BAEU/O,I,EAAM;AACd,aAAO0O,QAAQxE,GAAR,CAAYlK,IAAZ,CAAP;AACD;;AAED;AACA;AACA;;;;;yBAEKsM,K,EAAO1M,C,EAAG;AACb4O,gBAAUta,IAAV,CAAeoY,KAAf,EAAsB1M,CAAtB,EAAyB,KAAKoP,QAAL,EAAzB;AACD;;;;KACD;;AAEF;AACA;;;AACApkB,OAAOC,OAAP,GAAiB+jB,YAAjB;;;;;;AC7FA,IAAI9jB,OAAO2C,MAAX,EAAmBC,QAAQC,GAAR,UAAmB/C,OAAOgD,EAA1B;AACnB;;;;;;;AAOA;AACA;;AAEA,IAAM/B,WAAWb,QAAQ,UAAR,CAAjB;AACA,IAAM6I,aAAa7I,QAAQ,gCAAR,CAAnB;AACA,IAAMikB,OAAOjkB,QAAQ,eAAR,CAAb;AACA,IAAM0I,UAAU1I,QAAQ,qBAAR,CAAhB;;AAEA;AACA;AACA,IAAM6C,MAAM,EAAEqhB,SAAS,IAAX,EAAiBC,QAAQ,KAAzB,EAAZ;AACA,IAAMxb,KAAKD,QAAQE,GAAR,CAAY,SAAZ,CAAX;AACA;AACA,IAAMwb,OAAO1b,QAAQE,GAAR,CAAY,KAAZ,CAAb;AACA,IAAMyb,aAAa,kCAAnB;AACA,IAAMC,gBAAgB,6CAAtB;AACA,IAAMC,gBAAgB,oDAAtB;;AAEA;AACA;AACA,IAAIC,UAAU3jB,SAASyG,OAAT,CAAiB,QAAjB,CAAd;AACA,IAAImd,YAAY5jB,SAASyG,OAAT,CAAiB,QAAjB,CAAhB;AACA,IAAIod,YAAY7jB,SAASyG,OAAT,CAAiB,QAAjB,CAAhB;;AAEA;AACA;AACA,IAAMqd,UAAU,CAAhB;AACA,IAAMC,gBAAgB,CAAtB;AACA,IAAMC,eAAe,CAArB;AACA,IAAMC,gBAAgB,CAAtB;AACA,IAAMC,WAAW,CAAjB;AACA,IAAMC,eAAe,CAArB;AACA,IAAMC,cAAc,CAApB;AACA,IAAIC,WAAWP,OAAf;AACA,IAAIQ,YAAY,EAAhB;;AAEA;AACA,IAAIC,gBAAJ;;AAEA;AACA;AACA,IAAIC,UAAU,EAAd;AACA,IAAI1hB,QAAQ,IAAZ,C,CAAkB;;AAElB;AACA;AACA;;;;AAIA0hB,QAAQC,OAAR,GAAkB,UAAUC,QAAV,EAAoBC,GAApB,EAAyB;AACzC;AACA;AACA,MAAI1lB,OAAO6E,SAAP,CAAiB8C,MAAjB,CAAwBG,EAAxB,KAA+B,YAAnC,EAAiD;AAC/Csd,eAAWF,YAAX;AACAtiB,YAAQwB,IAAR,CAAayE,EAAb,EAAiB,gDAAjB;AACAE,eAAW4c,iBAAX;AACA,QAAI,OAAOD,IAAIE,OAAX,KAAuB,UAA3B,EAAuCF,IAAIE,OAAJ;AACvC;AACD;AACD;AACA;AACA;AACA,MAAIR,WAAW,CAAf,EAAkB;AAChB,QAAIhD,MAAM,uEAAV;AACAxf,YAAQiX,KAAR,CAAcyK,IAAd,EAAoBlC,GAApB;AACA;AACD;AACDgD,aAAWN,aAAX;;AAEA;AACA,MAAIW,SAASrO,WAAT,CAAqBlC,IAArB,KAA8B,gBAAlC,EAAoD;AAClD,UAAMjP,MAAMwe,aAAN,CAAN;AACD;AACD,MAAI,CAAC5gB,KAAL,EAAYA,QAAQ4hB,QAAR;AACZJ,cAAYK,OAAO,EAAnB;;AAEA;AACA;AACA,MAAIG,kBAAgBnB,QAAQoB,KAAxB,SAAiCpB,QAAQqB,KAA7C;AACArB,UAAQsB,EAAR,GAAa,IAAIC,SAAJ,CAAcJ,KAAd,CAAb;AACA,MAAI9iB,IAAIqhB,OAAR,EAAiBxhB,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,gBAAhB,EAAkCgd,KAAlC;;AAEjB;AACAN,UAAQW,WAAR,CAAoB,MAApB,EAA4B,UAAUtiB,KAAV,EAAiB;AAC3C,QAAIb,IAAIqhB,OAAR,EAAiBxhB,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,QAAhB,EAA0BjF,MAAMiI,MAAN,CAAa5H,GAAvC;AACjBmhB,eAAWL,YAAX;AACA;AACA;AACD,GALD;AAMAQ,UAAQW,WAAR,CAAoB,OAApB,EAA6B,UAAUtiB,KAAV,EAAiB;AAC5C,QAAIb,IAAIqhB,OAAR,EAAiBxhB,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,SAAhB,EAA2BjF,MAAMiI,MAAN,CAAa5H,GAAxC;AACjB8E,eAAW4c,iBAAX;AACAP,eAAWF,YAAX;AACD,GAJD;AAKA;AACAK,UAAQW,WAAR,CAAoB,OAApB,EAA6B,UAAUtiB,KAAV,EAAiB;AAC5C;;;AAGA,QAAIuiB,WAAWnmB,OAAOomB,gBAAtB;AACA,YAAQD,SAASra,MAAjB;AACE,WAAKqa,SAASE,QAAd;AACE;AACAzjB,gBAAQwB,IAAR,CAAakgB,IAAb,EAAmB,8BAAnB,EAAmD1gB,KAAnD;AACA,cAAMqC,MAAM,2BAAN,CAAN;AACF,WAAKkgB,SAASG,IAAd,CALF,CAKsB;AACpB,WAAKH,SAASI,QAAd,CANF,CAM0B;AACxB,WAAKJ,SAASK,WAAd,CAPF,CAO6B;AAC3B,WAAKL,SAASM,WAAd,CARF,CAQ6B;AAC3B,WAAKN,SAASO,QAAd;AACE;AACA9jB,gBAAQ8e,IAAR,CAAa4C,IAAb,EAAmB,oCAAnB;AACAc,mBAAWF,YAAX;AACAnc,mBAAW4c,iBAAX,GAJF,CAIkC;AAChC;AACA,YAAI,OAAON,UAAUO,OAAjB,KAA6B,UAAjC,EAA6CP,UAAUO,OAAV;AAC7C;AACF;AACER,mBAAWD,WAAX;AACA,cAAMlf,MAAM,kCAAN,EAA0CkgB,QAA1C,CAAN;AAnBJ;AAqBD,GA1BD;AA2BA;AACAZ,UAAQW,WAAR,CAAoB,SAApB,EAA+BS,2BAA/B;AACD,CA3ED,C,CA2EG;AACH;AACA;;;AAGA,SAASA,2BAAT,CAAqCC,QAArC,EAA+C;AAC7C,MAAIC,UAAUpc,KAAKyB,KAAL,CAAW0a,SAASllB,IAApB,CAAd;AAD6C,MAEvColB,KAFuC,GAEtBD,OAFsB,CAEvCC,KAFuC;AAAA,MAEhCC,KAFgC,GAEtBF,OAFsB,CAEhCE,KAFgC;AAG7C;AACA;;AACAxB,UAAQyB,cAAR,CAAuB,SAAvB,EAAkCL,2BAAlC;AACAvB,aAAWJ,aAAX;AACA;AACA,MAAIjiB,IAAIqhB,OAAR,EAAiBxhB,QAAQC,GAAR,CAAYgG,EAAZ,oBAAgCke,KAAhC,EAAyCrC,OAAzC;AACjBA,UAAQsB,EAAR,CAAWe,KAAX,GAAmBhe,WAAWke,kBAAX,EAAnB;AACAle,aAAWme,WAAX,CAAuB,EAAEpB,OAAOiB,KAAT,EAAgBI,WAAWzC,QAAQsB,EAAnC,EAAvB;AACA;AACAT,UAAQW,WAAR,CAAoB,SAApB,EAA+BkB,eAA/B;AACAhC,aAAWH,QAAX;AACA;AACA,MAAI,OAAOI,UAAUO,OAAjB,KAA6B,UAAjC,EAA6CP,UAAUO,OAAV;AAC7C;AACAyB;AACD;AACD;AACA;;;AAGA,SAASC,oBAAT,GAAgC;AAC9B,MAAI5C,QAAQsB,EAAR,CAAWuB,UAAX,KAA0B7C,QAAQsB,EAAR,CAAWwB,IAAzC,EAA+C;AAC7C9C,YAAQsB,EAAR,CAAW5Z,IAAX,CAAgB,MAAhB,EAAwB,eAAO;AAC7B,UAAIgW,GAAJ,EAASxf,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,SAAhB,EAA2BuZ,GAA3B,EAAgC,+BAAhC;AACV,KAFD;AAGD;AACF;AACD;AACA;;;;;;;;;;AAUA,SAASiF,oBAAT,GAAgC;AAC9BlgB,eAAame,gBAAb;AACAA,qBAAmBle,WAAW,SAASqgB,gBAAT,GAA4B;AACxD,QAAI1kB,IAAIshB,MAAR,EACEzhB,QAAQC,GAAR,CACEgG,EADF,EAEE,4EAFF;AAIFE,eAAW4c,iBAAX,CAA6B,EAAE+B,SAAS,qBAAX,EAA7B;AACD,GAPkB,EAOhBvD,KAAKwD,yBAAL,GAAiC,CAPjB,CAAnB;AAQD;AACD;AACA,SAASP,eAAT,CAAyBR,QAAzB,EAAmC;AACjC;AACA,MAAIA,SAASllB,IAAT,KAAkB,MAAtB,EAA8B;AAC5B,QAAIqB,IAAIshB,MAAR,EAAgBzhB,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,+BAAhB;AAChBye;AACAD;AACA;AACD;;AAED;AACA,MAAIhE,MAAM,IAAIta,UAAJ,CAAe6d,SAASllB,IAAxB,CAAV;AACA,MAAIgX,MAAM2K,IAAIuE,OAAJ,EAAV;AACA,MAAIvE,IAAIwE,aAAJ,EAAJ,EAAyB;AACvB,QAAI9kB,IAAIshB,MAAR,EAAgBzhB,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,wBAAhB,EAA0C6P,GAA1C;AAChB2K,QAAIyE,mBAAJ;AACA;AACD;AACD,MAAIpmB,OAAO2hB,IAAIrZ,IAAJ,EAAX;AACA,MAAIqK,OAAOgP,IAAI0E,IAAJ,EAAX;AACA,MAAIC,SAASjlB,IAAIshB,MAAJ,IAAc,CAAC3L,IAAIuP,UAAJ,CAAe,MAAf,CAA5B;AACA;AACA,UAAQ5T,IAAR;AACE,SAAK,OAAL;AACE,UAAI2T,MAAJ,EAAYplB,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,uBAAhB,EAAyC6P,GAAzC;AACZ;AACF,SAAK,MAAL;AACE,UAAIsP,MAAJ,EAAY;AACVplB,gBAAQwB,IAAR,CACEyE,EADF,UAEQE,WAAWmf,WAAX,EAFR,yBAEmDxP,GAFnD,gBAEgE2K,IAAI8E,aAAJ,EAFhE,EAGEzmB,IAHF;AAKD;AACDmC,YAAMukB,WAAN,CAAkB1P,GAAlB,EAAuBhX,IAAvB;AACA2hB,UAAIgF,iBAAJ;AACA;AACF,SAAK,OAAL;AACE,UAAIL,MAAJ,EAAY;AACVplB,gBAAQwB,IAAR,CACEyE,EADF,UAEQE,WAAWmf,WAAX,EAFR,0BAEoDxP,GAFpD,gBAEiE2K,IAAI8E,aAAJ,EAFjE,EAGEzmB,IAHF;AAKD;AACDmC,YAAMykB,SAAN,CAAgB5P,GAAhB,EAAqBhX,IAArB;AACA2hB,UAAIgF,iBAAJ;AACA;AACF,SAAK,OAAL;AACE,UAAIL,MAAJ,EAAY;AACVplB,gBAAQwB,IAAR,CACEyE,EADF,UAEQE,WAAWmf,WAAX,EAFR,0BAEoDxP,GAFpD,gBAEiE2K,IAAI8E,aAAJ,EAFjE;AAID;AACDtkB,YAAME,SAAN,CAAgB2U,GAAhB,EAAqBhX,IAArB,EAA2ByI,IAA3B,CAAgC,kBAAU;AACxC,YAAI6d,MAAJ,EAAY;AACVplB,kBAAQC,GAAR,SACQkG,WAAWmf,WAAX,EADR,qBAC+CxP,GAD/C,sBACkEjO,KAAKC,SAAL,CAC9D7D,MAD8D,CADlE;AAKD;AACD;AACAwc,YAAIkF,OAAJ,CAAY1hB,MAAZ;AACAwc,YAAIgF,iBAAJ;AACD,OAXD;AAYA;AACF;AACE,YAAMpiB,MAAM,qBAAN,EAA6BoO,IAA7B,CAAN;AA/CJ;AAiDD;;AAED;AACA;;AAEAkR,QAAQ5E,IAAR,GAAe,UAAU0C,GAAV,EAAe;AAC5B,MAAI,EAAEA,eAAeta,UAAjB,CAAJ,EAAkC,MAAM9C,MAAMse,UAAN,CAAN;AAClC,MAAIG,QAAQsB,EAAR,CAAWuB,UAAX,KAA0B,CAA9B,EAAiC;AAC/B,QAAIiB,OAAOnF,IAAI5Y,IAAJ,EAAX;AACA,QAAI1H,GAAJ,EAASH,QAAQC,GAAR,CAAY,SAAZ,EAAuBwgB,IAAIuE,OAAJ,EAAvB,EAAsCvE,IAAIrZ,IAAJ,EAAtC,EAAkDqZ,IAAIoF,MAAJ,EAAlD;AACT/D,YAAQsB,EAAR,CAAW5Z,IAAX,CAAgBoc,IAAhB;AACD,GAJD,MAIO;AACL5lB,YAAQC,GAAR,CAAY,6BAAZ,EAA2C6hB,QAAQsB,EAAR,CAAWuB,UAAtD;AACD;AACF,CATD;AAUA;AACA;;AAEAhC,QAAQrb,IAAR,GAAe,UAAUmZ,GAAV,EAAe;AAC5B,MAAI,EAAEA,eAAeta,UAAjB,CAAJ,EAAkC,MAAM9C,MAAMse,UAAN,CAAN;AAClC,MAAIG,QAAQsB,EAAR,CAAWuB,UAAX,KAA0B,CAA9B,EAAiC;AAC/B,QAAIiB,OAAOnF,IAAI5Y,IAAJ,EAAX;AACA,QAAI1H,GAAJ,EAASH,QAAQC,GAAR,CAAY,SAAZ,EAAuBwgB,IAAIuE,OAAJ,EAAvB,EAAsCY,IAAtC;AACT9D,YAAQsB,EAAR,CAAW5Z,IAAX,CAAgBoc,IAAhB;AACD,GAJD,MAIO;AACL5lB,YAAQC,GAAR,CAAY,6BAAZ,EAA2C6hB,QAAQsB,EAAR,CAAWuB,UAAtD;AACD;AACF,CATD;AAUA;AACA;;AAEAhC,QAAQmD,KAAR,GAAgB,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AACtCD,SAAOA,QAAQ,IAAf;AACAC,WAASA,UAAU,qBAAnB;AACAlE,UAAQsB,EAAR,CAAW6C,KAAX,CAAiBF,IAAjB,EAAuBC,MAAvB;AACD,CAJD;AAKA;AACArD,QAAQW,WAAR,GAAsB,UAAUtiB,KAAV,EAAiBklB,eAAjB,EAAkC;AACtD,MAAIpE,QAAQsB,EAAR,YAAsBC,SAA1B,EAAqC;AACnCvB,YAAQsB,EAAR,CAAW9iB,gBAAX,CAA4BU,KAA5B,EAAmCklB,eAAnC;AACD,GAFD,MAEO;AACL,UAAM7iB,MAAMue,aAAN,CAAN;AACD;AACF,CAND;AAOA;AACAe,QAAQyB,cAAR,GAAyB,UAAUpjB,KAAV,EAAiBklB,eAAjB,EAAkC;AACzD,MAAIpE,QAAQsB,EAAR,YAAsBC,SAA1B,EAAqC;AACnCvB,YAAQsB,EAAR,CAAW+C,mBAAX,CAA+BnlB,KAA/B,EAAsCklB,eAAtC;AACD,GAFD,MAEO;AACL,UAAM7iB,MAAMue,aAAN,CAAN;AACD;AACF,CAND;AAOA;AACAe,QAAQyD,SAAR,GAAoB,YAAY;AAC9B,SAAOrE,SAAP;AACD,CAFD;AAGA;AACAY,QAAQ0D,UAAR,GAAqB,YAAY;AAC/B,SAAOrE,SAAP;AACD,CAFD;AAGA;AACAW,QAAQ2D,gBAAR,GAA2B,YAAY;AACrC,SAAOxE,OAAP;AACD,CAFD;AAGA;AACAa,QAAQ2C,WAAR,GAAsB,YAAY;AAChC,SAAOnf,WAAWmf,WAAX,EAAP;AACD,CAFD;AAGA;AACA3C,QAAQtb,gBAAR,GAA2B,YAAY;AACrC,SAAOmb,aAAaF,YAApB;AACD,CAFD;;AAIA;AACA;AACAplB,OAAOC,OAAP,GAAiBwlB,OAAjB;;;;;;;;;;;;;;AChVA;AACA;AACA,IAAIvlB,OAAO2C,MAAX,EAAmBC,QAAQC,GAAR,UAAmB/C,OAAOgD,EAA1B;AACnB;;;;;;;AAOA,IAAM7C,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM2D,QAAQ3D,QAAQ,8BAAR,CAAd;AACA,IAAMipB,UAAUjpB,QAAQ,4BAAR,CAAhB;AACA,IAAMoW,UAAUpW,QAAQ,wBAAR,CAAhB;;AAEA;AACA;;IACMkpB,e;;;AACJ,6BAAc;AAAA;;AAAA;;AAEZ,UAAKD,OAAL,GAAe,IAAIA,OAAJ,CAAYrpB,OAAOgD,EAAnB,CAAf;AACA,UAAKe,KAAL,GAAa,IAAIA,KAAJ,CAAU,MAAKslB,OAAf,CAAb;AAHY;AAIb;;AAED;;;;;kCACcE,C,EAAGC,G,EAAK;AACpB,WAAKzlB,KAAL,CAAWrC,aAAX,CAAyB6nB,CAAzB,EAA4BC,GAA5B;AACD;;;oCACeD,C,EAAGC,G,EAAK;AACtBC,mBAAa,aAAb;AACA,WAAK1lB,KAAL,CAAWqc,eAAX,CAA2BmJ,CAA3B,EAA8BC,GAA9B;AACD;;;gCACWD,C,EAAGC,G,EAAK;AAClB,WAAKzlB,KAAL,CAAWqc,eAAX,CAA2BmJ,CAA3B,EAA8BC,GAA9B;AACD;;AAED;;;;+BACWA,G,EAAK;AACd,WAAKH,OAAL,CAAa/f,IAAb,CAAkB,WAAlB,EAA+BkgB,GAA/B;AACD;;;4BACOA,G,EAAK;AACX,WAAKH,OAAL,CAAa/f,IAAb,CAAkB,OAAlB,EAA2BkgB,GAA3B;AACD;;;4BACOA,G,EAAK;AACX,WAAKH,OAAL,CAAa/f,IAAb,CAAkB,OAAlB,EAA2BkgB,GAA3B;AACD;;;+BACUA,G,EAAK;AACd,WAAKH,OAAL,CAAa/f,IAAb,CAAkB,WAAlB,EAA+BkgB,GAA/B;AACD;;;0BACKA,G,EAAK;AACT,WAAKH,OAAL,CAAa/f,IAAb,CAAkB,KAAlB,EAAyBkgB,GAAzB;AACD;;;iCACYA,G,EAAK;AAChB,WAAKH,OAAL,CAAa/f,IAAb,CAAkB,YAAlB,EAAgCkgB,GAAhC;AACD;;AAED;;;;yBACKD,C,EAAGG,C,EAAGpP,C,EAAG;AACZ,aAAO,KAAKvW,KAAL,CAAWqG,IAAX,CAAgBmf,CAAhB,EAAmBG,CAAnB,EAAsBpP,CAAtB,CAAP;AACD;;;yBACIiP,C,EAAGG,C,EAAGpP,C,EAAG;AACZ,WAAKvW,KAAL,CAAW8c,IAAX,CAAgB0I,CAAhB,EAAmBG,CAAnB,EAAsBpP,CAAtB;AACD;;;2BACMiP,C,EAAGG,C,EAAGpP,C,EAAG;AACd,WAAKvW,KAAL,CAAW+c,MAAX,CAAkByI,CAAlB,EAAqBG,CAArB,EAAwBpP,CAAxB;AACD;;;4BACOiP,C,EAAGG,C,EAAGpP,C,EAAG;AACf,aAAO,KAAKvW,KAAL,CAAWE,SAAX,CAAqBslB,CAArB,EAAwBG,CAAxB,EAA2BpP,CAA3B,CAAP;AACD;;;4BACOiP,C,EAAGG,C,EAAGpP,C,EAAG;AACf,WAAKvW,KAAL,CAAWykB,SAAX,CAAqBe,CAArB,EAAwBG,CAAxB,EAA2BpP,CAA3B;AACD;;;8BACSiP,C,EAAGG,C,EAAGpP,C,EAAG;AACjB,WAAKvW,KAAL,CAAWukB,WAAX,CAAuBiB,CAAvB,EAA0BG,CAA1B,EAA6BpP,CAA7B;AACD;;;4BACOiP,C,EAAGG,C,EAAGpP,C,EAAG;AACf,WAAKvW,KAAL,CAAW4lB,OAAX,CAAmBJ,CAAnB,EAAsBG,CAAtB,EAAyBpP,CAAzB;AACD;;;4BACOiP,C,EAAGG,C,EAAGpP,C,EAAG;AACf,aAAO,KAAKvW,KAAL,CAAW0G,OAAX,CAAmB8e,CAAnB,EAAsBG,CAAtB,EAAyBpP,CAAzB,CAAP;AACD;;;8BACSiP,C,EAAGG,C,EAAGpP,C,EAAG;AACjB,WAAKvW,KAAL,CAAW6lB,SAAX,CAAqBL,CAArB,EAAwBG,CAAxB,EAA2BpP,CAA3B;AACD;;;8BACSiP,C,EAAGG,C,EAAGpP,C,EAAG;AACjBmP,mBAAa,SAAb;AACA,aAAO,KAAK1lB,KAAL,CAAWE,SAAX,CAAqBslB,CAArB,EAAwBG,CAAxB,EAA2BpP,CAA3B,CAAP;AACD;;;8BACSiP,C,EAAGG,C,EAAGpP,C,EAAG;AACjBmP,mBAAa,SAAb;AACA,WAAK1lB,KAAL,CAAWykB,SAAX,CAAqBe,CAArB,EAAwBG,CAAxB,EAA2BpP,CAA3B;AACD;;;gCACWiP,C,EAAGG,C,EAAGpP,C,EAAG;AACnBmP,mBAAa,WAAb;AACA,WAAK1lB,KAAL,CAAWukB,WAAX,CAAuBiB,CAAvB,EAA0BG,CAA1B,EAA6BpP,CAA7B;AACD;AACD;;;;0BACMuP,E,EAAI;AACRJ,mBAAa,UAAb;AACA,aAAO,KAAKK,QAAL,CAAcD,EAAd,CAAP;AACD;;;6BACQA,E,EAAIE,E,EAAI;AACfN,mBAAa,aAAb;AACA,WAAKO,WAAL,CAAiBH,EAAjB,EAAqBE,EAArB;AACD;;;kCACaF,E,EAAIL,G,EAAK;AACrBC,mBAAa,kBAAb;AACA,WAAK7f,gBAAL,CAAsBigB,EAAtB,EAA0BL,GAA1B;AACD;;;mCACcK,E,EAAIL,G,EAAK;AACtBC,mBAAa,mBAAb;AACA,WAAKQ,iBAAL,CAAuBJ,EAAvB,EAA2BL,GAA3B;AACD;AACD;;;;6BACSK,E,EAAI;AACX,aAAO,KAAK9lB,KAAL,CAAW+lB,QAAX,CAAoBD,EAApB,CAAP;AACD;;;gCACWA,E,EAAIE,E,EAAI;AAClB,WAAKhmB,KAAL,CAAWimB,WAAX,CAAuBH,EAAvB,EAA2BE,EAA3B;AACD;;;qCACgBF,E,EAAIL,G,EAAK;AACxB,WAAKzlB,KAAL,CAAW6F,gBAAX,CAA4BigB,EAA5B,EAAgCL,GAAhC;AACD;;;sCACiBK,E,EAAIL,G,EAAK;AACzB,WAAKzlB,KAAL,CAAWkmB,iBAAX,CAA6BJ,EAA7B,EAAiCL,GAAjC;AACD;;;6BACQK,E,EAAI;AACXK;AACD;;;gCACWL,E,EAAIE,E,EAAI;AAClBG;AACD;;;qCACgBL,E,EAAIL,G,EAAK;AACxBU;AACD;;;sCACiBL,E,EAAIL,G,EAAK;AACzBU;AACD;AACD;;;;yBACKzG,C,EAAGzO,C,EAAG;AACTmV,oBAAc,uCAAd;AACD;;;;EA5H2BhqB,MAAMyC,S,GA6HlC;;AAEF,SAAS6mB,YAAT,CAAsBW,IAAtB,EAA4B;AAC1B,MAAIlV,MAASsB,QAAQS,YAAR,CAAqB,CAArB,CAAT,oBAAJ;AACA,MAAI,OAAOmT,IAAP,KAAgB,QAApB,EAA8BlV,iBAAekV,IAAf;AAC9BtnB,UAAQwB,IAAR,CAAa4Q,GAAb;AACD;;AAED,SAASgV,eAAT,GAA2B;AACzB,MAAIhV,MAASsB,QAAQS,YAAR,CAAqB,CAArB,CAAT,6BAAJ;AACApS,QAASqQ,GAAT;AACApS,UAAQiX,KAAR,CAAc7E,GAAd;AACA;AACD;;AAED,SAASiV,aAAT,CAAuBrB,MAAvB,EAA+B;AAC7B,MAAI5T,MAASsB,QAAQS,YAAR,CAAqB,CAArB,CAAT,SAAoC6R,MAAxC;AACAjkB,QAASqQ,GAAT;AACApS,UAAQiX,KAAR,CAAc7E,GAAd;AACA;AACD;;AAED;AACA;AACAlV,OAAOC,OAAP,GAAiBqpB,eAAjB;;;;;;;;ACtKA,IAAIppB,OAAO2C,MAAX,EAAmBC,QAAQC,GAAR,UAAmB/C,OAAOgD,EAA1B;AACnB;;;;;;AAMA;AACA;;AAEA,IAAMqnB,QAAQjqB,QAAQ,OAAR,CAAd;AACA,IAAMkqB,SAASlqB,QAAQ,aAAR,CAAf;AACA,IAAMge,WAAWhe,QAAQ,8BAAR,CAAjB;;AAEA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA;AACA,IAAMsnB,aAAa,0CAAnB;AACA,IAAMC,cAAc,2BAApB;AACA,IAAMC,cACJ,0EADF;AAEA,IAAMC,qBAAqB,wCAA3B;;AAEA;AACA;AACA,IAAIC,SAAS,EAAb;AACA,IAAIC,SAAS,IAAI/L,GAAJ,EAAb,C,CAAwB;AACxB,IAAIgM,gBAAgB,IAAIhM,GAAJ,EAApB,C,CAA+B;;AAE/B;AACA;AACA;;;AAGA,SAASiM,kBAAT,CAA4BtL,SAA5B,EAAuC;AACrC;AACA,MAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC,OAAOha,SAAP;AACnC;AACA,MAAI,CAACga,SAAL,EAAgB,OAAOha,SAAP;AAChB;AACAga,cAAYA,UAAU1Q,WAAV,EAAZ;AACA;AACA,MAAI0Q,cAAc,GAAlB,EAAuB,OAAO,OAAP;AACvB;AACA,MAAIA,UAAUmC,OAAV,CAAkB,GAAlB,IAAyB,CAAC,CAA9B,EAAiC,OAAOnc,SAAP;AACjC;AACA,SAAOga,SAAP;AACD;AACD;AACA;;;AAGA,SAASuL,cAAT,CAAwBvL,SAAxB,EAAmCE,QAAnC,EAA6CkG,GAA7C,EAAkD;AAChDA,QAAMA,OAAO,EAAEoF,OAAO,IAAT,EAAb;AACA;AACA,MAAIzpB,QAAQ2K,OAAOC,MAAP,CAAc,EAAd,EAAkBye,OAAO9I,GAAP,CAAWtC,SAAX,CAAlB,CAAZ;AACA,MAAIvc,GAAJ,EAASH,QAAQC,GAAR,gCAAwCyc,SAAxC,cAA2DE,QAA3D;;AAET;AACA;AACAxT,SAAOqO,OAAP,CAAemF,QAAf,EAAyBvK,OAAzB,CAAiC,iBAAS;AACxC,QAAIxB,IAAIsX,MAAM,CAAN,CAAR,CADwC,CACtB;AAClB,QAAIzQ,IAAIyQ,MAAM,CAAN,CAAR,CAFwC,CAEtB;AAClB,QAAIzS,OAAOjX,MAAMoS,CAAN,CAAX;AAAA,QAAqB;AACnBuX,YAAQ1Q,CADV;AAAA,QACa;AACX2Q,kBAFF;AAAA,QAES;AACPC,kBAHF;;AAKA;AACAD,YAAQb,OAAO9R,IAAP,CAAR;AACA4S,YAAQd,OAAOY,KAAP,CAAR;;AAEA;AACA,QAAIC,UAAU,WAAV,IAAyBA,UAAU,MAAvC,EAA+C;AAC7C;AACA;AACA3S,aAAO0S,KAAP;AACD,KAJD,MAIO,IAAIC,UAAUC,KAAd,EAAqB;AAC1B;AACA;AACA,cAAQD,KAAR;AACE,aAAK,QAAL;AACE,cAAIloB,GAAJ,EAASH,QAAQC,GAAR;AACT;AACAyV,iBAAOtM,OAAOC,MAAP,CAAcqM,IAAd,EAAoB0S,KAApB,CAAP;AACA;AACF,aAAK,OAAL;AAAc;AACZ,cAAIjoB,GAAJ,EAASH,QAAQC,GAAR;AACT;AACA;AACA,cAAI6iB,IAAIoF,KAAR,EAAexS,oCAAW,IAAIvR,GAAJ,8BAAYuR,IAAZ,sBAAqB0S,KAArB,GAAX,GAAf,KACK,IAAItF,IAAI7H,MAAR,EAAgBvF,OAAOA,KAAKuF,MAAL,CAAYmN,KAAZ,CAAP;AACrB;AACF;AACE,cAAIjoB,GAAJ,EAASH,QAAQC,GAAR;AACT;AACAyV,iBAAO0S,KAAP;AAhBJ,OAH0B,CAoBxB;AACH,KArBM,MAqBA;AACL;AACApoB,cAAQwB,IAAR,CACKomB,kBADL,aAC+B/W,CAD/B,kBAC4CyX,KAD5C,yBACmED,KADnE;AAGA3S,aAAO0S,KAAP;AACD;AACD;AACA3pB,UAAMoS,CAAN,IAAW6E,IAAX;AACD,GA/CD,EARgD,CAuD5C;;AAEJ,SAAOjX,KAAP;AACD;AACD;AACA;;;;AAIA,SAAS8pB,kBAAT,CAA4BC,MAA5B,EAAoC;AAClCA,WAASR,mBAAmBQ,MAAnB,CAAT;AACA,MAAI,CAACA,MAAL,EAAa,MAAMnlB,MAAMokB,UAAN,CAAN;AACb,MAAIgB,OAAOV,cAAc/I,GAAd,CAAkBwJ,MAAlB,CAAX;AACA,MAAI,CAACC,IAAL,EAAW;AACTA,WAAO,IAAInN,QAAJ,EAAP;AACAyM,kBAActL,GAAd,CAAkB+L,MAAlB,EAA0BC,IAA1B;AACD;AACD,SAAOA,IAAP;AACD;AACD;AACA;;AAEAZ,OAAOhL,QAAP,GAAkB,UAACH,SAAD,EAAYE,QAAZ,EAAsB8L,OAAtB,EAAkC;AAClDhM,cAAYsL,mBAAmBtL,SAAnB,CAAZ;AACA,MAAI,CAACA,SAAL,EAAgB,MAAMrZ,MAAMokB,UAAN,CAAN;AAChB;AACA,MAAI,CAACK,OAAOtL,GAAP,CAAWE,SAAX,CAAL,EAA4BoL,OAAOrL,GAAP,CAAWC,SAAX,EAAsB,EAAtB;AAC5B;AACA;AACA;AACA;AACA;AACAtT,SAAOC,MAAP,CAAcye,OAAO9I,GAAP,CAAWtC,SAAX,CAAd,EAAqCE,QAArC;AACA;AACA,MAAI6L,OAAOF,mBAAmB7L,SAAnB,CAAX;AACA;AACA;AACA+L,OAAK1K,IAAL,CAAUrB,SAAV,EAAqBE,QAArB,EAA+B,EAAEnL,MAAM,OAAR,EAAiBgM,SAAS,IAA1B,EAAgCD,OAAO,KAAvC,EAA/B;AACA;AACD,CAjBD;AAkBA;AACA;;AAEAqK,OAAO9K,UAAP,GAAoB,UAACL,SAAD,EAAYE,QAAZ,EAAsB8L,OAAtB,EAAkC;AACpDhM,cAAYsL,mBAAmBtL,SAAnB,CAAZ;AACA,MAAI,CAACA,SAAL,EAAgB,MAAMrZ,MAAMokB,UAAN,CAAN;AAChB;AACA,MAAI,CAACK,OAAOtL,GAAP,CAAWE,SAAX,CAAL,EAA4BoL,OAAOrL,GAAP,CAAWC,SAAX,EAAsB,EAAtB;;AAE5B;AACA,MAAIje,QAAQwpB,eAAevL,SAAf,EAA0BE,QAA1B,EAAoC,EAAEsL,OAAO,IAAT,EAApC,CAAZ;;AAEA;AACAJ,SAAOrL,GAAP,CAAWC,SAAX,EAAsBje,KAAtB;;AAEA;AACA,MAAIgqB,OAAOF,mBAAmB7L,SAAnB,CAAX;AACA;AACA;AACA+L,OAAK1K,IAAL,CAAUrB,SAAV,EAAqBE,QAArB,EAA+B,EAAEnL,MAAM,OAAR,EAAiBgM,SAAS,IAA1B,EAAgCD,OAAO,KAAvC,EAA/B;AACA;AACD,CAlBD;AAmBA;AACA;;AAEAqK,OAAO7K,WAAP,GAAqB,UAACN,SAAD,EAAYE,QAAZ,EAAsB8L,OAAtB,EAAkC;AACrDhM,cAAYsL,mBAAmBtL,SAAnB,CAAZ;AACA,MAAI,CAACA,SAAL,EAAgB,MAAMrZ,MAAMokB,UAAN,CAAN;AAChB;AACA,MAAI,CAACK,OAAOtL,GAAP,CAAWE,SAAX,CAAL,EAA4BoL,OAAOrL,GAAP,CAAWC,SAAX,EAAsB,EAAtB;;AAE5B;AACA,MAAIje,QAAQwpB,eAAevL,SAAf,EAA0BE,QAA1B,EAAoC,EAAE3B,QAAQ,IAAV,EAApC,CAAZ;;AAEA;AACA6M,SAAOrL,GAAP,CAAWC,SAAX,EAAsBje,KAAtB;;AAEA;AACA,MAAIgqB,OAAOF,mBAAmB7L,SAAnB,CAAX;AACA;AACA;AACA+L,OAAK1K,IAAL,CAAUrB,SAAV,EAAqBE,QAArB,EAA+B,EAAEnL,MAAM,OAAR,EAAiBgM,SAAS,IAA1B,EAAgCD,OAAO,KAAvC,EAA/B;AACA;AACD,CAlBD;AAmBA;AACA;;AAEAqK,OAAOlL,KAAP,GAAe,qBAAa;AAC1BD,cAAYsL,mBAAmBtL,SAAnB,CAAZ;AACA,MAAI,CAACA,SAAL,EAAgB,MAAMrZ,MAAMokB,UAAN,CAAN;AAChB,SAAOre,OAAOC,MAAP,CAAc,EAAd,EAAkBye,OAAO9I,GAAP,CAAWtC,SAAX,CAAlB,CAAP;AACD,CAJD;AAKA;AACA;;AAEAmL,OAAO3K,aAAP,GAAuB,UAACR,SAAD,EAAYO,QAAZ,EAAsByL,OAAtB,EAAkC;AACvDhM,cAAYsL,mBAAmBtL,SAAnB,CAAZ;AACA,MAAI,CAACA,SAAL,EAAgB,MAAMrZ,MAAMokB,UAAN,CAAN;AAChB,MAAI,OAAOxK,QAAP,KAAoB,UAAxB,EAAoC,MAAM5Z,MAAMqkB,WAAN,CAAN;AACpC,MAAIgB,YAAYhmB,SAAhB,EAA2B1C,QAAQwB,IAAR,CAAammB,WAAb;AAC3B,MAAIgB,oBAAoBJ,mBAAmB7L,SAAnB,CAAxB;AACAiM,oBAAkB/pB,aAAlB,CAAgC8d,SAAhC,EAA2CO,QAA3C,EAAqD,EAAE+C,YAAY0I,OAAd,EAArD;AACD,CAPD;AAQA;AACA;;AAEAb,OAAO1K,cAAP,GAAwB,UAACT,SAAD,EAAYO,QAAZ,EAAyB;AAC/CP,cAAYsL,mBAAmBtL,SAAnB,CAAZ;AACA,MAAI,CAACA,SAAL,EAAgB,MAAMrZ,MAAMokB,UAAN,CAAN;AAChB,MAAI,OAAOxK,QAAP,KAAoB,UAAxB,EAAoC,MAAM5Z,MAAMqkB,WAAN,CAAN;AACpC,MAAIiB,oBAAoBJ,mBAAmB7L,SAAnB,CAAxB;AACAiM,oBAAkBrL,eAAlB,CAAkCZ,SAAlC,EAA6CO,QAA7C;AACD,CAND;;AAQA;AACA;AACA/f,OAAOC,OAAP,GAAiB0qB,MAAjB;;;;;;;;AChOA;AACA,IAAIzqB,OAAO2C,MAAX,EAAmBC,QAAQC,GAAR,UAAmB/C,OAAOgD,EAA1B;AACnB;;;;;;;;;;;;;;;;;AAiBA;AACA;;AAEA;AACA;AACA,IAAM0oB,UAAUtrB,QAAQ,8BAAR,CAAhB;AACA,IAAMurB,YAAYvrB,QAAQ,4BAAR,CAAlB;AACA,IAAMwrB,eAAexrB,QAAQ,+BAAR,CAArB;;AAEA;AACA;AACA,IAAMa,WAAWb,QAAQ,UAAR,CAAjB;AACA,IAAMwjB,YAAYxjB,QAAQ,yBAAR,CAAlB;AACA,IAAM+d,QAAQ/d,QAAQ,qBAAR,CAAd;AACA,IAAMqlB,UAAUrlB,QAAQ,uBAAR,CAAhB;AACA,IAAM0I,UAAU1I,QAAQ,qBAAR,CAAhB;AACA,IAAM2I,KAAKD,QAAQE,GAAR,CAAY,QAAZ,CAAX;;AAEA;AACA;AACA,IAAIhI,SAAS,IAAI2qB,SAAJ,CAAc3rB,OAAOgD,EAArB,CAAb;AACA,IAAIe,QAAQ,IAAI2nB,OAAJ,CAAY1qB,MAAZ,CAAZ;;AAEA;AACA;AACA;;AAEAA,OAAOoI,SAAP,GAAmB,sBAAc;AAC/B,SAAO,IAAIuiB,SAAJ,CAAcE,UAAd,CAAP;AACD,CAFD;;AAIA;AACA;AACA;;AAEA7qB,OAAOgD,WAAP,GAAqB,UAAChE,MAAD,EAASkf,OAAT,EAAqB;AACxC,SAAO,IAAIwM,OAAJ,CAAY1rB,MAAZ,EAAoBkf,OAApB,CAAP;AACD,CAFD;;AAIA;AACA;AACAle,OAAO8qB,uBAAP,GAAiC,YAAmB;AAAA,MAAlBC,QAAkB,uEAAP,EAAO;;AAClD,MAAItG,QAAQtb,gBAAR,EAAJ,EAAgC;AAC9BrH,YAAQwB,IAAR,CAAayE,EAAb,EAAiB,wDAAjB;AACA,WAAOxE,QAAQC,OAAR,EAAP;AACD;AACD,MAAIunB,SAAShmB,MAAb,EAAqB;AACnB,QAAI;AACFgmB,iBAAWL,QAAQ1K,oBAAR,CAA6B+K,QAA7B,CAAX;AACD,KAFD,CAEE,OAAOnnB,CAAP,EAAU;AACV9B,cAAQiX,KAAR,CAAcnV,CAAd;AACD;AACF,GAND,MAMO;AACLmnB,eAAWL,QAAQ3K,YAAR,EAAX;AACD;AACD,SAAO,IAAIxc,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCV,UAAMqG,IAAN,CAAW,kBAAX,EAA+B,EAAE2hB,kBAAF,EAA/B,EAA6C1hB,IAA7C,CAAkD,gBAAQ;AACxD7F,cAAQ5C,IAAR;AACD,KAFD;AAGD,GAJM,CAAP;AAKD,CAnBD;;AAqBA;AACA;AACA;;AAEAZ,OAAOsI,IAAP,GAAc,UAACoY,KAAD,EAAQ1M,CAAR,EAAc;AAC1B,MAAI,OAAO0M,KAAP,KAAiB,QAArB,EAA+B,MAAMvb,MAAM,yBAAN,CAAN;AAC/B,MAAI,OAAO6O,CAAP,KAAa,UAAjB,EAA6B,MAAM7O,MAAM,2BAAN,CAAN;AAC7Byd,YAAUta,IAAV,CAAeoY,KAAf,EAAsB1M,CAAtB,EAAyBhU,OAAOojB,QAAP,EAAzB,EAH0B,CAGmB;AAC9C,CAJD;AAKA;AACA;;AAEApjB,OAAOgrB,gBAAP,GAA0B,qBAAa;AACrChrB,SAAOqD,QAAP,CAAgB4f,SAAhB;AACAhjB,WAASgrB,oBAAT;AACD,CAHD;AAIA;AACA;;;;;;;AAOAjrB,OAAOqD,QAAP,GAAkB,0BAAkB;AAClCuf,YAAUvf,QAAV,CAAmB6nB,cAAnB,EADkC,CACE;AACrC,CAFD;AAGA;AACA;;;;;;AAMAlrB,OAAOoG,uBAAP,GAAiC,YAAM;AACrCnG,WAASmG,uBAAT;AACD,CAFD;AAGA;AACA;;;AAGApG,OAAOmrB,OAAP,GAAiB,qBAAa;AAC5B,MAAIC,eAAexI,UAAUpB,KAAV,EAAnB;AACA,SAAOyB,UAAU3P,QAAV,CAAmB8X,YAAnB,CAAP;AACD,CAHD;AAIA;AACA;;AAEAprB,OAAOwC,QAAP,2DAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAERogB,UAAU7B,OAAV,CAAkB,WAAlB,CAFQ;;AAAA;AAAA;AAAA,iBAGR6B,UAAU7B,OAAV,CAAkB,YAAlB,CAHQ;;AAAA;AAAA;AAAA,iBAIR6B,UAAU7B,OAAV,CAAkB,YAAlB,CAJQ;;AAAA;AAAA;AAAA,iBAKR6B,UAAU7B,OAAV,CAAkB,WAAlB,CALQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAOdjf,kBAAQiX,KAAR,CACE,oFADF;AAIA;;AAXc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;AAcA;AACA;;;AAGA/Y,OAAO0C,QAAP,2DAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAERkgB,UAAU7B,OAAV,CAAkB,WAAlB,CAFQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAIdjf,kBAAQiX,KAAR,CACE,oFADF;AAIA;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;AAWA;AACA;;AAEA/Y,OAAOuC,OAAP,GAAiB,YAAM;AACrB,SAAO,IAAIgB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAI;AACFghB,cAAQC,OAAR,CAAgB3hB,KAAhB,EAAuB,EAAE+hB,SAASthB,OAAX,EAAoB6nB,SAAS5nB,MAA7B,EAAvB;AACD,KAFD,CAEE,OAAOG,CAAP,EAAU;AACV9B,cAAQiX,KAAR,CACE,oFADF,EAEEnV,CAFF;AAIA;AACD;AACF,GAVM,CAAP;AAWD,CAZD;AAaA;AACA;;AAEA5D,OAAO2C,QAAP,2DAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAERigB,UAAU7B,OAAV,CAAkB,OAAlB,CAFQ;;AAAA;AAAA;AAAA,iBAGR6B,UAAU7B,OAAV,CAAkB,OAAlB,CAHQ;;AAAA;AAAA;AAAA,iBAIR6B,UAAU7B,OAAV,CAAkB,WAAlB,CAJQ;;AAAA;AAAA;AAAA,iBAKR6B,UAAU7B,OAAV,CAAkB,KAAlB,CALQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAOdjf,kBAAQiX,KAAR,CACE,oFADF;AAIA;;AAXc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;AAcA;AACA;;AAEA/Y,OAAOsrB,GAAP,2DAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEH1I,UAAU7B,OAAV,CAAkB,QAAlB,CAFG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAITjf,kBAAQiX,KAAR;;AAJS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;AAOA;AACA;;;AAGA/Y,OAAOurB,WAAP,2DAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACb3I,UAAU7B,OAAV,CAAkB,UAAlB,CADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAGA;AACA;;;AAGA/gB,OAAOwrB,MAAP,2DAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACR5I,UAAU7B,OAAV,CAAkB,OAAlB,CADQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAGA;AACA;;;;AAIA/gB,OAAOyrB,SAAP,2DAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACX7I,UAAU7B,OAAV,CAAkB,WAAlB,CADW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAGA;AACA;;;AAGA/gB,OAAO0rB,UAAP,2DAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACZ9I,UAAU7B,OAAV,CAAkB,MAAlB,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAGA;AACA;;;AAGA/gB,OAAOkD,gBAAP,2DAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAClB0f,UAAU7B,OAAV,CAAkB,YAAlB,CADkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAGA;AACA;;;AAGA/gB,OAAO2rB,OAAP,2DAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACT/I,UAAU7B,OAAV,CAAkB,cAAlB,CADS;;AAAA;AAAA;AAAA,iBAET6B,UAAU7B,OAAV,CAAkB,UAAlB,CAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;;AAKA;AACA;AACA;;;AAGA/gB,OAAOonB,WAAP,GAAqB,YAAM;AACzB,SAAO3C,QAAQ2C,WAAR,EAAP;AACD,CAFD;AAGA;AACApnB,OAAOmJ,gBAAP,GAA0B,YAAM;AAC9B,SAAOsb,QAAQtb,gBAAR,EAAP;AACD,CAFD;;AAIA;AACA;AACA;;AAEAnJ,OAAO6C,GAAP,GAAa,UAACC,KAAD,EAAqB;AAAA,oCAAV8oB,KAAU;AAAVA,SAAU;AAAA;;AAChC,MAAI,OAAO9oB,KAAP,KAAiB,QAArB,EAA+B;AAC7BhB,YAAQiX,KAAR,CAAc,qDAAd;AACD;AACDhW,QAAM6lB,SAAN,CAAgB,eAAhB,EAAiC,EAAE9lB,YAAF,EAAS8oB,YAAT,EAAjC;AACD,CALD;;AAOA;AACA;;AAEA5rB,OAAO4B,SAAP,GAAmBgpB,YAAnB;;AAEA;AACA;AACA5rB,OAAOC,OAAP,GAAiBe,MAAjB;;;;;;ACrRA;;;;;;AAMA;AACA;AACA,IAAIqjB,OAAO,EAAX;AACAA,KAAKwD,yBAAL,GAAiC,IAAjC,C,CAAuC;;AAEvC;AACA;AACA7nB,OAAOC,OAAP,GAAiBokB,IAAjB;;;;;;;;;;;;ACbA;;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA,IAAMphB,MAAM,EAAEqJ,MAAM,KAAR,EAAeugB,UAAU,KAAzB,EAAZ;AACA;AACA,IAAIC,eAAe,CAAnB;AACA,IAAIC,cAAc,KAAlB;AACA,IAAIC,iBAAiB,EAArB;AACA,IAAIC,cAAc,IAAlB;AACA,IAAIC,aAAa,IAAjB;AACA;AACA,IAAMC,SAAS,MAAf;AACA,IAAMC,WAAW,QAAjB;AACA,IAAMhI,eAAe,SAArB;AACA,IAAMiI,WAAW,QAAjB;AACA;AACA,IAAIC,SAASH,MAAb;AACA;AACA,IAAMrkB,UAAU1I,QAAQ,wBAAR,CAAhB;AACA,IAAM2I,KAAKD,QAAQE,GAAR,CAAY,KAAZ,CAAX;AACA,IAAMukB,MAAM,OAAZ;AACA,IAAMC,kBAAkBD,MAAMxkB,EAAN,GAAW,sCAAnC;AACA,IAAM0kB,eAAeF,MAAMxkB,EAAN,GAAW,oCAAhC;AACA,IAAM2kB,mBAAmBH,MAAMxkB,EAAN,GAAW,qCAApC;AACA,IAAM4kB,iBAAiBJ,MAAMxkB,EAAN,GAAW,qCAAlC;AACA,IAAM6kB,iBAAiBL,MAAMxkB,EAAN,GAAW,gDAAlC;AACA;AACA,IAAM8kB,mBAAmBN,MAAMxkB,EAAN,GAAW,yBAApC;AACA,IAAM+kB,iBAAiBP,MAAMxkB,EAAN,GAAW,mCAAlC;AACA,IAAMglB,oBAAoBR,MAAMxkB,EAAN,GAAW,iCAArC;AACA,IAAMilB,cAAc,CAAC,OAAD,EAAU,MAAV,EAAkB,OAAlB,EAA2B,OAA3B,CAApB;AACA,IAAMC,eAAe,CAAC,KAAD,EAAQ,KAAR,CAArB;;AAEA;AACA;AACA;;;;IAGMhlB,U;AACJ,sBAAY2P,GAAZ,EAAiBhX,IAAjB,EAAuB2S,IAAvB,EAA6B;AAAA;;AAC3B;AACA;AACA,QAAI,QAAOqE,GAAP,yCAAOA,GAAP,OAAe,QAAf,IAA2BhX,SAAS4D,SAAxC,EAAmD;AACjD;AACA,UAAI,OAAOoT,IAAIA,GAAX,KAAmB,QAAnB,IAA+B,QAAOA,IAAIhX,IAAX,MAAoB,QAAvD,EAAiE;AAC/DkB,gBAAQC,GAAR,CAAY,oBAAZ,EAAkC4H,KAAKC,SAAL,CAAegO,GAAf,CAAlC;AACA,cAAM4U,eAAN;AACD;AACD;AACAthB,aAAOC,MAAP,CAAc,IAAd,EAAoByM,GAApB;AACAsV,qBAAe,IAAf;AACA,aAAO,IAAP;AACD;AACD;AACA;AACA,QAAI,OAAOtV,GAAP,KAAe,QAAf,IAA2BhX,SAAS4D,SAAxC,EAAmD;AACjD,UAAI4R,MAAMzM,KAAKyB,KAAL,CAAWwM,GAAX,CAAV;AACA1M,aAAOC,MAAP,CAAc,IAAd,EAAoBiL,GAApB;AACA8W,qBAAe,IAAf;AACA,aAAO,IAAP;AACD;AACD;AACA;AACA;AACA,QAAI,OAAO3Z,IAAP,KAAgB,QAApB,EAA8B4Z,YAAY5Z,IAAZ;AAC9B,QAAI,OAAOqE,GAAP,KAAe,QAAf,IAA2B,QAAOhX,IAAP,yCAAOA,IAAP,OAAgB,QAA/C,EAAyD;AACvD,YAAM8rB,gBAAN;AACD;AACD;AACA,SAAK9rB,IAAL,GAAYA,QAAQ,EAApB;AACA,SAAKgX,GAAL,GAAWA,GAAX;AACA;AACA,SAAK5V,EAAL,GAAU,KAAKorB,SAAL,EAAV;AACA,SAAKC,KAAL,GAAaJ,aAAa,CAAb,CAAb,CAlC2B,CAkCG;AAC9B,SAAK1Z,IAAL,GAAYA,QAAQyZ,YAAY,CAAZ,CAApB,CAnC2B,CAmCS;AACpC,SAAKM,IAAL,GAAY,EAAZ;AACA;AACA,SAAKC,MAAL,GAAc,CAAd,CAtC2B,CAsCV;AACjB,SAAKC,MAAL,GAAc,EAAd,CAvC2B,CAuCT;AAClB;AACA,SAAKC,OAAL,GAAexlB,WAAWmf,WAAX,MAA4B,IAA3C,CAzC2B,CAyCsB;AACjD,SAAKsG,OAAL,GAAe,IAAf,CA1C2B,CA0CN;AACrB,SAAKC,KAAL,GAAa,IAAb,CA3C2B,CA2CR;AACnB;AACD,G,CAAC;;AAEF;AACA;AACA;;;;;;2BAEO;AACL,aAAO,KAAKpa,IAAZ;AACD;AACD;AACA;;;;;2BAEOA,I,EAAM;AACX,aAAO,KAAKA,IAAL,KAAcA,IAArB;AACD;AACD;AACA;;;;;4BAEQA,I,EAAM;AACZ,WAAKA,IAAL,GAAY4Z,YAAY5Z,IAAZ,CAAZ;AACD;AACD;AACA;;;;;8BAEU;AACR,aAAO,KAAKqE,GAAZ;AACD;AACD;AACA;;;;;+BAEWgW,M,EAAQ;AACjB,WAAKhW,GAAL,GAAWgW,MAAX;AACD;AACD;AACA;;;;;;yBAGKpW,I,EAAM;AACT,UAAI,CAACA,IAAL,EAAW,OAAO,KAAK5W,IAAZ;AACX,UAAI,OAAO4W,IAAP,KAAgB,QAApB,EAA8B,OAAO,KAAK5W,IAAL,CAAU4W,IAAV,CAAP;AAC9B,YAAMiV,YAAN;AACD;AACD;AACA;;;;;4BAEQoB,S,EAAW3nB,G,EAAK;AACtB,UAAI,QAAO2nB,SAAP,yCAAOA,SAAP,OAAqB,QAAzB,EAAmC;AACjC,aAAKjtB,IAAL,GAAYitB,SAAZ;AACA;AACD;AACD,UAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;AACjC,aAAKjtB,IAAL,CAAUitB,SAAV,IAAuB3nB,GAAvB;AACA;AACD;AACD,YAAMumB,YAAN;AACD;AACD;AACA;;;;;;uBAGGmB,M,EAAQ;AACT,aAAOA,WAAW,KAAKhW,GAAhB,GAAsB,KAAKhX,IAA3B,GAAkC4D,SAAzC;AACD;AACD;AACA;;;;;sCAEkB;AAChB,aAAO,KAAKoT,GAAL,CAASuP,UAAT,CAAoB,MAApB,CAAP;AACD;AACD;AACA;;;;;2BAEO;AACL,aAAO,KAAKmG,IAAZ;AACD;;;4BACOA,I,EAAM;AACZ,WAAKA,IAAL,GAAYA,IAAZ;AACD;AACD;AACA;;;;;;;;;;;;;;;kBAEO;AACL,aAAO3jB,KAAKC,SAAL,CAAe,IAAf,CAAP;AACD,K;AACD;AACA;;;;;oCAEgB;AACd,aAAO,KAAK8jB,OAAZ;AACD;;AAED;AACA;AACA;;;;;6BAES;AACP,aAAO,KAAKH,MAAZ;AACD;AACD;AACA;;;;;;oCAGgB;AACd;AACA,UACE,KAAKE,OAAL,KAAiBxlB,WAAWke,kBAAX,EAAjB,IACA,CAAC,KAAKvO,GAAL,CAASuP,UAAT,CAAoB,MAApB,CAFH,EAGE;AACA,eAAO,KAAKsG,OAAZ;AACD;AACD;AACA,aAAO,KAAKK,aAAL,KAAuB,KAAKN,MAAL,CAAY,CAAZ,CAAvB,GAAwC,KAAKC,OAApD;AACD;AACD;;;;sCACkBlL,G,EAAK;AACrB,UAAIA,IAAIjM,WAAJ,CAAgBlC,IAAhB,KAAyB,YAA7B,EAA2C,MAAMjP,MAAM2nB,cAAN,CAAN;AAC3C,WAAKW,OAAL,GAAelL,IAAI8E,aAAJ,EAAf;AACD;AACD;AACA;;;;;yBAEK/hB,G,EAAK;AACR,cAAQA,GAAR;AACE,aAAK,KAAL,CADF,CACc;AACZ;AACE,iBAAO,KAAKyoB,aAAL,KACA,KAAK1G,aAAL,EADA,UACyB,KAAK0G,aAAL,EADzB,cAEA,KAAK1G,aAAL,EAFP;AAHJ;AAOD;AACD;AACA;;;;;;4BAGQ/hB,G,EAAK;AACX,cAAQA,GAAR;AACE,aAAK,KAAL,CADF,CACc;AACZ;AACE,iBAAO,KAAKyoB,aAAL,KACH,EAAE/I,OAAO,KAAKqC,aAAL,EAAT,EAA+BvK,OAAO,KAAKiR,aAAL,EAAtC,EADG,GAEH,EAAE/I,OAAO,KAAKqC,aAAL,EAAT,EAA+BvK,OAAOtY,SAAtC,EAFJ;AAHJ;AAOD;AACD;;;;gCACY;AACV,UAAIwpB,QAAQ,CAAC,EAAElC,YAAH,EAAiBna,QAAjB,EAAZ;AACA,WAAK3P,EAAL,GAAU+pB,cAAciC,MAAMpc,QAAN,CAAe,CAAf,EAAkB,GAAlB,CAAxB;AACA,aAAO,KAAK5P,EAAZ;AACD;AACD;AACA;;;;;;iCAGiC;AAAA,UAAtBisB,MAAsB,uEAAbhC,WAAa;;AAC/B,UAAIK,WAAWF,QAAX,IAAuBE,WAAWH,MAAtC,EAA8C;AAC5C,aAAKuB,OAAL,GAAezlB,WAAWimB,aAAX,EAAf;AACA,YAAIC,MAAMF,OAAOhI,KAAP,IAAgB,qBAA1B;AACA,YAAI,CAACgI,MAAL,EAAa,MAAM9oB,MAAM,0CAAN,CAAN;AACb,YAAIlD,IAAIqJ,IAAR,EAAc;AACZ,cAAIN,wBAAqB,KAAK8b,OAAL,EAArB,cAA2CqH,GAA/C;AACArsB,kBAAQC,GAAR,CAAYgG,EAAZ,EAAgBiD,MAAhB;AACD;AACD;AACA;AACAijB,eAAO3iB,IAAP,CAAY,KAAK3B,IAAL,EAAZ,EAAyB,eAAO;AAC9B,cAAI2X,GAAJ,EAASxf,QAAQiX,KAAR,eAA0BkV,OAAOhI,KAAjC,uBAAwD3E,GAAxD;AACV,SAFD;AAGD,OAbD,MAaO,IAAIgL,WAAWlI,YAAf,EAA6B;AAClCtiB,gBAAQC,GAAR,CAAYgG,EAAZ,EAAgB,mDAAhB,EAAqEukB,MAArE;AACD,OAFM,MAEA;AACLxqB,gBAAQwB,IAAR,CAAayE,EAAb,EAAiB,2CAAjB;AACD;AACD;AACD;AACD;AACA;;;;;uCAEuC;AAAA;;AAAA,UAAtBkmB,MAAsB,uEAAbhC,WAAa;;AACrC,UAAIK,WAAWlI,YAAf,EAA6B;AAC3BtiB,gBAAQwB,IAAR,CAAayE,EAAb,EAAiB,iDAAjB;AACA,eAAOxE,QAAQC,OAAR,EAAP;AACD;AACD;AACA,UAAI,CAACyqB,MAAL,EAAa,MAAM9oB,MAAM,gDAAN,CAAN;AACb;AACA,WAAKqoB,MAAL,CAAY1sB,IAAZ,CAAiBmH,WAAWge,KAA5B;AACA,UAAImI,MAAMnsB,IAAI4pB,QAAJ,IAAgB,CAAC,KAAKwC,eAAL,EAA3B;AACA,UAAI5L,IAAI,IAAIlf,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,YAAI2D,OAAOknB,aAAa,KAAb,CAAX;AACA,YAAItC,eAAe5kB,IAAf,CAAJ,EAA0B;AACxB3D,iBAAO0B,MAAMynB,iBAAiB,GAAjB,GAAuBxlB,IAA7B,CAAP;AACD,SAFD,MAEO;AACL;AACA;AACA4kB,yBAAe5kB,IAAf,IAAuB,UAAUxG,IAAV,EAAgB;AACrC,gBAAIwtB,GAAJ,EAAS;AACPtsB,sBAAQC,GAAR,CAAYgG,EAAZ,EAAgB,wBAAhB,EAA0C4B,KAAKC,SAAL,CAAehJ,IAAf,CAA1C;AACD;AACD4C,oBAAQ5C,IAAR;AACD,WALD;AAMA,gBAAK4hB,UAAL,CAAgByL,MAAhB;AACD;AACF,OAfO,CAAR;AAgBA,aAAOxL,CAAP;AACD;AACD;AACA;;;;;;;;kCAKc;AACZ,aAAO,KAAK4K,KAAZ;AACD;AACD;;;;gCACY;AACV,aAAO,KAAKA,KAAL,KAAe,KAAtB;AACD;;;oCACe;AACd,aAAO,KAAKA,KAAL,KAAe,KAAtB;AACD;AACD;;AAEA;;;;;oCAEgB;AACd,aACE,KAAKA,KAAL,KAAeJ,aAAa,CAAb,CAAf,IACA,KAAKM,MAAL,GAAc,CADd,IAEA,KAAKC,MAAL,CAAY,CAAZ,MAAmBvlB,WAAWge,KAHhC;AAKD;AACD;AACA;;;;;wCAEwC;AAAA,UAAtBgI,MAAsB,uEAAbhC,WAAa;;AACtC;AACA,UAAI,CAACgC,MAAL,EAAa,MAAM9oB,MAAM,iDAAN,CAAN;AACb;AACA;AACA;AACA,WAAKqoB,MAAL,CAAY1sB,IAAZ,CAAiBmH,WAAWge,KAA5B;AACA,WAAKoH,KAAL,GAAakB,aAAa,KAAb,CAAb;AACA,WAAK/L,UAAL,CAAgByL,MAAhB;AACD;AACD;AACA;;;;;;;0CAIsB;AACpB,UAAIG,MAAMnsB,IAAI4pB,QAAJ,IAAgB,CAAC,KAAKwC,eAAL,EAA3B;AACA,UAAIjnB,OAAOknB,aAAa,IAAb,CAAX;AACA,UAAIE,eAAexC,eAAe5kB,IAAf,CAAnB;AACA,UAAIgnB,GAAJ,EAAStsB,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,qBAAhB,EAAuCX,IAAvC;AACT,UAAI,OAAOonB,YAAP,KAAwB,UAA5B,EAAwC;AACtC,cAAMrpB,wBACYiC,IADZ,2CACqDonB,YADrD,yCACqDA,YADrD,GAAN;AAGD,OAJD,MAIO;AACLA,qBAAa,KAAK5tB,IAAlB;AACA0W,gBAAQmX,cAAR,CAAuBzC,eAAe5kB,IAAf,CAAvB;AACD;AACF;;;;KACD;;AAEF;AACA;AACA;;;;;;AAIAa,WAAWme,WAAX,GAAyB,UAAUsI,MAAV,EAAkB;AAAA,MACnCrI,SADmC,GACdqI,MADc,CACnCrI,SADmC;AAAA,MACxBrB,KADwB,GACd0J,MADc,CACxB1J,KADwB;;AAEzC,MAAIA,KAAJ,EAAW/c,WAAWge,KAAX,GAAmBjB,KAAnB;AACX;AACA,MAAIqB,SAAJ,EAAe;AACb,QAAI,OAAOA,UAAU/a,IAAjB,KAA0B,UAA9B,EAA0C,MAAMqhB,cAAN;AAC1C7qB,YAAQC,GAAR,CAAYgG,EAAZ,EAAgB,yCAAhB;AACAkkB,kBAAc5F,SAAd;AACAiG,aAASF,QAAT;AACD;AACF,CAVD;AAWA;AACA;;;AAGAnkB,WAAW0mB,aAAX,GAA2B,YAAY;AACrC,MAAI1C,WAAJ,EAAiB;AACfnqB,YAAQC,GAAR,CAAYgG,EAAZ,EAAgB,oDAAhB;AACAkkB,kBAAc,IAAd;AACAK,aAASD,QAAT;AACD;AACF,CAND;AAOA;AACA;;;AAGApkB,WAAW4c,iBAAX,GAA+B,UAAUjkB,IAAV,EAAgB;AAC7C0rB,WAASlI,YAAT;AACA,MAAI6H,WAAJ,EAAiB;AACfnqB,YAAQwB,IAAR,CAAayE,EAAb,EAAiB,+CAAjB;AACAkkB,kBAAc,IAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAInpB,QAAQ,IAAI8rB,WAAJ,CAAgB,kBAAhB,EAAoC;AAC9CC,cAAQ;AACNjI,iBAAShmB,OAAOA,KAAKgmB,OAAZ,GAAsB;AADzB;AADsC,KAApC,CAAZ;AAKA9kB,YAAQC,GAAR,CAAY,sBAAZ,EAAoCI,QAApC,EAA8CW,KAA9C;AACAX,aAAS2sB,aAAT,CAAuBhsB,KAAvB;AACD;AACF,CApBD;AAqBA;AACA;;AAEAmF,WAAWmf,WAAX,GAAyB,YAAY;AACnC,SAAOnf,WAAWge,KAAlB;AACD,CAFD;AAGA;AACA;;AAEAhe,WAAWke,kBAAX,GAAgC,YAAY;AAC1C,SAAO,QAAP;AACD,CAFD;AAGA;AACA;;AAEAle,WAAWimB,aAAX,GAA2B,YAAY;AACrC,SAAOhC,UAAP;AACD,CAFD;AAGA;AACAjkB,WAAWgB,gBAAX,GAA8B,UAAUD,KAAV,EAAiB;AAC7CkjB,eAAaljB,KAAb;AACD,CAFD;;AAIA;AACA;AACA;;;;AAIA,SAASkkB,cAAT,CAAwB3K,GAAxB,EAA6B;AAC3BA,MAAIgL,MAAJ;AACA,SAAOhL,GAAP;AACD;AACD;AACA;;AAEA,SAAS+L,YAAT,CAAsB/L,GAAtB,EAA2B;AACzB,MAAInb,OAAUmb,IAAI8E,aAAJ,EAAV,SAAiC9E,IAAIvgB,EAAzC;AACA,SAAOoF,IAAP;AACD;AACD;AACA;;AAEA,SAAS+lB,WAAT,CAAqB5Z,IAArB,EAA2B;AACzB,MAAIA,SAAS/O,SAAb,EAAwB;AACtB,UAAM,IAAIW,KAAJ,CAAU,kCAAkCoO,IAA5C,CAAN;AACD;AACD,MAAI,CAACyZ,YAAY1Z,QAAZ,CAAqBC,IAArB,CAAL,EAAiC,MAASsZ,gBAAT,WAA8BtZ,IAA9B;AACjC,SAAOA,IAAP;AACD;AACD;AACA;;AAEA,SAASgb,YAAT,CAAsBQ,IAAtB,EAA4B;AAC1B,MAAIA,SAASvqB,SAAb,EAAwB;AACtB,UAAM,IAAIW,KAAJ,CAAU,kCAAkC4pB,IAA5C,CAAN;AACD;AACD,MAAI,CAAC9B,aAAa3Z,QAAb,CAAsByb,IAAtB,CAAL,EAAkC,MAAShC,iBAAT,WAA+BgC,IAA/B;AAClC,SAAOA,IAAP;AACD;;AAED;AACA;AACA/vB,OAAOC,OAAP,GAAiBgJ,UAAjB;;;;;;ACreA;;;;;;;AAOA;AACA;;AAEA;AACA;AACA,IAAMhG,MAAM,KAAZ;AACA;;AAEA;AACA;AACA,IAAM+sB,UAAU5vB,QAAQ,SAAR,CAAhB;;AAEA;AACA;AACA,IAAI6vB,UAAU,EAAd;AACA,IAAMC,YAAY,kCAAlB;AACA,IAAMC,cAAc,CAApB;AACA,IAAIC,oBAAoB,IAAxB;;AAEA;AACA;AACA;;;;;;AAMAH,QAAQI,WAAR,GAAsB,UAAUrmB,KAAV,EAAiBpK,OAAjB,EAA0B;AAC9C,MAAM0wB,YAAY,GAAlB;AACA,MAAItmB,UAAUxE,SAAd,EAAyB,OAAO,EAAP;AACzB;AACA;AACA;AACA;AACA;AACA,MAAI+qB,YAAYvmB,MAAMnE,KAAN,CAAYyqB,SAAZ,CAAhB;AACA,MAAIE,gBAAJ;AAAA,MAAaC,eAAb;AAAA,MAAqBC,iBAArB;AAAA,MAA+BC,gBAA/B;AAAA,MAAwCC,cAAxC;AAAA,MAA+C9mB,gBAA/C;AACA;AACAA,YAAU,IAAV;AACA;AACA,MAAIE,MAAMsM,MAAN,CAAa,CAAC,CAAd,MAAqBga,SAAzB,EAAoC;AAClCxmB,cAAU,KAAV;AACD;AACD;AACA;AACA,MAAIymB,UAAU,CAAV,CAAJ,EAAkBC,UAAUD,UAAU,CAAV,EAAazhB,WAAb,EAAV;AAClB,MAAIyhB,UAAU,CAAV,CAAJ,EAAkBE,SAASF,UAAU,CAAV,EAAazhB,WAAb,EAAT;AAClB,MAAIyhB,UAAU,CAAV,CAAJ,EAAkBG,WAAWH,UAAU,CAAV,EAAazhB,WAAb,EAAX;AAClB,MAAIyhB,UAAU,CAAV,CAAJ,EAAkBK,QAAQL,UAAU,CAAV,EAAazhB,WAAb,EAAR;AAClB;AACA;AACA;AACA,MAAI+hB,YAAUL,OAAV,GAAoBC,MAAxB,CAzB8C,CAyBZ;AAClC,MAAIxtB,GAAJ,EAASH,QAAQwB,IAAR,CAAa,sEAAb;AACT,MAAI;AACF,QAAIwsB,UAAU,IAAId,OAAJ,CAAYa,IAAZ,EAAkBV,WAAlB,EAA+BD,SAA/B,CAAd;AACA;AACAS,cAAUG,QAAQC,MAAR,CAAeL,QAAf,EAAyB,CAAzB,CAAV;AACD,GAJD,CAIE,OAAOpO,GAAP,EAAY;AACZxf,YAAQC,GAAR,CAAY,oCAAZ;AACD;AACD;AACA,MAAI,CAACiuB,OAAOC,SAAP,CAAiBN,OAAjB,CAAL,EAAgC;AAC9B,QAAI1tB,GAAJ,EAASH,QAAQiX,KAAR,CAAc,eAAd;AACTjQ,cAAU,KAAV;AACA6mB,cAAU,CAAV;AACD;AACD;AACA,MAAIA,UAAU,CAAd,EAAiB;AACf,QAAI1tB,GAAJ,EAASH,QAAQiX,KAAR,CAAc,0CAAd;AACTjQ,cAAU,KAAV;AACA6mB,cAAU,CAAV;AACD;;AAED;AACA;AACA,MAAIC,KAAJ,EAAW;AACT,QACEA,MAAM7qB,MAAN,GAAe,CAAf,IACA6qB,MAAMjP,OAAN,CAAc,IAAd,MAAwB,CADxB,IAEA,QAAQuP,IAAR,CAAaN,MAAMO,SAAN,CAAgB,CAAhB,CAAb,CAHF,EAIE;AACA,UAAIluB,GAAJ,EAASH,QAAQC,GAAR,CAAY,gBAAZ,EAA8B6tB,MAAMO,SAAN,CAAgB,CAAhB,CAA9B;AACT;AACD,KAPD,MAOO;AACL;AACA,UAAIluB,GAAJ,EAASH,QAAQC,GAAR,CAAY,sBAAZ,EAAoC6tB,KAApC;AACT9mB,gBAAU,KAAV,CAHK,CAGY;AACjB8mB,cAAQ,CAAR;AACD;AACF;;AAED;AACA,MAAMQ,SAAS,CAACZ,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,EAA4B1S,IAA5B,CAAiCsS,SAAjC,CAAf;AACA;AACA,MAAIe,UAAU,EAAErnB,YAAF,EAASF,gBAAT,EAAkB0mB,gBAAlB,EAA2BC,cAA3B,EAAmCC,kBAAnC,EAA6CC,gBAA7C,EAAsDC,YAAtD,EAA6DQ,cAA7D,EAAd;AACA,SAAOC,OAAP;AACD,CAtED;AAuEA;AACA;;AAEApB,QAAQqB,YAAR,GAAuB,UAAUtnB,KAAV,EAAiBpK,OAAjB,EAA0B;AAC/C,MAAIyxB,UAAUpB,QAAQI,WAAR,CAAoBrmB,KAApB,EAA2BpK,OAA3B,CAAd;AACA,SAAOyxB,WAAWL,OAAOC,SAAP,CAAiBI,QAAQV,OAAzB,CAAlB;AACD,CAHD;AAIA;AACA;;;;;;AAMAV,QAAQsB,SAAR,GAAoB,UAAUf,OAAV,EAAmBC,MAAnB,EAA2BE,OAA3B,EAAoC/wB,OAApC,EAA6C;AAC/D;AACA,MAAI,OAAO4wB,OAAP,KAAmB,QAAvB,EACE,MAAMrqB,0BAAuBqqB,OAAvB,uBAAN;AACF,MAAI,OAAOC,MAAP,KAAkB,QAAtB,EACE,MAAMtqB,yBAAsBsqB,MAAtB,uBAAN;AACF,MAAID,QAAQzqB,MAAR,GAAiB,CAArB,EAAwB,MAAMI,gDAAN;AACxB,MAAIsqB,OAAO1qB,MAAP,GAAgB,CAApB,EAAuB,MAAMI,+CAAN;AACvB,MAAI,CAAC6qB,OAAOC,SAAP,CAAiBN,OAAjB,CAAL,EACE,MAAMxqB,0BAAuBwqB,OAAvB,wBAAN;AACF,MAAIA,UAAU,CAAd,EAAiB,MAAMxqB,kDAAN;AACjB,MAAIwqB,UAAUK,OAAOQ,gBAArB,EACE,MAAMrrB,oDAAN;AACF;AACAqqB,YAAUA,QAAQ1hB,WAAR,EAAV;AACA2hB,WAASA,OAAO3hB,WAAP,EAAT;AACA;AACA;AACA,MAAI+hB,YAAUL,OAAV,GAAoBC,MAAxB,CAlB+D,CAkB7B;AAClC,MAAIxtB,GAAJ,EAASH,QAAQwB,IAAR,CAAa,sEAAb;AACT,MAAIwsB,UAAU,IAAId,OAAJ,CAAYa,IAAZ,EAAkBV,WAAlB,EAA+BD,SAA/B,CAAd;AACA,MAAIQ,WAAWI,QAAQW,MAAR,CAAed,OAAf,CAAf;AACA,SAAUH,OAAV,SAAqBC,MAArB,SAA+BC,QAA/B;AACD,CAvBD;;AAyBA;AACA;;;AAGA;AACA;AACA;AACA;AACAT,QAAQyB,UAAR,GAAqB,UAAU1nB,KAAV,EAAiB;AACpClH,UAAQiX,KAAR,CAAc,6CAAd,EAA6D7Z,OAAOP,SAApE;AACA,MAAIgyB,OAAO1B,QAAQI,WAAR,CAAoBrmB,KAApB,EAA2BF,OAAtC;AACA,MAAI6nB,IAAJ,EAAUvB,oBAAoBpmB,KAApB;AACV,SAAO2nB,IAAP;AACD,CALD;AAMA;AACA1B,QAAQ2B,OAAR,GAAkB,YAAY;AAC5B,SAAOxB,iBAAP;AACD,CAFD;;AAIA;AACA;AACApwB,OAAOC,OAAP,GAAiBgwB,OAAjB;;;;;;;;;;;;;;ACrKA,IAAI/vB,OAAO2C,MAAX,EAAmBC,QAAQC,GAAR,UAAmB/C,OAAOgD,EAA1B;AACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,IAAM/B,WAAWb,QAAQ,UAAR,CAAjB;AACA,IAAMD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0I,UAAU1I,QAAQ,qBAAR,CAAhB;AACA,IAAMyxB,UAAUzxB,QAAQ,uBAAR,CAAhB;AACA,IAAM2I,KAAKD,QAAQE,GAAR,CAAY,cAAZ,CAAX;AACA,IAAM8oB,aAAa1xB,QAAQ,YAAR,CAAnB;IAEE2xB,U,GAUED,U,CAVFC,U;IACAC,e,GASEF,U,CATFE,e;IACAC,M,GAQEH,U,CARFG,M;IACAC,G,GAOEJ,U,CAPFI,G;IACAC,G,GAMEL,U,CANFK,G;IACAC,I,GAKEN,U,CALFM,I;IACAC,S,GAIEP,U,CAJFO,S;IACAC,Y,GAGER,U,CAHFQ,Y;IACAC,K,GAEET,U,CAFFS,K;IACAC,K,GACEV,U,CADFU,K;;AAEF,IAAMxxB,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA;AACA;AACA,IAAMwvB,cAAc;AAClBC,UAAQ,gBADU;AAElBC,cAAY,uBAFM;AAGlBC,cAAY,GAHM;AAIlBC,YAAU,MAJQ;AAKlBC,aAAW,OALO;AAMlBC,iBAAe;AANG,CAApB;AAQA,IAAMC,cAAc;AAClBtwB,mBAAiB,MADC;AAElBuwB,SAAO,OAFW;AAGlBC,aAAW;AAHO,CAApB;AAKA,IAAMC,cAAc;AAClBC,iBAAe,KADG;AAElBC,gBAAc,SAFI;AAGlBH,aAAW;AAHO,CAApB;AAKA;AACA,IAAMI,kBAAkB;AACtBC,UAAQ,iBADc;AAEtBC,UAAQ;AAFc,CAAxB;AAIA,IAAMC,2BAA2B;AAC/BC,YAAU,UADqB;AAE/BC,SAAO;AAFwB,CAAjC;;AAKA;AACA;;IACMC,Y;;;AACJ,0BAAc;AAAA;;AAAA;;AAEZ,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBvyB,IAAjB,OAAnB;AACA,UAAKwyB,cAAL,GAAsB,MAAKA,cAAL,CAAoBxyB,IAApB,OAAtB;AACA,UAAKyyB,YAAL,GAAoB,MAAKA,YAAL,CAAkBzyB,IAAlB,OAApB;AACA,UAAK0yB,QAAL,GAAgB,MAAKA,QAAL,CAAc1yB,IAAd,OAAhB;AACA,UAAKC,KAAL,GAAa;AACX;AACAyI,aAAO,IAFI;AAGXwmB,eAAS,IAHE;AAIXC,cAAQ,IAJG;AAKXC,gBAAU,IALC;AAMXE,aAAO,IANI;AAOXD,eAAS,IAPE;AAQX7mB,eAAS;AARE,KAAb;AAUA,UAAKmqB,eAAL,GAAuB,KAAvB,CAhBY,CAgBkB;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BY;AA4Bb;;AAED;AACA;AACA;;;;;;mCAEe5C,O,EAAS;AACtB,UAAIA,OAAJ,EAAa;AACX,YAAI6C,YAAe7C,QAAQb,OAAvB,SAAkCa,QAAQZ,MAA9C;AACA;AACA,YAAI0D,eAAe9C,QAAQV,OAA3B;AACA,YAAIyD,QAAQ/C,QAAQT,KAAR,gBAA6BS,QAAQT,KAArC,GAA+C,EAA3D;AACA,eACE;AAAA;AAAA,YAAK,OAAO0C,eAAZ;AACE;AAAC,iBAAD;AAAA,cAAO,OAAOH,WAAd,EAA2B,WAAU,OAArC;AAAA;AACQgB,eADR;AAAA;AAEE,2CAFF;AAGGC;AAHH,WADF;AAME;AAAC,iBAAD;AAAA,cAAO,OAAOjB,WAAd,EAA2B,WAAU,OAArC;AACGe,qBADH;AAAA;AACc;AAAA;AAAA;AAAS7C,sBAAQX;AAAjB;AADd;AANF,SADF;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OAnCD,MAmCO;AACL,eAAO;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;AACF;AACD;AACA;;;;;;;;;kCAMc;AAAA,mBACwD,KAAKnvB,KAD7D;AAAA,UACNyI,KADM,UACNA,KADM;AAAA,UACCwmB,OADD,UACCA,OADD;AAAA,UACUC,MADV,UACUA,MADV;AAAA,UACkBE,OADlB,UACkBA,OADlB;AAAA,UAC2BC,KAD3B,UAC2BA,KAD3B;AAAA,UACkCF,QADlC,UACkCA,QADlC;AAAA,UAC4C5mB,OAD5C,UAC4CA,OAD5C;;AAEZ,UAAIE,KAAJ,EAAWA,QAAQA,MAAM8E,WAAN,EAAR;AACX,UAAIulB,qBAAJ;AAAA,UAAkBC,YAAlB;AAAA,UAAuBC,cAAvB;AACAD,YAAM,uBAAN;AACA,UAAI9D,OAAJ,EAAa8D,MAAM,qBAAN;AACb,UAAI7D,MAAJ,EAAY6D,MAAM,qBAAN;AACZ;AACA;AACA,UAAI5D,QAAJ,EAAc4D,MAAM,qBAAN;AACd;AACA,UAAI3D,OAAJ,EAAa;AACX;AACA,YAAIC,UAAU,CAAd,EAAiB;AACf0D;AACAC,kBACE,oBAAC,KAAD;AACE,yBADF;AAEE,kBAAK,cAFP;AAGE,gBAAG,cAHL;AAIE,oBAAO,IAJT;AAKE,mBAAO9B,WALT;AAME,uBAAU,YANZ;AAOE,yBAAY,qBAPd;AAQE,sBAAU,KAAKsB;AARjB,YADF;AAYAM,yBACE;AAAC,wBAAD;AAAA,cAAc,OAAOZ,wBAArB,EAA+C,WAAU,YAAzD;AACE;AAAA;AAAA;AAAQa;AAAR;AADF,WADF;AAKD,SAnBD,CAmBE,kBAnBF,KAmB0B;AACxBA,kBAAM,oBAAN;AACAC,oBACE,oBAAC,KAAD;AACE,yBADF;AAEE,oBAAK,cAFP;AAGE,kBAAG,cAHL;AAIE,sBAAO,IAJT;AAKE,qBAAO9B,WALT;AAME,yBAAU,YANZ;AAOE,2BAAY,qBAPd;AAQE,wBAAU,KAAKsB;AARjB,cADF;AAYAM,2BACE;AAAC,0BAAD;AAAA,gBAAc,WAAd,EAAoB,OAAOZ,wBAA3B,EAAqD,WAAU,YAA/D;AACE;AAAA;AAAA;AAAQa;AAAR;AADF,aADF;AAKD;AACF,OAzCD,CAyCE,mBAzCF,KAyC2B;AACzBC,kBACE,oBAAC,KAAD;AACE,yBADF;AAEE,kBAAK,cAFP;AAGE,gBAAG,cAHL;AAIE,oBAAO,IAJT;AAKE,mBAAO9B,WALT;AAME,uBAAU,YANZ;AAOE,yBAAY,qBAPd;AAQE,sBAAU,KAAKsB;AARjB,YADF;AAYAM,yBACE;AAAC,wBAAD;AAAA,cAAc,OAAOZ,wBAArB,EAA+C,WAAU,YAAzD;AACE;AAAA;AAAA;AAAQa;AAAR;AADF,WADF;AAKD;;AAED,aACE;AAAC,YAAD;AAAA;AACE,qBAAU,sBADZ;AAEE,oBAAU,KAAKN,QAFjB;AAGE,iBAAOV;AAHT;AAKE;AAAC,mBAAD;AAAA,YAAW,SAAX,EAAe,OAAO,EAAEkB,aAAa,MAAf,EAAtB;AACE;AAAC,sBAAD;AAAA;AACE;AAAC,6BAAD;AAAA,gBAAiB,WAAU,SAA3B;AACE;AAAC,sBAAD;AAAA;AACE,yBAAO,EAAE3B,UAAU,MAAZ,EADT;AAEE,yBAAM,WAFR;AAGE,wBAAK,IAHP;AAIE,4BAAU,CAAC/oB,OAJb;AAKE,4BAAU,KAAKkqB;AALjB;AAAA;AAAA;AADF,aADF;AAYGO,iBAZH;AAaGF;AAbH;AADF;AALF,OADF;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACD;;;;wCACoB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AATkB,kCAWKpzB,SAASc,mBAAT,EAXL;AAAA,UAWVI,UAXU,yBAWVA,UAXU;;AAAA,UAYZ6H,KAZY,GAYF7H,UAZE,CAYZ6H,KAZY;;AAalB,UAAIqnB,UAAUQ,QAAQxB,WAAR,CAAoBrmB,KAApB,EAA2B9J,OAAOP,SAAP,CAAiBC,OAA5C,KAAwD,EAAtE;AACA,WAAKoqB,WAAL,CAAiB,SAAjB,EAA4BqH,OAA5B;AACA,WAAK4C,eAAL,GAAuB5C,QAAQvnB,OAA/B;AACD;AACD;;;;uCACmB2qB,S,EAAW;AAC5B;AACA;AACA;AAH4B,mCAILxzB,SAASc,mBAAT,EAJK;AAAA,UAIpBI,UAJoB,0BAIpBA,UAJoB;;AAAA,UAKtB6H,KALsB,GAKZ7H,UALY,CAKtB6H,KALsB;;;AAO5B,UAAI,CAACA,KAAL,EAAY,OAPgB,CAOR;AACpB,UAAIqnB,UAAUQ,QAAQxB,WAAR,CAAoBrmB,KAApB,EAA2B9J,OAAOP,SAAP,CAAiBC,OAA5C,CAAd;AACA,UAAIyxB,QAAQvnB,OAAR,KAAoB,KAAKmqB,eAA7B,EAA8C;AAC5C,aAAKjK,WAAL,CAAiB,SAAjB,EAA4BqH,OAA5B;AACA,aAAK4C,eAAL,GAAuB5C,QAAQvnB,OAA/B;AACD;AACF;;AAED;AACA;;;;iCACahG,K,EAAO;AAClB,UAAIkG,QAAQlG,MAAMiI,MAAN,CAAanF,KAAzB;AACA,UAAIyqB,UAAUQ,QAAQxB,WAAR,CAAoBrmB,KAApB,EAA2B9J,OAAOP,SAAP,CAAiBC,OAA5C,CAAd;AAFkB,UAGZ4wB,OAHY,GAGkCa,OAHlC,CAGZb,OAHY;AAAA,UAGHC,MAHG,GAGkCY,OAHlC,CAGHZ,MAHG;AAAA,UAGKC,QAHL,GAGkCW,OAHlC,CAGKX,QAHL;AAAA,UAGeE,KAHf,GAGkCS,OAHlC,CAGeT,KAHf;AAAA,UAGsBD,OAHtB,GAGkCU,OAHlC,CAGsBV,OAHtB;;AAIlB,WAAKhvB,QAAL,CAAc0vB,OAAd;AACD;AACD;;;;6BACSvtB,K,EAAO;AACdA,YAAM4wB,cAAN;AACA,UAAI,KAAKnzB,KAAL,CAAWuI,OAAf,EAAwB;AACtB;AACA,YAAMrI,yBAAuB,KAAKF,KAAL,CAAWyI,KAAxC;AACA9J,eAAO8B,QAAP,CAAgB2yB,OAAhB,CAAwBlzB,QAAxB;AACAvB,eAAO8B,QAAP,CAAgBuF,MAAhB;AACD;AACF;AACD;AACA;;;;;6BAES;AACP;AACA;AACA;AACA;;AAEA;AACA,UAAIvG,OAAOmJ,gBAAP,EAAJ,EAA+B;AAAA,oCACCjK,OAAO6E,SAAP,CAAiB6vB,UADlB;AAAA,YACrBhe,MADqB,yBACrBA,MADqB;AAAA,YACbie,SADa,yBACbA,SADa;;AAE7B,eACE;AAAA;AAAA,YAAK,OAAOvB,eAAZ;AACE;AAAC,eAAD;AAAA,cAAK,IAAI,EAAT;AACE;AAAC,mBAAD;AAAA,gBAAO,OAAOH,WAAd,EAA2B,WAAU,OAArC;AACGvc;AADH;AADF;AADF,SADF;AASD;;AAlBM,mCAoBgB3V,SAASc,mBAAT,EApBhB;AAAA,UAoBCI,UApBD,0BAoBCA,UApBD;;AAAA,UAqBD6H,KArBC,GAqBS7H,UArBT,CAqBD6H,KArBC;AAsBP;;AACA,UAAI,CAACA,KAAL,EAAY,OAAO,KAAK6pB,WAAL,EAAP;;AAEZ;AACA,UAAIxC,UAAUQ,QAAQxB,WAAR,CAAoBrmB,KAApB,EAA2B9J,OAAOP,SAAP,CAAiBC,OAA5C,CAAd;AACA,UAAIyxB,QAAQvnB,OAAZ,EAAqB;AACnB,eAAO,KAAKgqB,cAAL,CAAoBzC,OAApB,CAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAKwC,WAAL,CAAiB7pB,KAAjB,CAAP;AACD;AACF;;;;EA1RwBhJ,OAAO4B,S,GA2RhC;;AAEF;AACA;;;AACA5C,OAAOC,OAAP,GAAiB2zB,YAAjB;;;;;;;;ACSA;AACA;;;;;;;;;sEAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACQkB,gCADR,GAC+BC,2BAD/B;;AAEEC,eAAGC,aAAH,CAAiBnf,KAAKof,OAAL,CAAaJ,oBAAb,CAAjB;AACA;;AAHF,iBAIME,GAAGG,UAAH,CAAcL,oBAAd,CAJN;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAMUM,mBAAmBN,oBAAnB,CANV;;AAAA;AAAA;AAAA;;AAAA;AAQI;AACMO,4BATV,GAS6BC,cAAc31B,UAAUC,OAAxB,GAAkC,WAT/D;AAUI;;AAVJ,iBAWQo1B,GAAGG,UAAH,CAAcE,gBAAd,CAXR;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAYYE,mBAAmBF,gBAAnB,CAZZ;;AAAA;AAAA;AAAA;;AAAA;AAcM;AACAvyB,oBAAQC,GAAR,CACEgG,EADF,4BAE0B+rB,oBAF1B;AAIAE,eAAGQ,QAAH,CAAYC,uBAAZ,EAAqCX,oBAArC;AACA;AApBN;AAAA,mBAqBYM,mBAAmBN,oBAAnB,CArBZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeY,c;;;;;AA0Bf;AACA;AACA;;;;;;;;;;;AAxbA;;;;;;AAMA;AACA;;AAEA;AACA;;AAEA,IAAMzyB,MAAM,KAAZ;;AAEA;AACA;AACA,IAAM0yB,OAAOv1B,QAAQ,QAAR,CAAb;AACA,IAAM0V,OAAO1V,QAAQ,MAAR,CAAb;AACA,IAAM40B,KAAK50B,QAAQ,UAAR,CAAX;AACA,IAAMyI,OAAOzI,QAAQ,aAAR,CAAb;;AAEA;AACA;AACA,IAAMyxB,UAAUzxB,QAAQ,kBAAR,CAAhB;AACA,IAAMw1B,SAASx1B,QAAQ,iBAAR,CAAf;AACA,IAAM0I,UAAU1I,QAAQ,wBAAR,CAAhB;AACA,IAAMy1B,kBAAkBz1B,QAAQ,mCAAR,CAAxB;AACA,IAAM01B,SAAS11B,QAAQ,iDAAR,CAAf;;eACuBA,QAAQ,qBAAR,C;IAAfqN,U,YAAAA,U;;AAER,IAAM1E,KAAKD,QAAQE,GAAR,CAAY,UAAZ,CAAX;AACA,IAAMssB,cAAc,YAApB;AACA,IAAMS,eAAe,kBAArB;AACA,IAAMC,eAAe,gBAArB;AACA,IAAMC,aAAa,UAAnB,C,CAA+B;AAC/B,IAAMC,iBAAiB,YAAvB;AACA,IAAMv2B,YAAYS,QAAQ,mCAAR,CAAlB;;AAEA;AACA;AACA,IAAI+1B,gBAAJ;AACA,IAAI5Q,kBAAJ,C,CAAe;AACf,IAAI6Q,aAAJ,C,CAAU;AACV,IAAIC,qBAAJ;AACA,IAAIC,qBAAJ;AACA,IAAIC,wBAAJ;AACA,IAAIC,mBAAJ,C,CAAgB;AAChB,IAAIC,cAAJ,C,CAAW;AACX,IAAIC,cAAJ,C,CAAW;AACX,IAAIC,iBAAJ,C,CAAc;AACd,IAAIC,eAAJ,C,CAAY;AACZ,IAAIC,uBAAJ,C,CAAoB;AACpB,IAAIC,uBAAJ,C,CAAoB;AACpB,IAAIC,0BAAJ,C,CAAuB;AACvB,IAAIrpB,iBAAJ;AACA,IAAIspB,iBAAiB,EAArB,C,CAAyB;AACzB;AACA,IAAMC,KAAK,SAALA,EAAK;AAAA,wBAAkBC,CAAlB;AAAA,CAAX;AACA,IAAMC,KAAK,SAALA,EAAK;AAAA,wBAAkBD,CAAlB;AAAA,CAAX;;AAEA;AACA;AACA,IAAIE,KAAK,EAAT;AACA;AACA;;;;AAIA,SAASC,gBAAT,GAA4B;AAC1BrC,KAAGC,aAAH,CAAiBnf,KAAKof,OAAL,CAAaiB,OAAb,CAAjB;AACA,MAAInB,GAAGG,UAAH,CAAcgB,OAAd,CAAJ,EAA4B;AAC1B,QAAMtB,YAAY,IAAI3vB,IAAJ,GAAWoyB,WAAX,GAAyB3C,OAAzB,CAAiC,IAAjC,EAAuC,GAAvC,CAAlB;AACA,QAAM4C,mBAAmBC,qBACvBvB,aAAat2B,UAAUC,OAAvB,GAAiC,GAAjC,GAAuCi1B,SADhB,CAAzB;AAGA/xB,YAAQC,GAAR,CAAYgG,EAAZ,EAAgB,2BAAhB,EAA6CwuB,gBAA7C;AACAvC,OAAGQ,QAAH,CAAYW,OAAZ,EAAqBoB,gBAArB;AACD;AACF;AACD;AACA;;AAEA,SAAS9B,qBAAT,GAAiC;AAC/B,SAAOM,eAAe,UAAf,GAA4BC,YAAnC;AACD;AACD;AACA;;AAEAoB,GAAGK,kBAAH,GAAwB,YAAwB;AAqBjB;;AAE7B;AAvB8C;AAAA,uEAwB9C;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AACA;AACA;AACAhB,sBAAQL,KAAKsB,aAAL,CAAmB,OAAnB,CAAR;AACA,kBAAIjB,UAAU,IAAd,EAAoBA,QAAQL,KAAKuB,aAAL,CAAmB,OAAnB,CAAR;AACpBd,+BAAiB,IAAIhY,GAAJ,EAAjB;AACA6X,sBAAQN,KAAKsB,aAAL,CAAmB,OAAnB,CAAR;AACA,kBAAIhB,UAAU,IAAd,EAAoBA,QAAQN,KAAKuB,aAAL,CAAmB,OAAnB,CAAR;AACpBb,+BAAiB,IAAIjY,GAAJ,EAAjB;AACA8X,yBAAWP,KAAKsB,aAAL,CAAmB,UAAnB,CAAX;AACA,kBAAIf,aAAa,IAAjB,EAAuBA,WAAWP,KAAKuB,aAAL,CAAmB,UAAnB,CAAX;AACvBf,uBAASR,KAAKsB,aAAL,CAAmB,QAAnB,CAAT;AACA,kBAAId,WAAW,IAAf,EAAqBA,SAASR,KAAKuB,aAAL,CAAmB,QAAnB,CAAT;AACrBZ,kCAAoB,IAAIlY,GAAJ,EAApB;;AAEA;AACA2X,2BAAa,IAAIvvB,GAAJ,EAAb;AACI2wB,uBAlBN,GAkBkB,EAlBlB;;AAoBE;;AACA,kBAAInB,MAAMzrB,KAAN,KAAgB,CAApB,EAAuB;AACrBsrB,+BAAeG,MAAMoB,SAAN,CACb,eAAO;AACL;AACAC,+BAAa,SAAb,EAAwB1gB,GAAxB;AACA;AACA,sBAAIof,WAAWlX,GAAX,CAAelI,IAAIpU,EAAnB,CAAJ,EAA4B;AAC1B40B,8BAAU91B,IAAV,CAAesV,GAAf;AACD,mBAFD,MAEO;AACLof,+BAAWrT,GAAX,CAAe/L,IAAIpU,EAAnB;AACD;AACD;AACA,yBAAOoU,IAAIpU,EAAX;AACD,iBAZY,EAab,eAAO;AACL,yBAAO0R,KAAKqjB,GAAL,gCAAYC,GAAZ,EAAP;AACD,iBAfY,CAAf;AAiBD,eAlBD,MAkBO;AACL1B,+BAAe,CAAf;AACD;AACD;AACAsB,wBAAUziB,OAAV,CAAkB,eAAO;AACvBmhB,gCAAgB,CAAhB;AACAV,uBAAOqC,SAAP,CAAiB,EAAjB,EAAqBlvB,EAArB,oCAAyDqO,IAAIpU,EAA7D,YAAsEszB,YAAtE;AACAlf,oBAAIpU,EAAJ,GAASszB,YAAT;AACD,eAJD;;AAMA;AACA,kBAAII,MAAM1rB,KAAN,KAAgB,CAApB,EAAuB;AACrBqrB,+BAAeK,MAAMmB,SAAN,CACb,eAAO;AACLC,+BAAa,SAAb,EAAwB1gB,GAAxB;AACA8gB,uCAAqB9gB,IAAIpU,EAAzB,EAA6BoU,GAA7B;AACA,yBAAOA,IAAIpU,EAAX;AACD,iBALY,EAMb,eAAO;AACL,yBAAO0R,KAAKqjB,GAAL,gCAAYC,GAAZ,EAAP;AACD,iBARY,CAAf,CADqB,CAUlB;AACJ,eAXD,MAWO;AACL3B,+BAAe,CAAf;AACD;AACDvzB,sBAAQC,GAAR,CACEgG,EADF,EAEE,gBAFF,EAGEkuB,GAAGd,OAAH,CAHF,sBAImBG,YAJnB,2BAImDD,YAJnD;;AAOA;AACA,kBAAIM,SAAS3rB,KAAT,KAAmB,CAAvB,EAA0B;AACxBurB,kCAAkBI,SAASkB,SAAT,CAChB,eAAO;AACL;AACAC,+BAAa,YAAb,EAA2B1gB,GAA3B;AACA,yBAAOA,IAAI3L,UAAX;AACD,iBALe,EAMhB,eAAO;AACL,yBAAOiJ,KAAKqjB,GAAL,gCAAYC,GAAZ,EAAP;AACD,iBARe,CAAlB;AAUD,eAXD,MAWO;AACLzB,kCAAkB,CAAlB;AACD;;AAEDH,mBAAK+B,YAAL;;AAvFF;AAAA,qBAyFQzC,gBAzFR;;AAAA;AA0FE0C;AACAC;;AA3FF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxB8C;;AAAA,oBAwB/BC,oBAxB+B;AAAA;AAAA;AAAA,OAoH5C;;AAEF;;;AAtH8C,MAAdvkB,OAAc,uEAAJ,EAAI;;AAC9C,MAAInU,UAAUD,UAAUC,OAAxB;AACAu2B,YAAUqB,qBAAqB53B,OAArB,CAAV;AACAo1B,KAAGC,aAAH,CAAiBnf,KAAKof,OAAL,CAAaiB,OAAb,CAAjB;AACA,MAAI,CAACnB,GAAGG,UAAH,CAAcgB,OAAd,CAAL,EAA6B;AAC3BrzB,YAAQC,GAAR,CACEgG,EADF,EAEEouB,qCAAmChB,OAAnC,qCAFF;AAID;AACD;AACA,MAAIoC,OAAO;AACTC,cAAU,IADD;AAETC,sBAAkBH,oBAFT;AAGTI,cAAU,IAHD;AAITC,sBAAkBC,gBAJT;AAKTC,sBAAkB,IALT,CAKc;AALd,GAAX;AAOAN,SAAOrsB,OAAOC,MAAP,CAAcosB,IAAd,EAAoBxkB,OAApB,CAAP;AACAqiB,SAAO,IAAIT,IAAJ,CAASQ,OAAT,EAAkBoC,IAAlB,CAAP;AACAhT,cAAYgT,IAAZ;AACAhT,YAAU4Q,OAAV,GAAoBA,OAApB,CAkGA,SAASyC,gBAAT,GAA4B;AAC1B,QAAIE,YAAYrC,MAAMzrB,KAAN,EAAhB;AACA,QAAI+tB,YAAYrC,MAAM1rB,KAAN,EAAhB;AACA,QAAIguB,eAAerC,SAAS3rB,KAAT,EAAnB;AACA,QAAIiuB,cAAcrC,OAAO5rB,KAAP,EAAlB;AACAlI,YAAQC,GAAR,CAAYgG,EAAZ,mBAA+B+vB,SAA/B,iBAAoDC,SAApD,iBAAyEC,YAAzE,oBAAoGC,WAApG;AACD;AACF,CA9HD,C,CA8HG;AACH;AACA;AACA;;AAEA;AACA,SAASC,mBAAT,CAA6BC,YAA7B,EAA2C;AACzCr2B,UAAQC,GAAR,CAAYgG,EAAZ,EAAgB,4BAAhB;AACA,MAAMqwB,KAAKD,YAAX;AACA,MAAME,SAASxD,gBAAgBnoB,QAAhB,CAAyB4rB,UAAxC;AACA,MAAMC,eAAe;AACnBnkB,UAAMgkB,GAAGhkB,IADU;AAEnBokB,iBAAaJ,GAAGI,WAFG;AAGnBC,kBAAcL,GAAGK,YAAH,IAAmBJ,OAAOI,YAAP,CAAoBC,OAHlC;AAInBC,0BACGP,GAAGQ,WAAH,IAAkBR,GAAGQ,WAAH,CAAetW,MAAjC,IAA2C8V,GAAGQ,WAAH,CAAetW,MAAf,CAAsBuW,MAAlE,IACAR,OAAOM,oBAAP,CAA4BD,OANX;AAOnBI,+BAA2BT,OAAOS,yBAAP,CAAiCJ,OAPzC,EAOkD;AACrEK,sBACGX,GAAGQ,WAAH,IACCR,GAAGQ,WAAH,CAAe1hB,KADhB,IAECkhB,GAAGQ,WAAH,CAAe1hB,KAAf,CAAqB6hB,gBAFvB,IAGAV,OAAOU,gBAAP,CAAwBL,OAZP;AAanBM,yBACGZ,GAAGQ,WAAH,IACCR,GAAGQ,WAAH,CAAe1hB,KADhB,IAECkhB,GAAGQ,WAAH,CAAe1hB,KAAf,CAAqB+hB,yBAFvB,IAGAZ,OAAOW,mBAAP,CAA2BN,OAjBV;AAkBnBQ,yBACGd,GAAGe,WAAH,IAAkBf,GAAGe,WAAH,CAAeD,mBAAlC,IACAb,OAAOa,mBAAP,CAA2BR,OApBV;AAqBnBU,6BAAyBf,OAAOe,uBAAP,CAA+BV,OArBrC;AAsBnBW,6BACGjB,GAAGQ,WAAH,IAAkBR,GAAGQ,WAAH,CAAeU,mBAAlC,IACAjB,OAAOgB,uBAAP,CAA+BX,OAxBd;AAyBnBa,6BACGnB,GAAGe,WAAH,IAAkBf,GAAGe,WAAH,CAAeG,mBAAlC,IACAjB,OAAOkB,uBAAP,CAA+Bb,OA3Bd;AA4BnBc,iBAAapB,GAAGoB,WAAH,IAAkBnB,OAAOmB,WAAP,CAAmBd,OA5B/B;AA6BnBe,iBAAarB,GAAGqB,WAAH,IAAkBpB,OAAOoB,WAAP,CAAmBf,OA7B/B;AA8BnBgB,cAAU;AACRtmB,YAAOglB,GAAGuB,eAAH,IAAsBvB,GAAGuB,eAAH,CAAmBD,QAA1C,IAAuDtB,GAAGhkB,IADxD;AAERykB,cACGT,GAAGuB,eAAH,IAAsBvB,GAAGuB,eAAH,CAAmBd,MAA1C,IACAR,OAAOqB,QAAP,CAAgBpB,UAAhB,CAA2BO,MAA3B,CAAkCH;AAJ5B;AA9BS,GAArB;AAqCA;AACA,MAAMkB,WAAW,EAAjB;AACA;AACA1uB,SAAOuH,IAAP,CAAY0lB,aAAaS,WAAzB,EAAsCzkB,OAAtC,CAA8C,aAAK;AACjD,QAAM0lB,QAAQ1B,aAAaS,WAAb,CAAyBjmB,CAAzB,CAAd;AACAinB,aAASjnB,CAAT,IAAc;AACZY,YAAMsmB,MAAMtmB,IAAN,IAAc,QADR,EACkB;AAC9BumB,oBAAcD,MAAM3iB,KAFR;AAGZ6iB,mBAAaF,MAAM3iB,KAHP;AAIZ8iB,YAAMH,MAAMG,IAJA;AAKZC,6BAAuBJ,MAAMI,qBAAN,IAA+B,IAL1C,EAKgD;AAC5DpB,cAAQgB,MAAMhB,MAAN,IAAgB,KANZ,CAMkB;AANlB,KAAd;AAQA,QAAIlmB,MAAM,MAAV,EAAkB;AAChB;AACA,UAAMI,UAAU8mB,MAAM9mB,OAAN,CAAcL,GAAd,CAAkB,aAAK;AACrC,eAAO;AACLwE,iBAAOoC,EAAEpC,KADJ;AAEL+a,iBAAO3Y,EAAE2Y;AAFJ,SAAP;AAID,OALe,CAAhB;AAMA;AACA2H,eAASjnB,CAAT,EAAYY,IAAZ,GAAmB,QAAnB;AACAzR,cAAQC,GAAR,CACEgG,EADF,EAEE,6BAFF,EAGE4K,CAHF,EAIE,wCAJF;AAMAinB,eAASjnB,CAAT,EAAYI,OAAZ,GAAsBA,OAAtB;AACD;AACF,GA5BD;AA6BA;AACA6mB,WAAS53B,EAAT,GAAc;AACZuR,UAAM,QADM;AAEZumB,kBAAc,IAFF;AAGZC,iBAAa,IAHD;AAIZC,UAAM;AAJM,GAAd;AAMA;AACA1iB,UAAQmX,cAAR,CAAuBmL,QAAvB,EAAiC,QAAjC,EAjFyC,CAiFG;AAC5CtiB,UAAQmX,cAAR,CAAuBmL,QAAvB,EAAiC,qBAAjC,EAlFyC,CAkFgB;;AAEzD;AACAA,WAASM,OAAT,GAAmB;AACjBJ,kBAAc,cADG;AAEjBC,iBAAa,cAFI;AAGjBC,UAAM,8BAHW;AAIjBC,2BAAuB,IAJN,CAIW;AAJX,GAAnB;AAMAL,WAASO,OAAT,GAAmB;AACjBL,kBAAc,SADG;AAEjBC,iBAAa,SAFI;AAGjBC,UAAM,gCAHW;AAIjBC,2BAAuB,IAJN,CAIW;AAJX,GAAnB;;AAOA;AACA,MAAMG,WAAW,EAAjB;AACA;AACAlvB,SAAOuH,IAAP,CAAY0lB,aAAagB,WAAzB,EAAsChlB,OAAtC,CAA8C,aAAK;AACjD,QAAM0lB,QAAQ1B,aAAagB,WAAb,CAAyBxmB,CAAzB,CAAd;AACAynB,aAASznB,CAAT,IAAc;AACZY,YAAMsmB,MAAMtmB,IAAN,IAAc,QADR,EACkB;AAC9BumB,oBAAcD,MAAM3iB,KAFR;AAGZ6iB,mBAAaF,MAAM3iB,KAHP;AAIZ8iB,YAAMH,MAAMG,IAJA;AAKZnB,cAAQgB,MAAMhB,MAAN,IAAgB,KALZ,CAKkB;AAC9B;AACA;AACA;AACA;AATY,KAAd;AAWA,QAAIlmB,MAAM,MAAV,EAAkB;AAChB;AACA,UAAMI,UAAU8mB,MAAM9mB,OAAN,CAAcL,GAAd,CAAkB,aAAK;AACrC,eAAO;AACLwE,iBAAOoC,EAAEpC,KADJ;AAEL+a,iBAAO3Y,EAAE2Y;AAFJ,SAAP;AAID,OALe,CAAhB;AAMA;AACAmI,eAASznB,CAAT,EAAYY,IAAZ,GAAmB,QAAnB;AACAzR,cAAQC,GAAR,CACEgG,EADF,EAEE,6BAFF,EAGE4K,CAHF,EAIE,wCAJF;AAMAynB,eAASznB,CAAT,EAAYI,OAAZ,GAAsBA,OAAtB;AACD;AACF,GA/BD;AAgCA;AACAqnB,WAASp4B,EAAT,GAAc;AACZ;AACAuR,UAAM,QAFM;AAGZumB,kBAAc,IAHF;AAIZC,iBAAa,IAJD;AAKZC,UAAM;AALM,GAAd;AAOA;AACA1iB,UAAQmX,cAAR,CAAuB2L,QAAvB,EAAiC,qBAAjC,EA9IyC,CA8IgB;AACzD9iB,UAAQmX,cAAR,CAAuB2L,QAAvB,EAAiC,qBAAjC,EA/IyC,CA+IgB;;AAEzD7B,eAAaqB,QAAb,GAAwBA,QAAxB;AACArB,eAAa6B,QAAb,GAAwBA,QAAxB;AACA,MAAIn4B,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,wBAAhB,EAA0CwwB,YAA1C;;AAET,SAAOA,YAAP;AACD;AACD;AACA;;;AAGA,SAAShE,kBAAT,CAA4B8F,YAA5B,EAA0C;AACxC,SAAO,IAAI92B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC;AACA3B,YAAQC,GAAR,CAAYgG,EAAZ,6BAAyCsyB,YAAzC;AACA,QAAMC,eAAetG,GAAGuG,YAAH,CAAgBF,YAAhB,CAArB;AACA;AACA3tB,eAAWwrB,oBAAoBoC,YAApB,CAAX;AACA;AACAlE,OAAGoE,iBAAH,CAAqB,EAAE55B,MAAM,EAAEgL,UAAUc,QAAZ,EAAR,EAArB,EAAuDrD,IAAvD,CAA4D,YAAM;AAChEvH,cAAQC,GAAR,CAAYgG,EAAZ,EAAgB,mCAAhB;AACAvE,cAAQ,EAAEi3B,QAAQ,IAAV,EAAR;AACD,KAHD;AAID,GAXM,CAAP;AAYD;AACD;AACA;;AAEA,SAASrG,kBAAT,CAA4BsG,gBAA5B,EAA8C;AAC5C,SAAO,IAAIn3B,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMk3B,eAAe3G,GAAG4G,QAAH,CAAYF,gBAAZ,EAA8B,MAA9B,EAAsC,UAACpZ,GAAD,EAAM1gB,IAAN,EAAe;AACxE,UAAI0gB,GAAJ,EAAS,MAAMA,GAAN;AACT,UAAMoG,OAAO7f,KAAKuD,KAAL,CAAWxK,IAAX,CAAb;AACA8L,iBAAWgb,IAAX;AACA5lB,cAAQC,GAAR,CAAYgG,EAAZ,EAAgB,iBAAhB,EAAmCkuB,GAAGyE,gBAAH,CAAnC;AACAl3B,cAAQ,EAAEi3B,QAAQ,IAAV,EAAR;AACD,KANoB,CAArB;AAOD,GARM,CAAP;AASD,CA2CD,SAASrD,iBAAT,GAA6B;AAC3B;AACA;AACA,MAAMiB,SAASxD,gBAAgBnoB,QAAhB,CAAyB4rB,UAAxC;AACA,MAAMuC,mBAAmBhG,gBAAgBiG,mBAAhB,EAAzB;AACA,MAAMC,WAAWF,iBAAiBjB,QAAlC;AACA,MAAMoB,WAAWH,iBAAiBT,QAAlC;;AAEA;AACA;AACA1tB,WAASqsB,gBAAT,GAA4BrsB,SAASqsB,gBAAT,IAA6BV,OAAOU,gBAAP,CAAwBL,OAAjF;AACAhsB,WAASssB,mBAAT,GAA+BtsB,SAASssB,mBAAT,IAAgCX,OAAOW,mBAAP,CAA2BN,OAA1F;AACAhsB,WAASwsB,mBAAT,GAA+BxsB,SAASwsB,mBAAT,IAAgCb,OAAOa,mBAAP,CAA2BR,OAA1F;AACAhsB,WAAS0sB,uBAAT,GAAmC1sB,SAAS0sB,uBAAT,IAAoCf,OAAOe,uBAAP,CAA+BV,OAAtG;AACAhsB,WAASuuB,qBAAT,GAAiCvuB,SAASuuB,qBAAT,IAAkC5C,OAAO4C,qBAAP,CAA6BvC,OAAhG;;AAEA;AACA;AACA,MAAIhsB,SAAS8sB,WAAT,KAAyBh1B,SAA7B,EACEkI,SAAS8sB,WAAT,GAAuB3E,gBAAgBnoB,QAAhB,CAAyB4rB,UAAzB,CAAoCkB,WAApC,CAAgDd,OAAvE;AACF,MAAIhsB,SAAS+sB,WAAT,KAAyBj1B,SAA7B,EACEkI,SAAS+sB,WAAT,GAAuB5E,gBAAgBnoB,QAAhB,CAAyB4rB,UAAzB,CAAoCmB,WAApC,CAAgDf,OAAvE;AACF;AACA;AACA,MAAIhsB,SAASwuB,UAAT,KAAwB12B,SAA5B,EACEkI,SAASwuB,UAAT,GAAsBrG,gBAAgBnoB,QAAhB,CAAyB4rB,UAAzB,CAAoC4C,UAApC,CAA+CxC,OAArE;AACF,MAAIhsB,SAASyuB,YAAT,KAA0B32B,SAA9B,EACEkI,SAASyuB,YAAT,GAAwBtG,gBAAgBnoB,QAAhB,CAAyB4rB,UAAzB,CAAoC6C,YAApC,CAAiDzC,OAAzE;AACF,MAAIhsB,SAAS0uB,WAAT,KAAyB52B,SAA7B,EACEkI,SAAS0uB,WAAT,GAAuBvG,gBAAgBnoB,QAAhB,CAAyB4rB,UAAzB,CAAoC8C,WAApC,CAAgD1C,OAAvE;AACF,MAAIhsB,SAAS2uB,cAAT,KAA4B72B,SAAhC,EACEkI,SAAS2uB,cAAT,GAA0BxG,gBAAgBnoB,QAAhB,CAAyB4rB,UAAzB,CAAoC+C,cAApC,CAAmD3C,OAA7E;AACF,MAAIhsB,SAAS4uB,gBAAT,KAA8B92B,SAAlC,EACEkI,SAAS4uB,gBAAT,GAA4BzG,gBAAgBnoB,QAAhB,CAAyB4rB,UAAzB,CAAoCgD,gBAApC,CAAqD5C,OAAjF;AACF,MAAIhsB,SAAS6uB,eAAT,KAA6B/2B,SAAjC,EACEkI,SAAS6uB,eAAT,GAA2B1G,gBAAgBnoB,QAAhB,CAAyB4rB,UAAzB,CAAoCiD,eAApC,CAAoD7C,OAA/E;AACF;AACA;AACA,MAAIhsB,SAAS8uB,eAAT,KAA6Bh3B,SAAjC,EACEkI,SAAS8uB,eAAT,GAA2B3G,gBAAgBnoB,QAAhB,CAAyB4rB,UAAzB,CAAoCkD,eAApC,CAAoD9C,OAA/E;AACF,MAAIhsB,SAAS+uB,WAAT,KAAyBj3B,SAA7B,EACEkI,SAAS+uB,WAAT,GAAuB5G,gBAAgBnoB,QAAhB,CAAyB4rB,UAAzB,CAAoCmD,WAApC,CAAgD/C,OAAvE;AACF,MAAIhsB,SAASgvB,eAAT,KAA6Bl3B,SAAjC,EACEkI,SAASgvB,eAAT,GAA2B7G,gBAAgBnoB,QAAhB,CAAyB4rB,UAAzB,CAAoCoD,eAApC,CAAoDhD,OAA/E;AACF,MAAIhsB,SAASivB,WAAT,KAAyBn3B,SAA7B,EACEkI,SAASivB,WAAT,GAAuB9G,gBAAgBnoB,QAAhB,CAAyB4rB,UAAzB,CAAoCqD,WAApC,CAAgDjD,OAAvE;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAIhsB,SAAS0tB,QAAT,CAAkBwB,MAAlB,KAA6Bp3B,SAAjC,EAA4C;AAC1CkI,aAAS0tB,QAAT,CAAkBwB,MAAlB,GAA2BZ,SAASY,MAApC;AACAlvB,aAAS0tB,QAAT,CAAkBwB,MAAlB,CAAyB/C,MAAzB,GAAkC,IAAlC;AACD;AACD;AACA;AACA,MAAInsB,SAASktB,QAAT,CAAkBiC,UAAlB,KAAiCr3B,SAAjC,IAA8Cu2B,SAASc,UAA3D,EAAuE;AACrEnvB,aAASktB,QAAT,CAAkBiC,UAAlB,GAA+Bd,SAASc,UAAxC;AACAnvB,aAASktB,QAAT,CAAkBiC,UAAlB,CAA6BhD,MAA7B,GAAsC,IAAtC;AACD;AACD,MAAInsB,SAASktB,QAAT,CAAkBkC,QAAlB,KAA+Bt3B,SAA/B,IAA4Cu2B,SAASgB,OAAzD,EAAkE;AAChErvB,aAASktB,QAAT,CAAkBkC,QAAlB,GAA6Bf,SAASe,QAAtC;AACApvB,aAASktB,QAAT,CAAkBkC,QAAlB,CAA2BjD,MAA3B,GAAoC,IAApC;AACD;AACD,MAAInsB,SAAS0tB,QAAT,CAAkByB,UAAlB,KAAiCr3B,SAAjC,IAA8Cw2B,SAASa,UAA3D,EAAuE;AACrEnvB,aAAS0tB,QAAT,CAAkByB,UAAlB,GAA+Bb,SAASa,UAAxC;AACAnvB,aAAS0tB,QAAT,CAAkByB,UAAlB,CAA6BhD,MAA7B,GAAsC,IAAtC;AACD;AACD,MAAInsB,SAAS0tB,QAAT,CAAkB0B,QAAlB,KAA+Bt3B,SAA/B,IAA4Cw2B,SAASc,QAAzD,EAAmE;AACjEpvB,aAAS0tB,QAAT,CAAkB0B,QAAlB,GAA6Bd,SAASc,QAAtC;AACApvB,aAAS0tB,QAAT,CAAkB0B,QAAlB,CAA2BjD,MAA3B,GAAoC,IAApC;AACD;;AAED;AACAnsB,WAASsvB,OAAT,GAAmBtvB,SAASsvB,OAAT,IAAoB3D,OAAO2D,OAA9C;;AAEA;AACA;AACA;AACA;AAED;;AAED;AACA;;;;;AAKA;AACA,SAAS3E,kBAAT,GAA8B;AAC5B,MAAI;AACF;AACA;AACA,QAAIuC,WAAWltB,SAASktB,QAAxB;AACA,QAAIA,aAAap1B,SAAjB,EAA4B;AAC1B,YAAM,iCAAiCo1B,QAAvC;AACD;AACD,QAAIA,SAAS1iB,KAAT,KAAmB1S,SAAvB,EACE,MAAM,oCAAoCo1B,SAAS1iB,KAAnD;AACF;AACA,QAAIkjB,WAAW1tB,SAAS0tB,QAAxB;AACA,QAAIA,aAAa51B,SAAjB,EAA4B,MAAM,iCAAiC41B,QAAvC;AAC5B,QAAIA,SAAS6B,MAAT,KAAoBz3B,SAAxB,EACE,MAAM,sCAAsC41B,SAAS6B,MAArD;AACF,QAAI7B,SAASrvB,MAAT,KAAoBvG,SAAxB,EACE,MAAM,qCAAqC41B,SAASrvB,MAApD;;AAEF;AACA;AACA,QAAI,CAAC2B,SAASsvB,OAAd,EAAuB;;AAErB;AACF,UAAIpC,SAASrmB,IAAT,KAAkB/O,SAAtB,EACE,MAAM,mCAAmCo1B,SAASrmB,IAAlD;AACF,UACEqmB,SAASrmB,IAAT,CAAcR,OAAd,KAA0BvO,SAA1B,IACA,CAAC03B,MAAMC,OAAN,CAAcvC,SAASrmB,IAAT,CAAcR,OAA5B,CAFH,EAGE;AACA,cAAM,oDAAoD6mB,SAASrmB,IAAT,CAAcR,OAAxE;AACD;AACD,UAAI6mB,SAASwC,KAAT,KAAmB53B,SAAvB,EACE,MAAM,oCAAoCo1B,SAASwC,KAAnD;AACF,UAAIxC,SAAShZ,IAAT,KAAkBpc,SAAtB,EACE,MAAM,kCAAkCo1B,SAAShZ,IAAjD;AACA;AACF,UAAIgZ,SAASiC,UAAT,KAAwBr3B,SAA5B,EACE,MAAM,8CAA8Co1B,SAASiC,UAA7D;AACF,UAAIjC,SAASkC,QAAT,KAAsBt3B,SAA1B,EACE,MAAM,0CAA0Co1B,SAASkC,QAAzD;;AAEF;AACA,UAAI1B,SAAS7mB,IAAT,KAAkB/O,SAAtB,EACE,MAAM,mCAAmC41B,SAAS7mB,IAAlD;AACF,UACE6mB,SAAS7mB,IAAT,CAAcR,OAAd,KAA0BvO,SAA1B,IACA,CAAC03B,MAAMC,OAAN,CAAc/B,SAAS7mB,IAAT,CAAcR,OAA5B,CAFH,EAGE;AACA,cAAM,oDAAoDqnB,SAAS7mB,IAAT,CAAcR,OAAxE;AACD;AACD,UAAIqnB,SAASgC,KAAT,KAAmB53B,SAAvB,EACE,MAAM,oCAAoC41B,SAASgC,KAAnD;AACF,UAAIhC,SAASxZ,IAAT,KAAkBpc,SAAtB,EACE,MAAM,kCAAkC41B,SAASxZ,IAAjD;AACA;AACF,UAAIwZ,SAASyB,UAAT,KAAwBr3B,SAA5B,EACE,MAAM,8CAA8C41B,SAASyB,UAA7D;AACF,UAAIzB,SAAS0B,QAAT,KAAsBt3B,SAA1B,EACE,MAAM,0CAA0C41B,SAAS0B,QAAzD;AACA;AACF,UAAI1B,SAASV,QAAT,KAAsBl1B,SAA1B,EACE,MAAM,sCAAsC41B,SAASV,QAArD;AACF,UAAIU,SAASiC,QAAT,KAAsB73B,SAA1B,EACE,MAAM,sCAAsC41B,SAASiC,QAArD;AAED,KA7CD,MA6CO;AACL;AACA;AACA;AACA;AACD;AAEF,GAvED,CAuEE,OAAOtjB,KAAP,EAAc;AACd,QAAMujB,mBAAmBvI,2BAAzB;AACAjyB,YAAQiX,KAAR,CAAc,0BAAd,EAA0CujB,gBAA1C,EAA4D,OAA5D,EAAqEvjB,KAArE;AACD;AACF;;AAED;AACA;;;;AAIAqd,GAAGmG,eAAH,GAAqB,UAAUha,GAAV,EAAe;AAClC,MAAIia,QAAQ/G,MAAMgH,KAAN,GAAc77B,IAAd,CAAmB,EAAE87B,YAAY,KAAd,EAAnB,CAAZ;AACA,MAAIC,QAAQjH,MAAM+G,KAAN,GAAc77B,IAAd,CAAmB,EAAE87B,YAAY,KAAd,EAAnB,CAAZ;AACA,MAAIZ,WAAWnG,SAAS8G,KAAT,GAAiB77B,IAAjB,EAAf;AACA,MAAIg8B,SAAShH,OAAO6G,KAAP,GAAe77B,IAAf,EAAb;AACA,MAAIqB,GAAJ,EACEH,QAAQC,GAAR,CACEgG,EADF,uBAEqBwa,IAAIsa,IAAJ,EAFrB,iBAE2CL,MAAMz3B,MAFjD,gBAEkE43B,MAAM53B,MAFxE;AAKF+3B,iBAAeN,KAAf;AACAO,iBAAeJ,KAAf;AACA/H,SAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB;AACA,SAAO,EAAElxB,QAAQ,EAAE0wB,YAAF,EAASG,YAAT,EAAV,EAA4B/wB,UAAUc,QAAtC,EAAgDovB,kBAAhD,EAA0Dc,cAA1D,EAAP;AACD,CAfD;AAgBA;AACA;;AAEAxG,GAAG6G,eAAH,GAAqB,UAAU1a,GAAV,EAAe;AAClC,MAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ;;AADyB,kBAE2Bwa,IAAIrZ,IAAJ,EAF3B;AAAA,kCAE5BszB,KAF4B;AAAA,MAE5BA,KAF4B,mCAEpB,EAFoB;AAAA,kCAEhBG,KAFgB;AAAA,MAEhBA,KAFgB,mCAER,EAFQ;AAAA,qCAEJb,QAFI;AAAA,MAEJA,QAFI,sCAEO,EAFP;AAAA,mCAEWc,MAFX;AAAA,MAEWA,MAFX,oCAEoB,EAFpB;;AAGlC,MAAI,CAACJ,MAAMz3B,MAAX,EAAmBjD,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,4BAAhB,EAAnB,KACKjG,QAAQC,GAAR,CAAYgG,EAAZ,eAA2By0B,MAAMz3B,MAAjC;AACL,MAAI,CAAC43B,MAAM53B,MAAX,EAAmBjD,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,4BAAhB,EAAnB,KACKjG,QAAQC,GAAR,CAAYgG,EAAZ,eAA2B40B,MAAM53B,MAAjC;AACL,MAAI,CAAC+2B,SAAS/2B,MAAd,EAAsBjD,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,+BAAhB,EAAtB,KACKjG,QAAQC,GAAR,CAAYgG,EAAZ,eAA2B+zB,SAAS/2B,MAApC;AACL,MAAI,CAAC63B,OAAO73B,MAAZ,EAAoBjD,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,6BAAhB,EAApB,KACKjG,QAAQC,GAAR,CAAYgG,EAAZ,eAA2B60B,OAAO73B,MAAlC;AACL0wB,QAAMpT,KAAN;AACAoT,QAAMyH,MAAN,CAAaV,KAAb;AACA9G,QAAMrT,KAAN;AACAqT,QAAMwH,MAAN,CAAaP,KAAb;AACAhH,WAAStT,KAAT;AACAsT,WAASuH,MAAT,CAAgBpB,QAAhB;AACAlG,SAAOvT,KAAP;AACAuT,SAAOsH,MAAP,CAAcN,MAAd;AACA96B,UAAQC,GAAR,CAAYgG,EAAZ;AACAqtB,OAAKrN,KAAL;AACAqO,KAAGK,kBAAH;AACA7B,SAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB;AACA,SAAO,EAAEzzB,IAAI,IAAN,EAAP;AACD,CAxBD;AAyBA;AACA;;AAEA6sB,GAAG+G,kBAAH,GAAwB,UAAU5a,GAAV,EAAe;AACrC,MAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ;;AAD4B,mBAEwBwa,IAAIrZ,IAAJ,EAFxB;AAAA,oCAE/BszB,KAF+B;AAAA,MAE/BA,KAF+B,oCAEvB,EAFuB;AAAA,oCAEnBG,KAFmB;AAAA,MAEnBA,KAFmB,oCAEX,EAFW;AAAA,uCAEPb,QAFO;AAAA,MAEPA,QAFO,uCAEI,EAFJ;AAAA,qCAEQc,MAFR;AAAA,MAEQA,MAFR,qCAEiB,EAFjB;;AAGrC,MAAI,CAACJ,MAAMz3B,MAAX,EAAmBjD,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,4BAAhB,EAAnB,KACKjG,QAAQC,GAAR,CAAYgG,EAAZ,eAA2By0B,MAAMz3B,MAAjC;AACL,MAAI,CAAC43B,MAAM53B,MAAX,EAAmBjD,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,4BAAhB,EAAnB,KACKjG,QAAQC,GAAR,CAAYgG,EAAZ,eAA2B40B,MAAM53B,MAAjC;AACL,MAAI,CAAC+2B,SAAS/2B,MAAd,EAAsBjD,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,+BAAhB,EAAtB,KACKjG,QAAQC,GAAR,CAAYgG,EAAZ,eAA2B+zB,SAAS/2B,MAApC;AACL,MAAI,CAAC63B,OAAO73B,MAAZ,EAAoBjD,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,6BAAhB,EAApB,KACKjG,QAAQC,GAAR,CAAYgG,EAAZ,eAA2B60B,OAAO73B,MAAlC;AACL0wB,QAAMyH,MAAN,CAAaV,KAAb;AACA9G,QAAMwH,MAAN,CAAaP,KAAb;AACAhH,WAASuH,MAAT,CAAgBpB,QAAhB;AACAlG,SAAOsH,MAAP,CAAcN,MAAd;AACA96B,UAAQC,GAAR,CAAYgG,EAAZ;AACAqtB,OAAKrN,KAAL;AACAqO,KAAGK,kBAAH;AACA7B,SAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB;AACA,SAAO,EAAEzzB,IAAI,IAAN,EAAP;AACD,CApBD;AAqBA;AACA;;;;;;;AAOA6sB,GAAGgH,iBAAH,GAAuB,UAAU7a,GAAV,EAAe;AACpC,MAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ;;AAD2B,mBAEyBwa,IAAIrZ,IAAJ,EAFzB;AAAA,oCAE9BszB,KAF8B;AAAA,MAE9BA,KAF8B,oCAEtB,EAFsB;AAAA,oCAElBG,KAFkB;AAAA,MAElBA,KAFkB,oCAEV,EAFU;AAAA,uCAENb,QAFM;AAAA,MAENA,QAFM,uCAEK,EAFL;AAAA,qCAESc,MAFT;AAAA,MAESA,MAFT,qCAEkB,EAFlB;;AAIpC;;;AACAvG;;AAEA;AACAmG,QAAMroB,OAAN,CAAc,aAAK;AACjBoO,QAAI3hB,IAAJ,CAASy8B,IAAT,GAAgBC,CAAhB;AACAlH,OAAGmH,UAAH,CAAchb,GAAd;AACD,GAHD;AAIAA,MAAI3hB,IAAJ,CAASy8B,IAAT,GAAgB74B,SAAhB,CAZoC,CAYT;;AAE3Bm4B,QAAMxoB,OAAN,CAAc,aAAK;AACjBoO,QAAI3hB,IAAJ,CAAS48B,IAAT,GAAgB55B,CAAhB;AACAwyB,OAAGmH,UAAH,CAAchb,GAAd;AACD,GAHD;AAIAA,MAAI3hB,IAAJ,CAAS48B,IAAT,GAAgBh5B,SAAhB,CAlBoC,CAkBT;;AAE3Bs3B,WAAS3nB,OAAT,CAAiB,aAAK;AACpBoO,QAAI3hB,IAAJ,CAASk7B,QAAT,GAAoB2B,CAApB;AACArH,OAAGmH,UAAH,CAAchb,GAAd;AACD,GAHD;AAIAA,MAAI3hB,IAAJ,CAAS88B,OAAT,GAAmBl5B,SAAnB,CAxBoC,CAwBN;;AAE9Bo4B,SAAOzoB,OAAP,CAAe,aAAK;AAClBoO,QAAI3hB,IAAJ,CAASg8B,MAAT,GAAkBe,CAAlB;AACAvH,OAAGmH,UAAH,CAAchb,GAAd;AACD,GAHD;AAIAA,MAAI3hB,IAAJ,CAASg8B,MAAT,GAAkBp4B,SAAlB,CA9BoC,CA8BP;;AAE7B,SAAO,IAAIjB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,WACjB2xB,KAAK+B,YAAL,CAAkB,eAAO;AACvB,UAAI7V,GAAJ,EAAS7d,OAAO,IAAI0B,KAAJ,CAAU,UAAV,CAAP;AACTixB,SAAGK,kBAAH;AACA7B,aAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB;AACAx5B,cAAQ,EAAE+F,IAAI,IAAN,EAAR;AACD,KALD,CADiB;AAAA,GAAZ,CAAP;AAQD,CAxCD;AAyCA;AACA;;;AAGA6sB,GAAGwH,kBAAH,GAAwB,UAAUrb,GAAV,EAAe;AACrC,MAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ;;AAD4B,mBAEwBwa,IAAIrZ,IAAJ,EAFxB;AAAA,oCAE/BszB,KAF+B;AAAA,MAE/BA,KAF+B,oCAEvB,EAFuB;AAAA,oCAEnBG,KAFmB;AAAA,MAEnBA,KAFmB,oCAEX,EAFW;AAAA,uCAEPb,QAFO;AAAA,MAEPA,QAFO,uCAEI,EAFJ;AAAA,qCAEQc,MAFR;AAAA,MAEQA,MAFR,qCAEiB,EAFjB;;AAGrC,MAAI,CAACJ,MAAMz3B,MAAX,EAAmBjD,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,4BAAhB,EAAnB,KACKjG,QAAQC,GAAR,CAAYgG,EAAZ,gBAA4By0B,MAAMz3B,MAAlC;AACL,MAAI,CAAC43B,MAAM53B,MAAX,EAAmBjD,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,4BAAhB,EAAnB,KACKjG,QAAQC,GAAR,CAAYgG,EAAZ,gBAA4B40B,MAAM53B,MAAlC;AACL,MAAI,CAAC+2B,SAAS/2B,MAAd,EAAsBjD,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,+BAAhB,EAAtB,KACKjG,QAAQC,GAAR,CAAYgG,EAAZ,gBAA4B+zB,SAAS/2B,MAArC;AACL,MAAI,CAAC63B,OAAO73B,MAAZ,EAAoBjD,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,6BAAhB,EAApB,KACKjG,QAAQC,GAAR,CAAYgG,EAAZ,gBAA4B60B,OAAO73B,MAAnC;AACL0wB,QAAMoI,MAAN,CAAarB,KAAb;AACA9G,QAAMmI,MAAN,CAAalB,KAAb;AACAhH,WAASkI,MAAT,CAAgB/B,QAAhB;AACAlG,SAAOiI,MAAP,CAAcjB,MAAd;AACA96B,UAAQC,GAAR,CAAYgG,EAAZ;AACAqtB,OAAK+B,YAAL;AACAvC,SAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB;AACA,SAAO,EAAEzzB,IAAI,IAAN,EAAP;AACD,CAnBD;AAoBA;AACA;AACA,SAASu0B,oBAAT,GAAgC;AAC9B,MAAIrI,MAAMzrB,KAAN,KAAgB,CAApB,EAAuB;AACrBsrB,mBAAeG,MAAMoB,SAAN,CACb;AAAA,aAAOzgB,IAAIpU,EAAX;AAAA,KADa,EAEb;AAAA,aAAO0R,KAAKqjB,GAAL,gCAAYC,GAAZ,EAAP;AAAA,KAFa,CAAf;AAID,GALD,MAKO;AACL1B,mBAAe,CAAf;AACD;AACD,SAAOA,YAAP;AACD;AACDc,GAAG2H,sBAAH,GAA4B,UAAUxb,GAAV,EAAe;AACzC,MAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,8BAA0Cwa,IAAIsa,IAAJ,EAA1C;AACT,SAAO,EAAEnzB,WAAWo0B,sBAAb,EAAP;AACD,CAHD;AAIA;AACA,SAASE,cAAT,GAA0B;AACxB1I,kBAAgB,CAAhB;AACA,SAAOA,YAAP;AACD;AACDc,GAAG6H,gBAAH,GAAsB,UAAU1b,GAAV,EAAe;AACnC,MAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,wBAAoCwa,IAAIsa,IAAJ,EAApC,gBAAyDvH,YAAzD;AACT,SAAO,EAAExrB,QAAQk0B,gBAAV,EAAP;AACD,CAHD;AAIA;AACA5H,GAAG8H,iBAAH,GAAuB,UAAU3b,GAAV,EAAe;AACpC,MAAMvY,QAAQgmB,OAAOzN,IAAIrZ,IAAJ,GAAWc,KAAlB,CAAd;AACA,MAAMm0B,UAAU7I,eAAe,CAA/B;AACA,MAAMrrB,UAAU,EAAhB;AACA,OAAK,IAAIvE,IAAI,CAAb,EAAgBA,IAAIsE,KAApB,EAA2BtE,GAA3B;AAAgCuE,YAAQnJ,IAAR,CAAaq9B,UAAUz4B,CAAvB;AAAhC,GACA4vB,gBAAgBtrB,KAAhB;AACA,MAAI/H,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,yBAAqCwa,IAAIsa,IAAJ,EAArC,iBAA2D5yB,OAA3D;AACT,SAAO,EAAEA,gBAAF,EAAP;AACD,CARD;AASA;AACA,SAASm0B,oBAAT,GAAgC;AAC9B,MAAI1I,MAAM1rB,KAAN,KAAgB,CAApB,EAAuB;AACrBqrB,mBAAeK,MAAMmB,SAAN,CACb;AAAA,aAAOzgB,IAAIpU,EAAX;AAAA,KADa,EAEb;AAAA,aAAO0R,KAAKqjB,GAAL,gCAAYC,GAAZ,EAAP;AAAA,KAFa,CAAf;AAID,GALD,MAKO;AACL3B,mBAAe,CAAf;AACD;AACD,SAAOA,YAAP;AACD;AACDe,GAAGiI,sBAAH,GAA4B,UAAU9b,GAAV,EAAe;AACzC,MAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,8BAA0Cwa,IAAIsa,IAAJ,EAA1C;AACT,SAAO,EAAE1yB,WAAWi0B,sBAAb,EAAP;AACD,CAHD;AAIA;AACA,SAASE,cAAT,GAA0B;AACxBjJ,kBAAgB,CAAhB;AACA,SAAOA,YAAP;AACD;AACDe,GAAGmI,gBAAH,GAAsB,UAAUhc,GAAV,EAAe;AACnC,MAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,wBAAoCwa,IAAIsa,IAAJ,EAApC,gBAAyDxH,YAAzD;AACT,SAAO,EAAEhrB,QAAQi0B,gBAAV,EAAP;AACD,CAHD;AAIA;AACAlI,GAAGoI,iBAAH,GAAuB,UAAUjc,GAAV,EAAe;AACpC,MAAMvY,QAAQgmB,OAAOzN,IAAIrZ,IAAJ,GAAWc,KAAlB,CAAd;AACA,MAAMm0B,UAAU9I,eAAe,CAA/B;AACA,MAAM9qB,UAAU,EAAhB;AACA,OAAK,IAAI7E,IAAI,CAAb,EAAgBA,IAAIsE,KAApB,EAA2BtE,GAA3B;AAAgC6E,YAAQzJ,IAAR,CAAaq9B,UAAUz4B,CAAvB;AAAhC,GACA2vB,gBAAgBrrB,KAAhB;AACA,MAAI/H,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,yBAAqCwa,IAAIsa,IAAJ,EAArC,iBAA2DtyB,OAA3D;AACT,SAAO,EAAEA,gBAAF,EAAP;AACD,CARD;AASA;AACA,SAASk0B,iBAAT,GAA6B;AAC3BlJ,qBAAmB,CAAnB;AACA,SAAOA,eAAP;AACD;AACDa,GAAGsI,mBAAH,GAAyB,UAAUnc,GAAV,EAAe;AACtC,MAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,2BAAuCwa,IAAIsa,IAAJ,EAAvC,mBAA+DtH,eAA/D;AACT,SAAO,EAAE9qB,YAAYg0B,mBAAd,EAAP;AACD,CAHD;AAIA;AACA;AACA,SAASE,uBAAT,GAAmC;AACjC,MAAIhJ,SAAS3rB,KAAT,KAAmB,CAAvB,EAA0B;AACxBurB,sBAAkBI,SAASkB,SAAT,CAChB;AAAA,aAAOzgB,IAAI3L,UAAX;AAAA,KADgB,EAEhB;AAAA,aAAOiJ,KAAKqjB,GAAL,gCAAYC,GAAZ,EAAP;AAAA,KAFgB,CAAlB;AAID,GALD,MAKO;AACLzB,sBAAkB,CAAlB;AACD;AACD,SAAOA,eAAP;AACD;;AAED;AACAa,GAAGwI,mBAAH,GAAyB,UAAUrc,GAAV,EAAe;AAAA,mBACrBA,IAAIrZ,IAAJ,EADqB;AAAA,MAChCY,MADgC,cAChCA,MADgC;;AAEtC,MAAMkb,QAAQzC,IAAIkL,OAAlB;AACA,MAAIoR,UAAUC,gBAAgBh1B,MAAhB,CAAd;AACA,MAAI+0B,OAAJ,EAAa,OAAOA,OAAP;AACb;AACA,MAAIhJ,eAAevX,GAAf,CAAmBxU,MAAnB,CAAJ,EACE,OAAOi1B,4BAA0Bj1B,MAA1B,wBAAP;AACF;AACA;AACA+rB,iBAAetX,GAAf,CAAmBzU,MAAnB,EAA2Bkb,KAA3B;AACA,SAAO,EAAElb,cAAF,EAAUk1B,QAAQ,IAAlB,EAAP;AACD,CAZD;AAaA;AACA5I,GAAG6I,qBAAH,GAA2B,UAAU1c,GAAV,EAAe;AAAA,mBACvBA,IAAIrZ,IAAJ,EADuB;AAAA,MAClCY,MADkC,cAClCA,MADkC;;AAExC,MAAMkb,QAAQzC,IAAIkL,OAAlB;AACA,MAAIoR,UAAUC,gBAAgBh1B,MAAhB,CAAd;AACA,MAAI+0B,OAAJ,EAAa,OAAOA,OAAP;AACb;AACA,MAAIhJ,eAAevX,GAAf,CAAmBxU,MAAnB,CAAJ,EAAgC;AAC9B+rB,mBAAevT,MAAf,CAAsBxY,MAAtB;AACA,WAAO,EAAEA,cAAF,EAAUo1B,UAAU,IAApB,EAAP;AACD;AACD;AACA,SAAOH,4BAA0Bj1B,MAA1B,sCAAP;AACD,CAZD;AAaA;AACAssB,GAAG+I,gBAAH,GAAsB,UAAU5c,GAAV,EAAe;AAAA,mBAClBA,IAAIrZ,IAAJ,EADkB;AAAA,MAC7BY,MAD6B,cAC7BA,MAD6B;;AAEnC,MAAMkb,QAAQzC,IAAIkL,OAAlB;AACA,MAAIoR,UAAUC,gBAAgBh1B,MAAhB,CAAd;AACA,MAAI+0B,OAAJ,EAAa,OAAOA,OAAP;AACb,MAAMO,WAAWvJ,eAAevX,GAAf,CAAmBxU,MAAnB,CAAjB;AACA,SAAO,EAAEA,cAAF,EAAUk1B,QAAQI,QAAlB,EAAP;AACD,CAPD;AAQA;AACA,SAASN,eAAT,CAAyBh1B,MAAzB,EAAiC;AAC/B,MAAI,CAACA,MAAL,EAAa,OAAOi1B,mCAAP;AACbj1B,WAASkmB,OAAOpiB,QAAP,CAAgB9D,MAAhB,EAAwB,EAAxB,CAAT;AACA,MAAIu1B,MAAMv1B,MAAN,CAAJ,EAAmB,OAAOi1B,0CAAP;AACnB,MAAIj1B,SAAS,CAAb,EAAgB,OAAOi1B,4BAA0Bj1B,MAA1B,+BAAP;AAChB,MAAIA,SAASwrB,YAAb,EACE,OAAOyJ,4BAA0Bj1B,MAA1B,sBAAP;AACF;AACA,MAAIw1B,UAAU7J,MAAM8J,IAAN,CAAW,EAAEv9B,IAAI8H,MAAN,EAAX,CAAd;AACA,MAAIw1B,QAAQv6B,MAAR,KAAmB,CAAvB,EAA0B,OAAOg6B,4BAA0Bj1B,MAA1B,gBAAP;AAC1B,MAAIw1B,QAAQv6B,MAAR,GAAiB,CAArB,EACE,OAAOg6B,4BACKj1B,MADL,iDAAP;AAGF;AACA,SAAOtF,SAAP;AACD;AACD,SAASu6B,eAAT,CAAyBne,IAAzB,EAA+B;AAC7B,SAAO,EAAE4e,UAAF,EAAcC,MAAM7e,IAApB,EAAP;AACD;AACD;AACAwV,GAAGsJ,mBAAH,GAAyB,UAAUnd,GAAV,EAAe;AAAA,mBACrBA,IAAIrZ,IAAJ,EADqB;AAAA,MAChCmB,MADgC,cAChCA,MADgC;;AAEtC,MAAM2a,QAAQzC,IAAIkL,OAAlB;AACA,MAAIoR,UAAUc,gBAAgBt1B,MAAhB,CAAd;AACA,MAAIw0B,OAAJ,EAAa,OAAOA,OAAP;AACb;AACA,MAAI/I,eAAexX,GAAf,CAAmBjU,MAAnB,CAAJ,EACE,OAAO00B,4BAA0B10B,MAA1B,wBAAP;AACF;AACA;AACAyrB,iBAAevX,GAAf,CAAmBlU,MAAnB,EAA2B2a,KAA3B;AACA,SAAO,EAAE3a,cAAF,EAAU20B,QAAQ,IAAlB,EAAP;AACD,CAZD;AAaA;AACA5I,GAAGwJ,qBAAH,GAA2B,UAAUrd,GAAV,EAAe;AAAA,mBACvBA,IAAIrZ,IAAJ,EADuB;AAAA,MAClCmB,MADkC,cAClCA,MADkC;;AAExC,MAAM2a,QAAQzC,IAAIkL,OAAlB;AACA,MAAIoR,UAAUc,gBAAgBt1B,MAAhB,CAAd;AACA,MAAIw0B,OAAJ,EAAa,OAAOA,OAAP;AACb;AACA,MAAI/I,eAAexX,GAAf,CAAmBjU,MAAnB,CAAJ,EAAgC;AAC9ByrB,mBAAexT,MAAf,CAAsBjY,MAAtB;AACA,WAAO,EAAEA,cAAF,EAAU60B,UAAU,IAApB,EAAP;AACD;AACD;AACA,SAAOH,4BAA0B10B,MAA1B,sCAAP;AACD,CAZD;AAaA;AACA+rB,GAAGyJ,gBAAH,GAAsB,UAAUtd,GAAV,EAAe;AAAA,oBAClBA,IAAIrZ,IAAJ,EADkB;AAAA,MAC7BmB,MAD6B,eAC7BA,MAD6B;;AAEnC,MAAM2a,QAAQzC,IAAIkL,OAAlB;AACA,MAAIoR,UAAUc,gBAAgBt1B,MAAhB,CAAd;AACA,MAAIw0B,OAAJ,EAAa,OAAOA,OAAP;AACb,MAAMO,WAAWtJ,eAAexX,GAAf,CAAmBjU,MAAnB,CAAjB;AACA,SAAO,EAAEA,cAAF,EAAU20B,QAAQI,QAAlB,EAAP;AACD,CAPD;AAQA;AACA,SAASO,eAAT,CAAyBt1B,MAAzB,EAAiC;AAC/B,MAAI,CAACA,MAAL,EAAa,OAAO00B,mCAAP;AACb10B,WAAS2lB,OAAOpiB,QAAP,CAAgBvD,MAAhB,EAAwB,EAAxB,CAAT;AACA,MAAIg1B,MAAMh1B,MAAN,CAAJ,EAAmB,OAAO00B,0CAAP;AACnB,MAAI10B,SAAS,CAAb,EAAgB,OAAO00B,4BAA0B10B,MAA1B,+BAAP;AAChB,MAAIA,SAASgrB,YAAb,EACE,OAAO0J,4BAA0B10B,MAA1B,sBAAP;AACF;AACA,MAAIi1B,UAAU5J,MAAM6J,IAAN,CAAW,EAAEv9B,IAAIqI,MAAN,EAAX,CAAd;AACA,MAAIi1B,QAAQv6B,MAAR,KAAmB,CAAvB,EAA0B,OAAOg6B,4BAA0B10B,MAA1B,gBAAP;AAC1B,MAAIi1B,QAAQv6B,MAAR,GAAiB,CAArB,EACE,OAAOg6B,4BACK10B,MADL,iDAAP;AAGF;AACA,SAAO7F,SAAP;AACD;AACD;AACA4xB,GAAG0J,sBAAH,GAA4B,UAAUvd,GAAV,EAAe;AAAA,oBACrBA,IAAIrZ,IAAJ,EADqB;AAAA,MACnC62B,SADmC,eACnCA,SADmC;;AAEzC,MAAM/a,QAAQzC,IAAIkL,OAAlB;AACA;AACA,MAAIsI,kBAAkBzX,GAAlB,CAAsByhB,SAAtB,CAAJ,EACE,OAAOhB,+BAA6BgB,SAA7B,wBAAP;AACF;AACA;AACAhK,oBAAkBxX,GAAlB,CAAsBwhB,SAAtB,EAAiC/a,KAAjC;AACA,SAAO,EAAE+a,oBAAF,EAAaf,QAAQ,IAArB,EAAP;AACD,CAVD;AAWA;AACA5I,GAAG4J,wBAAH,GAA8B,UAAUzd,GAAV,EAAe;AAAA,oBACvBA,IAAIrZ,IAAJ,EADuB;AAAA,MACrC62B,SADqC,eACrCA,SADqC;;AAE3C,MAAM/a,QAAQzC,IAAIkL,OAAlB;AACA;AACA,MAAIsI,kBAAkBzX,GAAlB,CAAsByhB,SAAtB,CAAJ,EAAsC;AACpChK,sBAAkBzT,MAAlB,CAAyByd,SAAzB;AACA,WAAO,EAAEA,oBAAF,EAAab,UAAU,IAAvB,EAAP;AACD;AACD;AACA,SAAOH,+BAA6BgB,SAA7B,sCAAP;AACD,CAVD;AAWA;AACA3J,GAAG6J,mBAAH,GAAyB,UAAU1d,GAAV,EAAe;AAAA,oBAClBA,IAAIrZ,IAAJ,EADkB;AAAA,MAChC62B,SADgC,eAChCA,SADgC;;AAEtC,MAAM/a,QAAQzC,IAAIkL,OAAlB;AACA,MAAM2R,WAAWrJ,kBAAkBzX,GAAlB,CAAsByhB,SAAtB,CAAjB;AACA,SAAO,EAAEA,oBAAF,EAAaf,QAAQI,QAArB,EAAP;AACD,CALD;;AAOA;AACAhJ,GAAG8J,yBAAH,GAA+B,UAAU3d,GAAV,EAAe;AAC5CsT,mBAAiB,IAAIhY,GAAJ,EAAjB;AACA,SAAO,EAAEqhB,UAAU,IAAZ,EAAP;AACD,CAHD;AAIA9I,GAAG+J,yBAAH,GAA+B,UAAU5d,GAAV,EAAe;AAC5CuT,mBAAiB,IAAIjY,GAAJ,EAAjB;AACA,SAAO,EAAEqhB,UAAU,IAAZ,EAAP;AACD,CAHD;AAIA9I,GAAGgK,4BAAH,GAAkC,UAAU7d,GAAV,EAAe;AAC/CwT,sBAAoB,IAAIlY,GAAJ,EAApB;AACA,SAAO,EAAEqhB,UAAU,IAAZ,EAAP;AACD,CAHD;AAIA9I,GAAGiK,oBAAH,GAA0B,UAAU9d,GAAV,EAAe;AACvCsT,mBAAiB,IAAIhY,GAAJ,EAAjB;AACAiY,mBAAiB,IAAIjY,GAAJ,EAAjB;AACAkY,sBAAoB,IAAIlY,GAAJ,EAApB;AACAmY,mBAAiB,EAAjB;AACA,SAAO,EAAEkJ,UAAU,IAAZ,EAAP;AACD,CAND;AAOA;AACA;;;AAGA9I,GAAGkK,aAAH,GAAmB,UAAUtb,KAAV,EAAiB;AAClC6Q,iBAAe1hB,OAAf,CAAuB,UAACvO,KAAD,EAAQN,GAAR,EAAgB;AACrC,QAAIM,UAAUof,KAAd,EAAqB6Q,eAAevT,MAAf,CAAsBhd,GAAtB;AACtB,GAFD;AAGAwwB,iBAAe3hB,OAAf,CAAuB,UAACvO,KAAD,EAAQN,GAAR,EAAgB;AACrC,QAAIM,UAAUof,KAAd,EAAqB8Q,eAAexT,MAAf,CAAsBhd,GAAtB;AACtB,GAFD;AAGAywB,oBAAkB5hB,OAAlB,CAA0B,UAACvO,KAAD,EAAQN,GAAR,EAAgB;AACxC,QAAIM,UAAUof,KAAd,EAAqB+Q,kBAAkBzT,MAAlB,CAAyBhd,GAAzB;AACtB,GAFD;AAGD,CAVD;AAWA;AACA;AACA8wB,GAAGmH,UAAH,GAAgB,UAAUhb,GAAV,EAAe;AAAA,oBAC6CA,IAAIrZ,IAAJ,EAD7C;AAAA,MACvBm0B,IADuB,eACvBA,IADuB;AAAA,MACjBG,IADiB,eACjBA,IADiB;AAAA,MACX1zB,MADW,eACXA,MADW;AAAA,MACHy2B,iBADG,eACHA,iBADG;AAAA,MACgBl2B,MADhB,eACgBA,MADhB;AAAA,MACwBqzB,OADxB,eACwBA,OADxB;AAAA,MACiC8C,OADjC,eACiCA,OADjC;;AAE7B,MAAItf,SAAS,EAAb;AACA;AACA,MAAImc,IAAJ,EAAU;AACRvG,iBAAgBvU,IAAIsa,IAAJ,EAAhB,eAAsCQ,IAAtC;AACA,QAAIiC,UAAU7J,MAAM8J,IAAN,CAAW,EAAEv9B,IAAIq7B,KAAKr7B,EAAX,EAAX,CAAd;AACA,QAAIs9B,QAAQv6B,MAAR,KAAmB,CAAvB,EAA0B;AACxB;AACA,UAAI9C,GAAJ,EACEH,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,uBAE4ClzB,KAAKC,SAAL,CAAeyzB,IAAf,CAF5C;;AAKF;AACA,UAAIgC,MAAMhC,KAAKr7B,EAAX,CAAJ,EAAoB;AAClB;AACAq7B,aAAKr7B,EAAL,GAAUg8B,gBAAV;AACD;;AAEDpJ,aAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,iBAA+CK,KAAKr7B,EAApD,EAAwD2H,KAAKC,SAAL,CAAeyzB,IAAf,CAAxD;AACAjH,SAAGqK,aAAH,CAAiBpD,IAAjB,EAAuB9a,GAAvB,EAfwB,CAeK;AAC7BkT,YAAMyH,MAAN,CAAaG,IAAb;AACA;AACA,UAAIqD,cAAcjL,MAAMkL,OAAN,CAAc,EAAE3+B,IAAIq7B,KAAKr7B,EAAX,EAAd,CAAlB;AACA,UAAI,CAAC0+B,WAAL,EACE5+B,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,oEAEyFQ,KAAKr7B,EAF9F,SAGM2H,KAAKC,SAAL,CAAeyzB,IAAf,CAHN;AAKFnc,eAAS,EAAE0f,IAAI,QAAN,EAAgBvD,MAAMqD,WAAtB,EAAT;AACD,KA1BD,MA0BO,IAAIpB,QAAQv6B,MAAR,KAAmB,CAAvB,EAA0B;AAC/B;AACA0wB,YAAMoL,aAAN,CAAoB,EAAE7+B,IAAIq7B,KAAKr7B,EAAX,EAApB,EAAqC,aAAK;AACxC,YAAIC,GAAJ,EACEH,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,uBAE4CQ,KAAKr7B,EAFjD,SAEuD2H,KAAKC,SAAL,CACnDyzB,IADmD,CAFvD;AAMFzI,eAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,iBAA+CK,KAAKr7B,EAApD,EAAwD2H,KAAKC,SAAL,CAAeyzB,IAAf,CAAxD;AACAjH,WAAGqK,aAAH,CAAiBnD,CAAjB,EAAoB/a,GAApB,EATwC,CASd;AAC1BrX,eAAOC,MAAP,CAAcmyB,CAAd,EAAiBD,IAAjB;AACD,OAXD;AAYA;AACA,UAAIqD,eAAcjL,MAAMkL,OAAN,CAAc,EAAE3+B,IAAIq7B,KAAKr7B,EAAX,EAAd,CAAlB;AACA,UAAI,CAAC0+B,YAAL,EACE5+B,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,oEAEyFQ,KAAKr7B,EAF9F,SAGM2H,KAAKC,SAAL,CAAeyzB,IAAf,CAHN;AAKFnc,eAAS,EAAE0f,IAAI,QAAN,EAAgBvD,MAAMqD,YAAtB,EAAT;AACD,KAvBM,MAuBA;AACL,UAAIz+B,GAAJ,EACEH,QAAQC,GAAR,CAAYgG,EAAZ,gCAA4Cs1B,KAAKr7B,EAAjD,UAAwDs9B,QAAQv6B,MAAhE;AACF6vB,aAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,WAAyCK,KAAKr7B,EAA9C,EAAkD,mBAAlD;AACAkf,eAAS,EAAE0f,IAAI,mBAAN,EAAT;AACD;AACD;AACA9C;AACA,WAAO5c,MAAP;AACD,GAjE4B,CAiE3B;;AAEF;AACA,MAAIsc,IAAJ,EAAU;AACR1G,iBAAgBvU,IAAIsa,IAAJ,EAAhB,eAAsCW,IAAtC;AACA,QAAI8B,WAAU5J,MAAM6J,IAAN,CAAW,EAAEv9B,IAAIw7B,KAAKx7B,EAAX,EAAX,CAAd;AACA,QAAIs9B,SAAQv6B,MAAR,KAAmB,CAAvB,EAA0B;AACxB;AACA,UAAI9C,GAAJ,EACEH,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,uBAE4CW,KAAKx7B,EAFjD,SAEuD2H,KAAKC,SAAL,CAAe4zB,IAAf,CAFvD;;AAKF;AACA,UAAI6B,MAAM7B,KAAKx7B,EAAX,CAAJ,EAAoB;AAClB;AACAw7B,aAAKx7B,EAAL,GAAUs8B,gBAAV;AACD;;AAED1J,aAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,iBAA+CQ,KAAKx7B,EAApD,EAAwD2H,KAAKC,SAAL,CAAe4zB,IAAf,CAAxD;AACApH,SAAG0K,aAAH,CAAiBtD,IAAjB,EAAuBjb,GAAvB,EAfwB,CAeK;AAC7BmT,YAAMwH,MAAN,CAAaM,IAAb;AACA;AACA,UAAIuD,cAAcrL,MAAMiL,OAAN,CAAc,EAAE3+B,IAAIw7B,KAAKx7B,EAAX,EAAd,CAAlB;AACA,UAAI,CAAC++B,WAAL,EACEj/B,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,oEAEyFW,KAAKx7B,EAF9F,SAGM2H,KAAKC,SAAL,CAAe4zB,IAAf,CAHN;AAKFtc,eAAS,EAAE0f,IAAI,QAAN,EAAgBpD,MAAMuD,WAAtB,EAAT;AACD,KA1BD,MA0BO,IAAIzB,SAAQv6B,MAAR,KAAmB,CAAvB,EAA0B;AAC/B;AACA2wB,YAAMmL,aAAN,CAAoB,EAAE7+B,IAAIw7B,KAAKx7B,EAAX,EAApB,EAAqC,aAAK;AACxC,YAAIC,GAAJ,EACEH,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIwL,aAAJ,EAFhB,uBAEqDyP,KAAKx7B,EAF1D,SAGM2H,KAAKC,SAAL,CAAe4zB,IAAf,CAHN;AAKF5I,eAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,iBAA+CQ,KAAKx7B,EAApD,EAAwD2H,KAAKC,SAAL,CAAe4zB,IAAf,CAAxD;AACApH,WAAG0K,aAAH,CAAiBl9B,CAAjB,EAAoB2e,GAApB,EARwC,CAQd;AAC1BrX,eAAOC,MAAP,CAAcvH,CAAd,EAAiB45B,IAAjB;AACD,OAVD;AAWA;AACA,UAAIuD,eAAcrL,MAAMiL,OAAN,CAAc,EAAE3+B,IAAIw7B,KAAKx7B,EAAX,EAAd,CAAlB;AACA,UAAI,CAAC++B,YAAL,EACEj/B,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,oEAEyFW,KAAKx7B,EAF9F,SAGM2H,KAAKC,SAAL,CAAe4zB,IAAf,CAHN;AAKFtc,eAAS,EAAE0f,IAAI,QAAN,EAAgBpD,MAAMuD,YAAtB,EAAT;AACD,KAtBM,MAsBA;AACLj/B,cAAQC,GAAR,CAAYgG,EAAZ,gCAA4Cy1B,KAAKx7B,EAAjD,UAAwDs9B,SAAQv6B,MAAhE;AACA6vB,aAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,WAAyCK,KAAKr7B,EAA9C,EAAkD,mBAAlD;AACAkf,eAAS,EAAE0f,IAAI,mBAAN,EAAT;AACD;AACD;AACAxC;AACA,WAAOld,MAAP;AACD,GA/H4B,CA+H3B;;AAEF;AACA,MAAIpX,WAAWtF,SAAf,EAA0B;AACxBsF,aAASk3B,UAAaze,IAAIsa,IAAJ,EAAb,cAAkC/yB,MAAlC,CAAT;AACA,QAAI7H,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,kBAA8Bwa,IAAIsa,IAAJ,EAA9B,uBAA0D/yB,MAA1D;AACT;AACA8qB,WAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,iBAA+ClzB,MAA/C;;AAEA;AACA,QAAIm3B,iBAAiBvL,MAAMwL,KAAN,CAAY,aAAK;AACpC,aAAOt9B,EAAEq4B,MAAF,KAAanyB,MAAb,IAAuBlG,EAAEmH,MAAF,KAAajB,MAA3C;AACD,KAFoB,CAArB;;AAIA;AACAy2B,wBAAoBS,UACfze,IAAIsa,IAAJ,EADe,yBAElB0D,iBAFkB,CAApB;AAIA,QAAIA,sBAAsB,CAAC,CAA3B,EAA8B;AAC5B;AACA7K,YAAMmL,aAAN,CAAoB,EAAE5E,QAAQnyB,MAAV,EAApB,EAAwC,aAAK;AAC3C8qB,eAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,oBAAkDp5B,EAAE5B,EAApD,QAA8Du+B,iBAA9D;AACA38B,UAAEq4B,MAAF,GAAWsE,iBAAX;AACD,OAHD;AAIA7K,YAAMmL,aAAN,CAAoB,EAAE91B,QAAQjB,MAAV,EAApB,EAAwC,aAAK;AAC3C8qB,eAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,oBAAkDp5B,EAAE5B,EAApD,QAA8Du+B,iBAA9D;AACA38B,UAAEmH,MAAF,GAAWw1B,iBAAX;AACD,OAHD;AAID,KAVD,MAUO;AACL;AACA,UAAIY,cAAczL,MAAM6J,IAAN,CAAW,EAAEtD,QAAQnyB,MAAV,EAAX,CAAlB;AACA4rB,YAAM0L,aAAN,CAAoB,EAAEnF,QAAQnyB,MAAV,EAApB;AACA,UAAIq3B,YAAYp8B,MAAhB,EACE6vB,OAAOqC,SAAP,CACE1U,IAAIya,OAAJ,EADF,gBAEcmE,YAAYp8B,MAF1B,0BAEqD+E,MAFrD;AAIF,UAAIu3B,cAAc3L,MAAM6J,IAAN,CAAW,EAAEx0B,QAAQjB,MAAV,EAAX,CAAlB;AACA4rB,YAAM0L,aAAN,CAAoB,EAAEr2B,QAAQjB,MAAV,EAApB;AACA,UAAIu3B,YAAYt8B,MAAhB,EACE6vB,OAAOqC,SAAP,CACE1U,IAAIya,OAAJ,EADF,gBAEcqE,YAAYt8B,MAF1B,0BAEqD+E,MAFrD;AAIH;AACD;AACA2rB,UAAM2L,aAAN,CAAoB,EAAEp/B,IAAI8H,MAAN,EAApB;AACA,WAAO,EAAE82B,IAAI,QAAN,EAAgB92B,cAAhB,EAAwBy2B,oCAAxB,EAAP;AACD;;AAED;AACA,MAAIl2B,WAAW7F,SAAf,EAA0B;AACxB6F,aAAS22B,UAAaze,IAAIsa,IAAJ,EAAb,cAAkCxyB,MAAlC,CAAT;AACA,QAAIpI,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,kBAA8Bwa,IAAIsa,IAAJ,EAA9B,uBAA0DxyB,MAA1D;AACTuqB,WAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,iBAA+C3yB,MAA/C;AACAqrB,UAAM0L,aAAN,CAAoB,EAAEp/B,IAAIqI,MAAN,EAApB;AACA,WAAO,EAAEu2B,IAAI,QAAN,EAAgBv2B,cAAhB,EAAP;AACD;;AAED;AACA,MAAIqzB,OAAJ,EAAa;AACX5G,iBAAgBvU,IAAIsa,IAAJ,EAAhB,kBAAyCa,OAAzC;AACA,QAAI4B,YAAU3J,SAAS4J,IAAT,CAAc,EAAE90B,YAAYizB,QAAQjzB,UAAtB,EAAd,CAAd;AACA,QAAI60B,UAAQv6B,MAAR,KAAmB,CAAvB,EAA0B;AACxB;AACA,UAAI9C,GAAJ,EACEH,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,2BAEgDlzB,KAAKC,SAAL,CAAe8zB,OAAf,CAFhD;;AAKF;AACA,UAAI2B,MAAM3B,QAAQjzB,UAAd,CAAJ,EAA+B;AAC7B;AACAizB,gBAAQjzB,UAAR,GAAqBg0B,mBAArB;AACD;;AAED7J,aAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,oBAAkDU,QAAQjzB,UAA1D,EAAsEd,KAAKC,SAAL,CAAe8zB,OAAf,CAAtE;AACAtH,SAAGkL,gBAAH,CAAoB5D,OAApB,EAA6Bnb,GAA7B,EAfwB,CAeW;AACnCoT,eAASuH,MAAT,CAAgBQ,OAAhB;AACA;AACA,UAAI6D,iBAAiB5L,SAASgL,OAAT,CAAiB,EAAEl2B,YAAYizB,QAAQjzB,UAAtB,EAAjB,CAArB;AACA,UAAI,CAAC82B,cAAL,EACEz/B,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,2EAEgGa,QAAQjzB,UAFxG,SAGMd,KAAKC,SAAL,CAAe8zB,OAAf,CAHN;AAKFxc,eAAS,EAAE0f,IAAI,QAAN,EAAgBlD,SAAS6D,cAAzB,EAAT;AACD,KA1BD,MA0BO,IAAIjC,UAAQv6B,MAAR,KAAmB,CAAvB,EAA0B;AAC/B;AACA4wB,eAASkL,aAAT,CAAuB,EAAEp2B,YAAYizB,QAAQjzB,UAAtB,EAAvB,EAA2D,aAAK;AAC9D,YAAIxI,GAAJ,EACEH,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,2BAEgDa,QAAQjzB,UAFxD,SAEsEd,KAAKC,SAAL,CAClE8zB,OADkE,CAFtE;AAMF9I,eAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,oBAAkDU,QAAQjzB,UAA1D,EAAsEd,KAAKC,SAAL,CAAe8zB,OAAf,CAAtE;AACAtH,WAAGkL,gBAAH,CAAoB7D,CAApB,EAAuBlb,GAAvB,EAT8D,CASjC;AAC7BrX,eAAOC,MAAP,CAAcsyB,CAAd,EAAiBC,OAAjB;AACD,OAXD;AAYA;;AAEA,UAAI6D,kBAAiB5L,SAASgL,OAAT,CAAiB,EAAEl2B,YAAYizB,QAAQjzB,UAAtB,EAAjB,CAArB;AACA,UAAI,CAAC82B,eAAL,EACEz/B,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,+EAEoGa,QAAQjzB,UAF5G,SAGMd,KAAKC,SAAL,CAAe8zB,OAAf,CAHN;AAKFxc,eAAS,EAAE0f,IAAI,QAAN,EAAgBlD,SAAS6D,eAAzB,EAAT;AACD,KAxBM,MAwBA;AACL,UAAIt/B,GAAJ,EACEH,QAAQC,GAAR,CAAYgG,EAAZ,oCAAgD21B,QAAQjzB,UAAxD,UAAuE60B,UAAQv6B,MAA/E;AACF6vB,aAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,WAAyCU,QAAQjzB,UAAjD,EAA6D,sBAA7D;AACAyW,eAAS,EAAE0f,IAAI,mBAAN,EAAT;AACD;AACD,WAAO1f,MAAP;AACD,GAxP4B,CAwP3B;;AAEF;AACA;AACA,MAAIsf,OAAJ,EAAa;AACX,QAAMgB,UAAU,EAAhB;AACAhB,YAAQrsB,OAAR,CAAgB,kBAAU;AACxB2iB,mBAAgBvU,IAAIsa,IAAJ,EAAhB,iBAAwCD,MAAxC;AACA,UAAI0C,UAAU1J,OAAO2J,IAAP,CAAY,EAAE90B,YAAYmyB,OAAOnyB,UAArB,EAAZ,CAAd;AACA,UAAI60B,QAAQv6B,MAAR,KAAmB,CAAvB,EAA0B;AACxB;AACA,YAAI9C,GAAJ,EACEH,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,2BAEgDlzB,KAAKC,SAAL,CAAegzB,MAAf,CAFhD;;AAKF;AACA,YAAIyC,MAAMzC,OAAOnyB,UAAb,CAAJ,EAA8B;AAC5B;AACA,gBAAM,IAAItF,KAAJ,gEAAuEwE,KAAKC,SAAL,CAAegzB,MAAf,CAAvE,+BAAN;AACD;;AAEDhI,eAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,mBAAiDJ,OAAOnyB,UAAxD,EAAoEd,KAAKC,SAAL,CAAegzB,MAAf,CAApE;AACAxG,WAAGqL,eAAH,CAAmB7E,MAAnB,EAA2Bra,GAA3B,EAfwB,CAeS;AACjCqT,eAAOsH,MAAP,CAAcN,MAAd;AACA;AACA,YAAI8E,gBAAgB9L,OAAO+K,OAAP,CAAe,EAAEl2B,YAAYmyB,OAAOnyB,UAArB,EAAf,CAApB;AACA,YAAI,CAACi3B,aAAL,EACE5/B,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,0EAE+FD,OAAOnyB,UAFtG,SAGMd,KAAKC,SAAL,CAAegzB,MAAf,CAHN;AAKF1b,iBAAS,EAAE0f,IAAI,QAAN,EAAgBhE,QAAQ8E,aAAxB,EAAT;AACD,OA1BD,MA0BO,IAAIpC,QAAQv6B,MAAR,KAAmB,CAAvB,EAA0B;AAC/B;AACA6wB,eAAOiL,aAAP,CAAqB,EAAEp2B,YAAYmyB,OAAOnyB,UAArB,EAArB,EAAwD,aAAK;AAC3D,cAAIxI,GAAJ,EACEH,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,2BAEgDD,OAAOnyB,UAFvD,SAEqEd,KAAKC,SAAL,CACjEgzB,MADiE,CAFrE;AAMFhI,iBAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,mBAAiDJ,OAAOnyB,UAAxD,EAAoEd,KAAKC,SAAL,CAAegzB,MAAf,CAApE;AACAxG,aAAGqL,eAAH,CAAmB9D,CAAnB,EAAsBpb,GAAtB,EAT2D,CAS/B;AAC5BrX,iBAAOC,MAAP,CAAcwyB,CAAd,EAAiBf,MAAjB;AACD,SAXD;AAYA;;AAEA,YAAI8E,iBAAgB9L,OAAO+K,OAAP,CAAe,EAAEl2B,YAAYmyB,OAAOnyB,UAArB,EAAf,CAApB;AACA,YAAI,CAACi3B,cAAL,EACE5/B,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,8EAEmGD,OAAOnyB,UAF1G,SAGMd,KAAKC,SAAL,CAAegzB,MAAf,CAHN;AAKF1b,iBAAS,EAAE0f,IAAI,QAAN,EAAgBhE,QAAQ8E,cAAxB,EAAT;AACD,OAxBM,MAwBA;AACL,YAAIz/B,GAAJ,EACEH,QAAQC,GAAR,CAAYgG,EAAZ,oCAAgD60B,OAAOnyB,UAAvD,UAAsE60B,QAAQv6B,MAA9E;AACF6vB,eAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,WAAyCJ,OAAOnyB,UAAhD,EAA4D,sBAA5D;AACAyW,iBAAS,EAAE0f,IAAI,mBAAN,EAAT;AACD;AACD;AACAY,cAAQ1gC,IAAR,CAAaogB,MAAb;AACD,KA7DD;AA8DA,WAAOsgB,OAAP;AACD,GA7T4B,CA6T3B;;AAEF;AACA,SAAO,EAAEZ,IAAI,gBAAN,EAAP;AACD,CAjUD;AAkUA;AACA;AACAxK,GAAGuL,eAAH,GAAqB,UAAUpf,GAAV,EAAe;AAAA,oBAClBA,IAAIrZ,IAAJ,EADkB;AAAA,MAC5B0iB,KAD4B,eAC5BA,KAD4B;;AAElC,MAAI4V,UAAU,EAAd;AACA5V,QAAMzX,OAAN,CAAc,gBAAQ;AAAA,QACZupB,OADY,GAC2BkE,IAD3B,CACZlE,OADY;AAAA,QACHqC,SADG,GAC2B6B,IAD3B,CACH7B,SADG;AAAA,QACQ8B,cADR,GAC2BD,IAD3B,CACQC,cADR;AAEpB;;AACA,QAAInE,OAAJ,EAAa8D,QAAQ1gC,IAAR,CAAaghC,gBAAgBpE,OAAhB,EAAyBnb,GAAzB,CAAb;AACb;AACA,QAAIwd,cAAcv7B,SAAlB,EAA6Bg9B,QAAQ1gC,IAAR,CAAaihC,gBAAgBhC,SAAhB,EAA2Bxd,GAA3B,CAAb;AAC7B;AACA,QAAIsf,cAAJ,EAAoBL,QAAQ1gC,IAAR,CAAa,EAAE8/B,IAAI,SAAN,EAAiBiB,8BAAjB,EAAb;AACrB,GARD;AASA,SAAOL,OAAP;AACD,CAbD;AAcA;AACA,SAASM,eAAT,CAAyBpE,OAAzB,EAAkCnb,GAAlC,EAAuC;AACrCuU,eAAgBvU,IAAIsa,IAAJ,EAAhB,kBAAyCa,OAAzC;AACA,MAAI4B,UAAU3J,SAAS4J,IAAT,CAAc,EAAE90B,YAAYizB,QAAQjzB,UAAtB,EAAd,CAAd;AACA,MAAI60B,QAAQv6B,MAAR,KAAmB,CAAvB,EAA0B;AACxB;AACA,QAAI9C,GAAJ,EACEH,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,2BAEgDlzB,KAAKC,SAAL,CAAe8zB,OAAf,CAFhD;AAIF;AACA,QAAI2B,MAAM3B,QAAQjzB,UAAd,CAAJ,EAA+B;AAC7B;AACAizB,cAAQjzB,UAAR,GAAqBg0B,mBAArB;AACD;AACD7J,WAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,oBAAkDU,QAAQjzB,UAA1D,EAAsEd,KAAKC,SAAL,CAAe8zB,OAAf,CAAtE;AACAtH,OAAGkL,gBAAH,CAAoB5D,OAApB,EAA6Bnb,GAA7B,EAbwB,CAaW;AACnCoT,aAASuH,MAAT,CAAgBQ,OAAhB;AACA;AACA,QAAI6D,iBAAiB5L,SAASgL,OAAT,CAAiB,EAAEl2B,YAAYizB,QAAQjzB,UAAtB,EAAjB,CAArB;AACA,QAAI,CAAC82B,cAAL,EACEz/B,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,2EAEgGa,QAAQjzB,UAFxG,SAGMd,KAAKC,SAAL,CAAe8zB,OAAf,CAHN;AAKFxc,aAAS,EAAE0f,IAAI,QAAN,EAAgBlD,SAAS6D,cAAzB,EAAT;AACD,GAxBD,MAwBO,IAAIjC,QAAQv6B,MAAR,KAAmB,CAAvB,EAA0B;AAC/B;AACA4wB,aAASkL,aAAT,CAAuB,EAAEp2B,YAAYizB,QAAQjzB,UAAtB,EAAvB,EAA2D,aAAK;AAC9D,UAAIxI,GAAJ,EACEH,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,2BAEgDa,QAAQjzB,UAFxD,SAEsEd,KAAKC,SAAL,CAClE8zB,OADkE,CAFtE;AAMF9I,aAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,oBAAkDU,QAAQjzB,UAA1D,EAAsEd,KAAKC,SAAL,CAAe8zB,OAAf,CAAtE;AACAtH,SAAGkL,gBAAH,CAAoB7D,CAApB,EAAuBlb,GAAvB,EAT8D,CASjC;AAC7BrX,aAAOC,MAAP,CAAcsyB,CAAd,EAAiBC,OAAjB;AACD,KAXD;AAYA;;AAEA,QAAI6D,mBAAiB5L,SAASgL,OAAT,CAAiB,EAAEl2B,YAAYizB,QAAQjzB,UAAtB,EAAjB,CAArB;AACA,QAAI,CAAC82B,gBAAL,EACEz/B,QAAQC,GAAR,CACEgG,EADF,kBAEgBwa,IAAIsa,IAAJ,EAFhB,+EAEoGa,QAAQjzB,UAF5G,SAGMd,KAAKC,SAAL,CAAe8zB,OAAf,CAHN;AAKFxc,aAAS,EAAE0f,IAAI,QAAN,EAAgBlD,SAAS6D,gBAAzB,EAAT;AACD,GAxBM,MAwBA;AACL,QAAIt/B,GAAJ,EACEH,QAAQC,GAAR,CAAYgG,EAAZ,oCAAgD21B,QAAQjzB,UAAxD,UAAuE60B,QAAQv6B,MAA/E;AACF6vB,WAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,WAAyCU,QAAQjzB,UAAjD,EAA6D,sBAA7D;AACAyW,aAAS,EAAE0f,IAAI,mBAAN,EAAT;AACD;AACD,SAAO1f,MAAP;AACD,C,CAAC;AACF;AACA,SAAS6gB,eAAT,CAAyBhC,SAAzB,EAAoCxd,GAApC,EAAyC;AACvC,MAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,kBAA8Bwa,IAAIsa,IAAJ,EAA9B,0BAA6DkD,SAA7D;AACT;AACAnL,SAAOqC,SAAP,CAAiB1U,IAAIya,OAAJ,EAAjB,oBAAkD+C,SAAlD;AACApK,WAASyL,aAAT,CAAuB,EAAE32B,YAAYs1B,SAAd,EAAvB;AACA,SAAO,EAAEa,IAAI,QAAN,EAAgBb,oBAAhB,EAAP;AACD;;AAED;AACA;AACA;;;AAGA3J,GAAGqK,aAAH,GAAmB,UAAUpD,IAAV,EAAgB9a,GAAhB,EAAqB;AACtC,MAAI,CAAC8a,KAAK2E,KAAV,EAAiB3E,KAAK2E,KAAL,GAAa,EAAb;AACjB,MAAI7O,MAAM5Q,IAAIwL,aAAJ,MAAuBxL,IAAI8E,aAAJ,EAAjC;AACAgW,OAAK2E,KAAL,CAAWlhC,IAAX,CAAgBqyB,GAAhB;AACA,MAAIlxB,GAAJ,EAAS;AACP,QAAIiS,MAAM,EAAV;AACAmpB,SAAK2E,KAAL,CAAW7tB,OAAX,CAAmB,cAAM;AACvBD,mBAAW+tB,EAAX;AACD,KAFD;AAGAngC,YAAQC,GAAR,CAAYgG,EAAZ,EAAgB,SAAhB,EAA2BmM,GAA3B;AACD;AACF,CAXD;AAYAkiB,GAAG8L,aAAH,GAAmB,UAAU7E,IAAV,EAAgB;AACjC,MAAI8E,UAAUj3B,OAAOC,MAAP,CAAc,EAAd,EAAkBkyB,IAAlB,CAAd;AACA/lB,UAAQmX,cAAR,CAAuB0T,OAAvB,EAAgC,OAAhC;AACA,SAAOA,OAAP;AACD,CAJD;AAKA;AACA;AACA;;;AAGA/L,GAAG0K,aAAH,GAAmB,UAAUtD,IAAV,EAAgBjb,GAAhB,EAAqB;AACtC,MAAI,CAACib,KAAK4E,KAAV,EAAiB5E,KAAK4E,KAAL,GAAa,EAAb;AACjB,MAAIjP,MAAM5Q,IAAIwL,aAAJ,MAAuBxL,IAAI8E,aAAJ,EAAjC;AACAmW,OAAK4E,KAAL,CAAWthC,IAAX,CAAgBqyB,GAAhB;AACA,MAAIlxB,GAAJ,EAAS;AACP,QAAIiS,MAAM,EAAV;AACAspB,SAAK4E,KAAL,CAAWjuB,OAAX,CAAmB,cAAM;AACvBD,mBAAW+tB,EAAX;AACD,KAFD;AAGAngC,YAAQC,GAAR,CAAYgG,EAAZ,EAAgB,SAAhB,EAA2BmM,GAA3B;AACD;AACF,CAXD;AAYAkiB,GAAGiM,aAAH,GAAmB,UAAU7E,IAAV,EAAgB;AACjC,MAAI8E,UAAUp3B,OAAOC,MAAP,CAAc,EAAd,EAAkBqyB,IAAlB,CAAd;AACAlmB,UAAQmX,cAAR,CAAuB6T,OAAvB,EAAgC,OAAhC;AACA,SAAOA,OAAP;AACD,CAJD;AAKA;AACA;AACA;;;AAGAlM,GAAGkL,gBAAH,GAAsB,UAAU5D,OAAV,EAAmBnb,GAAnB,EAAwB;AAC5C,MAAI,CAACmb,QAAQsE,KAAb,EAAoBtE,QAAQsE,KAAR,GAAgB,EAAhB;AACpB,MAAI7O,MAAM5Q,IAAIwL,aAAJ,MAAuBxL,IAAI8E,aAAJ,EAAjC;AACAqW,UAAQsE,KAAR,CAAclhC,IAAd,CAAmBqyB,GAAnB;AACA,MAAIlxB,GAAJ,EAAS;AACP,QAAIiS,MAAM,EAAV;AACAwpB,YAAQsE,KAAR,CAAc7tB,OAAd,CAAsB,cAAM;AAC1BD,mBAAW+tB,EAAX;AACD,KAFD;AAGAngC,YAAQC,GAAR,CAAYgG,EAAZ,EAAgB,YAAhB,EAA8BmM,GAA9B;AACD;AACF,CAXD;AAYAkiB,GAAGmM,gBAAH,GAAsB,UAAU7E,OAAV,EAAmB;AACvC,MAAI8E,aAAat3B,OAAOC,MAAP,CAAc,EAAd,EAAkBuyB,OAAlB,CAAjB;AACApmB,UAAQmX,cAAR,CAAuB+T,UAAvB,EAAmC,OAAnC;AACA,SAAOA,UAAP;AACD,CAJD;AAKA;AACA;AACA;;;AAGApM,GAAGqL,eAAH,GAAqB,UAAU7E,MAAV,EAAkBra,GAAlB,EAAuB;AAC1C,MAAI,CAACqa,OAAOoF,KAAZ,EAAmBpF,OAAOoF,KAAP,GAAe,EAAf;AACnB,MAAI7O,MAAM5Q,IAAIwL,aAAJ,MAAuBxL,IAAI8E,aAAJ,EAAjC;AACAuV,SAAOoF,KAAP,CAAalhC,IAAb,CAAkBqyB,GAAlB;AACA,MAAIlxB,GAAJ,EAAS;AACP,QAAIiS,MAAM,EAAV;AACA0oB,WAAOoF,KAAP,CAAa7tB,OAAb,CAAqB,cAAM;AACzBD,mBAAW+tB,EAAX;AACD,KAFD;AAGAngC,YAAQC,GAAR,CAAYgG,EAAZ,EAAgB,WAAhB,EAA6BmM,GAA7B;AACD;AACF,CAXD;AAYAkiB,GAAGqM,eAAH,GAAqB,UAAU7F,MAAV,EAAkB;AACrC,MAAI8F,YAAYx3B,OAAOC,MAAP,CAAc,EAAd,EAAkByxB,MAAlB,CAAhB;AACAtlB,UAAQmX,cAAR,CAAuBiU,SAAvB,EAAkC,OAAlC;AACA,SAAOA,SAAP;AACD,CAJD;;AAMA;AACA;AACA;;;AAGAtM,GAAGuM,WAAH,GAAiB,UAAUC,QAAV,EAAoB;AACnC,MAAIhkC,UAAUD,UAAUC,OAAxB;;AAEA;AACA;AACAu2B,YAAU5Q,YAAYA,UAAU4Q,OAAtB,GAAgCqB,qBAAqB53B,OAArB,CAA1C;AACA,MAAIikC,KAAK,IAAIlO,IAAJ,CAASQ,OAAT,EAAkB;AACzBqC,cAAU,IADe;AAEzBC,sBAAkB,4BAAM;AACtB,UAAI,OAAOmL,QAAP,KAAoB,QAAxB,EAAkC;AAChC,YAAI3gC,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,qCAAgD66B,QAAhD;AACT,YAAIpG,QAAQqG,GAAGnM,aAAH,CAAiB,OAAjB,EAA0B+F,KAA1B,GAAkC77B,IAAlC,CAAuC,EAAE87B,YAAY,KAAd,EAAvC,CAAZ;AACA,YAAIC,QAAQkG,GAAGnM,aAAH,CAAiB,OAAjB,EAA0B+F,KAA1B,GAAkC77B,IAAlC,CAAuC,EAAE87B,YAAY,KAAd,EAAvC,CAAZ;AACA,YAAMZ,WAAW+G,GAAGnM,aAAH,CAAiB,UAAjB,EAA6B+F,KAA7B,GAAqC77B,IAArC,CAA0C,EAAE87B,YAAY,KAAd,EAA1C,CAAjB;AACA,YAAME,SAASiG,GAAGnM,aAAH,CAAiB,QAAjB,EAA2B+F,KAA3B,GAAmC77B,IAAnC,CAAwC,EAAE87B,YAAY,KAAd,EAAxC,CAAf;AACA,YAAI97B,OAAO,EAAE47B,YAAF,EAASG,YAAT,EAAgBb,kBAAhB,EAA0Bc,cAA1B,EAAX;AACA,YAAIlV,OAAO/d,KAAKC,SAAL,CAAehJ,IAAf,CAAX;AACA,YAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,oBAAgC+M,KAAKof,OAAL,CAAa0O,QAAb,CAAhC;AACT5O,WAAGC,aAAH,CAAiBnf,KAAKof,OAAL,CAAa0O,QAAb,CAAjB;AACA,YAAI3gC,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,oBAAgC66B,QAAhC;AACT5O,WAAG8O,aAAH,CAAiBF,QAAjB,EAA2Blb,IAA3B;AACA5lB,gBAAQC,GAAR,CAAYgG,EAAZ,+BAA2C66B,QAA3C;AACD,OAbD,MAaO;AACL9gC,gBAAQC,GAAR,CAAYgG,EAAZ,gBAA4B66B,QAA5B;AACD;AACF;AAnBwB,GAAlB,CAAT;AAqBD,CA3BD;AA4BA;AACA;;;;AAIAxM,GAAG2M,iBAAH,GAAuB,UAAUH,QAAV,EAAoB;AACzC,MAAIvI,eAAe/F,cAAc31B,UAAUC,OAAxB,GAAkC,WAArD;AACAo1B,KAAGC,aAAH,CAAiBnf,KAAKof,OAAL,CAAamG,YAAb,CAAjB;AACA;AACA,MAAI,CAACrG,GAAGG,UAAH,CAAckG,YAAd,CAAL,EAAkC;AAChCv4B,YAAQiX,KAAR,CAAchR,EAAd,mCAAiDsyB,YAAjD;AACD,GAFD,MAEO;AACLrG,OAAGQ,QAAH,CAAY6F,YAAZ,EAA0BuI,QAA1B;AACA9gC,YAAQC,GAAR,CAAYgG,EAAZ,2BAAuCsyB,YAAvC,YAA0DuI,QAA1D;AACD;AACF,CAVD;;AAYA;AACA;;AAEA,SAASI,yBAAT,GAAqC;AACnC,SAAOrkC,UAAUC,OAAV,GAAoBo2B,YAA3B;AACD;AACD,SAASjB,yBAAT,GAAqC;AACnC,SAAOO,cAAc0O,2BAArB;AACD;AACD5M,GAAGvqB,uBAAH,GAA6B,YAAM;AACjC,SAAO,EAAEo3B,UAAUD,2BAAZ,EAAP;AACD,CAFD;AAGA;AACA;;;;;;;AAOA5M,GAAGoE,iBAAH,GAAuB,eAAO;AAC5B,MAAIjY,IAAI3hB,IAAJ,KAAa4D,SAAjB,EACE,MAAM,kDAAN;AACF,MAAMk2B,mBAAmBnY,IAAI3hB,IAAJ,CAASsiC,IAAT,IAAiBnP,2BAA1C;AACAC,KAAGC,aAAH,CAAiBnf,KAAKof,OAAL,CAAawG,gBAAb,CAAjB;AACA;AACA,MAAI1G,GAAGG,UAAH,CAAcuG,gBAAd,CAAJ,EAAqC;AACnC,QAAM7G,YAAY,IAAI3vB,IAAJ,GAAWoyB,WAAX,GAAyB3C,OAAzB,CAAiC,IAAjC,EAAuC,GAAvC,CAAlB;AACA,QAAMwP,iBACJ7O,cAAc31B,UAAUC,OAAxB,GAAkC,GAAlC,GAAwCi1B,SAAxC,GAAoDmB,YADtD;AAEAhB,OAAGQ,QAAH,CAAYkG,gBAAZ,EAA8ByI,cAA9B;AACArhC,YAAQC,GAAR,CAAYgG,EAAZ,EAAgB,uBAAhB,EAAyCo7B,cAAzC;AACD;AACD,MAAMC,OAAOv7B,KAAK+B,SAAL,CAAe2Y,IAAI3hB,IAAJ,CAASgL,QAAxB,CAAb;AACA,SAAOooB,GAAGqP,UAAH,CAAc3I,gBAAd,EAAgC0I,IAAhC,EACJ/5B,IADI,CACC,gBAAQ;AACZvH,YAAQC,GAAR,CAAYgG,EAAZ,EAAgB,mBAAhB,EAAqC2yB,gBAArC;AACA;AACAhG;AACA,WAAO,EAAEnrB,IAAI,IAAN,EAAYqX,MAAM8Z,gBAAlB,EAAP;AACD,GANI,EAOJrZ,KAPI,CAOE,eAAO;AACZvf,YAAQC,GAAR,CAAYgG,EAAZ,EAAgB,uBAAhB,EAAyC2yB,gBAAzC,EAA2DpZ,GAA3D;AACA,WAAO,EAAE/X,IAAI,KAAN,EAAaqX,MAAM,uBAAnB,EAA4C8Z,kCAA5C,EAAP;AACD,GAVI,CAAP;AAWD,CAzBD;AA0BA;AACA;;;;;AAKAtE,GAAGkN,iBAAH,GAAuB,UAAUV,QAAV,EAAoB;AACzC,MAAM9O,uBAAuBC,2BAA7B;AACAC,KAAGC,aAAH,CAAiBnf,KAAKof,OAAL,CAAaJ,oBAAb,CAAjB;AACA;AACA,MAAI,CAACE,GAAGG,UAAH,CAAcL,oBAAd,CAAL,EAA0C;AACxChyB,YAAQiX,KAAR,CAAchR,EAAd,mCAAiD+rB,oBAAjD;AACD,GAFD,MAEO;AACLE,OAAGQ,QAAH,CAAYV,oBAAZ,EAAkC8O,QAAlC;AACA9gC,YAAQC,GAAR,CAAYgG,EAAZ,2BAAuC+rB,oBAAvC,YAAkE8O,QAAlE;AACD;AACF,CAVD;AAWA;AACA;;;;;AAKAxM,GAAGmN,yBAAH,GAA+B,YAAM;AACnC,MAAMhhB,MAAM;AACV3hB,UAAM;AACJgL,gBAAUipB,gBAAgBiG,mBAAhB,EADN;AAEJoI,YAAMzO;AAFF;AADI,GAAZ;AAMA,MAAM2O,OAAOv7B,KAAK+B,SAAL,CAAe2Y,IAAI3hB,IAAJ,CAASgL,QAAxB,CAAb;AACA,SAAOwqB,GAAGoE,iBAAH,CAAqBjY,GAArB,CAAP;AACD,CATD;;AAWA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;;;;;;AAMA6T,GAAGoN,aAAH,GAAmB,eAAO;AACxB,MAAMC,WAAWlhB,IAAIkL,OAArB;AACA;AACA,MAAMiW,sBAAsB1N,eAAe1iB,QAAf,CAAwB7G,WAAWC,QAAnC,CAA5B;AACA;AACA,MAAMi3B,eAAe3N,eAAe1iB,QAAf,CAAwB7G,WAAWE,QAAnC,CAArB;AACA;AACA,MAAMi3B,wBACJ5N,eAAejxB,MAAf,GAAwB,CAAxB,KACCixB,eAAe1iB,QAAf,CAAwB7G,WAAWG,IAAnC,KACCopB,eAAe1iB,QAAf,CAAwB7G,WAAWI,IAAnC,CAFF,CADF;AAIA;AACA,MAAMg3B,yBAAyB,6BAAI9N,kBAAkB3U,MAAlB,EAAJ,GAAgCme,IAAhC,CAAqC;AAAA,WAAiBuE,kBAAkBL,QAAnC;AAAA,GAArC,CAA/B;AACA,SAAO;AACLC,4CADK;AAELC,8BAFK;AAGLC,gDAHK;AAILC,kDAJK;AAKLE,8CAAiBlO,eAAepjB,IAAf,EAAjB,EALK;AAMLuxB,8CAAiBlO,eAAerjB,IAAf,EAAjB,EANK;AAOLwxB,iDAAoBlO,kBAAkBtjB,IAAlB,EAApB;AAPK,GAAP;AASD,CAtBD;AAuBA;;;;;;AAMA2jB,GAAG8N,eAAH,GAAqB,eAAO;AAC1BlO,iBAAel1B,IAAf,CAAoByhB,IAAIrZ,IAAJ,GAAWi7B,MAA/B;AACA,SAAO/N,GAAGoN,aAAH,CAAiBjhB,GAAjB,CAAP;AACD,CAHD;AAIA;;;;;;AAMA6T,GAAGgO,eAAH,GAAqB,eAAO;AAC1B,MAAM1+B,IAAIswB,eAAeqO,SAAf,CAAyB;AAAA,WAAKzgC,MAAM2e,IAAIrZ,IAAJ,GAAWi7B,MAAtB;AAAA,GAAzB,CAAV;AACA,MAAIz+B,IAAI,CAAC,CAAT,EAAYswB,eAAesO,MAAf,CAAsB5+B,CAAtB,EAAyB,CAAzB;AACZ,SAAO0wB,GAAGoN,aAAH,CAAiBjhB,GAAjB,CAAP;AACD,CAJD;;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;AAkBA,SAASua,cAAT,CAAwBN,KAAxB,EAA+B;AAAA,6BAGjB+H,YAHiB,EAGHC,QAHG;AAI3B,QAAIA,SAASC,UAAT,IAAuBD,SAASE,YAAT,KAA0BlgC,SAArD,EAAgE;AAC9Dg4B,YAAMroB,OAAN,CAAc,aAAK;AACjB,YAAImpB,EAAEiH,YAAF,MAAoB//B,SAApB,IAAiC84B,EAAEiH,YAAF,MAAoB,EAAzD,EACEjH,EAAEiH,YAAF,IAAkBC,SAASE,YAA3B;AACH,OAHD;AAID;AAT0B;;AAC7B;AAD6B;AAAA;AAAA;;AAAA;AAG7B,yBAAuCx5B,OAAOqO,OAAP,CAAe7M,SAASktB,QAAxB,CAAvC,8HAA0E;AAAA;;AAAA;;AAAA,UAA9D2K,YAA8D;AAAA,UAAhDC,QAAgD;;AAAA,YAA9DD,YAA8D,EAAhDC,QAAgD;AAOzE;AAV4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAW9B;AACD,SAASzH,cAAT,CAAwBJ,KAAxB,EAA+B;AAAA,+BAGjB4H,YAHiB,EAGHC,QAHG;AAI3B,QAAIA,SAASC,UAAT,IAAuBD,SAASE,YAAT,KAA0BlgC,SAArD,EAAgE;AAC9Dm4B,YAAMxoB,OAAN,CAAc,aAAK;AACjB,YAAIvQ,EAAE2gC,YAAF,MAAoB//B,SAApB,IAAiCZ,EAAE2gC,YAAF,MAAoB,EAAzD,EACE3gC,EAAE2gC,YAAF,IAAkBC,SAASE,YAA3B;AACH,OAHD;AAID;AAT0B;;AAC7B;AAD6B;AAAA;AAAA;;AAAA;AAG7B,0BAAuCx5B,OAAOqO,OAAP,CAAe7M,SAAS0tB,QAAxB,CAAvC,mIAA0E;AAAA;;AAAA;;AAAA,UAA9DmK,YAA8D;AAAA,UAAhDC,QAAgD;;AAAA,aAA9DD,YAA8D,EAAhDC,QAAgD;AAOzE;AAV4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAW9B;;AAED;AACA;AACA,SAAS1N,YAAT,CAAsBlhB,MAAtB,EAA8BQ,GAA9B,EAAmC;AACjC,MAAI,OAAOA,IAAIpU,EAAX,KAAkB,QAAtB,EAAgC;AAC9B,QAAI2iC,MAAM/2B,SAASwI,IAAIpU,EAAb,EAAiB,EAAjB,CAAV;AACA4yB,WAAOqC,SAAP,CAAiB,EAAjB,EAAqBlvB,EAArB,SAA8B6N,MAA9B,UAAyCQ,IAAIpU,EAA7C,mCAA6E2iC,GAA7E;AACAvuB,QAAIpU,EAAJ,GAAS2iC,GAAT;AACD;AACD,SAAOvuB,GAAP;AACD;AACD,SAAS8gB,oBAAT,CAA8BthB,MAA9B,EAAsC4nB,IAAtC,EAA4C;AAC1C,MAAI,OAAOA,KAAKvB,MAAZ,KAAuB,QAA3B,EAAqC;AACnC,QAAI0I,MAAM/2B,SAAS4vB,KAAKvB,MAAd,EAAsB,EAAtB,CAAV;AACArH,WAAOqC,SAAP,CACE,EADF,EACMlvB,EADN,cAEY6N,MAFZ,iBAE8B4nB,KAAKvB,MAFnC,mCAEuE0I,GAFvE;AAIAnH,SAAKvB,MAAL,GAAc0I,GAAd;AACD;AACD,MAAI,OAAOnH,KAAKzyB,MAAZ,KAAuB,QAA3B,EAAqC;AACnC,QAAI45B,OAAM/2B,SAAS4vB,KAAKzyB,MAAd,EAAsB,EAAtB,CAAV;AACA6pB,WAAOqC,SAAP,CACE,EADF,EACMlvB,EADN,cAEY6N,MAFZ,iBAE8B4nB,KAAKzyB,MAFnC,mCAEuE45B,IAFvE;AAIAnH,SAAKzyB,MAAL,GAAc45B,IAAd;AACD;AACD,SAAOnH,IAAP;AACD;AACD,SAASwD,SAAT,CAAmBprB,MAAnB,EAA2B5T,EAA3B,EAA+B;AAC7B,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AAC1B,QAAI2iC,MAAM/2B,SAAS5L,EAAT,EAAa,EAAb,CAAV;AACA4yB,WAAOqC,SAAP,CAAiB,EAAjB,EAAqBlvB,EAArB,SAA8B6N,MAA9B,UAAyC5T,EAAzC,0CAAgF2iC,GAAhF;AACA3iC,SAAK2iC,GAAL;AACD;AACD,SAAO3iC,EAAP;AACD;AACD;AACA;AACA,SAASw0B,oBAAT,CAA8B53B,OAA9B,EAAuC;AACrC;AACA,MAAIgmC,QAAQ,oBAAZ,CAFqC,CAEH;AAClC,MAAI,CAACA,MAAM1U,IAAN,CAAWtxB,OAAX,CAAL,EAA0B;AACxBkD,YAAQiX,KAAR,CACEhR,EADF,4DAE0DnJ,OAF1D;AAID;;AAED,SAAO01B,cAAc11B,OAAd,GAAwB,OAA/B;AACD;;AAED;AACA;AACAI,OAAOC,OAAP,GAAiBm3B,EAAjB;;;;;;;;ACt0DA;;;;;;;;;AASA;AACA;;AAEA;AACA;;AAEA,IAAMthB,OAAO1V,QAAQ,MAAR,CAAb;AACA,IAAMylC,MAAMzlC,QAAQ,UAAR,CAAZ;AACA;AACA,IAAMT,YAAYS,QAAQ,mCAAR,CAAlB;;AAEA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA,IAAM6F,UAAU1I,QAAQ,wBAAR,CAAhB;AACA,IAAM2I,KAAKD,QAAQE,GAAR,CAAY,SAAZ,CAAX;;AAEA;AACA;AACA,IAAM88B,UAAU,oBAAhB;AACA,IAAMC,SAAS3lC,QAAQ,QAAR,CAAf;AACA,IAAM4lC,gBAAgB,IAAtB;AACA,IAAMC,aAAa;AACjBzxB,UAAQ,uBADS;AAEjB0xB,cAAY,YAFK;AAGjBC,cAAY,oBAAUvkC,IAAV,EAAgB;AAC1BA,SAAKwkC,IAAL,GAAY,OAAOpV,OAAOpvB,KAAKwkC,IAAZ,EAAkBC,OAAlB,CAA0B,CAA1B,CAAnB;AACD;AALgB,CAAnB;AAOA,IAAMzQ,SAASmQ,OAAOO,YAAP,CAAoBL,UAApB,CAAf;AACA,IAAIM,SAAS,IAAb;AACA;AACA,IAAMC,YAAY,CAChB,QADgB,EAEhB,QAFgB,EAGhB,SAHgB,EAIhB,WAJgB,EAKhB,UALgB,EAMhB,QANgB,EAOhB,UAPgB,CAAlB;;AAUA;AACA;AACA;AACA,IAAIC,MAAM3wB,KAAKtR,OAAL,CAAasR,KAAKkI,IAAL,CAAU0oB,SAAV,EAAqBZ,OAArB,CAAb,CAAV;AACAD,IAAIc,SAAJ,CAAcF,GAAd,EAAmB,UAAUnkB,GAAV,EAAe;AAChC,MAAIA,GAAJ,EAAS,MAAM,IAAInc,KAAJ,CAAU,oBAAoBsgC,GAApB,GAA0B,YAApC,CAAN;AACT,MAAIG,UAAUC,sBAAsB,KAAtB,IAA+B,MAA7C;AACA,MAAIC,WAAWL,MAAM,GAAN,GAAYG,OAA3B;AACAL,WAASV,IAAIkB,iBAAJ,CAAsBD,QAAtB,CAAT;;AAEA;AACA,MAAME,aAAa,CACjB,MADiB,EACT,MADS,EACD,SADC,EACU,MADV,EACkB,OADlB,EAC2B,QAD3B,EACqC,QADrC,EAC+C,YAD/C,CAAnB;AAGA,MAAIC,SAASD,WAAWhpB,IAAX,CAAgBgoB,aAAhB,CAAb;AACAiB,YAAU,IAAV;AACAV,SAAOW,KAAP,CAAaD,MAAb;;AAEAE,kBAAgB,EAAhB,2CACyCC,eADzC,SAC4DC,eAD5D;AAGAF,kBAAgB,EAAhB,EAAoB,KAApB;AACD,CAlBD;;AAoBA;AACA;AACA;;AAEA,SAASG,OAAT,GAA0B;AACxB,MAAI,CAACf,MAAL,EAAa;;AAEb,MAAIrxB,MAAMqyB,uBAAuBvB,aAAjC;AACA9wB,SAAOmyB,kBAAkBrB,aAAzB;AACA9wB,SAAOvV,UAAUC,OAAV,GAAoBomC,aAA3B;;AALwB,oCAANttB,IAAM;AAANA,QAAM;AAAA;;AAMxB,MAAI+lB,IAAI/lB,KAAK3S,MAAb;AACA;AACA,MAAI04B,CAAJ,EAAO;AACL,SAAK,IAAI/3B,IAAI,CAAb,EAAgBA,IAAI+3B,CAApB,EAAuB/3B,GAAvB,EAA4B;AAC1B,UAAIA,IAAI,CAAR,EAAWwO,OAAO8wB,aAAP;AACX9wB,aAAOwD,KAAKhS,CAAL,CAAP;AACD;AACF;AACDwO,SAAO,IAAP;AACAqxB,SAAOW,KAAP,CAAahyB,GAAb;AACD;;AAED;;;;AAIA,SAASiyB,eAAT,GAAmE;AAAA,MAA1CvlB,IAA0C,uEAAnC,EAAEoE,OAAO,EAAT,EAAalI,OAAO,EAApB,EAAmC;;AACjE,MAAI,CAACyoB,MAAL,EAAa;;AAEb,MAAIrxB,MAAMqyB,uBAAuBvB,aAAjC;AACA9wB,SAAOmyB,kBAAkBrB,aAAzB;AACA9wB,SAAOvV,UAAUC,OAAV,GAAoBomC,aAA3B;AACA9wB,SAAO,CAAC0M,KAAKoE,KAAL,IAAc,GAAf,IAAsBggB,aAA7B;AACA9wB,SAAO,CAAC0M,KAAK9D,KAAL,IAAc,GAAf,IAAsBkoB,aAA7B;;AAPiE,qCAANttB,IAAM;AAANA,QAAM;AAAA;;AAQjE,MAAI+lB,IAAI/lB,KAAK3S,MAAb;AACA;AACA,MAAI04B,CAAJ,EAAO;AACL,SAAK,IAAI/3B,IAAI,CAAb,EAAgBA,IAAI+3B,CAApB,EAAuB/3B,GAAvB,EAA4B;AAC1B,UAAIA,IAAI,CAAR,EAAWwO,OAAO8wB,aAAP;AACX9wB,aAAOwD,KAAKhS,CAAL,CAAP;AACD;AACF;AACDwO,SAAO,IAAP;AACAqxB,SAAOW,KAAP,CAAahyB,GAAb;AACD;;AAED;AACA;AACA,SAASmyB,aAAT,GAAyB;AACvB,MAAIv0B,OAAO,IAAI5N,IAAJ,EAAX;AACA,MAAIsiC,KAAK,CAAC,MAAM10B,KAAK20B,QAAL,EAAP,EAAwBC,KAAxB,CAA8B,CAAC,CAA/B,CAAT;AACA,MAAIC,KAAK,CAAC,MAAM70B,KAAK80B,UAAL,EAAP,EAA0BF,KAA1B,CAAgC,CAAC,CAAjC,CAAT;AACA,MAAIG,KAAK,CAAC,MAAM/0B,KAAKg1B,UAAL,EAAP,EAA0BJ,KAA1B,CAAgC,CAAC,CAAjC,CAAT;AACA,SAAOF,KAAK,GAAL,GAAWG,EAAX,GAAgB,GAAhB,GAAsBE,EAA7B;AACD;AACD;AACA,SAAST,aAAT,GAAyB;AACvB,MAAIt0B,OAAO,IAAI5N,IAAJ,EAAX;AACA,MAAIyiC,KAAK,CAAC,OAAO70B,KAAKi1B,QAAL,KAAkB,CAAzB,CAAD,EAA8BL,KAA9B,CAAoC,CAAC,CAArC,CAAT;AACA,MAAIM,KAAK,CAAC,MAAMl1B,KAAKm1B,OAAL,EAAP,EAAuBP,KAAvB,CAA6B,CAAC,CAA9B,CAAT;AACA,MAAIjzB,MAAM+xB,UAAU1zB,KAAKo1B,MAAL,EAAV,CAAV;AACA,MAAIC,OAAOr1B,KAAKs1B,WAAL,EAAX;AACA,SAAOD,OAAO,GAAP,GAAaR,EAAb,GAAkB,GAAlB,GAAwBK,EAAxB,GAA6B,GAA7B,GAAmCvzB,GAA1C;AACD;AACD;AACA,SAAS8yB,kBAAT,GAA8B;AAC5B,MAAIz0B,OAAO,IAAI5N,IAAJ,EAAX;AACA,MAAIyiC,KAAK,CAAC,OAAO70B,KAAKi1B,QAAL,KAAkB,CAAzB,CAAD,EAA8BL,KAA9B,CAAoC,CAAC,CAArC,CAAT;AACA,MAAIM,KAAK,CAAC,MAAMl1B,KAAKm1B,OAAL,EAAP,EAAuBP,KAAvB,CAA6B,CAAC,CAA9B,CAAT;AACA,MAAIjzB,MAAM+xB,UAAU1zB,KAAKo1B,MAAL,EAAV,CAAV;AACA,MAAIC,OAAOr1B,KAAKs1B,WAAL,EAAX;AACA,SAAOD,OAAO,GAAP,GAAaR,EAAb,GAAkB,GAAlB,GAAwBK,EAA/B;AACD;AACD;AACA,SAASnB,qBAAT,GAAwC;AAAA;;AAAA,qCAANnuB,IAAM;AAANA,QAAM;AAAA;;AACtC;AACA,MAAI5F,OAAO,IAAI5N,IAAJ,EAAX;AACA,MAAI8iC,KAAK,CAAC,MAAMl1B,KAAKm1B,OAAL,EAAP,EAAuBP,KAAvB,CAA6B,CAAC,CAA9B,CAAT;AACA,MAAIC,KAAK,CAAC,OAAO70B,KAAKi1B,QAAL,KAAkB,CAAzB,CAAD,EAA8BL,KAA9B,CAAoC,CAAC,CAArC,CAAT;AACA,MAAIW,MAAM,CAAC,MAAMv1B,KAAK20B,QAAL,EAAP,EAAwBC,KAAxB,CAA8B,CAAC,CAA/B,CAAV;AACAW,SAAO,CAAC,MAAMv1B,KAAK80B,UAAL,EAAP,EAA0BF,KAA1B,CAAgC,CAAC,CAAjC,CAAP;AACAW,SAAO,CAAC,MAAMv1B,KAAKg1B,UAAL,EAAP,EAA0BJ,KAA1B,CAAgC,CAAC,CAAjC,CAAP;AACA,MAAIzD,QAAJ;AACAA,aAAWnxB,KAAKs1B,WAAL,GAAmBz1B,QAAnB,EAAX;AACAsxB,cAAY,MAAM0D,EAAN,GAAWK,EAAvB;AACA,MAAIvJ,IAAIrb,UAAUrd,MAAlB;AACA,MAAI04B,CAAJ,EAAOwF,YAAY,uBAASlmB,MAAT,mBAAgB,GAAhB,SAAwBrF,IAAxB,EAAZ;AACPurB,cAAY,MAAMoE,GAAlB;AACA,SAAOpE,QAAP;AACD;;AAED;AACA;AACA,IAAIqE,MAAM,EAAV;AACA;AACA;;AAEAA,IAAIC,YAAJ,GAAmB,UAAUhlB,GAAV,EAAe;AAAA;;AAAA,kBACTA,IAAIrZ,IAAJ,EADS;AAAA,MAC1BpG,KAD0B,aAC1BA,KAD0B;AAAA,MACnB8oB,KADmB,aACnBA,KADmB;;AAEhC,MAAM5G,QAAQzC,IAAI8E,aAAJ,EAAd;AACA,MAAMvK,QAAQyF,IAAIwL,aAAJ,EAAd,CAHgC,CAGG;AACnC,MAAI9rB,GAAJ,EAAS,qBAAQF,GAAR,kBAAYgG,EAAZ,EAAgBwa,IAAIsa,IAAJ,EAAhB,EAA4B/5B,KAA5B,4BAAsC8oB,KAAtC;AACTua,oCAAgB,EAAEnhB,YAAF,EAASlI,YAAT,EAAhB,EAAkCha,SAAS,GAA3C,4BAAmD8oB,KAAnD;AACA,SAAO,EAAEriB,IAAI,IAAN,EAAP;AACD,CAPD;AAQA;AACA;;AAEA+9B,IAAIE,KAAJ,GAAYlB,OAAZ;AACA;;;AAGAgB,IAAIrQ,SAAJ,GAAgB,YAAoD;AAAA,MAA1CrW,IAA0C,uEAAnC,EAAEoE,OAAO,EAAT,EAAalI,OAAO,EAApB,EAAmC;;AAAA,qCAANpF,IAAM;AAANA,QAAM;AAAA;;AAClEyuB,oCAAgBvlB,IAAhB,SAAyBlJ,IAAzB;AACD,CAFD;;AAIA;AACA;AACA1Y,OAAOC,OAAP,GAAiBqoC,GAAjB;;;;;;;;AC4HA;AACA;;;sEAEA,kBAA+BrZ,MAA/B,EAAuC1L,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEMA,IAAIwE,aAAJ,EAFN;AAAA;AAAA;AAAA;;AAGI;AACAxE,gBAAIyE,mBAAJ;AAJJ;;AAAA;AAOE;AACA;AACIvH,oBATN,GASiBgoB,wBAAwBllB,GAAxB,CATjB;;AAWE;;AACA,gBAAI9C,SAAS1a,MAAT,KAAoB,CAAxB,EAA2B0a,WAAWioB,wBAAwBnlB,GAAxB,CAAX;;AAE3B;AACA;AACA;;AAhBF,kBAiBM9C,SAAS1a,MAAT,KAAoB,CAjB1B;AAAA;AAAA;AAAA;;AAkBIjD,oBAAQC,GAAR,CAAYgG,EAAZ,eAA0Bwa,IAAIuE,OAAJ,EAA1B;AACA;AACAvE,gBAAIkF,OAAJ,CAAY,EAAE+X,iCAA8Bjd,IAAIuE,OAAJ,EAA9B,OAAF,EAAZ;AACA,gBAAIvE,IAAIolB,MAAJ,CAAW,OAAX,CAAJ,EAAyBplB,IAAIgF,iBAAJ,CAAsB0G,MAAtB;AArB7B;;AAAA;AAwBE;AACI2Z,kBAzBN,GAyBe,CAACrlB,IAAIuE,OAAJ,GAAcK,UAAd,CAAyB,MAAzB,CAzBhB;AA0BMO,gBA1BN,GA0Ba/d,KAAKC,SAAL,CAAe2Y,IAAIrZ,IAAJ,EAAf,CA1Bb;AA2BE;;AACA,gBAAIjH,GAAJ,EACEH,QAAQC,GAAR,CACEgG,EADF,EAEKwa,IAAIsa,IAAJ,EAFL,iBAE2Bta,IAAIuE,OAAJ,EAF3B,YAE+CrH,SAAS1a,MAFxD;AAIF;AAjCF;AAAA,mBAkCuBxB,QAAQmc,GAAR,CAAYD,QAAZ,CAlCvB;;AAAA;AAkCMooB,oBAlCN;;AAmCE;AACA,gBAAI5lC,GAAJ,EACEH,QAAQC,GAAR,CACEgG,EADF,EAEKwa,IAAIsa,IAAJ,EAFL,gBAE0Bta,IAAIuE,OAAJ,EAF1B,cAEgDrH,SAAS1a,MAFzD;AAIF;;AAEA;;AA3CF,gBA4COwd,IAAIolB,MAAJ,CAAW,OAAX,CA5CP;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AA8CE;AACI/mC,gBA/CN,GA+CainC,SAASC,MAAT,CAAgB,UAACpf,CAAD,EAAIjG,CAAJ,EAAU;AACnC,kBAAIslB,QAAQtlB,aAAaxa,UAAb,GAA0Bwa,EAAEvZ,IAAF,EAA1B,GAAqCuZ,CAAjD;AACA,kBAAIvB,SAAShW,OAAOC,MAAP,CAAcud,CAAd,EAAiBqf,KAAjB,CAAb;AACA;AACA,qBAAO7mB,MAAP;AACD,aALU,EAKR,EALQ,CA/Cb;AAqDE;AACA;;AACAqB,gBAAIkF,OAAJ,CAAY7mB,IAAZ;AACA2hB,gBAAIgF,iBAAJ,CAAsB0G,MAAtB;;AAxDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAe3H,e;;;KAyDb;AACF;AACA;;;;;;;;;;AA3XA;;;;;;AAMA;AACA;;AAEA;AACA;;AAEA,IAAMrkB,MAAM,KAAZ;AACA,IAAM+lC,OAAO,IAAb;;AAEA;AACA;AACA,IAAIC,MAAM7oC,QAAQ,IAAR,EAAc8oC,MAAxB;AACA,IAAIrD,MAAMzlC,QAAQ,UAAR,CAAV;AACA,IAAI6I,aAAa7I,QAAQ,2BAAR,CAAjB;AACA,IAAMw1B,SAASx1B,QAAQ,iBAAR,CAAf;AACA,IAAIg3B,KAAKh3B,QAAQ,mBAAR,CAAT;AACA,IAAIikB,OAAOjkB,QAAQ,eAAR,CAAX;;AAEA;AACA;AACA,IAAM0I,UAAU1I,QAAQ,wBAAR,CAAhB;AACA,IAAM2I,KAAKD,QAAQE,GAAR,CAAY,SAAZ,CAAX;AACA,IAAMukB,MAAMzkB,QAAQE,GAAR,CAAY,KAAZ,CAAZ;AACA,IAAMmgC,gBAAgB,+BAAtB;AACA,IAAMC,kBAAkB,sBAAxB;AACA,IAAMC,oBAAoB,qCAA1B;AACA,IAAMC,mBAAmB,4CAAzB;AACA,IAAMC,kBAAkB,qCAAxB;AACA,IAAMC,mBAAmB,IAAzB;AACA,IAAMC,mBAAmB,WAAzB;;AAEA;AACA;AACA;AACA,IAAIC,MAAJ,C,CAAY;AACZ,IAAIC,UAAJ,C,CAAgB;AAChB,IAAIC,aAAa,IAAI/qB,GAAJ,EAAjB,C,CAA4B;AAC5B,IAAIgrB,iBAAiB,CAArB,C,CAAwB;AACxB;AACA,IAAIC,oBAAoB,IAAIjrB,GAAJ,EAAxB,C,CAAmC;AACnC,IAAIkrB,gBAAgB,IAAIlrB,GAAJ,EAApB,C,CAA+B;AAC/B,IAAImrB,qBAAqB,IAAInrB,GAAJ,EAAzB,C,CAAoC;AACpC;AACA,IAAIorB,oBAAJ;AACA,IAAIC,eAAe,EAAnB;;AAEA;AACA;AACA,IAAIC,OAAO,EAAX;AACA,IAAMC,eAAenhC,WAAWke,kBAAX,EAArB,C,CAAsD;AACtD;AACA;;;AAGAgjB,KAAKE,iBAAL,GAAyB,mBAAW;AAClCt2B,YAAUA,WAAW,EAArB;AACAA,UAAQlU,IAAR,GAAekU,QAAQlU,IAAR,IAAgB2pC,gBAA/B;AACAz1B,UAAQiS,KAAR,GAAgBjS,QAAQiS,KAAR,IAAiBokB,YAAjC;AACA,MAAIV,WAAWlkC,SAAf,EAA0B,MAAMW,MAAMgjC,aAAN,CAAN;AAC1BlgC,aAAWme,WAAX,CAAuB,EAAEpB,OAAOjS,QAAQiS,KAAjB,EAAvB;AACA2jB,eAAa51B,OAAb;AACA,SAAO41B,UAAP;AACD,CARD,C,CAQG;AACH;AACA;;;AAGAQ,KAAKG,YAAL,GAAoB,YAAM;AACxB;AACAZ,WAAS,IAAIT,GAAJ,CAAQU,UAAR,CAAT;AACAD,SAAOa,EAAP,CAAU,WAAV,EAAuB,YAAY;AACjC,QAAIvB,IAAJ,EAAUlmC,QAAQC,GAAR,CAAYgG,EAAZ,wCAAoD4gC,WAAW9pC,IAA/D;AACV6pC,WAAOa,EAAP,CAAU,YAAV,EAAwBC,oBAAxB;AACD,GAHD;AAID,CAPD,C,CAOG;AACH;AACA;;;;;AAKAL,KAAKzoC,aAAL,GAAqB,UAAUwe,QAAV,EAAoB2C,WAApB,EAAiC;AACpD,MAAI,OAAOA,WAAP,KAAuB,UAA3B,EAAuC;AACrC,UAAM,yBAAN;AACD;AACD,MAAII,WAAW6mB,kBAAkBhoB,GAAlB,CAAsB5B,QAAtB,CAAf;AACA,MAAI,CAAC+C,QAAL,EAAe;AACbA,eAAW,IAAIhc,GAAJ,EAAX;AACA6iC,sBAAkBvqB,GAAlB,CAAsBW,QAAtB,EAAgC+C,QAAhC;AACD;AACDA,WAASE,GAAT,CAAaN,WAAb;AACA,SAAO,IAAP;AACD,CAXD,C,CAWG;AACH;AACA;;;;AAIAsnB,KAAK/pB,eAAL,GAAuB,UAAUF,QAAV,EAAoB2C,WAApB,EAAiC;AACtD,MAAI,CAACO,UAAUrd,MAAf,EAAuB;AACrB+jC,sBAAkBzmB,KAAlB;AACD,GAFD,MAEO,IAAID,UAAUrd,MAAV,KAAqB,CAAzB,EAA4B;AACjC+jC,sBAAkBxmB,MAAlB,CAAyBpD,QAAzB;AACD,GAFM,MAEA;AACL,QAAM+C,WAAW6mB,kBAAkBhoB,GAAlB,CAAsB5B,QAAtB,CAAjB;AACA,QAAI+C,QAAJ,EAAc;AACZA,eAASK,MAAT,CAAgBT,WAAhB;AACD;AACF;AACD,SAAO,IAAP;AACD,CAZD,C,CAYG;AACH;AACA;;AAEAsnB,KAAK1/B,OAAL;AAAA,qEAAe,iBAAgByV,QAAhB,EAA0Bte,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACT2hB,eADS,GACH,IAAIta,UAAJ,CAAeiX,QAAf,EAAyBte,IAAzB,CADG;AAET6e,oBAFS,GAEEioB,wBAAwBnlB,GAAxB,CAFF;;AAGb,gBAAItgB,GAAJ,EACEH,QAAQC,GAAR,CACEgG,EADF,EAEKwa,IAAIsa,IAAJ,EAFL,iBAE2Bta,IAAIuE,OAAJ,EAF3B,YAE+CrH,SAAS1a,MAFxD;AAIF;AARa;AAAA,mBASQxB,QAAQmc,GAAR,CAAYD,QAAZ,CATR;;AAAA;AASTE,oBATS;;AAUb;AACIC,kBAXS,GAWA1U,OAAOC,MAAP,gBAAc,EAAd,4BAAqBwU,QAArB,GAXA;AAAA,6CAYNC,MAZM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;;AAEAupB,KAAKxgB,OAAL,GAAe,UAAUzJ,QAAV,EAAoBte,IAApB,EAA0B;AACvC,MAAI2hB,MAAM,IAAIta,UAAJ,CAAeiX,QAAf,EAAyBte,IAAzB,CAAV;AACA,MAAI6e,WAAWioB,wBAAwBnlB,GAAxB,CAAf;AACA;AACA,MAAItgB,GAAJ,EACEH,QAAQC,GAAR,CACEgG,EADF,EAEKwa,IAAIsa,IAAJ,EAFL,iBAE2Bta,IAAIuE,OAAJ,EAF3B,YAE+CrH,SAAS1a,MAFxD;AAIH,CATD;AAUA;AACA;;AAEAokC,KAAKvgB,SAAL,GAAiB,UAAU1J,QAAV,EAAoBte,IAApB,EAA0B;AACzCkB,UAAQwB,IAAR,CACEyE,EADF,EAEE,oEAFF;AAIAohC,OAAKxgB,OAAL,CAAazJ,QAAb,EAAuBte,IAAvB;AACD,CAND;AAOA;AACA;;;AAGAuoC,KAAKM,sBAAL,GAA8B,UAAUlnB,GAAV,EAAe;AAC3C,MAAIA,IAAIuE,OAAJ,OAAkB,kBAAtB,EAA0C,MAAM3hB,MAAM,2BAAN,CAAN;AAC1C,MAAI6f,QAAQzC,IAAI8E,aAAJ,EAAZ;;AAF2C,kBAGnB9E,IAAIrZ,IAAJ,EAHmB;AAAA,qCAGrC6hB,QAHqC;AAAA,MAGrCA,QAHqC,sCAG1B,EAH0B;;AAI3C,MAAI2e,OAAO,EAAX;AACA;AACAV,qBAAmBzqB,GAAnB,CAAuByG,KAAvB,EAA8B+F,QAA9B;AACA;AACA;AACAA,WAAS5W,OAAT,CAAiB,eAAO;AACtB,QAAI8V,QAAQ8e,cAAcjoB,GAAd,CAAkBlJ,GAAlB,CAAZ;AACA,QAAI,CAACqS,KAAL,EAAY;AACVA,cAAQ,IAAIhkB,GAAJ,EAAR;AACA8iC,oBAAcxqB,GAAd,CAAkB3G,GAAlB,EAAuBqS,KAAvB;AACD;AACD,QAAIhoB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,gBAA2B6P,GAA3B,wBAAgDoN,KAAhD;AACTiF,UAAM9H,GAAN,CAAU6C,KAAV;AACA0kB,SAAK5oC,IAAL,CAAU8W,GAAV;AACD,GATD;AAUA,SAAO,EAAE+xB,YAAYD,IAAd,EAAP;AACD,CApBD;;AAsBA;AACA;AACA;;AAEA,SAASF,oBAAT,CAA8Bvb,MAA9B,EAAsC;AACpC,MAAIhsB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,kBAAhB;;AAET6hC,cAAY3b,MAAZ;AACA4b,oBAAkB5b,MAAlB;AACA;AACAA,SAAOsb,EAAP,CAAU,SAAV,EAAqB,gBAAQ;AAC3BO,oBAAgB7b,MAAhB,EAAwBvG,IAAxB;AACD,GAFD;AAGAuG,SAAOsb,EAAP,CAAU,OAAV,EAAmB,YAAM;AACvB;AACA;AACA;AACA;AACAQ,mBAAe9b,MAAf;AACD,GAND;;AAQA;AACA+b;AACD;AACD;AACA;;;;AAIA,SAASA,gBAAT,GAA4B;AAC1B,MAAI/nC,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,oBAAhB;AACT,MAAIkhC,oBAAJ,EAA0B,OAFA,CAEQ;AAClCA,yBAAuBgB,YAAY,SAASC,aAAT,GAAyB;AAC1DtB,eAAWz0B,OAAX,CAAmB,UAAC8Z,MAAD,EAAS3oB,GAAT,EAAcoN,GAAd,EAAsB;AACvC,UAAIzQ,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,sBAAhB,EAAwCkmB,OAAOhI,KAA/C;AACT,UAAIgI,OAAOxH,UAAP,KAAsBwH,OAAOvH,IAAjC,EAAuC;AACrCuH,eAAO3iB,IAAP,CAAY,MAAZ,EAAoB,eAAO;AACzB,cAAIgW,GAAJ,EACExf,QAAQC,GAAR,CACEgG,EADF,EAEE,SAFF,EAGEuZ,GAHF,EAIE,8BAJF,EAKE2M,OAAOhI,KALT;AAOH,SATD;AAUD;AACF,KAdD;AAeD,GAhBsB,EAgBpB5C,KAAKwD,yBAhBe,CAAvB;AAiBD;;AAED;AACA;;;;;;;;;;AAUA,SAASsjB,gBAAT,CAA0BnlB,KAA1B,EAAiC;AAC/B3e,eAAa6iC,aAAalkB,KAAb,CAAb;AACAkkB,eAAalkB,KAAb,IAAsB1e,WAAW,SAAS8jC,YAAT,GAAwB;AACvD,QAAInoC,GAAJ,EACEH,QAAQC,GAAR,CACEgG,EADF,EAEEid,KAFF,EAGE,2DAHF;AAKF4P,WAAOqC,SAAP,CACE,EAAEjS,YAAF,EADF,EAEEjd,EAFF,EAGE,kEAHF;AAKAquB,OAAGkK,aAAH,CAAiBtb,KAAjB;AACD,GAbqB,EAanB3B,KAAKwD,yBAAL,GAAiC,CAbd,CAAtB;AAcD;;AAED;AACA;;;AAGA,SAASgjB,iBAAT,CAA2B5b,MAA3B,EAAmC;AACjC,MAAIrtB,OAAO;AACTolB,WAAO,mBADE;AAETC,WAAOgI,OAAOhI;AAFL,GAAX;AAIAgI,SAAO3iB,IAAP,CAAY3B,KAAKC,SAAL,CAAehJ,IAAf,CAAZ;AACD;AACD;AACA;;AAEA,SAASkpC,eAAT,CAAyB7b,MAAzB,EAAiCvG,IAAjC,EAAuC;AACrC;AACA,MAAIA,SAAS,MAAb,EAAqB;AACnB,QAAIuG,OAAOhI,KAAP,KAAiBzhB,SAArB,EAAgC;AAC9B1C,cAAQC,GAAR,CACEgG,EADF,EAEE,qCAFF,EAGEkmB,OAAOhI,KAHT,EAIE,8BAJF;AAMA,aAP8B,CAOtB;AACT;AACDkkB,qBAAiBlc,OAAOhI,KAAxB;AACA;AACD;AACD,MAAI;AACF,QAAI1D,MAAM,IAAIta,UAAJ,CAAeyf,IAAf,CAAV;AACA;AACA,YAAQnF,IAAI0E,IAAJ,EAAR;AACE,WAAK,OAAL;AACEojB,sBAAcpc,MAAd,EAAsB1L,GAAtB;AACA;AACF,WAAK,MAAL;AACA,WAAK,OAAL;AACA,WAAK,OAAL;AACE+D,wBAAgB2H,MAAhB,EAAwB1L,GAAxB;AACA;AACF;AACE,cAAM,IAAIpd,KAAJ,CAAa4C,EAAb,+BAAwCwa,IAAI0E,IAAJ,EAAxC,QAAN;AAVJ,KAHE,CAcA;AACH,GAfD,CAeE,OAAO3F,GAAP,EAAY;AACZxf,YAAQiX,KAAR,CAAchR,EAAd,EAAkB,sBAAlB,EAA0CuZ,GAA1C;AACD;AACF,C,CAAC;AACF;AACA;;AAEA,SAAS+oB,aAAT,CAAuBpc,MAAvB,EAA+B1L,GAA/B,EAAoC,CAEnC;AADC;AAoEF,SAASklB,uBAAT,CAAiCllB,GAAjC,EAAsC;AACpC,MAAIrD,WAAWqD,IAAIuE,OAAJ,EAAf;AACA,MAAM7E,WAAW6mB,kBAAkBhoB,GAAlB,CAAsB5B,QAAtB,CAAjB;AACA;AACA,MAAIO,WAAW,EAAf;AACA,MAAIwC,QAAJ;AAAA;AAAA;AAAA;;AAAA;AACE,2BAAwBA,QAAxB,8HAAkC;AAAA,YAAzBJ,WAAyB;;AAChC;AACA,YAAIY,IAAI6nB,qBAAqB/nB,GAArB,EAA0BV,WAA1B,CAAR;AACApC,iBAAS3e,IAAT,CAAc2hB,CAAd;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GALoC,CAWpC;AACA,SAAOhD,QAAP;;AAEA;AACA,WAAS6qB,oBAAT,CAA8BC,MAA9B,EAAsC1oB,WAAtC,EAAmD;AACjD,WAAO,IAAIte,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,UAAIyd,SAASW,YAAY0oB,MAAZ,CAAb;AACA,UAAIrpB,WAAW1c,SAAf,EACE,aAAU0a,QAAV;AACF,UAAI,QAAOgC,MAAP,yCAAOA,MAAP,OAAkB,QAAtB,EAAgCzd,OAAOyd,MAAP,EAAhC,KACK1d,QAAQ0d,MAAR;AACN,KANM,CAAP;AAOD;AACF;AACD;AACA;;;AAGA,SAASwmB,uBAAT,CAAiCnlB,GAAjC,EAAsC;AACpC;AACA,MAAIkL,UAAUlL,IAAI8E,aAAJ,EAAd;AACA;AACA,MAAI5H,WAAW,EAAf;AACA,MAAIP,WAAWqD,IAAIuE,OAAJ,EAAf;AACA,MAAIvT,OAAOgP,IAAI0E,IAAJ,EAAX;AACA;AACA,MAAIhF,WAAW8mB,cAAcjoB,GAAd,CAAkB5B,QAAlB,CAAf;AACA,MAAI+C,QAAJ,EACEA,SAAS9N,OAAT,CAAiB,mBAAW;AAC1B;AACA;AACA,YAAQZ,IAAR;AACE,WAAK,MAAL;AACEkM,iBAAS3e,IAAT,CAAc0pC,4BAA4BjoB,GAA5B,EAAiCkoB,OAAjC,CAAd;AACA;AACF,WAAK,OAAL;AACA,WAAK,OAAL;AACE,YAAIhd,YAAYgd,OAAhB,EAAyB;AACvBhrB,mBAAS3e,IAAT,CAAc0pC,4BAA4BjoB,GAA5B,EAAiCkoB,OAAjC,CAAd;AACD,SAFD,MAEO;AACL;AACD;AACD;AACF;AACE,cAAMtlC,6BAA2BoO,IAA3B,CAAN;AAbJ;AAeD,GAlBD;AAmBF;AACA,SAAOkM,QAAP;AACA;AACA;AACA,WAAS+qB,2BAAT,CAAqCD,MAArC,EAA6CE,OAA7C,EAAgE;AAAA,QAAV7lB,GAAU,uEAAJ,EAAI;AAAA,QACxD8lB,OADwD,GAC5C9lB,GAD4C,CACxD8lB,OADwD;AAE9D;;AACA,QAAIC,SAAS/B,WAAW9nB,GAAX,CAAe2pB,OAAf,CAAb;AACA,QAAIE,WAAWnmC,SAAf,EAA0B,MAAMW,MAAMmjC,0BAAuBmC,OAAvB,CAAN,CAAN;AAC1B;AACA;AACA;AACA,QAAIG,SAAS,IAAI3iC,UAAJ,CAAesiC,MAAf,CAAb;AACAK,WAAOxd,SAAP;AACAwd,WAAOC,iBAAP,CAAyBN,MAAzB;AACA,QAAIG,OAAJ,EAAa;AACX5oC,cAAQC,GAAR,CACE,qBADF,YAEUwoC,OAAOtjB,IAAP,EAFV,WAE4BsjB,OAAOzjB,OAAP,EAF5B,gBAEsDyjB,OAAO1N,IAAP,EAFtD,oBAEkF4N,OAFlF,kCAGIE,OAAO1kB,KAHX;AAMD;AACD,WAAO2kB,OAAOjoB,gBAAP,CAAwBgoB,MAAxB,CAAP;AACD;AACF;AACD;AACA;;AAEA,SAASf,WAAT,CAAqB3b,MAArB,EAA6B;AAC3B;AACA,MAAI6c,MAAMC,eAAV;AACA;AACA9c,SAAOhI,KAAP,GAAe6kB,GAAf;AACA;AACAlC,aAAWrqB,GAAX,CAAeusB,GAAf,EAAoB7c,MAApB;AACA,MAAI+Z,IAAJ,EAAUlmC,QAAQC,GAAR,CAAYgG,EAAZ,kBAA8BkmB,OAAOhI,KAArC;AACV2O,SAAOqC,SAAP,CAAiB,EAAEjS,OAAOiJ,OAAOhI,KAAhB,EAAjB,EAA0C,gBAA1C;AACA,MAAIhkB,GAAJ,EAAS+oC,uBAAqBF,GAArB;AACV;AACD;AACA;;AAEA,SAASC,aAAT,GAAyC;AAAA,MAAlBE,MAAkB,uEAAT,OAAS;;AACvC,IAAEpC,cAAF;AACA,MAAIqC,OAAOrC,eAAel3B,QAAf,CAAwB,EAAxB,EAA4BC,QAA5B,CAAqC,CAArC,EAAwC,GAAxC,CAAX;AACA,SAAUq5B,MAAV,SAAoBC,IAApB;AACD;AACD;AACA;;AAEA,SAASnB,cAAT,CAAwB9b,MAAxB,EAAgC;AAC9B,MAAIjJ,QAAQiJ,OAAOhI,KAAnB;AACA,MAAI,CAAC2iB,WAAWtqB,GAAX,CAAe0G,KAAf,CAAL,EAA4B,MAAM7f,MAAMkjC,iBAAN,CAAN;AAC5B,MAAIL,IAAJ,EAAUlmC,QAAQC,GAAR,CAAYgG,EAAZ,kBAA8Bid,KAA9B;AACV4P,SAAOqC,SAAP,CAAiB,EAAEjS,OAAOiJ,OAAOhI,KAAhB,EAAjB,EAA0C,cAA1C;AACA2iB,aAAWtmB,MAAX,CAAkB0C,KAAlB;AACA;AACA,MAAImmB,SAASnC,mBAAmBloB,GAAnB,CAAuBkE,KAAvB,CAAb;AACA,MAAIkX,MAAMC,OAAN,CAAcgP,MAAd,CAAJ,EAA2B;AACzBA,WAAOh3B,OAAP,CAAe,eAAO;AACpB,UAAI8N,WAAW8mB,cAAcjoB,GAAd,CAAkBlJ,GAAlB,CAAf;AACA,UAAI3V,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,kBAA6B6P,GAA7B,wBAAkDoN,KAAlD;AACT,UAAI/C,QAAJ,EAAcA,SAASK,MAAT,CAAgB0C,KAAhB;AACf,KAJD;AAKD;AACD,MAAI/iB,GAAJ,EAAS+oC,uBAAqB/c,OAAOhI,KAA5B;AACV;AACD;AACA;;AAEA,SAAS+kB,aAAT,CAAuBI,MAAvB,EAA+B;AAC7BtpC,UAAQC,GAAR,CAAYgG,EAAZ,EAAgB,oBAAhB,EAAsCqjC,MAAtC;AACA;AACA,MAAIhqB,SAASwnB,WAAWxnB,MAAX,EAAb;AACA,MAAIpX,QAAQ,CAAZ;AAJ6B;AAAA;AAAA;;AAAA;AAK7B,0BAAmBoX,MAAnB,mIAA2B;AAAA,UAAlB6M,MAAkB;;AACzBnsB,cAAQC,GAAR,CAAYgG,EAAZ,EAAmBiC,KAAnB,WAA8BikB,OAAOhI,KAArC;AACD;AAP4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ9B;;AAED;AACA;AACAjnB,OAAOC,OAAP,GAAiBkqC,IAAjB;;;;;;AC5gBA;;;;;;AAMA,IAAMA,OAAO/pC,QAAQ,kBAAR,CAAb;AACA,IAAMisC,MAAMjsC,QAAQ,mBAAR,CAAZ;AACA,IAAMw1B,SAASx1B,QAAQ,iBAAR,CAAf;AACA,IAAM0I,UAAU1I,QAAQ,wBAAR,CAAhB;;AAEA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA,IAAM8F,KAAKD,QAAQE,GAAR,CAAY,KAAZ,CAAX;;AAEA;AACA;AACA,IAAIhI,SAAS,EAAb;AACA;AACA;;;;AAIAA,OAAOqpC,iBAAP,GAA2B,oBAAY;AACrCgC,MAAI5U,kBAAJ,CAAuB6U,QAAvB;AACA,SAAOnC,KAAKE,iBAAL,CAAuBiC,QAAvB,CAAP;AACD,CAHD;AAIA;AACA;;;AAGAtrC,OAAOurC,gBAAP,GAA0B,YAAM;AAC9BpC,OAAKzoC,aAAL,CAAmB,aAAnB,EAAkC,UAAU6hB,GAAV,EAAe;AAC/CA,QAAIrZ,IAAJ,GAAWsiC,UAAX,GAAwB,YAAxB;AACAjpB,QAAIrZ,IAAJ,GAAWsN,KAAX,CAAiB1V,IAAjB,CAAsB,QAAtB;AACA,QAAImB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT;AACA,WAAOA,GAAP;AACD,GAND;AAOA;AACA4mB,OAAKzoC,aAAL,CAAmB,kBAAnB,EAAuC,UAAU6hB,GAAV,EAAe;AACpD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT;AACA,QAAI3hB,OAAOuoC,KAAKM,sBAAL,CAA4BlnB,GAA5B,CAAX;AACA;AACA,WAAO3hB,IAAP;AACD,GAND;AAOA;AACAuoC,OAAKzoC,aAAL,CAAmB,WAAnB,EAAgC,UAAU6hB,GAAV,EAAe;AAC7C,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAI9O,eAAJ,CAAoBha,GAApB,CAAP;AACD,GAHD;AAIA;AACA4mB,OAAKzoC,aAAL,CAAmB,WAAnB,EAAgC,UAAU6hB,GAAV,EAAe;AAC7C,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAIpO,eAAJ,CAAoB1a,GAApB,CAAP;AACD,GAHD;AAIA;AACA;AACA4mB,OAAKzoC,aAAL,CAAmB,cAAnB,EAAmC,UAAU6hB,GAAV,EAAe;AAChD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAIlO,kBAAJ,CAAuB5a,GAAvB,CAAP;AACD,GAHD;AAIA;AACA4mB,OAAKzoC,aAAL,CAAmB,aAAnB,EAAkC,UAAU6hB,GAAV,EAAe;AAC/C,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAIjO,iBAAJ,CAAsB7a,GAAtB,CAAP;AACD,GAHD;;AAKA;;AAEA;;;AAGA4mB,OAAKzoC,aAAL,CAAmB,qBAAnB,EAA0C,eAAO;AAC/C;AACA,QAAIuB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,QAAM3hB,OAAOyqC,IAAI7H,aAAJ,CAAkBjhB,GAAlB,CAAb;AACA,WAAO3hB,IAAP;AACD,GALD;AAMA;;;AAGAuoC,OAAKzoC,aAAL,CAAmB,mBAAnB,EAAwC,eAAO;AAC7C;AACA,QAAIuB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,QAAM3hB,OAAOyqC,IAAInH,eAAJ,CAAoB3hB,GAApB,CAAb;AACA;AACA4mB,SAAK1/B,OAAL,CAAa,yBAAb,EAAwC7I,IAAxC;AACA,WAAOA,IAAP;AACD,GAPD;AAQA;;;AAGAuoC,OAAKzoC,aAAL,CAAmB,uBAAnB,EAA4C,eAAO;AACjD;AACA,QAAIuB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,QAAM3hB,OAAOyqC,IAAIjH,eAAJ,CAAoB7hB,GAApB,CAAb;AACA;AACA4mB,SAAK1/B,OAAL,CAAa,yBAAb,EAAwC7I,IAAxC;AACA,WAAOA,IAAP;AACD,GAPD;;AASA;;AAEAuoC,OAAKzoC,aAAL,CAAmB,iCAAnB,EAAsD,eAAO;AAC3D;AACA,QAAIuB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAI9H,yBAAJ,EAAP;AACD,GAJD;AAKA4F,OAAKzoC,aAAL,CAAmB,kBAAnB,EAAuC,eAAO;AAC5C;AACA,QAAIuB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT4mB,SAAK1/B,OAAL,CAAa,qBAAb,EAAoC8Y,IAAI3hB,IAAJ,CAASgL,QAA7C,EAH4C,CAGY;AACxD,WAAOy/B,IAAI7Q,iBAAJ,CAAsBjY,GAAtB,CAAP;AACD,GALD;AAMA4mB,OAAKzoC,aAAL,CAAmB,+BAAnB,EAAoD,YAAM;AACxD,WAAO2qC,IAAIx/B,uBAAJ,EAAP;AACD,GAFD;;AAIA;AACAs9B,OAAKzoC,aAAL,CAAmB,kBAAnB,EAAuC,UAAU6hB,GAAV,EAAe;AACpD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAIzN,kBAAJ,CAAuBrb,GAAvB,CAAP;AACD,GAHD;;AAKA;;AAEA;AACA4mB,OAAKzoC,aAAL,CAAmB,cAAnB,EAAmC,UAAU6hB,GAAV,EAAe;AAChD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,QAAI3hB,OAAOyqC,IAAI9N,UAAJ,CAAehb,GAAf,CAAX;AACA;AACA;AACA3hB,SAAK8qC,GAAL,GAAW,QAAX;AACA;AACA,QAAI9qC,KAAKy8B,IAAT,EAAe8L,KAAKxgB,OAAL,CAAa,eAAb,EAA8B/nB,IAA9B;AACf,QAAIA,KAAK48B,IAAT,EAAe2L,KAAKxgB,OAAL,CAAa,aAAb,EAA4B/nB,IAA5B;AACf,QAAIA,KAAKkJ,MAAL,KAAgBtF,SAApB,EAA+B2kC,KAAKxgB,OAAL,CAAa,aAAb,EAA4B/nB,IAA5B;AAC/B,QAAIA,KAAKyJ,MAAL,KAAgB7F,SAApB,EAA+B2kC,KAAKxgB,OAAL,CAAa,aAAb,EAA4B/nB,IAA5B;AAC/B,QAAIA,KAAK88B,OAAT,EAAkB;AAChB98B,WAAKokB,KAAL,GAAazC,IAAIkL,OAAjB,CADgB,CACU;AAC1B0b,WAAKxgB,OAAL,CAAa,gBAAb,EAA+B/nB,IAA/B;AACD;AACD,QAAIA,KAAK4/B,OAAT,EAAkB2I,KAAKxgB,OAAL,CAAa,eAAb,EAA8B/nB,IAA9B;AAClB,QAAIA,KAAKm/B,SAAL,KAAmBv7B,SAAvB,EAAkC2kC,KAAKxgB,OAAL,CAAa,gBAAb,EAA+B/nB,IAA/B;AAClC;AACA,WAAO,EAAE2I,IAAI,IAAN,EAAYqX,MAAM,cAAlB,EAAP;AACD,GAnBD;;AAqBA;AACAuoB,OAAKzoC,aAAL,CAAmB,mBAAnB,EAAwC,UAAU6hB,GAAV,EAAe;AACrD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,QAAIif,UAAU6J,IAAI1J,eAAJ,CAAoBpf,GAApB,CAAd;AACA;AACA;AACA4mB,SAAKxgB,OAAL,CAAa,iBAAb,EAAgC6Y,OAAhC;AACA;AACA,WAAO,EAAEj4B,IAAI,IAAN,EAAYqX,MAAM,mBAAlB,EAAP;AACD,GARD;;AAUAuoB,OAAKzoC,aAAL,CAAmB,yBAAnB,EAA8C,UAAU6hB,GAAV,EAAe;AAC3D,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAItN,sBAAJ,CAA2Bxb,GAA3B,CAAP;AACD,GAHD;AAIA4mB,OAAKzoC,aAAL,CAAmB,iBAAnB,EAAsC,UAAU6hB,GAAV,EAAe;AACnD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAIpN,gBAAJ,CAAqB1b,GAArB,CAAP;AACD,GAHD;AAIA4mB,OAAKzoC,aAAL,CAAmB,kBAAnB,EAAuC,UAAU6hB,GAAV,EAAe;AACpD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAInN,iBAAJ,CAAsB3b,GAAtB,CAAP;AACD,GAHD;;AAKA4mB,OAAKzoC,aAAL,CAAmB,gBAAnB,EAAqC,UAAU6hB,GAAV,EAAe;AAClD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAIzM,mBAAJ,CAAwBrc,GAAxB,CAAP;AACD,GAHD;;AAKA4mB,OAAKzoC,aAAL,CAAmB,kBAAnB,EAAuC,UAAU6hB,GAAV,EAAe;AACpD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAIpM,qBAAJ,CAA0B1c,GAA1B,CAAP;AACD,GAHD;;AAKA4mB,OAAKzoC,aAAL,CAAmB,oBAAnB,EAAyC,UAAU6hB,GAAV,EAAe;AACtD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAIlM,gBAAJ,CAAqB5c,GAArB,CAAP;AACD,GAHD;;AAKA4mB,OAAKzoC,aAAL,CAAmB,gBAAnB,EAAqC,UAAU6hB,GAAV,EAAe;AAClD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAI3L,mBAAJ,CAAwBnd,GAAxB,CAAP;AACD,GAHD;;AAKA4mB,OAAKzoC,aAAL,CAAmB,kBAAnB,EAAuC,UAAU6hB,GAAV,EAAe;AACpD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAIzL,qBAAJ,CAA0Brd,GAA1B,CAAP;AACD,GAHD;;AAKA4mB,OAAKzoC,aAAL,CAAmB,oBAAnB,EAAyC,UAAU6hB,GAAV,EAAe;AACtD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAIxL,gBAAJ,CAAqBtd,GAArB,CAAP;AACD,GAHD;;AAKA4mB,OAAKzoC,aAAL,CAAmB,mBAAnB,EAAwC,UAAU6hB,GAAV,EAAe;AACrD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAIvL,sBAAJ,CAA2Bvd,GAA3B,CAAP;AACD,GAHD;;AAKA4mB,OAAKzoC,aAAL,CAAmB,qBAAnB,EAA0C,UAAU6hB,GAAV,EAAe;AACvD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAIrL,wBAAJ,CAA6Bzd,GAA7B,CAAP;AACD,GAHD;;AAKA4mB,OAAKzoC,aAAL,CAAmB,uBAAnB,EAA4C,UAAU6hB,GAAV,EAAe;AACzD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAIpL,mBAAJ,CAAwB1d,GAAxB,CAAP;AACD,GAHD;;AAKA4mB,OAAKzoC,aAAL,CAAmB,sBAAnB,EAA2C,UAAU6hB,GAAV,EAAe;AACxD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAInL,yBAAJ,CAA8B3d,GAA9B,CAAP;AACD,GAHD;AAIA4mB,OAAKzoC,aAAL,CAAmB,sBAAnB,EAA2C,UAAU6hB,GAAV,EAAe;AACxD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAIlL,yBAAJ,CAA8B5d,GAA9B,CAAP;AACD,GAHD;AAIA4mB,OAAKzoC,aAAL,CAAmB,yBAAnB,EAA8C,UAAU6hB,GAAV,EAAe;AAC3D,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAIjL,4BAAJ,CAAiC7d,GAAjC,CAAP;AACD,GAHD;AAIA4mB,OAAKzoC,aAAL,CAAmB,iBAAnB,EAAsC,UAAU6hB,GAAV,EAAe;AACnD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,QAAMjZ,MAAM+hC,IAAIhL,oBAAJ,CAAyB9d,GAAzB,CAAZ;AACA;AACA,QAAM3hB,OAAOyqC,IAAI7H,aAAJ,CAAkBjhB,GAAlB,CAAb;AACA4mB,SAAK1/B,OAAL,CAAa,yBAAb,EAAwC7I,IAAxC;AACA,WAAO0I,GAAP;AACD,GAPD;;AASA6/B,OAAKzoC,aAAL,CAAmB,yBAAnB,EAA8C,UAAU6hB,GAAV,EAAe;AAC3D,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAIhN,sBAAJ,CAA2B9b,GAA3B,CAAP;AACD,GAHD;AAIA4mB,OAAKzoC,aAAL,CAAmB,iBAAnB,EAAsC,UAAU6hB,GAAV,EAAe;AACnD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAI9M,gBAAJ,CAAqBhc,GAArB,CAAP;AACD,GAHD;AAIA4mB,OAAKzoC,aAAL,CAAmB,kBAAnB,EAAuC,UAAU6hB,GAAV,EAAe;AACpD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAI7M,iBAAJ,CAAsBjc,GAAtB,CAAP;AACD,GAHD;;AAKA4mB,OAAKzoC,aAAL,CAAmB,oBAAnB,EAAyC,UAAU6hB,GAAV,EAAe;AACtD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAO8oB,IAAI3M,mBAAJ,CAAwBnc,GAAxB,CAAP;AACD,GAHD;;AAMA4mB,OAAKzoC,aAAL,CAAmB,eAAnB,EAAoC,UAAU6hB,GAAV,EAAe;AACjD,QAAItgB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB0jC,eAAelpB,GAAf,CAAhB;AACT,WAAOqS,OAAO2S,YAAP,CAAoBhlB,GAApB,CAAP;AACD,GAHD;;AAKA;AACA,WAASkpB,cAAT,CAAwBlpB,GAAxB,EAA6B;AAC3B,sBAAeA,IAAIuE,OAAJ,EAAf,gBAAsCnd,KAAKC,SAAL,CAAe2Y,IAAIrZ,IAAJ,EAAf,CAAtC;AACD;AACF,CA7OD;AA8OA;AACA;;AAEAlJ,OAAOspC,YAAP,GAAsB,YAAM;AAC1BH,OAAKG,YAAL;AACD,CAFD;;AAIA;AACA;AACAtqC,OAAOC,OAAP,GAAiBe,MAAjB;;;;;;;;;;;;;;ACvRA,IAAId,OAAO2C,MAAX,EAAmBC,QAAQC,GAAR,UAAmB/C,OAAOgD,EAA1B;AACnB;;;;;;AAMA,IAAM7C,QAAQC,QAAQ,OAAR,CAAd;;AAEA;AACA;;IACMusC,U;;;AACJ,wBAAc;AAAA;;AAAA;AAEb;;;;6BACQ;AACP,aACE;AAAA;AAAA;AACE,iBAAO;AACLrqC,qBAAS,MADJ;AAELC,sBAAU,YAFL;AAGLC,mBAAO,MAHF;AAILC,oBAAQ;AAJH;AADT;AAQE,qCAAK,IAAG,MAAR,EAAe,OAAO,EAAEmqC,MAAM,UAAR,EAAtB,GARF;AASE;AAAA;AAAA,YAAK,IAAG,QAAR,EAAiB,OAAO,EAAEA,MAAM,UAAR,EAAxB;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEE;AAAA;AAAA;AAAA;AAAA,WAFF;AAGE;AAAA;AAAA;AAAA;AAAA;AAHF,SATF;AAcE,qCAAK,IAAG,OAAR,EAAgB,OAAO,EAAEA,MAAM,UAAR,EAAvB;AAdF,OADF;AAkBD;;;wCACmB;AAClB9pC,cAAQC,GAAR,CAAY,oBAAZ;AACD;;;;EA1BsB5C,MAAMyC,S;;AA6B/B;AACA;;;AACA5C,OAAOC,OAAP,GAAiB0sC,UAAjB;;;;;;AC1CA;;;;;;AAMA,IAAMxsC,QAAQC,QAAQ,OAAR,CAAd;;AAEA;AACA;;AAEA;AACA;AACA,SAASysC,SAAT,CAAmBzrC,KAAnB,EAA0B;AACxBH,WAASmG,uBAAT;AACA,MAAI0lC,YAAJ;AACA,MAAI1rC,SAASA,MAAMY,QAAf,IAA2BZ,MAAMY,QAAN,CAAe8kC,QAA9C,EAAwD;AACtDgG,UAAM1rC,MAAMY,QAAN,CAAe8kC,QAAf,CAAwB3V,SAAxB,CAAkC,CAAlC,CAAN;AACD;AACD2b,QAAM,gBAAgBA,GAAhB,GAAsB,GAAtB,GAA4BA,GAA5B,GAAkC,OAAxC;AACA,SACE;AAAA;AAAA;AACE,aAAO;AACLxqC,iBAAS,MADJ;AAELC,kBAAU,eAFL;AAGLC,eAAO,MAHF;AAILC,gBAAQ;AAJH;AADT;AAQE,oCAAQ,OAAO,EAAEmqC,MAAM,UAAR,EAAoBla,QAAQ,GAA5B,EAAf,EAAkD,KAAKoa,GAAvD;AARF,GADF;AAYD;;AAED;AACA;AACA9sC,OAAOC,OAAP,GAAiB4sC,SAAjB;;;;;;;;AC2BA;;;;;;;;;;;;AA/DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA,IAAM7rC,SAASZ,QAAQ,eAAR,CAAf;AACA,IAAM2sC,KAAK3sC,QAAQ,aAAR,CAAX;AACA,IAAM4sC,QAAQ5sC,QAAQ,eAAR,CAAd;AACA,IAAMwzB,eAAexzB,QAAQ,+BAAR,CAArB;;AAEA;AACA;AACA,IAAI6C,MAAM,KAAV;AACA,IAAM6F,UAAU1I,QAAQ,qBAAR,CAAhB;AACA,IAAM2I,KAAKD,QAAQE,GAAR,CAAY,KAAZ,CAAX;;AAEA;AACA;AACA,IAAM7I,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQ6xB,M,GAAWH,U,CAAXG,M;;AACR,IAAMgb,WAAW7sC,QAAQ,uBAAR,CAAjB;AACA,IAAM8sC,SAAS9sC,QAAQ,qBAAR,CAAf;AACA,IAAM+sC,UAAU/sC,QAAQ,sBAAR,CAAhB;AACA,IAAMgtC,YAAYhtC,QAAQ,wBAAR,CAAlB;AACA,IAAMitC,eAAejtC,QAAQ,kCAAR,CAArB;AACA,IAAMktC,UAAUltC,QAAQ,YAAR,CAAhB,C,CAAuC;AACvC,IAAMmtC,YAAYntC,QAAQ,cAAR,CAAlB,C,CAA2C;AAC3C,IAAMotC,UAAUptC,QAAQ,YAAR,CAAhB,C,CAAuC;AACvC,IAAMqtC,eAAertC,QAAQ,iBAAR,CAArB,C,CAAiD;AACjD,IAAMstC,YAAYttC,QAAQ,cAAR,CAAlB,C,CAA2C;AAC3C,IAAMutC,SAASvtC,QAAQ,eAAR,CAAf;AACA,IAAM01B,SAAS11B,QAAQ,iCAAR,CAAf;;AAGA;AACA;IACMc,S;;;AACJ,uBAAc;AAAA;;AAAA;;AAEZF,WAAOoG,uBAAP;;AAEA;AACA2lC,OAAGa,UAAH;AACAZ,UAAMa,eAAN;AACA,QAAMC,KAAK,IAAIf,GAAGgB,QAAP,CAAgB,WAAhB,CAAX;AACAD,OAAGE,gBAAH,CAAoB,EAAEC,QAAQ,CAAV,EAApB;AACAnrC,YAAQC,GAAR,CAAY,uBAAZ,EAAqC+qC,GAAGvsC,KAAH,EAArC;AACA;AACAyrC,UAAMl/B,OAAN,CAAcogC,IAAd;;AAEA,UAAK3sC,KAAL,GAAa;AACX4sC,mBAAa,IADF;AAEXC,kBAAY,KAFD;AAGX3U,oBAAc,MAAK3P,QAAL,CAAc,UAAd,EAA0B2P,YAH7B;AAIX4U,qBAAe,EAJJ;AAKXC,uBAAiB,IALN;AAMXC,yBAAmB,KANR;AAOXC,4BAAsB;AAPX,KAAb;AASA,UAAKC,UAAL,CAAgB,YAAM;AACpB,UAAIxrC,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,YAAhB;AACV,KAFD;AAGA,UAAK2lC,OAAL,CAAa,YAAM;AACjB,UAAIzrC,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,SAAhB;AACV,KAFD;AAGA,UAAK4lC,OAAL,CAAa,YAAM;AACjB,UAAI1rC,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,SAAhB;AACV,KAFD;AAGA,UAAK6lC,UAAL,CAAgB,YAAM;AACpB,UAAI3rC,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,YAAhB;AACV,KAFD;AAGA,UAAK8lC,KAAL,CAAW,YAAM;AACf,UAAI5rC,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,OAAhB;AACV,KAFD;AAGA,UAAK+lC,YAAL,CAAkB,aAAK;AACrB,UAAI7rC,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,cAAhB;AACT;AACA;AACA;AACD,KALD;;AAOA,UAAKgmC,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BztC,IAA3B,OAA7B;AACA,UAAK0tC,YAAL,GAAoB,MAAKA,YAAL,CAAkB1tC,IAAlB,OAApB;AACA,UAAK2tC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsB3tC,IAAtB,OAAxB;;AAEA,UAAKsI,gBAAL,CAAsB,SAAtB,EAAiC,MAAKmlC,qBAAtC;;AAEA,QAAMhrC,QAAQ/C,OAAOgD,WAAP,OAAd;AACAD,UAAMrC,aAAN,CAAoB,YAApB,EAAkC,MAAKstC,YAAvC;AAnDY;AAoDb;;AAED;AACA;;;;;;;0CAGsB3d,O,EAAS;AAC7B,WAAK1vB,QAAL,CAAc,EAAEysC,YAAY/c,QAAQvnB,OAAtB,EAAd;AACD;;;iCAEYlF,C,EAAG;AACd,UAAMsqC,OAAO,IAAIhqC,IAAJ,GAAWiqC,kBAAX,EAAb;AACA,WAAKxtC,QAAL,CAAc;AACZwsC,qBAAa,KADD;AAEZE,uBAAkBzpC,EAAEirB,MAAF,CAASjI,OAA3B,SAAsCsnB;AAF1B,OAAd;AAID;;AAED;AACA;AACA;;;;;;wCAGoB;AAClB;AACA,UAAIE,UAAUjsC,SAASqS,cAAT,CAAwB,SAAxB,CAAd;AACA45B,cAAQC,WAAR,GAAsB,KAAKC,eAA3B;AACD;;;2CAEsB;AACrB,WAAKrlB,iBAAL,CAAuB,SAAvB,EAAkC,KAAK8kB,qBAAvC;AACD;;AAED;;;;qCACiBnqC,C,EAAG;AAClB,WAAKjD,QAAL,CAAc,iBAAS;AACrB,eAAO,EAAE4sC,mBAAmB,CAAChtC,MAAMgtC,iBAA5B,EAAP;AACD,OAFD;AAGD;;AAED;AACA;;;;;6BAES;AAAA,mBAQH,KAAKhtC,KARF;AAAA,UAEL6sC,UAFK,UAELA,UAFK;AAAA,UAGLC,aAHK,UAGLA,aAHK;AAAA,UAILC,eAJK,UAILA,eAJK;AAAA,UAKLC,iBALK,UAKLA,iBALK;AAAA,UAMLC,oBANK,UAMLA,oBANK;AAAA,UAOLe,mBAPK,UAOLA,mBAPK;;AAUP;AACA;AACA;;AACA,UAAIC,YAAY,SAAhB;AACA,UAAI,KAAKjuC,KAAL,CAAWk4B,YAAX,IAA2B,CAAC2U,UAAhC,EAA4CoB,YAAY,QAAZ;;AAE5C;AACA,aACE;AAAA;AAAA,UAAK,WAAU,qBAAf;AACE;AAAA;AAAA;AACE,uBAAU,8CADZ;AAEE,oBAAQ,KAAKjuC,KAAL,CAAW4sC;AAFrB;AAIE;AAAA;AAAA;AACE;AAAA;AAAA;AAAIE,2BAAJ;AAAA;AAAA,aADF;AAAA;AAGGA,yBAHH;AAAA;AAAA;AAJF,SADF;AAWE;AAAA;AAAA,YAAK,WAAU,iCAAf;AACE,8BAAC,YAAD,OADF;AAEE,uCAAK,OAAO,EAAEoB,UAAU,CAAZ,EAAZ,GAFF;AAGE,8BAAC,yBAAD;AACE,qBAASjB,oBADX;AAEE,iCAAqBe;AAFvB,YAHF;AAOE,uCAAK,OAAO,EAAEE,UAAU,CAAZ,EAAZ;AAPF,SAXF;AAqBE;AAAA;AAAA;AACE,uBAAU,kBADZ;AAEE,mBAAO;AACLntC,uBAAS,MADJ;AAELC,wBAAU,YAFL;AAGLG,+BAAiB,MAHZ;AAILF,qBAAO,MAJF;AAKLC,sBAAQ,MALH;AAMLitC,wBAAU,QANL;AAOLC,0BAAYH;AAPP;AAFT;AAYE;AAAA;AAAA;AACE,yBAAU,qBADZ;AAEE,kBAAG,MAFL;AAGE,qBAAO;AACL9sC,iCAAiB,MADZ;AAELkqC,sBAAM,SAFD;AAGLgD,0BAAU,OAHL;AAILjtC,yBAAS,MAJJ;AAKLktC,2BAAW,QALN;AAMLC,2BAAW,MANN;AAOL5c,2BAAW;AAPN;AAHT;AAcE;AAAA;AAAA;AACE,2BAAU,yBADZ;AAEE,uBAAO,EAAE5wB,SAAS,MAAX,EAAmBC,UAAU,eAA7B;AAFT;AAIE,kCAAC,QAAD,OAJF;AAKE,kCAAC,MAAD;AALF;AAdF,WAZF;AAqCE;AAAA;AAAA;AACE,yBAAU,4BADZ;AAEE,kBAAG,QAFL;AAGE,qBAAO;AACLG,iCAAiB,SADZ;AAELkqC,sBAAM,SAFD;AAGL1Z,2BAAW,MAHN;AAIL5wB,yBAAS,MAJJ;AAKLytC,+BAAe;AALV;AAHT;AAWE,gCAAC,SAAD,OAXF;AAYE,gCAAC,OAAD;AAZF,WArCF;AAoDE;AAAA;AAAA;AACE,yBAAU,iCADZ;AAEE,kBAAG,OAFL;AAGE,qBAAO;AACL7c,2BAAW,MADN;AAELvwB,yBAAS,OAFJ;AAGLD,iCAAiB,SAHZ;AAILstC,qCAAqBzB,oBAAoB,MAApB,GAA6B,GAJ7C;AAKL0B,+BAAe,MALV,CAKiB;AALjB;AAHT;AAWE;AAAA;AAAA;AACE,uBAAO;AACL3tC,2BAAS,MADJ;AAELytC,iCAAe,QAFV;AAGLG,8BAAY,KAHP;AAIL1tC,yBAAO+rC,oBAAoB,MAApB,GAA6B,GAJ/B;AAKL9rC,0BAAQ8rC,oBAAoB,MAApB,GAA6B,SALhC;AAMLmB,4BAAU;AANL;AADT;AAUE;AAAC,sBAAD;AAAA;AACE,2BAAS,KAAKT,gBADhB;AAEE,yBAAO;AACLzsC,2BAAO,MADF;AAELwtC,yCAAqB,MAFhB;AAGLC,mCAAe,MAHV;AAILvtC,qCAAiB,SAJZ;AAKLgwB,4BAAQ,MALH;AAMLyd,+BAAW,MANN;AAOLzc,8BAAU6a,oBAAoB,SAApB,GAAgC;AAPrC;AAFT;AAYG,iBAACA,iBAAD,QAZH;AAaGzY,uBAAOsa,WAbV;AAcG7B;AAdH,eAVF;AA0BE,kCAAC,YAAD,IAAc,QAAQ,CAACA,iBAAvB;AA1BF;AAXF;AApDF,SArBF;AAkHE;AAAA;AAAA;AACE,uBAAU,+BADZ;AAEE,mBAAO;AACL1b,wBAAU,MADL;AAEL;AACAwd,oBAAM,KAHD;AAILC,sBAAQ,KAJH;AAKL3c,qBAAO,KALF;AAMLH,sBAAQ,MANH;AAOLP,qBAAO,MAPF;AAQLvwB,+BAAiB,MARZ;AASLC,uBAAS;AATJ;AAFT;AAAA;AAAA,SAlHF;AAqIE,qCAAK,IAAG,kBAAR;AArIF,OADF,CAjBO,CAyJJ;AACJ,K,CAAC;;;;;EA1PoB3B,OAAO4B,S,GA2P7B;;AAEF;AACA;AACA;;;AACA1B,UAAUqvC,IAAV,GAAiBvwC,OAAOgD,EAAxB;;AAEA;AACA;AACAhD,OAAOC,OAAP,GAAiBiB,SAAjB;;;;;;;;ACvUA;;;;;;;;;AASA,IAAMf,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM8C,WAAW9C,QAAQ,WAAR,CAAjB;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;;eACoBA,QAAQ,eAAR,C;IAAZ0N,O,YAAAA,O;;AACR,IAAM0iC,YAAYpwC,QAAQ,kBAAR,CAAlB;;gBACwBA,QAAQ,sBAAR,C;IAAhBiN,W,aAAAA,W;;gBACejN,QAAQ,kBAAR,C;IAAfqN,U,aAAAA,U;;AACR,IAAMgjC,OAAOrwC,QAAQ,SAAR,CAAb;AACA,IAAMswC,WAAWtwC,QAAQ,uBAAR,CAAjB;AACA,IAAMa,WAAWb,QAAQ,UAAR,CAAjB;;AAEA;AACA;AACA,IAAM6C,MAAM,IAAZ;AACA,IAAM8F,KAAK,eAAX;;AAEA;AACA;AACA,IAAI1D,MAAMrE,OAAOoI,SAAP,CAAiBpJ,OAAOgD,EAAxB,CAAV;AACA,IAAIe,QAAQ/C,OAAOgD,WAAP,CAAmBqB,GAAnB,CAAZ;AACA,IAAMsrC,oBAAoB,kBAA1B,C,CAA8C;;AAE9C,IAAI/wB,YAAJ,C,CAAS;;AAET;AACA;AACA;;AAEAva,IAAIiE,IAAJ,CAAS,YAAT,EAAuB,YAAM;AAC3B;AACA;;;;;;;;;AASA;AACAvF,QAAMrC,aAAN,CAAoB,uBAApB,EAA6C2D,IAAIurC,MAAjD;AACA;AACA7sC,QAAMrC,aAAN,CAAoB,iBAApB,EAAuC2D,IAAIwrC,qBAA3C;AACA9sC,QAAMrC,aAAN,CAAoB,gBAApB,EAAsC2D,IAAIyrC,oBAA1C;AACA/sC,QAAMrC,aAAN,CAAoB,eAApB,EAAqC2D,IAAI0rC,mBAAzC;AACA;AACAhtC,QAAMrC,aAAN,CAAoB,yBAApB,EAA+CsvC,mBAA/C;;AAEA;AACA;AACA;AACD,CAvBD,E,CAuBI;AACJ;AACA;;;AAGA3rC,IAAIiE,IAAJ,CAAS,WAAT,EAAsB,YAAM;AAC1B,MAAIrG,GAAJ,EAASH,QAAQC,GAAR,CAAY,uBAAZ;AACV,CAFD,E,CAEI;;AAEJ;AACA;;;AAGAsC,IAAIiE,IAAJ,CAAS,WAAT,EAAsB,UAAUsY,IAAV,EAAgB;AACpC,MAAI3e,GAAJ,EAASH,QAAQC,GAAR,CAAY,uBAAZ;AACV,CAFD,E,CAEI;;AAEJ;AACAsC,IAAIurC,MAAJ,GAAa,gBAAQ;AACnB,MAAMljC,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACAhc,UAAQmjC,YAAR,CAAqBvjC,SAASwjC,YAA9B;AACApjC,UAAQ8iC,MAAR,CAAehvC,IAAf;AACD,CAJD;;AAMA;AACA;;AAEAyD,IAAI8rC,WAAJ,GACE;AAAA;AAAA,IAAK,IAAG,cAAR,EAAuB,OAAM,4BAA7B,EAA0D,SAAQ,WAAlE;AACE,gCAAM,GAAE,uIAAR;AADF,CADF;AAKA;AACA;AACA9rC,IAAI+rC,kBAAJ,GACE;AAAA;AAAA,IAAK,IAAG,oBAAR,EAA6B,OAAM,4BAAnC,EAAgE,OAAM,IAAtE,EAA2E,QAAO,IAAlF,EAAuF,SAAQ,WAA/F;AACE,gCAAM,MAAK,SAAX,EAAqB,GAAE,8HAAvB,GADF;AAEE,gCAAM,MAAK,SAAX,EAAqB,GAAE,oLAAvB;AAFF,CADF;AAMA/rC,IAAIgsC,2BAAJ,GACE;AAAA;AAAA,IAAK,IAAG,oBAAR,EAA6B,OAAM,4BAAnC,EAAgE,OAAM,IAAtE,EAA2E,QAAO,IAAlF,EAAuF,SAAQ,WAA/F;AACE,gCAAM,MAAK,SAAX,EAAqB,GAAE,8HAAvB,GADF;AAEE,gCAAM,MAAK,SAAX,EAAqB,GAAE,oLAAvB;AAFF,CADF;AAMAhsC,IAAIisC,gBAAJ,GACE;AAAA;AAAA,IAAK,IAAG,oBAAR,EAA6B,OAAM,4BAAnC,EAAgE,OAAM,IAAtE,EAA2E,QAAO,IAAlF,EAAuF,SAAQ,WAA/F;AACE,gCAAM,MAAK,SAAX,EAAqB,GAAE,8HAAvB,GADF;AAEE,gCAAM,MAAK,SAAX,EAAqB,GAAE,oLAAvB;AAFF,CADF;AAMAjsC,IAAIksC,yBAAJ,GACE;AAAA;AAAA,IAAK,IAAG,oBAAR,EAA6B,OAAM,4BAAnC,EAAgE,OAAM,IAAtE,EAA2E,QAAO,IAAlF,EAAuF,SAAQ,WAA/F;AACE,gCAAM,MAAK,SAAX,EAAqB,GAAE,8HAAvB,GADF;AAEE,gCAAM,MAAK,SAAX,EAAqB,GAAE,oLAAvB;AAFF,CADF;;AAOA,SAASC,+BAAT,GAA2C;AACzC,MAAMC,oBAAoB3jC,QAAQ4jC,qBAAR,EAA1B;AACA3tC,QAAMimB,WAAN,CAAkB,mBAAlB,EAAuCynB,iBAAvC;AACD;;AAED,SAASE,yBAAT,GAAqC;AACnC,MAAMC,eAAe9jC,QAAQ+jC,eAAR,EAArB;AACA9tC,QAAMimB,WAAN,CAAkB,cAAlB,EAAkC4nB,YAAlC;AACD;;AAED,SAASE,eAAT,CAAyBpT,OAAzB,EAAkC;AAChC,MAAMqT,OAAO;AACXlP,oBAAgBnE,QAAQmE,cADb;AAEXp3B,gBAAYizB,QAAQjzB,UAFT;AAGXumC,uBAAmBtT,QAAQsT,iBAHhB;AAIXC,yBAAqBvT,QAAQuT,mBAJlB;AAKXC,kBAAcxT,QAAQwT,YALX;AAMXC,wBAAoBzT,QAAQyT,kBANjB;AAOXC,wBAAoB1T,QAAQ0T,kBAPjB;AAQXC,6BAAyB3T,QAAQ2T,uBARtB;AASXC,kBAAc5T,QAAQ4T,YATX;AAUXC,oBAAgB7T,QAAQ6T;AAVb,GAAb;AAYA,MAAMlzB,MAAMha,IAAImtC,gBAAJ,EAAZ;AACA1kC,UAAQ2kC,aAAR,CAAsBV,IAAtB,EAA4B1yB,GAA5B;AACD;;AAED,SAAS2xB,mBAAT,CAA6BpvC,IAA7B,EAAmC;AACjCmC,QAAM0G,OAAN,CAAc,qBAAd,EAAqCJ,IAArC,CAA0C,gBAAQ;AAChD;AACAtG,UAAME,SAAN,CAAgB,4BAAhB,EAA8CrC,IAA9C;AACD,GAHD;AAID;AACD;AACA;;AAEA;AACA;AACAyD,IAAIqtC,QAAJ,GAAejC,KAAKiC,QAApB;;AAEA;AACA;AACA;AACArtC,IAAIstC,WAAJ,GAAkB;AAAA,eAAcC,MAAd;AAAA,CAAlB;AACAvtC,IAAIwtC,WAAJ,GAAkB;AAAA,eAAcC,MAAd;AAAA,CAAlB;AACAztC,IAAI0tC,cAAJ,GAAqB;AAAA,eAAiBC,SAAjB;AAAA,CAArB;;AAEA;AACA3tC,IAAI4tC,eAAJ,GAAsB,gBAAQ;AAC5B,MAAM1+B,OAAO2+B,KAAK/hB,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAb;AACA,MAAMnuB,KAAKkwC,KAAK/hB,SAAL,CAAe,CAAf,CAAX;AACA,SAAO,EAAE5c,UAAF,EAAQvR,MAAR,EAAP;AACD,CAJD;;AAMA;;;;;;AAMAqC,IAAI8tC,kBAAJ,GAAyB,gBAAQ;AAAA,6BACV9tC,IAAI4tC,eAAJ,CAAoBC,IAApB,CADU;AAAA,MACvB3+B,IADuB,wBACvBA,IADuB;AAAA,MACjBvR,EADiB,wBACjBA,EADiB;;AAE/B,MAAIowC,kBAAJ;AACA,MAAI/U,aAAJ;AAAA,MAAUG,aAAV;AAAA,MAAgBhB,cAAhB;AAAA,MAAuB6V,mBAAvB;AAAA,MAAmCC,mBAAnC;AACA,MAAIC,oBAAJ,CAJ+B,CAId;AACjB,UAAQh/B,IAAR;AACE,SAAK,GAAL;AACE6+B,kBAAY,MAAZ;AACA/U,aAAOt6B,MAAM+lB,QAAN,CAAe,QAAf,EAAyB0T,KAAzB,CAA+B+C,IAA/B,CAAoC;AAAA,eAAKjC,EAAEt7B,EAAF,KAASguB,OAAOhuB,EAAP,CAAd;AAAA,OAApC,CAAP;AACA,UAAI,CAACq7B,IAAL,EAAW,MAHb,CAGoB;AAClB,UAAIA,IAAJ,EAAUkV,cAAclV,KAAKnmB,KAAnB;AACV;AACF,SAAK,GAAL;AACEk7B,kBAAY,MAAZ;AACA5U,aAAOz6B,MAAM+lB,QAAN,CAAe,QAAf,EAAyB6T,KAAzB,CAA+B4C,IAA/B,CAAoC;AAAA,eAAK37B,EAAE5B,EAAF,KAASguB,OAAOhuB,EAAP,CAAd;AAAA,OAApC,CAAP;AACA,UAAI,CAACw7B,IAAL,EAAW,MAHb,CAGoB;AAClBhB,cAAQz5B,MAAM+lB,QAAN,CAAe,QAAf,EAAyB0T,KAAjC;AACA6V,mBAAa7V,MAAM+C,IAAN,CAAW;AAAA,eAAKjC,EAAEt7B,EAAF,KAASguB,OAAOwN,KAAKvB,MAAZ,CAAd;AAAA,OAAX,CAAb;AACAqW,mBAAa9V,MAAM+C,IAAN,CAAW;AAAA,eAAKjC,EAAEt7B,EAAF,KAASguB,OAAOwN,KAAKzyB,MAAZ,CAAd;AAAA,OAAX,CAAb;AACA,UAAIyyB,QAAQ6U,UAAR,IAAsBC,UAA1B,EACEC,mBAAiBF,WAAWn7B,KAA5B,GAAoC7K,WAApC,GAAkDimC,WAAWp7B,KAA7D;AACF;AACF,SAAK,GAAL;AACEk7B,kBAAY,SAAZ;AACAG,oBAAcvwC,EAAd;AACA;AApBJ;AAsBA,SAAO,EAAEowC,oBAAF,EAAaG,wBAAb,EAAP;AACD,CA5BD;;AA8BA;AACA;AACAluC,IAAImuC,YAAJ,GAAmB,gBAAQ;AAAA,8BACJnuC,IAAI4tC,eAAJ,CAAoBC,IAApB,CADI;AAAA,MACjB3+B,IADiB,yBACjBA,IADiB;AAAA,MACXvR,EADW,yBACXA,EADW;;AAEzB,MAAIw7B,aAAJ;AACA,UAAQjqB,IAAR;AACE,SAAK,GAAL;AACExQ,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAAC2D,SAAS5L,EAAT,CAAD,CAAX,EAAjC;AACA;AACF,SAAK,GAAL;AACEw7B,aAAOz6B,MAAM+lB,QAAN,CAAe,QAAf,EAAyB6T,KAAzB,CAA+B4C,IAA/B,CAAoC;AAAA,eAAK37B,EAAE5B,EAAF,KAASguB,OAAOhuB,EAAP,CAAd;AAAA,OAApC,CAAP;AACAe,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAACuzB,KAAKvB,MAAN,CAAX,EAAjC,EAA6D5yB,IAA7D,CAAkE,YAAM;AACtEtG,cAAME,SAAN,CAAgB,aAAhB,EAA+B,EAAE6uC,QAAQtU,KAAKx7B,EAAf,EAA/B;AACD,OAFD;AAGA;AACF,SAAK,GAAL;AACE;AACA;AAZJ;AAcD,CAjBD;;AAmBA;AACAqC,IAAIouC,WAAJ,GAAkB,UAACP,IAAD,EAAOQ,GAAP,EAAe;AAAA,8BACVruC,IAAI4tC,eAAJ,CAAoBC,IAApB,CADU;AAAA,MACvB3+B,IADuB,yBACvBA,IADuB;AAAA,MACjBvR,EADiB,yBACjBA,EADiB;;AAE/B,MAAIw7B,aAAJ;AACA,UAAQjqB,IAAR;AACE,SAAK,GAAL;AACExQ,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAAC2D,SAAS5L,EAAT,CAAD,CAAX,EAAjC,EAA8DqH,IAA9D,CAAmE,YAAM;AACvEtG,cAAME,SAAN,CAAgB,gBAAhB,EAAkC,EAAEivC,UAAF,EAAlC,EAA4C7oC,IAA5C,CAAiD,YAAM;AACrD,cAAMspC,YAAYxwC,SAASqS,cAAT,CAAwBk+B,GAAxB,CAAlB;AACAC,oBAAUC,cAAV,CAAyB,EAAEC,UAAU,QAAZ,EAAzB;AACD,SAHD;AAID,OALD;AAMA;AACF,SAAK,GAAL;AACErV,aAAOz6B,MAAM+lB,QAAN,CAAe,QAAf,EAAyB6T,KAAzB,CAA+B4C,IAA/B,CAAoC;AAAA,eAAK37B,EAAE5B,EAAF,KAASguB,OAAOhuB,EAAP,CAAd;AAAA,OAApC,CAAP;AACAe,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAACuzB,KAAKvB,MAAN,CAAX,EAAjC,EAA6D5yB,IAA7D,CAAkE,YAAM;AACtEtG,cAAME,SAAN,CAAgB,aAAhB,EAA+B,EAAE6uC,QAAQtU,KAAKx7B,EAAf,EAA/B,EAAoDqH,IAApD,CAAyD,YAAM;AAC7DtG,gBAAME,SAAN,CAAgB,gBAAhB,EAAkC,EAAEivC,UAAF,EAAlC,EAA4C7oC,IAA5C,CAAiD,YAAM;AACrD,gBAAMspC,YAAYxwC,SAASqS,cAAT,CAAwBk+B,GAAxB,CAAlB;AACAC,sBAAUC,cAAV,CAAyB,EAAEC,UAAU,QAAZ,EAAzB;AACD,WAHD;AAID,SALD;AAMD,OAPD;AAQA;AACF,SAAK,GAAL;AACE;AACA;AAtBJ;AAwBD,CA3BD;;AA6BA;AACA;AACAxuC,IAAIyuC,gBAAJ,GAAuB;AAAA,SAAOl0B,MAAMP,GAAb;AAAA,CAAvB;AACAha,IAAImtC,gBAAJ,GAAuB;AAAA,SAAM5yB,GAAN;AAAA,CAAvB,C,CAAkC;AAClCva,IAAI0uC,WAAJ,GAAkB,eAAO;AACvB,SAAOjmC,QAAQimC,WAAR,CAAoB10B,GAApB,CAAP;AACD,CAFD;AAGAha,IAAIoD,OAAJ,GAAc,YAAM;AAClB,SAAOxH,SAASwH,OAAT,EAAP;AACD,CAFD;;AAIA;AACA;AACApD,IAAI2uC,eAAJ,GAAsB,YAAM;AAC1B,SAAOlmC,QAAQkmC,eAAR,EAAP;AACD,CAFD;AAGA3uC,IAAI4uC,cAAJ,GAAqB,gBAAQ;AAC3B,SAAOnmC,QAAQmmC,cAAR,CAAuBC,IAAvB,CAAP;AACD,CAFD;AAGA7uC,IAAI8uC,qBAAJ,GAA4B,YAAM;AAChC,SAAOrmC,QAAQqmC,qBAAR,EAAP;AACD,CAFD;;AAIA;AACA;AACA9uC,IAAI+uC,WAAJ,GAAkB,YAAM;AACtB,MAAM/0B,MAAMha,IAAImtC,gBAAJ,EAAZ;AACA,MAAM6B,QAAQvmC,QAAQwmC,QAAR,EAAd;AACAD,QAAMl/B,OAAN,CAAc,gBAAQ;AACpBo/B,qBAAiBrB,IAAjB,EAAuB7zB,GAAvB;AACAvR,YAAQ0mC,QAAR,CAAiBtB,IAAjB,EAAuB7zB,GAAvB;AACD,GAHD;AAIAvR,UAAQ2mC,4BAAR,CAAqCp1B,GAArC;AACAmyB;AACD,CATD;;AAWA;AACA;AACAnsC,IAAIqvC,oBAAJ,GAA2B,iBAAS;AAClC,SAAO5mC,QAAQ4mC,oBAAR,CAA6BC,KAA7B,CAAP;AACD,CAFD;AAGA;AACAtvC,IAAIuvC,qBAAJ,GAA4B,UAACD,KAAD,EAAQzB,IAAR,EAAcxf,QAAd,EAA2B;AACrDruB,MAAIwvC,oBAAJ,CAAyBF,KAAzB,EAAgC,EAAEzB,UAAF,EAAQ1xC,QAAQ,IAAhB,EAAhC;AACAuC,QAAME,SAAN,CAAgB,0BAAhB,EAA4C,EAAE0wC,YAAF,EAASzB,UAAT,EAAexf,kBAAf,EAA5C;AACD,CAHD;AAIA;AACA;;;;;;;;;;AAUAruB,IAAIyvC,uBAAJ,GAA8B,UAACH,KAAD,EAAQzB,IAAR,EAAcxf,QAAd,EAA2B;AACvD,MAAMrU,MAAMha,IAAImtC,gBAAJ,EAAZ;AACA;AACA,MAAMuC,aAAa1vC,IAAI2vC,eAAJ,CAAoB9B,IAApB,CAAnB;AACA,MAAI6B,eAAeJ,KAAnB,EAA0B;AACxB;AACAtvC,QAAI4vC,sBAAJ,CAA2BN,KAA3B,EAAkCzB,IAAlC,EAAwC7zB,GAAxC;AACD,GAHD,MAGO,IAAI01B,eAAevvC,SAAnB,EAA8B;AACnC;AACAH,QAAI4vC,sBAAJ,CAA2BF,UAA3B,EAAuC7B,IAAvC,EAA6C7zB,GAA7C;AACAha,QAAIuvC,qBAAJ,CAA0BD,KAA1B,EAAiCzB,IAAjC,EAAuCxf,QAAvC;AACD,GAJM,MAIA;AACL;AACAruB,QAAIuvC,qBAAJ,CAA0BD,KAA1B,EAAiCzB,IAAjC,EAAuCxf,QAAvC;AACD;AACF,CAfD;AAgBA;AACA;;;;;;;AAOAruB,IAAI4vC,sBAAJ,GAA6B,UAACN,KAAD,EAAQzB,IAAR,EAAc7zB,GAAd,EAAsB;AACjD,MAAI,CAACha,IAAI6vC,SAAJ,CAAchC,IAAd,CAAL,EAA0B;AACxB;AACAruC,UACE,wFADF;AAGA;AACD;AACD;AACA0vC,mBAAiBrB,IAAjB,EAAuB7zB,GAAvB;AACAvR,UAAQmnC,sBAAR,CAA+BN,KAA/B,EAAsCzB,IAAtC,EAA4C7zB,GAA5C;AACAmyB;AACA;AACAztC,QAAME,SAAN,CAAgB,0BAAhB,EAA4C,EAAEivC,UAAF,EAA5C;AACD,CAdD;AAeA;AACA7tC,IAAI8vC,eAAJ,GAAsB,YAAM;AAC1B,MAAM91B,MAAMha,IAAImtC,gBAAJ,EAAZ;AACA,SAAO1kC,QAAQqnC,eAAR,CAAwB91B,GAAxB,CAAP;AACD,CAHD;AAIA;AACAha,IAAI+vC,wBAAJ,GAA+B,2BAAmB;AAChD,MAAMC,MAAMlyC,SAASqS,cAAT,CAAwB8/B,eAAxB,CAAZ;AACA,MAAMC,UAAUF,IAAIG,qBAAJ,GAA4BnF,IAA5C;AACA,MAAMoF,cAAc/gC,KAAKghC,GAAL,CAASC,OAAOnzC,KAAhB,EAAuBtC,OAAO01C,UAA9B,CAApB;AACA,MAAIC,UAAJ;AACA,MAAIJ,cAAcF,OAAd,GAAwB,GAA5B,EAAiC;AAC/BM,QAAIN,UAAU,GAAd;AACD,GAFD,MAEO;AACLM,QAAIN,UAAU,EAAd;AACD;AACD,MAAMO,IAAIT,IAAIG,qBAAJ,GAA4BO,GAA5B,GAAkC71C,OAAO81C,OAAnD;AACA,SAAO,EAAEH,IAAF,EAAKC,IAAL,EAAP;AACD,CAZD;;AAeA;AACA;;;;;AAKAzwC,IAAI4wC,iBAAJ,GAAwB,iBAAS;AAC/B,SAAOnoC,QAAQmoC,iBAAR,CAA0BtB,KAA1B,CAAP;AACD,CAFD;AAGA;;;;;AAKAtvC,IAAIwvC,oBAAJ,GAA2B,UAACF,KAAD,EAAQuB,SAAR,EAAsB;AAC/CpoC,UAAQ+mC,oBAAR,CAA6BF,KAA7B,EAAoCuB,SAApC;AACA1E;AACD,CAHD;;AAKA;AACA;AACAnsC,IAAI2vC,eAAJ,GAAsB;AAAA,SAAQlnC,QAAQknC,eAAR,CAAwB9B,IAAxB,CAAR;AAAA,CAAtB;;AAEA;AACA;;AAEA7tC,IAAI6vC,SAAJ,GAAgB,gBAAQ;AACtB,MAAMiB,SAAS9wC,IAAI+wC,sBAAJ,CAA2BlD,IAA3B,CAAf;AACA,MAAImD,gBAAgB,KAApB;AACAF,SAAOhhC,OAAP,CAAe,iBAAS;AACtB,QAAIrH,QAAQwoC,qBAAR,CAA8BC,MAAM9qC,UAApC,CAAJ,EAAqD4qC,gBAAgB,IAAhB;AACtD,GAFD;AAGA,SAAO,CAACA,aAAR;AACD,CAPD;;AASA;AACA;AACAhxC,IAAI+wC,sBAAJ,GAA6B,UAAClD,IAAD,EAAO7zB,GAAP,EAAe;AAC1C,SAAOvR,QAAQsoC,sBAAR,CAA+BlD,IAA/B,EAAqC7zB,GAArC,CAAP;AACD,CAFD;AAGAha,IAAImxC,2BAAJ,GAAkC,UAACtD,IAAD,EAAO7zB,GAAP,EAAe;AAC/C,SAAOvR,QAAQ0oC,2BAAR,CAAoCtD,IAApC,EAA0C7zB,GAA1C,CAAP;AACD,CAFD;;AAIA;AACA;AACAha,IAAIoxC,cAAJ,GAAqB,UAACvD,IAAD,EAAOQ,GAAP,EAAe;AAClC,SAAO5lC,QAAQ2oC,cAAR,CAAuBvD,IAAvB,EAA6BQ,GAA7B,CAAP;AACD,CAFD;;AAIA;AACA;AACAruC,IAAIqxC,UAAJ,GAAiB,eAAO;AACtB,SAAO5oC,QAAQ4oC,UAAR,CAAmBhD,GAAnB,CAAP;AACD,CAFD;AAGAruC,IAAIsxC,oBAAJ,GAA2B,eAAO;AAChC,SAAO7oC,QAAQ6oC,oBAAR,CAA6Bt3B,GAA7B,CAAP;AACD,CAFD;AAGAha,IAAIuxC,iBAAJ,GAAwB,YAAM;AAC5B,SAAO9oC,QAAQ8oC,iBAAR,EAAP;AACD,CAFD;AAGA;;;;AAIAvxC,IAAIwxC,UAAJ,GAAiB,gBAAQ;AACvB;AACArG,YAAUhlC,mBAAV,GAAgCnB,IAAhC,CAAqC,wBAAgB;AACnD0nC,SAAKtmC,UAAL,GAAkBqrC,YAAlB;AACAhpC,YAAQ+oC,UAAR,CAAmB9E,IAAnB,EAFmD,CAEzB;AAC1BJ;AACD,GAJD;AAKD,CAPD;AAQA;;;;;;AAMAtsC,IAAIotC,aAAJ,GAAoB,gBAAQ;AAC1B3kC,UAAQ2kC,aAAR,CAAsBV,IAAtB;AACAgF,oBAAkBhF,IAAlB;AACAJ;AACD,CAJD;AAKA;;;;;;;;;;;;;;;;;AAiBAtsC,IAAI2xC,aAAJ,GAAoB,UAACC,KAAD,EAAQC,EAAR,EAAe;AACjC,MAAIC,uBAAJ;AAAA,MAAoBC,kBAApB;AAAA,MAA+BC,sBAA/B;AACA,MAAIJ,MAAMK,gBAAV,EAA4B;AAC1B;AACAH,gFAA0EF,MAAMxrC,UAAhF;AACA2rC,gBAAY,2BAAZ;AACAC,oBAAgB,oBAAhB;AACD,GALD,MAKO;AACL;AACAJ,UAAMM,OAAN,GAAgBt2C,SAASwH,OAAT,EAAhB;AACA0uC,qBAAiBF,MAAMM,OAAN,sDACoCN,MAAMxrC,UAD1C,iGAEoCwrC,MAAMxrC,UAF1C,MAAjB;AAGA2rC,gBAAY,QAAZ;AACAC,oBAAgB,cAAhB;AACD;AACD,MAAMG,SACJ,oBAAC,QAAD;AACE,aAASL,cADX;AAEE,eAAWC,SAFb;AAGE,UAAM;AAAA,aAASK,uBAAuB3zC,KAAvB,EAA8BmzC,KAA9B,EAAqCC,EAArC,CAAT;AAAA,KAHR;AAIE,mBAAeG,aAJjB;AAKE,cAAUK;AALZ,IADF;AASA,MAAMC,YAAYx0C,SAASqS,cAAT,CAAwBm7B,iBAAxB,CAAlB;AACAztC,WAASwB,MAAT,CAAgB8yC,MAAhB,EAAwBG,SAAxB;AACD,CA3BD;AA4BA;;;;;;;;;AASA,SAASF,sBAAT,CAAgC3zC,KAAhC,EAAuCmzC,KAAvC,EAA8CC,EAA9C,EAAkD;AAChD,MAAMU,gBAAgB9pC,QAAQkpC,aAAR,CAAsBC,KAAtB,CAAtB;AACAY,oBAAkBD,aAAlB;AACAjG;AACA+F;AACA,MAAI,OAAOR,EAAP,KAAc,UAAlB,EAA8BA;AAC/B;AACD,SAASQ,0BAAT,GAAsC;AACpC,MAAMC,YAAYx0C,SAASqS,cAAT,CAAwBm7B,iBAAxB,CAAlB;AACAztC,WAAS40C,sBAAT,CAAgCH,SAAhC;AACD;;AAED;;;;AAIAtyC,IAAI0yC,wBAAJ,GAA+B,gBAAQ;AACrC,MAAM14B,MAAMha,IAAImtC,gBAAJ,EAAZ;AACA,MAAMyE,QAAQ,EAAE53B,QAAF,EAAOwjB,gBAAgBqQ,IAAvB,EAAd;AACA,MAAM0E,gBAAgB9pC,QAAQiqC,wBAAR,CAAiCd,KAAjC,CAAtB;AACAY,oBAAkBD,aAAlB;AACAjG;AACD,CAND;;AAQA;AACA;;AAEA;;;;;;;;;;AAUAtsC,IAAIwrC,qBAAJ,GAA4B,qBAAa;AACvC,MAAI5tC,GAAJ,EAASH,QAAQC,GAAR,CAAY,uCAAZ,EAAqDi1C,SAArD;AACT,MAAMC,kBAAkB,EAAxB;AACA,MAAMC,kBAAkB,EAAxB;AACA,MAAMC,eAAe,IAAIt5B,GAAJ,EAArB;AACAm5B,YAAU7iC,OAAV,CAAkB,gBAAQ;AACxB,QAAIvT,KAAK88B,OAAT,EAAkB;AAChBuZ,sBAAgBn2C,IAAhB,CAAqBF,KAAK88B,OAA1B;AACAyZ,mBAAa54B,GAAb,CAAiB3d,KAAK88B,OAAL,CAAamE,cAA9B,EAA8C,MAA9C;AACD;AACD,QAAIjhC,KAAKm/B,SAAT,EAAoBmX,gBAAgBp2C,IAAhB,CAAqBF,KAAKm/B,SAA1B;AACpB,QAAIn/B,KAAKihC,cAAT,EAAyBsV,aAAa54B,GAAb,CAAiB3d,KAAKihC,cAAtB,EAAsC,MAAtC;AAC1B,GAPD;AAQA,MAAMxjB,MAAMha,IAAImtC,gBAAJ,EAAZ;AACA1kC,UAAQsqC,qBAAR,CAA8BF,eAA9B,EAA+C74B,GAA/C;AACAvR,UAAQuqC,qBAAR,CAA8BJ,eAA9B,EAA+C54B,GAA/C;;AAEA,MAAMg1B,qCAAY8D,aAAa1kC,IAAb,EAAZ,EAAN;AACA4gC,QAAMl/B,OAAN,CAAc;AAAA,WAAQrH,QAAQwqC,yBAAR,CAAkCpF,IAAlC,EAAwC7zB,GAAxC,CAAR;AAAA,GAAd;;AAEA;AACAmyB;AACAG;AACD,CAvBD;AAwBA;;;;;;;;;AASAtsC,IAAIyrC,oBAAJ,GAA2B,gBAAQ;AACjC,MAAI7tC,GAAJ,EAASH,QAAQC,GAAR,CAAY,sCAAZ,EAAoDnB,IAApD;AADwB,MAEzB88B,OAFyB,GAEb98B,IAFa,CAEzB88B,OAFyB;;AAGjCoT,kBAAgBpT,OAAhB;AACA;AACA8S;AACAG;AACD,CAPD;AAQAtsC,IAAI0rC,mBAAJ,GAA0B,gBAAQ;AAChC,MAAI9tC,GAAJ,EAASH,QAAQC,GAAR,CAAY,qCAAZ;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAVD;;AAYA;AACA;AACAsC,IAAIkzC,WAAJ,GAAkB,sBAAc;AAC9Bx0C,QAAM0G,OAAN,CAAc,mBAAd,EAAmC,EAAEs2B,WAAWt1B,UAAb,EAAnC,EAA8DpB,IAA9D,CACE,YAAM;AACJtG,UAAM0G,OAAN,CAAc,mBAAd,EAAmC,EAAE06B,QAAQ13B,WAAWK,OAArB,EAAnC;AACA/J,UAAME,SAAN,CAAgB,oBAAhB,EAAsC,EAAE8rB,MAAM,cAAR,EAAtC;AACD,GAJH;AAMD,CAPD;AAQA1qB,IAAImzC,aAAJ,GAAoB,sBAAc;AAChCz0C,QAAM0G,OAAN,CAAc,qBAAd,EAAqC,EAAEs2B,WAAWt1B,UAAb,EAArC,EAAgEpB,IAAhE,CAAqE,YAAM;AACzEtG,UAAM0G,OAAN,CAAc,uBAAd,EAAuC,EAAE06B,QAAQ13B,WAAWK,OAArB,EAAvC;AACA/J,UAAME,SAAN,CAAgB,oBAAhB,EAAsC,EAAE8rB,MAAM,QAAR,EAAtC;AACD,GAHD;AAID,CALD;;AAOA,SAASgnB,iBAAT,CAA2BhF,IAA3B,EAAiCmF,EAAjC,EAAqC;AACnC,MAAMxY,UAAU;AACdmE,oBAAgBkP,KAAKlP,cADP;AAEdp3B,gBAAYsmC,KAAKtmC,UAFH;AAGdumC,uBAAmBD,KAAKC,iBAHV;AAIdC,yBAAqBF,KAAKE,mBAJZ;AAKdC,kBAAcH,KAAKG,YALL;AAMdC,wBAAoBJ,KAAKI,kBANX;AAOdC,wBAAoBL,KAAKK,kBAPX;AAQdC,6BAAyBN,KAAKM,uBARhB;AASdC,kBAAcP,KAAKO,YATL;AAUdC,oBAAgBR,KAAKQ;AAVP,GAAhB;AAYAxuC,QAAME,SAAN,CAAgB,WAAhB,EAA6B,EAAEy6B,gBAAF,EAA7B,EAA0Cr0B,IAA1C,CAA+C,gBAAQ;AACrD,QAAI,OAAO6sC,EAAP,KAAc,UAAlB,EAA8BA,GAAGt1C,IAAH;AAC/B,GAFD;AAGD;AACD,SAAS2yC,gBAAT,CAA0BrB,IAA1B,EAAgC7zB,GAAhC,EAAqC;AACnC;AACA,MAAM82B,SAASroC,QAAQsoC,sBAAR,CAA+BlD,IAA/B,EAAqC7zB,GAArC,CAAf;AACA,MAAMmiB,UAAU,EAAhB;AACA2U,SAAOhhC,OAAP,CAAe,iBAAS;AACtB,QAAMsjC,gBAAgB3qC,QAAQ4qC,SAAR,CAAkBnC,MAAM9qC,UAAxB,KAAuC,EAA7D;AACA;AACA,QAAI,CAACgtC,cAAcnkC,QAAd,CAAuB+K,GAAvB,CAAL,EAAkCo5B,cAAc32C,IAAd,CAAmBud,GAAnB;AAClC,QAAMue,SAAS;AACbnyB,kBAAY8qC,MAAM9qC,UADL;AAEbgtC;AAFa,KAAf;AAIAjX,YAAQ1/B,IAAR,CAAa87B,MAAb;AACD,GATD;AAUA75B,QAAME,SAAN,CAAgB,WAAhB,EAA6B,EAAEu9B,gBAAF,EAA7B,EAA0Cn3B,IAA1C,CAA+C,gBAAQ;AACrD,QAAI,OAAO6sC,EAAP,KAAc,UAAlB,EAA8BA,GAAGt1C,IAAH;AAC/B,GAFD;AAGD;AACD;;;;;;;AAOA,SAASi2C,iBAAT,CAA2BjrB,KAA3B,EAAkCsqB,EAAlC,EAAsC;AACpCnzC,QAAME,SAAN,CAAgB,gBAAhB,EAAkC,EAAE2oB,YAAF,EAAlC,EAA6CviB,IAA7C,CAAkD,gBAAQ;AACxD,QAAI,OAAO6sC,EAAP,KAAc,UAAlB,EAA8BA,GAAGt1C,IAAH;AAC/B,GAFD;AAGD;;AAED;AACA;AACA5B,OAAOC,OAAP,GAAiBoF,GAAjB;;;;;;;;;;;;;;AChqBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiIA,IAAMlF,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQmyB,K,GAAUT,U,CAAVS,K;;AACR,IAAMomB,cAAcv4C,QAAQ,mBAAR,CAApB;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAI6C,MAAM,KAAV;AACA;AACA,IAAM21C,cAAc,QAApB,C,CAA8B;AAC9B,IAAMC,gBAAgB,UAAtB,C,CAAkC;AAClC,IAAMC,YAAY,MAAlB,C,CAA0B;AAC1B,IAAMC,cAAc,QAApB,C,CAA8B;AAC9B;AACA,IAAIC,aAAa,KAAjB;;AAEA;AACA;AACA;;IACMC,Y;;;AACJ,0BAAc;AAAA;;AAAA;;AAEZ,UAAK13C,KAAL,GAAa;AACXqF,aAAO,EADI;AAEXsyC,mBAAa,EAFF;AAGXl2C,UAAI,EAHO;AAIX+sB,YAAM8oB;AAJK,KAAb;;AAOA,UAAKM,oBAAL,GAA4B,MAAKA,oBAAL,CAA0B73C,IAA1B,OAA5B;AACA,UAAK83C,uBAAL,GAA+B,MAAKA,uBAAL,CAA6B93C,IAA7B,OAA/B;AACA,UAAK+3C,0BAAL,GAAkC,MAAKA,0BAAL,CAAgC/3C,IAAhC,OAAlC;AACA,UAAKg4C,aAAL,GAAqB,MAAKA,aAAL,CAAmBh4C,IAAnB,OAArB;AACA,UAAKi4C,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBj4C,IAAxB,OAA1B;AACA,UAAKk4C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBl4C,IAAtB,OAAxB;AACA,UAAKm4C,2BAAL,GAAmC,MAAKA,2BAAL,CAAiCn4C,IAAjC,OAAnC;AACA,UAAKo4C,2BAAL,GAAmC,MAAKA,2BAAL,CAAiCp4C,IAAjC,OAAnC;AACA,UAAKq4C,oBAAL,GAA4B,MAAKA,oBAAL,CAA0Br4C,IAA1B,OAA5B;AACA,UAAKs4C,uBAAL,GAA+B,MAAKA,uBAAL,CAA6Bt4C,IAA7B,OAA/B;AACA,UAAKu4C,uBAAL,GAA+B,MAAKA,uBAAL,CAA6Bv4C,IAA7B,OAA/B;AACA,UAAKw4C,MAAL,GAAc,MAAKA,MAAL,CAAYx4C,IAAZ,OAAd;;AAEA;AACA;AACA,UAAKsI,gBAAL,CAAsB,QAAtB,EAAgC,MAAKuvC,oBAArC;AACA,UAAKvvC,gBAAL,CAAsB,WAAtB,EAAmC,MAAKwvC,uBAAxC;AACA,UAAKxvC,gBAAL,CAAsB,oBAAtB,EAA4C,MAAKyvC,0BAAjD;AA1BY;AA2Bb,G,CAAC;;AAEF;AACA;AACA;;;;;;yCAEqBz3C,I,EAAM;AACzB;AACA;AACA;AACA,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAY,cAAZ,EAA4B,KAAK3B,KAAL,CAAW24C,UAAvC,EAAmD,cAAnD,EAAmEn4C,IAAnE;;AAJgB,sBAKM,KAAKkoB,QAAL,CAAc,oBAAd,CALN;AAAA,UAKnBkwB,oBALmB,aAKnBA,oBALmB;;AAMzB,UAAIA,yBAAyB,KAAK54C,KAAL,CAAW24C,UAAxC,EAAoD;AAClD;AACA;AACA,YAAI92C,GAAJ,EACEH,QAAQC,GAAR,CACE,iBADF,EAEE,KAAK3B,KAAL,CAAW24C,UAFb,EAGE,kCAHF,EAIEn4C,KAAKq4C,WAJP;AAMF,YAAIr4C,KAAKq4C,WAAL,KAAqBz0C,SAAzB,EAAoC;AAClC,eAAK7D,QAAL,CAAc;AACZouB,kBAAMgpB,WADM;AAEZnyC,mBAAOhF,KAAKq4C;AAFA,WAAd;AAID;AACF,OAhBD,MAgBO;AACL;AACA;AACA;AACA,YAAIjB,UAAJ,EAAgB;AACd,cAAI/1C,GAAJ,EACEH,QAAQC,GAAR,CACE,iBADF,EAEE,KAAK3B,KAAL,CAAW24C,UAFb,EAGE,sCAHF,EAIE,KAAK34C,KAAL,CAAW84C,aAJb;AAMF,eAAKv4C,QAAL,CAAc;AACZouB,kBAAM,KAAK3uB,KAAL,CAAW+4C,YADL;AAEZvzC,mBAAO,KAAKxF,KAAL,CAAW84C;AAFN,WAAd;AAID,SAZD,MAYO;AACL,cAAIj3C,GAAJ,EACEH,QAAQC,GAAR,CACE,iBADF,EAEE,KAAK3B,KAAL,CAAW24C,UAFb,EAGE,kEAHF;AAKH;AACF;AACF,K,CAAC;;AAEF;;;;;;;;4CAKwBn4C,I,EAAM;AAC5B,UAAIqB,GAAJ,EACEH,QAAQC,GAAR,CAAY,iBAAZ,EAA+B,KAAK3B,KAAL,CAAW24C,UAA1C,EAAsD,iBAAtD,EAAyEn4C,IAAzE;AACF,UAAI,KAAKR,KAAL,CAAWg5C,qBAAf,EAAsC;AACpC,YAAIn3C,GAAJ,EACEH,QAAQC,GAAR,CACE,gBADF,EAEE,KAAK3B,KAAL,CAAW24C,UAFb,EAGE,uEAHF;AAKF;AACD;AACD,UAAIC,uBACF,KAAKlwB,QAAL,CAAc,oBAAd,EAAoCkwB,oBADtC;AAEA,UACE,KAAK54C,KAAL,CAAW24C,UAAX,KAA0BC,oBAA1B,IACAA,yBAAyB,QAF3B,EAGE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAI/2C,GAAJ,EACEH,QAAQC,GAAR,CACE,iBADF,EAEE,KAAK3B,KAAL,CAAW24C,UAFb,EAGE,wBAHF;AAKF,YAAIvc,QAAQ57B,KAAK47B,KAAjB;AACA,YACEA,UAAUh4B,SAAV,IACAg4B,MAAMz3B,MAAN,GAAe,CADf,IAEAy3B,MAAM,CAAN,MAAah4B,SAFb,IAGAg4B,MAAM,CAAN,EAAStlB,KAAT,KAAmB1S,SAJrB,EAKE;AACA,cAAIy0C,cAAczc,MAAM,CAAN,EAAStlB,KAA3B;AACA,cAAIjV,GAAJ,EACEH,QAAQC,GAAR,CACE,iBADF,EAEE,KAAK3B,KAAL,CAAW24C,UAFb,EAGE,qCAHF,EAIEE,WAJF;AAMF;AACA;AACA,eAAKt4C,QAAL,CAAc,EAAEiF,OAAOqzC,WAAT,EAAd;AACD;AACF;AACF;;AAED;;;;;;+CAG2Br4C,I,EAAM;AAC/B,UAAIqB,GAAJ,EACEH,QAAQC,GAAR,CACE,iBADF,EAEE,KAAK3B,KAAL,CAAW24C,UAFb,EAGE,oBAHF,EAIEn4C,IAJF;AAMF,UAAImuB,OAAO,KAAKxuB,KAAL,CAAWwuB,IAAtB;AACA,UAAInuB,KAAKo4C,oBAAL,KAA8B,KAAK54C,KAAL,CAAW24C,UAA7C,EAAyD;AACvDhqB,eAAOgpB,WAAP;AACD,OAFD,MAEO;AACLhpB,eAAO,KAAK3uB,KAAL,CAAW+4C,YAAlB;AACD;AACD,WAAKx4C,QAAL,CAAc,EAAEouB,MAAMA,IAAR,EAAd;AACD;;AAED;AACA;AACA;;;;;;kCAGcjsB,K,QAA6B;AAAA,UAApBu2C,QAAoB,QAApBA,QAAoB;AAAA,UAAVC,MAAU,QAAVA,MAAU;;AACzC;AACA;AACA;AACA;AACA,WAAKC,OAAL,CAAa,eAAb,EAA8B,EAAEC,cAAcH,QAAhB,EAA9B;AACD;AACD;AACA;;;;;;uCAGmBI,U,EAAY;AAC7B,aAAOA,WAAWviC,KAAlB;AACD;AACD;AACA;;;;;qCAEiBuiC,U,EAAY;AAC3B,aAAOA,WAAWviC,KAAlB;AACD;AACD;AACA;;;;;;;;;;;kDAU8B;AAC5B,UAAItW,OAAO,KAAKkoB,QAAL,CAAc,QAAd,CAAX;AACA,UAAIloB,KAAK84C,cAAT,EAAyB;AACvB,aAAK/4C,QAAL,CAAc;AACZu3C,uBAAat3C,KAAK84C;AADN,SAAd;AAGD,OAJD,MAIO;AACL,YAAIz3C,GAAJ,EACEH,QAAQC,GAAR,CAAY,2DAAZ;AACH;AACF;AACD;AACA;;;;;kDAE8B;AAC5B,WAAKpB,QAAL,CAAc;AACZu3C,qBAAa;AADD,OAAd;AAGD;AACD;AACA;;;;;;;yCAIqBp1C,K,SAAuB;AAAA,UAAd22C,UAAc,SAAdA,UAAc;;AAC1C;AACA,WAAKF,OAAL,CAAa,eAAb,EAA8B,EAAEtvC,SAAS,CAACwvC,WAAWz3C,EAAZ,CAAX,EAA9B;AACD;AACD;AACA;;;;;;mDAGwC;AAAA,UAAdy3C,UAAc,SAAdA,UAAc;;AACtC,UAAIA,cAAcA,WAAWz3C,EAA7B,EACE,KAAKu3C,OAAL,CAAa,yBAAb,EAAwC,EAAE3H,QAAQ6H,WAAWz3C,EAArB,EAAxC;AACH;AACD;AACA;;;;;;4CAGwB4D,K,EAAO;AAC7B,aAAO,KAAKrF,KAAL,CAAWwuB,IAAX,KAAoBgpB,WAA3B;AACD;AACD;AACA;;;;;;2BAGOnyC,K,EAAO;AACZ;AACA;AACA;AACA,UAAI3D,GAAJ,EAASH,QAAQC,GAAR,CAAY,qBAAZ,EAAmC6D,KAAnC;AACT,WAAK2zC,OAAL,CAAa,0BAAb,EAAyC,EAAEC,cAAc,KAAKj5C,KAAL,CAAWqF,KAA3B,EAAzC;AACD;;AAED;AACA;AACA;;;;;;;;;wCAMoB;AAClBoyC,mBAAa,IAAb;AACA,WAAKr3C,QAAL,CAAc,EAAEouB,MAAM,KAAK3uB,KAAL,CAAW+4C,YAAnB,EAAd;AACD;AACD;;;;;2CAEuB;AACrBnB,mBAAa,KAAb;AACA;AACA;AACA,WAAK/uB,iBAAL,CAAuB,QAAvB,EAAiC,KAAKkvB,oBAAtC;AACA,WAAKlvB,iBAAL,CAAuB,WAAvB,EAAoC,KAAKmvB,uBAAzC;AACA,WAAKnvB,iBAAL,CAAuB,oBAAvB,EAA6C,KAAKovB,0BAAlD;AACD;;AAED;;;;;;6BAGS;AAAA;;AAAA,mBACwB,KAAK93C,KAD7B;AAAA,UACCqF,KADD,UACCA,KADD;AAAA,UACQsyC,WADR,UACQA,WADR;;AAEP,UAAMyB,aAAa;AACjBC,qBAAa,KAAKx5C,KAAL,CAAWw5C,WAAX,IAA0B,mBADtB;AAEjBh0C,eAAOA,KAFU;AAGjBi0C,kBAAU,KAAKvB,aAHE;AAIjBQ,gBAAQ,KAAKA;AAJI,OAAnB;AAMA,UAAIgB,YAAJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAI,KAAKv5C,KAAL,CAAWwuB,IAAX,KAAoBgpB,WAAxB,EAAqC;AACnC+B,cACE,oBAAC,WAAD;AACE,uBAAa5B,WADf;AAEE,mCAAyB,KAAKW;AAC9B;AAHF,YAIE,6BAA6B,KAAKJ,2BAJpC;AAKE,uCAA6B,KAAKC,2BALpC;AAME,8BAAoB,KAAKH,kBAN3B;AAOE,4BAAkB,KAAKC;AACvB;AARF,YASE,yBAAyB,KAAKI,uBAThC;AAUE,gCAAsB,KAAKD;AAC3B;AAXF,YAYE,YAAYgB;AAZd,UADF;AAgBD,OAjBD,MAiBO,IAAI,KAAKv5C,KAAL,CAAW+4C,YAAX,KAA4BvB,WAAhC,EAA6C;AAClDkC,cAAM;AAAA;AAAA;AAAI,eAAK15C,KAAL,CAAW84C;AAAf,SAAN;AACD,OAFM,MAEA,IAAI,KAAK94C,KAAL,CAAW+4C,YAAX,KAA4BtB,aAAhC,EAA+C;AACpDiC,cAAM,oBAAC,KAAD,IAAO,MAAK,MAAZ,EAAmB,OAAO,KAAK15C,KAAL,CAAW84C,aAArC,EAAoD,UAAU,IAA9D,GAAN;AACD,OAFM,MAEA,IAAI,KAAK94C,KAAL,CAAW+4C,YAAX,KAA4BrB,SAAhC,EAA2C;AAChDgC,cACE;AAAA;AAAA,YAAG,MAAK,GAAR,EAAY,SAAS;AAAA,qBAAK,OAAKC,UAAL,CAAgB,OAAK35C,KAAL,CAAW45C,MAA3B,EAAmCp2C,CAAnC,CAAL;AAAA,aAArB;AACG,eAAKxD,KAAL,CAAW84C;AADd,SADF;AAKD,OANM,MAMA;AACL,cAAM/zC,0CAAuC,KAAK5E,KAAL,CAAWwuB,IAAlD,QAAN;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAO+qB,GAAP;AACD,K,CAAC;;;;+BAES93C,E,EAAIc,K,EAAO;AACpBA,YAAM4wB,cAAN;AACA;AACA;AACA;AACA;AACA,UAAI3wB,QAAQ/C,OAAOgD,WAAP,CAAmB,IAAnB,CAAZ;AACAD,YAAME,SAAN,CAAgB,YAAhB;AACAF,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAAC2D,SAAS5L,EAAT,CAAD,CAAX,EAAjC;AACD;;AAED;AACA;;;;;EAxXyBhC,OAAO4B,S;;AA2XlC;AACA;;;AACA5C,OAAOC,OAAP,GAAiBg5C,YAAjB;;;;;;;;;;;;;;AClhBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgMA,IAAMgC,UAAU76C,QAAQ,mBAAR,CAAhB;AACA,IAAM86C,UAAU96C,QAAQ,mBAAR,CAAhB;AACA,IAAMD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQ6xB,M,GAAyDH,U,CAAzDG,M;IAAQC,G,GAAiDJ,U,CAAjDI,G;IAAKE,I,GAA4CN,U,CAA5CM,I;IAAMC,S,GAAsCP,U,CAAtCO,S;IAAW8oB,Q,GAA2BrpB,U,CAA3BqpB,Q;IAAU5oB,K,GAAiBT,U,CAAjBS,K;IAAOC,K,GAAUV,U,CAAVU,K;;AACvD,IAAMymB,eAAe74C,QAAQ,gBAAR,CAArB;AACA,IAAMg7C,aAAah7C,QAAQ,cAAR,CAAnB;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;;eACuBA,QAAQ,kBAAR,C;IAAfqN,U,YAAAA,U;;AAER;AACA;;;AACA,IAAMxK,MAAM,KAAZ;AACA,IAAM8F,KAAK,YAAX;AACA;AACA,IAAIhF,QAAQ,IAAZ;;AAEA;AACA;AACA;;IACMs3C,U;;;AACJ,sBAAYj6C,KAAZ,EAAmB;AAAA;;AAAA,wHACXA,KADW;;AAEjB,QAAMsM,WAAW,MAAKoc,QAAL,CAAc,UAAd,CAAjB;AACA,UAAKvoB,KAAL,GAAa;AACX65B,gBAAU1tB,SAAS0tB,QADR;AAEXV,gBAAUhtB,SAASgtB,QAFR;AAGXR,2BAAqBxsB,SAASwsB,mBAHnB;AAIXohB,uBAAiB,EAJN;AAKXC,gBAAU;AACR;AACAC,kBAAU,EAFF;AAGRC,kBAAU,EAHF;AAIRlnC,cAAM,EAJE;AAKRqN,cAAM,EALE;AAMRgb,gBAAQ,CANA;AAORC,oBAAY,EAPJ;AAQRC,kBAAU,EARF;AASRM,eAAO,EATC;AAUR1C,kBAAU,EAVF;AAWR2C,kBAAU,EAXF;AAYRr6B,YAAI,EAZI;AAaR04C,mBAAW;AAbH,OALC;AAoBXrI,kBAAY;AACV;AACAn7B,eAAO,EAFG;AAGV3D,cAAM,EAHI;AAIVqN,cAAM,EAJI;AAKVib,oBAAY,EALF;AAMVC,kBAAU,EANA;AAOVM,eAAO,EAPG;AAQVp6B,YAAI;AARM,OApBD;AA8BXswC,kBAAY;AACV;AACAp7B,eAAO,EAFG;AAGV3D,cAAM,EAHI;AAIVqN,cAAM,EAJI;AAKVib,oBAAY,EALF;AAMVC,kBAAU,EANA;AAOVM,eAAO,EAPG;AAQVp6B,YAAI;AARM,OA9BD;AAwCXo9B,gBAAU,IAxCC,EAwCK;AAChBub,oBAAc,KAzCH,EAyCU;AACrBC,kBAAY,KA1CD,EA0CQ;AACnBC,mBAAa,KA3CF,EA2CS;AACpBxF,qBAAe,KA5CJ,EA4CW;AACtByF,kBAAY,KA7CD,EA6CQ;AACnBC,wBAAkB,KA9CP,EA8Cc;AACzBC,sBAAgB,KA/CL,EA+CY;AACvBC,wBAAkB,KAhDP,EAgDc;AACzBC,sBAAgB,KAjDL,EAiDY;AACvBtB,mBAAap1C,SAlDF;AAmDX22C,iBAAW,IAnDA,CAmDK;AAnDL,KAAb;;AAsDA;AACAp4C,YAAQ/C,OAAOgD,WAAP,OAAR;;AAEA,UAAKo4C,WAAL,GAAmB,MAAKA,WAAL,CAAiB96C,IAAjB,OAAnB;AACA,UAAK+6C,eAAL,GAAuB,MAAKA,eAAL,CAAqB/6C,IAArB,OAAvB;AACA,UAAKg7C,YAAL,GAAoB,MAAKA,YAAL,CAAkBh7C,IAAlB,OAApB;AACA,UAAKi7C,eAAL,GAAuB,MAAKA,eAAL,CAAqBj7C,IAArB,OAAvB;AACA,UAAKk7C,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBl7C,IAAzB,OAA3B;AACA,UAAKm7C,cAAL,GAAsB,MAAKA,cAAL,CAAoBn7C,IAApB,OAAtB;AACA,UAAKo7C,eAAL,GAAuB,MAAKA,eAAL,CAAqBp7C,IAArB,OAAvB;AACA,UAAKytC,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BztC,IAA3B,OAA7B;AACA,UAAKq7C,WAAL,GAAmB,MAAKA,WAAL,CAAiBr7C,IAAjB,OAAnB;AACA,UAAKs7C,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBt7C,IAAzB,OAA3B;AACA,UAAKu7C,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBv7C,IAAvB,OAAzB;AACA,UAAKw7C,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBx7C,IAAvB,OAAzB;AACA,UAAKy7C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBz7C,IAAtB,OAAxB;AACA,UAAK07C,aAAL,GAAqB,MAAKA,aAAL,CAAmB17C,IAAnB,OAArB;AACA,UAAK27C,WAAL,GAAmB,MAAKA,WAAL,CAAiB37C,IAAjB,OAAnB;AACA,UAAK47C,qBAAL,GAA6B,MAAKA,qBAAL,CAA2B57C,IAA3B,OAA7B;AACA,UAAK67C,cAAL,GAAsB,MAAKA,cAAL,CAAoB77C,IAApB,OAAtB;AACA,UAAK87C,cAAL,GAAsB,MAAKA,cAAL,CAAoB97C,IAApB,OAAtB;AACA,UAAK+7C,oBAAL,GAA4B,MAAKA,oBAAL,CAA0B/7C,IAA1B,OAA5B;AACA,UAAKg8C,aAAL,GAAqB,MAAKA,aAAL,CAAmBh8C,IAAnB,OAArB;AACA,UAAKi8C,YAAL,GAAoB,MAAKA,YAAL,CAAkBj8C,IAAlB,OAApB;AACA,UAAKk8C,cAAL,GAAsB,MAAKA,cAAL,CAAoBl8C,IAApB,OAAtB;AACA,UAAKm8C,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBn8C,IAAxB,OAA1B;AACA,UAAKo8C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBp8C,IAAtB,OAAxB;AACA,UAAKq8C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBr8C,IAAtB,OAAxB;AACA,UAAKs8C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBt8C,IAAtB,OAAxB;AACA,UAAK0yB,QAAL,GAAgB,MAAKA,QAAL,CAAc1yB,IAAd,OAAhB;AACA,UAAKu8C,WAAL,GAAmB,MAAKA,WAAL,CAAiBv8C,IAAjB,OAAnB;AACA,UAAKw8C,QAAL,GAAgB,MAAKA,QAAL,CAAcx8C,IAAd,OAAhB;;AAEA;AACA;;AAEA;AACA;;;AAGA,UAAKsI,gBAAL,CAAsB,SAAtB,EAAiC,MAAKmlC,qBAAtC;AACA;AACA,UAAKnlC,gBAAL,CAAsB,WAAtB,EAAmC,MAAK2yC,eAAxC;AACA;AACAx4C,UAAMrC,aAAN,CAAoB,aAApB,EAAmC,MAAK86C,mBAAxC;AACA;AACAz4C,UAAMrC,aAAN,CAAoB,WAApB,EAAiC,MAAK+6C,cAAtC;AACA;AACA14C,UAAMrC,aAAN,CAAoB,YAApB,EAAkC,MAAKg7C,eAAvC;AACA;AACA;AACA,UAAK9yC,gBAAL,CAAsB,UAAtB,EAAkC,MAAKwyC,WAAvC;AACAr4C,UAAMrC,aAAN,CAAoB,yBAApB,EAA+C,MAAK46C,YAApD;;AAEA;AACA;;;AAGA,UAAKxN,YAAL,CAAkB,YAAM;AACtBhsC,cAAQC,GAAR,CAAY,6BAAZ;AACA,YAAKpB,QAAL,CAAc,EAAEy+B,UAAU,IAAZ,EAAd;AACD,KAHD;AAnHiB;AAuHlB,G,CAAC;;AAEF;AACA;AACA;;;;;;gCAEY;AACV,WAAKz+B,QAAL,CAAc;AACZ45C,kBAAU;AACRC,oBAAU,EADF;AAERC,oBAAU,EAFF;AAGRlnC,gBAAM,EAHE;AAIRqN,gBAAM,EAJE;AAKRgb,kBAAQ,CALA;AAMRC,sBAAY,EANJ;AAORC,oBAAU,EAPF;AAQRM,iBAAO,EARC;AASR1C,oBAAU,EATF;AAUR2C,oBAAU,EAVF;AAWRr6B,cAAI,EAXI;AAYR04C,qBAAW;AAZH,SADE;AAeZrI,oBAAY;AACVn7B,iBAAO,EADG;AAEV3D,gBAAM,EAFI;AAGVqN,gBAAM,EAHI;AAIVib,sBAAY,EAJF;AAKVC,oBAAU,EALA;AAMVM,iBAAO,EANG;AAOVp6B,cAAI;AAPM,SAfA;AAwBZswC,oBAAY;AACVp7B,iBAAO,EADG;AAEV3D,gBAAM,EAFI;AAGVqN,gBAAM,EAHI;AAIVib,sBAAY,EAJF;AAKVC,oBAAU,EALA;AAMVM,iBAAO,EANG;AAOVp6B,cAAI;AAPM,SAxBA;AAiCZqzC,uBAAe,KAjCH;AAkCZyF,oBAAY,KAlCA,EAkCO;AACnBF,oBAAY,KAnCA;AAoCZG,0BAAkB,KApCN,EAoCa;AACzBC,wBAAgB,KArCJ,EAqCW;AACvBC,0BAAkB,KAtCN,EAsCa;AACzBC,wBAAgB,KAvCJ,EAuCW;AACvBC,mBAAW,IAxCC,CAwCI;AAxCJ,OAAd;AA0CD;AACD;;;;gCACYv6C,I,EAAM;AAChB,WAAKD,QAAL,CAAc,EAAEy5B,UAAUx5B,KAAKw5B,QAAjB,EAAd;AACD;AACD;AACA;;;;;sCAEkB;AAAA;;AAChBr3B,YAAM0G,OAAN,CAAc,qBAAd,EAAqCJ,IAArC,CAA0C,gBAAQ;AAChD,eAAKiyC,YAAL,CAAkB16C,IAAlB;AACD,OAFD;AAGD;;;iCACYA,I,EAAM;AACjB,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,8BAAhB,EAAgDnH,IAAhD;AACT,UAAMi6C,cAAcj6C,KAAK8iC,mBAAL,IAA4B9iC,KAAK+iC,YAArD;AACA,UAAMj3B,WAAW,KAAKoc,QAAL,CAAc,UAAd,CAAjB;AACA,UAAIwxB,kBAAkB,EAAtB;AACA,UAAI15C,KAAK8iC,mBAAT,EAA8B4W,kBAAkB5tC,SAAS0sB,uBAA3B;AAC9B,UAAIx4B,KAAK+iC,YAAT,EAAuB2W,kBAAkB5tC,SAASuuB,qBAA3B;AACvB,WAAKt6B,QAAL,CAAc,EAAEk6C,wBAAF,EAAeP,gCAAf,EAAd;AACD;AACD;AACA;;;;;0CAEsB;AAAA;;AACpB,UAAIr4C,GAAJ,EAASH,QAAQC,GAAR,CAAY,iCAAZ;;AAET,UAAIsI,SAAS,KAAKjK,KAAL,CAAWiK,MAAX,IAAqB,EAAlC;AACA;AACA,UAAIg1B,MAAMh1B,MAAN,CAAJ,EAAmB;AACjBA,iBAASuD,SAASvD,MAAT,CAAT;AACD;;AAED,UAAMhC,SAAS,KAAKygB,QAAL,CAAc,QAAd,CAAf;;AAEA;AACA,UAAI6T,QAAQt0B,OAAOs0B,KAAP,GACRt0B,OAAOs0B,KAAP,CAAaxb,MAAb,CAAoB;AAAA,eAAQvT,SAAS4vB,KAAKx7B,EAAd,MAAsBqI,MAA9B;AAAA,OAApB,CADQ,GAER,EAFJ;AAGA,UAAI,CAACsyB,KAAL,EAAY;AACV,cAAM,+BAA+BtyB,MAA/B,GAAwC,aAA9C;AACD;AACD,UAAImzB,OAAOb,MAAM,CAAN,CAAX;AACA,UAAI16B,GAAJ,EAASH,QAAQC,GAAR,CAAY,8CAAZ,EAA4Dy7B,IAA5D;;AAET,UAAI6U,mBAAJ;AAAA,UAAgB0K,oBAAhB;AAAA,UAA6BzK,mBAA7B;AAAA,UAAyC0K,oBAAzC;;AAEA,UAAIxf,SAASh5B,SAAb,EAAwB;AACtB;;AAEA;AACA;AACA,YAAIvC,GAAJ,EACEH,QAAQC,GAAR,CAAY,8DAAZ;AACF;AACA;AACAg7C,sBAAc10C,OAAOm0B,KAAP,CAAarb,MAAb,CACZ;AAAA,iBAAQkc,KAAKnmB,KAAL,KAAe,OAAK9W,KAAL,CAAW68C,eAAlC;AAAA,SADY,CAAd;AAGA;AACA;AACAD,sBAAc,CAAC,EAAE9lC,OAAO,aAAT,EAAD,CAAd;;AAEA;AACA,YAAMgmC,UAAU,KAAKp0B,QAAL,CAAc,SAAd,CAAhB;AACA,YAAM+K,YAAY,IAAI3vB,IAAJ,GAAW6N,kBAAX,CAA8B,OAA9B,CAAlB;AACA,YAAMorC,+BAA6BD,QAAQl0C,KAArC,YAAiD6qB,SAAvD;;AAEA;AACA2J,eAAO;AACLx7B,cAAIqI,MADC;AAEL4xB,kBAAQruB,SAASmvC,YAAY,CAAZ,EAAe/6C,EAAxB,CAFH,EAEgC;AACrC;AACA+I,kBAAQvG,SAJH;AAKL+O,gBAAM,EALD;AAML6oB,iBAAO,EANF;AAOLxb,gBAAM,EAPD;AAQLgb,kBAAQ,CARH;AASLC,sBAAYshB,cATP;AAULrhB,oBAAU,EAVL;AAWLpC,oBAAU,EAXL;AAYL2C,oBAAU;AAZL,SAAP;AAcA;AACA,aAAK17B,QAAL,CACE;AACEm6C,sBAAY,IADd;AAEEG,4BAAkB,IAFpB;AAGE5F,yBAAe;AAHjB,SADF,EAME,YAAM;AACJ;AACA;AACA,iBAAKkE,OAAL,CAAa,qBAAb,EAAoC;AAClCv3C,gBAAI,SAAS,OAAK5B,KAAL,CAAWiK,MAApB,GAA6B;AADC,WAApC;AAGD,SAZH;;AAeA,aAAKkvC,OAAL,CAAa,eAAb,EAA8B,EAAElvC,QAAQ,KAAKjK,KAAL,CAAWiK,MAArB,EAA9B;AACD,OArDD,MAqDO;AACL;;AAEA;AACA0yC,sBAAc10C,OAAOm0B,KAAP,CAAarb,MAAb,CACZ;AAAA,iBAAQvT,SAASyvB,KAAKr7B,EAAd,MAAsB4L,SAAS4vB,KAAKvB,MAAd,CAA9B;AAAA,SADY,CAAd;AAGA+gB,sBAAc30C,OAAOm0B,KAAP,CAAarb,MAAb,CACZ;AAAA,iBAAQvT,SAASyvB,KAAKr7B,EAAd,MAAsB4L,SAAS4vB,KAAKzyB,MAAd,CAA9B;AAAA,SADY,CAAd;;AAIA;AACA,aAAKpK,QAAL,CAAc;AACZq6C,0BAAgB,IADJ;AAEZE,0BAAgB;AAFJ,SAAd;AAID;;AAED,UAAI,CAAC6B,WAAL,EAAkB;AAChB,cAAM,0BAA0Bvf,KAAKvB,MAA/B,GAAwC,YAA9C;AACD;AACDoW,mBAAa0K,YAAY,CAAZ,CAAb;AACA,UAAI,CAACC,WAAL,EAAkB;AAChB,cAAM,0BAA0Bxf,KAAKzyB,MAA/B,GAAwC,YAA9C;AACD;AACDunC,mBAAa0K,YAAY,CAAZ,CAAb;;AAEA,UAAI/6C,GAAJ,EACEH,QAAQC,GAAR,CACE,iEADF,EAEEy7B,KAAKvB,MAFP,EAGE,mBAHF,EAIEoW,UAJF,EAKE,mBALF,EAMEC,UANF;AAQF,WAAK3xC,QAAL,CAAc;AACZ45C,kBAAU;AACRv4C,cAAI4L,SAAS4vB,KAAKx7B,EAAd,KAAqB,EADjB;AAERw4C,oBAAUhd,KAAKvB,MAFP;AAGRwe,oBAAUjd,KAAKzyB,MAHP;AAIRwI,gBAAMiqB,KAAKjqB,IAAL,IAAa,EAJX,EAIe;AACvBqN,gBAAM4c,KAAK5c,IAAL,IAAa,EALX;AAMRgb,kBAAQ4B,KAAK5B,MAAL,IAAe,CANf;AAORC,sBAAY2B,KAAK3B,UAAL,IAAmB,EAPvB;AAQRC,oBAAU0B,KAAK1B,QAAL,IAAiB,EARnB;AASRpC,oBAAU8D,KAAK9D,QAAL,IAAiB,EATnB;AAUR2C,oBAAUmB,KAAKnB,QAAL,IAAiB,EAVnB;AAWRD,iBAAOoB,KAAKpB,KAAL,IAAc,EAXb;AAYRse,qBAAW;AAZH,SADE;AAeZrI,oBAAYA,UAfA;AAgBZC,oBAAYA,UAhBA;AAiBZsI,oBAAY;AAjBA,OAAd;AAmBD;;AAED;AACA;AACA;;;;;;;;;;oCAOgBh6C,I,EAAM;AAAA;;AACpB,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAY,YAAZ,EAA0B,KAAK3B,KAAL,CAAWiK,MAArC,EAA6C,oBAA7C,EAAmEzJ,IAAnE;AACT;AACA;AACA;AACA,UAAIA,KAAK+7B,KAAL,KAAen4B,SAAnB,EAA8B;AAC5B,YAAIu8B,cAAcngC,KAAK+7B,KAAL,CAAW4C,IAAX,CAAgB,gBAAQ;AACxC,iBAAO/B,KAAKx7B,EAAL,KAAY,OAAKzB,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAAvC;AACD,SAFiB,CAAlB;AAGA,YAAI,CAAC,KAAKzB,KAAL,CAAW80C,aAAZ,IAA6BtU,gBAAgBv8B,SAAjD,EAA4D;AAC1D,cAAIvC,GAAJ,EAASH,QAAQC,GAAR,CAAY,iCAAZ,EAA+Cg/B,WAA/C;AACT,eAAKqc,mBAAL;AACA;AACD;AACF;;AAED;AACA;AACA;AACA,UAAI,KAAK78C,KAAL,CAAW80C,aAAX,IAA4Bz0C,KAAK47B,KAAjC,IAA0C57B,KAAK47B,KAAL,CAAWz3B,MAAX,GAAoB,CAAlE,EAAqE;AACnE;;AAEA,YAAIs4B,OAAOz8B,KAAK47B,KAAL,CAAW,CAAX,CAAX;;AAEA;AACA,YAAI,KAAKj8B,KAAL,CAAWw6C,gBAAf,EAAiC;AAC/B;AACA,cAAI94C,GAAJ,EACEH,QAAQC,GAAR,CACE,6BADF,EAEE,KAAK3B,KAAL,CAAWiK,MAFb,EAGE,wBAHF,EAIEgzB,IAJF;;AAOF;AACA,eAAK18B,QAAL,CAAc;AACZ0xC,wBAAYhV;AADA,WAAd;AAGA;AACA,cAAIkd,WAAW,KAAKh6C,KAAL,CAAWg6C,QAA1B;AACAA,mBAASC,QAAT,GAAoBnd,KAAKr7B,EAAzB;AACA,eAAKrB,QAAL,CAAc;AACZ45C,sBAAUA;AADE,WAAd;AAGA;AACA;AACA,eAAK55C,QAAL,CAAc;AACZq6C,4BAAgB,IADJ;AAEZD,8BAAkB;AAFN,WAAd;AAID,SA1BD,MA0BO,IAAI,KAAKx6C,KAAL,CAAW06C,gBAAf,EAAiC;AACtC;AACA,cAAIh5C,GAAJ,EACEH,QAAQC,GAAR,CACE,6BADF,EAEE,KAAK3B,KAAL,CAAWiK,MAFb,EAGE,wBAHF,EAIEgzB,IAJF;;AAOF;AACA,eAAK18B,QAAL,CAAc;AACZ2xC,wBAAYjV;AADA,WAAd;AAGA;AACA,cAAIkd,YAAW,KAAKh6C,KAAL,CAAWg6C,QAA1B;AACAA,oBAASE,QAAT,GAAoBpd,KAAKr7B,EAAzB;AACA,eAAKrB,QAAL,CAAc;AACZ45C,sBAAUA;AADE,WAAd;AAGA;AACA;AACA,eAAK55C,QAAL,CAAc;AACZu6C,4BAAgB,IADJ;AAEZD,8BAAkB;AAFN,WAAd;AAID;AACD;AACA,aAAK1B,OAAL,CAAa,qBAAb,EAAoC,EAAEv3C,IAAI,QAAN,EAApC;AACA,aAAKrB,QAAL,CAAc,EAAEm6C,YAAY,IAAd,EAAd;AACD,OA9DD,MA8DO;AACL;AACA;AACD;AACF,K,CAAC;AACF;AACA;;;;;;wCAGoBl6C,I,EAAM;AACxB,UAAIqB,GAAJ,EACEH,QAAQC,GAAR,CAAY,YAAZ,EAA0B,KAAK3B,KAAL,CAAWiK,MAArC,EAA6C,yBAA7C,EAAwEzJ,IAAxE;AACF,UAAI,KAAKL,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAApB,KAA2BpB,KAAKyJ,MAApC,EAA4C;AAC1C;AACA,aAAKkvC,OAAL,CAAa,qBAAb,EAAoC,EAAEv3C,IAAI,QAAN,EAApC;AACA,aAAKrB,QAAL,CAAc,EAAEm6C,YAAY,IAAd,EAAd;AACD;AACF,K,CAAC;;AAEF;AACA;;;;;;mCAGel6C,I,EAAM;AAAA,mBAC2B,KAAKL,KADhC;AAAA,UACXg6C,QADW,UACXA,QADW;AAAA,UACDlF,aADC,UACDA,aADC;AAAA,UACcjW,QADd,UACcA,QADd;;AAEnB,UAAIn9B,GAAJ,EACEH,QAAQC,GAAR,CACE,YADF,EAEE,KAAKxB,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAFtB,EAGE,uBAHF,EAIEpB,IAJF,EAKE,aALF,EAME,KAAKL,KAAL,CAAWg6C,QANb;AAQF,UACE35C,KAAKyJ,MAAL,KAAgB7F,SAAhB,IACA,OAAO5D,KAAKyJ,MAAZ,KAAuB,QADvB,IAEA,CAACgrC,aAFD,IAGAz0C,KAAKyJ,MAAL,KAAgBkwC,SAASv4C,EAJ3B,EAKE;AACA,YAAI,CAACo9B,QAAL,EAAe;AACb,eAAK6c,WAAL;AACD,SAFD,MAEO;AACLn6C,kBAAQwB,IAAR,CACE,8CADF,EAEE87B,QAFF,EAGE,6BAHF;AAKA,eAAKoc,mBAAL,CAAyB56C,IAAzB;AACD;AACF,OAhBD,MAgBO;AACL,YAAI,OAAOA,KAAKyJ,MAAZ,KAAuB,QAA3B,EACEvI,QAAQwB,IAAR,CACE,mDADF,EAEE1C,KAAKyJ,MAFP;AAIF,YAAIgrC,aAAJ,EACEvzC,QAAQwB,IAAR,CACE,mDADF,EAEE+xC,aAFF;AAIH;AACF,K,CAAC;AACF;AACA;;;;;sCAEkB;AAChB,UAAI,KAAK90C,KAAL,CAAWu6C,UAAf,EAA2B,KAAKn6C,QAAL,CAAc,EAAEm6C,YAAY,KAAd,EAAd;AAC5B;AACD;AACA;;;;;;;;;0CAMsBzqB,O,EAAS;AAC7B,UAAIwN,SAAS,EAAEuB,UAAU,CAAC/O,QAAQvnB,OAArB,EAAb;AACA,WAAKnI,QAAL,CAAck9B,MAAd;AACD;;AAED;AACA;AACA;;;;;;kCAGc;AAAA;;AACZ;AACA,UAAI,KAAKt9B,KAAL,CAAWu6C,UAAf,EAA2B;AACzB;AACA,aAAKn6C,QAAL,CAAc,EAAEm6C,YAAY,KAAd,EAAd;;AAEA;AACA,YAAI,KAAKv6C,KAAL,CAAW80C,aAAf,EAA8B;AAC5B,cAAMhtC,SAAS,KAAKygB,QAAL,CAAc,QAAd,CAAf;;AAEA,eAAKnoB,QAAL,CAAc,EAAE00C,eAAe,KAAjB,EAAwB4F,kBAAkB,KAA1C,EAAd;AACA;AACA,eAAK1B,OAAL,CAAa,qBAAb,EAAoC,EAAEv3C,IAAI,QAAN,EAApC;AACA;AACA,eAAKu3C,OAAL,CAAa,iBAAb,EAAgC,EAAElvC,QAAQ,KAAKjK,KAAL,CAAWiK,MAArB,EAAhC;AACA;AACA,cAAI,KAAK9J,KAAL,CAAW80C,aAAf,EACEtyC,MAAM0G,OAAN,CAAc,uBAAd,EAAuC,EAAE06B,QAAQ13B,WAAWI,IAArB,EAAvC;;AAEF;AACA,cAAIwwC,eAAeh1C,OAAOs0B,KAAP,CAAaxb,MAAb,CACjB;AAAA,mBAAQvT,SAAS4vB,KAAKx7B,EAAd,MAAsB,OAAK5B,KAAL,CAAWiK,MAAzC;AAAA,WADiB,EAEjB,CAFiB,CAAnB;AAGA,cAAIgzC,iBAAiB74C,SAArB,EAAgC;AAC9B;AACA,gBAAM84C,aAAaj1C,OAAOm0B,KAAP,CAAa+C,IAAb,CACjB;AAAA,qBAAQlC,KAAKnmB,KAAL,KAAe,OAAK9W,KAAL,CAAW68C,eAAlC;AAAA,aADiB,CAAnB;AAGA;AACA,gBAAIK,UAAJ,EAAgB;AACd;AACAv6C,oBAAME,SAAN,CAAgB,iBAAhB,EAAmC,EAAE6G,QAAQwzC,WAAWt7C,EAArB,EAAnC;AACD,aAHD,MAGO;AACL;AACAe,oBAAME,SAAN,CAAgB,iBAAhB;AACD;AACD,iBAAKs6C,SAAL;AACD,WAdD,MAcO;AACL;AACA;AACA,iBAAKH,mBAAL;AACA;AACA,iBAAK3zC,OAAL,CAAa,kBAAb,EAAiC,EAAEY,QAAQ,KAAK9J,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAA9B,EAAjC,EAAqEqH,IAArE,CACE,gBAAQ;AACN,kBAAIzI,KAAK4+B,GAAT,EAAc;AACZ,oBAAIv9B,GAAJ,EAASH,QAAQC,GAAR,mBAA4BnB,KAAK4+B,GAAjC,SAAwC5+B,KAAK6+B,IAA7C;AACV,eAFD,MAEO,IAAI7+B,KAAKs+B,QAAT,EAAmB;AACxB,oBAAIj9B,GAAJ,EACEH,QAAQC,GAAR,0DACyDnB,KAAKyJ,MAD9D;AAGF,uBAAK1J,QAAL,CAAc,EAAEi6C,YAAY,KAAd,EAAd;AACD;AACF,aAXH;AAaD;AACF;AACF,OAvDD,MAuDO;AACL;AACA,aAAKj6C,QAAL,CAAc,EAAEm6C,YAAY,IAAd,EAAd;AACD;AACF;AACD;AACA;;;;;0CAEsB;AACpB,WAAKyC,SAAL;AACA,WAAKhE,OAAL,CAAa,qBAAb,EAAoC,EAAEv3C,IAAI,QAAN,EAApC;AACA,UAAI,KAAKzB,KAAL,CAAW80C,aAAf,EACEtyC,MAAM0G,OAAN,CAAc,uBAAd,EAAuC,EAAE06B,QAAQ13B,WAAWI,IAArB,EAAvC;AACF,WAAK0sC,OAAL,CAAa,iBAAb,EAAgC,EAAElvC,QAAQ,KAAKjK,KAAL,CAAWiK,MAArB,EAAhC,EALoB,CAK4C;AAChE,WAAKkvC,OAAL,CAAa,WAAb,EAA0B,EAAElvC,QAAQ,KAAKjK,KAAL,CAAWiK,MAArB,EAA1B;AACD;AACD;AACA;;;;;wCAEoB;AAClB,WAAK1J,QAAL,CAAc,EAAEw6C,WAAW,IAAb,EAAd;;AAEA,WAAKc,WAAL,CAAiB,KAAK17C,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAArC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED;AACA;;;;;sCAEkBc,K,EAAO;AACvBA,YAAM4wB,cAAN;;AAEA,WAAK/yB,QAAL,CAAc,EAAEw6C,WAAW,KAAb,EAAd;AACD,K,CAAC;;;;qCAEer4C,K,EAAO;AACtBA,YAAM4wB,cAAN;;AAEA,WAAK/yB,QAAL,CAAc,EAAEw6C,WAAW,IAAb,EAAd;AACD,K,CAAC;;;;oCAEc;AACd,UAAIqC,QAAQ,IAAIt5C,IAAJ,EAAZ;AACA,UAAIyJ,OAAO8vC,OAAOD,MAAMpW,WAAN,EAAP,CAAX;AACA,UAAIt1B,OAAO0rC,MAAMzW,QAAN,KAAmB,CAAnB,GAAuB,GAAvB,GAA6ByW,MAAMvW,OAAN,EAA7B,GAA+C,GAA/C,GAAqDt5B,KAAK2H,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAhE;AACA,UAAI44B,OAAOsP,MAAME,YAAN,GAAqBpoC,MAArB,CAA4B,CAA5B,EAA+B,CAA/B,CAAX;AACA,UAAIqoC,WAAWzP,OAAO,MAAP,GAAgBp8B,IAA/B;AACA,aAAO6rC,QAAP;AACD;;AAED;AACA;;;;;kCAEc;AAAA;;AACZ,UAAItzC,SAAS,KAAK9J,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAAjC;AACA,UACEqI,UACAA,WAAW,EADX,IAEA,CAACg1B,MAAMh1B,MAAN,CAFD,IAGA,OAAOA,MAAP,KAAkB,QAHlB,IAIA,CAAC,KAAK9J,KAAL,CAAW80C,aALd,EAME;AACA,aAAK5rC,OAAL,CAAa,gBAAb,EAA+B,EAAEY,QAAQA,MAAV,EAA/B,EAAmDhB,IAAnD,CAAwD,gBAAQ;AAC9D,cAAIzI,KAAK4+B,GAAT,EAAc;AACZ;AACA,gBAAIv9B,GAAJ,EAASH,QAAQC,GAAR,mBAA4BnB,KAAK4+B,GAAjC,SAAwC5+B,KAAK6+B,IAA7C;AACT,mBAAK9+B,QAAL,CAAc;AACZi6C,0BAAY,IADA;AAEZE,0BAAY;AAFA,aAAd;AAID,WAPD,MAOO,IAAIl6C,KAAKo+B,MAAT,EAAiB;AACtB,gBAAI/8B,GAAJ,EACEH,QAAQC,GAAR,mDACkDnB,KAAKyJ,MADvD;AAGF,gBAAIpI,GAAJ,EACEH,QAAQC,GAAR;AACF,mBAAKpB,QAAL,CAAc;AACZ00C,6BAAe,IADH;AAEZyF,0BAAY,IAFA;AAGZF,0BAAY;AAHA,aAAd;AAKA,mBAAK96B,MAAL,CAAY,eAAZ,EAA6B,EAAEzV,QAAQ,OAAKjK,KAAL,CAAWiK,MAArB,EAA7B;AACA;AACAtH,kBAAM0G,OAAN,CAAc,mBAAd,EAAmC,EAAE06B,QAAQ13B,WAAWI,IAArB,EAAnC,EAAgExD,IAAhE,CACE,eAAO;AACL,kBAAMwxC,cAAcvxC,IAAI+rC,aAAxB;AACA,qBAAK10C,QAAL,CAAc,EAAEk6C,wBAAF,EAAd;AACD,aAJH;AAMD;AACF,SA7BD;AA8BD;AACF;AACD;AACA;;;;;4CAEwB;AACtB,UAAIN,WAAW,KAAKh6C,KAAL,CAAWg6C,QAA1B;;AAEA;AACA,UAAIE,WAAWF,SAASE,QAAxB;AACAF,eAASE,QAAT,GAAoBF,SAASC,QAA7B;AACAD,eAASC,QAAT,GAAoBC,QAApB;;AAEA;AACA,UAAImD,OAAO,KAAKr9C,KAAL,CAAW8xC,UAAtB;AACA,UAAIpW,SAAS,KAAK17B,KAAL,CAAW+xC,UAAxB;AACA,UAAIvnC,SAAS6yC,IAAb;;AAEA;AACA;AACA;;AAEA,WAAKj9C,QAAL,CAAc;AACZ45C,kBAAUA,QADE;AAEZlI,oBAAYpW,MAFA;AAGZqW,oBAAYvnC;AAHA,OAAd;AAKD;AACD;AACA;;;;;qCAEiB;AACf,WAAKpK,QAAL,CAAc;AACZo6C,0BAAkB,IADN;AAEZC,wBAAgB,KAFJ;AAGZpB,qBAAa,KAAKr5C,KAAL,CAAW8xC,UAAX,CAAsBn7B;AAHvB,OAAd;AAKA,WAAKqiC,OAAL,CAAa,qBAAb,EAAoC;AAClCv3C,YAAI,SAAS,KAAK5B,KAAL,CAAWiK,MAApB,GAA6B;AADC,OAApC;AAGA;AACA;AACA,WAAKkvC,OAAL,CAAa,eAAb,EAA8B,EAAEC,cAAc,EAAhB,EAA9B;AACD;AACD;AACA;;;;;qCAEiB;AACf,WAAK74C,QAAL,CAAc;AACZs6C,0BAAkB,IADN;AAEZC,wBAAgB,KAFJ;AAGZtB,qBAAa,KAAKr5C,KAAL,CAAW+xC,UAAX,CAAsBp7B;AAHvB,OAAd;AAKA,WAAKqiC,OAAL,CAAa,qBAAb,EAAoC;AAClCv3C,YAAI,SAAS,KAAK5B,KAAL,CAAWiK,MAApB,GAA6B;AADC,OAApC;AAGA;AACA;AACA,WAAKkvC,OAAL,CAAa,eAAb,EAA8B,EAAEC,cAAc,EAAhB,EAA9B;AACD;AACD;AACA;;;;;yCAEqB12C,K,EAAO;AAC1B,UAAIy3C,WAAW,KAAKh6C,KAAL,CAAWg6C,QAA1B;AACAA,eAAShnC,IAAT,GAAgBzQ,MAAMiI,MAAN,CAAanF,KAA7B;AACA,WAAKjF,QAAL,CAAc,EAAE45C,UAAUA,QAAZ,EAAd;AACD;AACD;AACA;;;;;iCAEaz3C,K,EAAO;AAClB,UAAIy3C,WAAW,KAAKh6C,KAAL,CAAWg6C,QAA1B;AACAA,eAAS35B,IAAT,GAAgB9d,MAAMiI,MAAN,CAAanF,KAA7B;AACA,WAAKjF,QAAL,CAAc,EAAE45C,UAAUA,QAAZ,EAAd;AACD;AACD;AACA;;;;;mCAEez3C,K,EAAO;AACpB;AACA;AACA;AACA;AACA,UAAIy3C,WAAW,KAAKh6C,KAAL,CAAWg6C,QAA1B;AACAA,eAAS3e,MAAT,GAAkB94B,MAAMiI,MAAN,CAAanF,KAAb,GAAqB,CAArB,GAAyB,EAAzB,GAA8BoqB,OAAOltB,MAAMiI,MAAN,CAAanF,KAApB,CAAhD,CANoB,CAMwD;AAC5E,WAAKjF,QAAL,CAAc,EAAE45C,UAAUA,QAAZ,EAAd;AACD;AACD;AACA;;;;;uCAEmBz3C,K,EAAO;AACxB,UAAIy3C,WAAW,KAAKh6C,KAAL,CAAWg6C,QAA1B;AACAA,eAAS1e,UAAT,GAAsB/4B,MAAMiI,MAAN,CAAanF,KAAnC;AACA,WAAKjF,QAAL,CAAc,EAAE45C,UAAUA,QAAZ,EAAd;AACD;AACD;AACA;;;;;qCAEiBz3C,K,EAAO;AACtB,UAAIy3C,WAAW,KAAKh6C,KAAL,CAAWg6C,QAA1B;AACAA,eAASze,QAAT,GAAoBh5B,MAAMiI,MAAN,CAAanF,KAAjC;AACA,WAAKjF,QAAL,CAAc,EAAE45C,UAAUA,QAAZ,EAAd;AACD;AACD;AACA;;;;;qCAEiBz3C,K,EAAO;AACtB,UAAIy3C,WAAW,KAAKh6C,KAAL,CAAWg6C,QAA1B;AACAA,eAAS7gB,QAAT,GAAoB52B,MAAMiI,MAAN,CAAanF,KAAjC;AACA,WAAKjF,QAAL,CAAc,EAAE45C,UAAUA,QAAZ,EAAd;AACD;AACD;AACA;;;;;qCAEiBz3C,K,EAAO;AACtB,UAAIy3C,WAAW,KAAKh6C,KAAL,CAAWg6C,QAA1B;AACAA,eAASle,QAAT,GAAoBv5B,MAAMiI,MAAN,CAAanF,KAAjC;AACA,WAAKjF,QAAL,CAAc,EAAE45C,UAAUA,QAAZ,EAAd;AACD;AACD;AACA;;;;;kCAEcz3C,K,EAAO;AACnB,UAAIy3C,WAAW,KAAKh6C,KAAL,CAAWg6C,QAA1B;AACAA,eAASne,KAAT,GAAiBt5B,MAAMiI,MAAN,CAAanF,KAA9B;AACA,WAAKjF,QAAL,CAAc,EAAE45C,UAAUA,QAAZ,EAAd;AACD;AACD;AACA;;;;;6BAESz3C,K,EAAO;AAAA;;AACdA,YAAM4wB,cAAN;AACA,UAAI6mB,WAAW,KAAKh6C,KAAL,CAAWg6C,QAA1B;AACA;AACA;AACA;AACA,UAAI/c,OAAO;AACTx7B,YAAIu4C,SAASv4C,EADJ;AAETi6B,gBAAQ,KAAK17B,KAAL,CAAW8xC,UAAX,CAAsBrwC,EAFrB,EAEyB;AAClC;AACA+I,gBAAQ,KAAKxK,KAAL,CAAW+xC,UAAX,CAAsBtwC,EAJrB,EAIyB;AAClCuR,cAAMgnC,SAAShnC,IALN;AAMTqN,cAAM25B,SAAS35B,IANN;AAOTgb,gBAAQ2e,SAAS3e,MAPR;AAQTC,oBAAY0e,SAAS1e,UARZ;AASTC,kBAAUye,SAASze,QATV;AAUTpC,kBAAU6gB,SAAS7gB,QAVV;AAWT2C,kBAAUke,SAASle,QAXV;AAYTD,eAAOme,SAASne;AAZP,OAAX;AAcA,UAAIn6B,GAAJ,EAASH,QAAQgb,KAAR,CAAc,+BAAd,EAA+C0gB,IAA/C;;AAET;AACA;AACA;AACA,UAAIA,IAAJ,EAAU;AACR;AACA,YAAMn1B,SAAS,KAAKygB,QAAL,CAAc,QAAd,CAAf;AACA,YAAMmT,SAAS5zB,OAAOm0B,KAAP,CAAa+C,IAAb,CAAkB;AAAA,iBAAQlC,KAAKr7B,EAAL,KAAYw7B,KAAKvB,MAAzB;AAAA,SAAlB,CAAf;AACA,YAAI,CAACA,MAAL,EAAa;AACX;AACAp4B,gBAAM,sEAAN;AACA;AACA,eAAK83C,WAAL;AACA;AACD;AACD;AACA,YAAM5wC,SAAS1C,OAAOm0B,KAAP,CAAa+C,IAAb,CAAkB;AAAA,iBAAQlC,KAAKr7B,EAAL,KAAYw7B,KAAKzyB,MAAzB;AAAA,SAAlB,CAAf;AACA,YAAI,CAACA,MAAL,EAAa;AACX;AACAlH,gBAAM,sEAAN;AACA;AACA,eAAK83C,WAAL;AACA;AACD;AACF;;AAED;AACA54C,YAAM0G,OAAN,CAAc,uBAAd,EAAuC,EAAE06B,QAAQ,MAAV,EAAvC;AACA,WAAKoV,OAAL,CAAa,iBAAb,EAAgC,EAAElvC,QAAQ,KAAKjK,KAAL,CAAWiK,MAArB,EAAhC,EAjDc,CAiDkD;AAChE;AACA,WAAKkvC,OAAL,CAAa,qBAAb,EAAoC,EAAEv3C,IAAI,QAAN,EAApC;AACA,WAAKrB,QAAL,CAAc;AACZ00C,uBAAe,KADH;AAEZ0F,0BAAkB,KAFN;AAGZE,0BAAkB;AAHN,OAAd;AAKA,WAAK1B,OAAL,CAAa,WAAb,EAA0B,EAAE/b,UAAF,EAA1B,EAAoCn0B,IAApC,CAAyC,YAAM;AAC7C,eAAKI,OAAL,CAAa,kBAAb,EAAiC,EAAEY,QAAQmzB,KAAKx7B,EAAf,EAAjC,EAAsDqH,IAAtD,CAA2D,gBAAQ;AACjE,cAAIzI,KAAK4+B,GAAT,EAAc;AACZ,gBAAIv9B,GAAJ,EAASH,QAAQC,GAAR,mBAA4BnB,KAAK4+B,GAAjC,SAAwC5+B,KAAK6+B,IAA7C;AACV,WAFD,MAEO,IAAI7+B,KAAKs+B,QAAT,EAAmB;AACxB,gBAAIj9B,GAAJ,EACEH,QAAQC,GAAR,0DACyDnB,KAAKyJ,MAD9D;AAGF,mBAAK1J,QAAL,CAAc,EAAEi6C,YAAY,KAAd,EAAd;AACD;AACF,SAVD;AAWD,OAZD;AAaD,K,CAAC;;AAEF;AACA;AACA;;;;;AAKA;AACA;;;;;6BAES;AAAA,mBACiD,KAAKx6C,KADtD;AAAA,UACCiK,MADD,UACCA,MADD;AAAA,UACS4yC,eADT,UACSA,eADT;AAAA,UAC0BY,kBAD1B,UAC0BA,kBAD1B;AAAA,oBAWH,KAAKt9C,KAXF;AAAA,UAGLg6C,QAHK,WAGLA,QAHK;AAAA,UAILlI,UAJK,WAILA,UAJK;AAAA,UAKLC,UALK,WAKLA,UALK;AAAA,UAMLlY,QANK,WAMLA,QANK;AAAA,UAOLugB,YAPK,WAOLA,YAPK;AAAA,UAQLzhB,mBARK,WAQLA,mBARK;AAAA,UASLohB,eATK,WASLA,eATK;AAAA,UAULO,WAVK,WAULA,WAVK;AAAA,UAYDnhB,QAZC,GAYY,KAAKn5B,KAZjB,CAYDm5B,QAZC;;AAaP,UAAIU,SAASiC,QAAT,KAAsB73B,SAA1B,EAAqC;AACnC;AACA41B,iBAASiC,QAAT,GAAoB,EAApB;AACAjC,iBAASiC,QAAT,CAAkBnlB,KAAlB,GAA0B,EAA1B;AACAkjB,iBAASiC,QAAT,CAAkBxD,MAAlB,GAA2B,IAA3B;AACD;AACD,UAAIa,aAAal1B,SAAjB,EAA4B;AAC1B;AACAk1B,mBAAW,EAAX;AACAA,iBAASb,MAAT,GAAkB,IAAlB;AACD;AACD,UAAMilB,KACJ;AAAA;AAAA,UAAM,OAAO,EAAE7rB,OAAO,iBAAT,EAA4B8rB,WAAW,QAAvC,EAAb;AAAA;AAAA,OADF;AAGA;AACA,UAAIC,sBACF3L,WAAWn7B,KAAX,KAAqB,KAAK9W,KAAL,CAAW68C,eAAhC,IACA3K,WAAWp7B,KAAX,KAAqB,KAAK9W,KAAL,CAAW68C,eAFlC;;AAIA;AACA;AACA;AACA;AACA,UAAI,CAAC,KAAK18C,KAAL,CAAWu6C,UAAhB,EAA4B;AAC1B,eACE;AAAA;AAAA;AACE;AAAC,kBAAD;AAAA;AACE,2BADF;AAEE,oBAAK,IAFP;AAGE,qBAAO;AACLp5C,iCAAiB,SADZ;AAELu8C,6BAAa,aAFR;AAGLz8C,uBAAO,MAHF;AAIL6wB,8BAAc,KAJT;AAKLP,2BAAW,MALN;AAML4c,0BAAU;AANL,eAHT;AAWE,uBAAS,KAAKiN;AAXhB;AAaGsB,gCAAoB5K,WAAWn7B,KAA/B,GAAuC4mC,EAAvC,GAA4CzL,WAAWn7B,KAb1D;AAAA;AAcQ;AAAA;AAAA,gBAAM,OAAOqjC,SAAShnC,IAAtB;AAAA;AAAA,aAdR;AAAA;AAeG0pC,gCAAoB3K,WAAWp7B,KAA/B,GAAuC4mC,EAAvC,GAA4CxL,WAAWp7B;AAf1D;AADF,SADF;AAqBD;;AAED,aACE;AAAA;AAAA;AACE;AAAA;AAAA,YAAK,WAAW,KAAK3W,KAAL,CAAWu6C,UAAX,GAAwB,EAAxB,GAA6B,QAA7C;AACE;AAAC,gBAAD;AAAA;AACE,yBAAU,WADZ;AAEE,qBAAO;AACLp5C,iCAAiB,SADZ;AAELw8C,2BAAW,OAFN;AAGLv8C,yBAAS,KAHJ;AAIL0wB,8BAAc;AAJT,eAFT;AAQE,wBAAU,KAAKW;AARjB;AAUE;AAAC,sBAAD;AAAA,gBAAU,SAAS,KAAK2oB,WAAxB;AACE;AAAA;AAAA;AAAA;AAASpB,yBAASv4C;AAAlB;AADF,aAVF;AAaE;AAAC,uBAAD;AAAA,gBAAW,SAAX;AACE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT,EAAY,OAAO,EAAEm8C,SAAS,MAAX,EAAnB,EAAwC,WAAU,MAAlD;AACE;AAAC,uBAAD;AAAA,oBAAO,OAAI,QAAX,EAAoB,WAAU,gCAA9B;AACG/jB,2BAAS6B,MAAT,CAAgBnC,YADnB;AAEE;AAAA;AAAA,sBAAM,WAAU,aAAhB;AACG,yBAAKskB,QAAL,CAAchkB,SAAS6B,MAAvB;AADH;AAFF;AADF,eADF;AASE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT;AACE,oCAAC,YAAD;AACE,8BAAY,SAAS5xB,MAAT,GAAkB,QADhC;AAEE,iCAAegoC,WAAWn7B,KAF5B;AAGE,gCACE+lC,oBAAoB5K,WAAWn7B,KAA/B,GACI,QADJ,GAEI,KAAK3W,KAAL,CAAW80C,aAAX,GACA,UADA,GAEA,MARR;AAUE,0BAAQhD,WAAWrwC,EAVrB;AAWE,yCAAuB,CAAC,KAAKzB,KAAL,CAAWw6C,gBAXrC;AAYE,+BAAa,KAAKx6C,KAAL,CAAWq5C;AAZ1B,kBADF;AAeE;AAAC,wBAAD;AAAA;AACE,iCADF;AAEE,0BAAK,IAFP;AAGE,+BAAU,aAHZ;AAIE,4BACE,EACE,KAAKr5C,KAAL,CAAW80C,aAAX,IACA,KAAK90C,KAAL,CAAWy6C,cADX,IAEA3I,WAAWn7B,KAAX,KAAqB,KAAK9W,KAAL,CAAW68C,eAHlC,CALJ;AAWE,6BAAS,KAAKd,cAXhB;AAYE,2BAAM;AAZR;AAAA;AAAA;AAfF;AATF,aAbF;AAuDE;AAAC,uBAAD;AAAA,gBAAW,SAAX,EAAe,QAAQ/hB,SAAS7mB,IAAT,CAAcslB,MAArC;AACE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT,EAAY,OAAO,EAAEslB,SAAS,MAAX,EAAnB,EAAwC,WAAU,MAAlD;AACE;AAAC,uBAAD;AAAA,oBAAO,OAAI,cAAX,EAA0B,WAAU,gCAApC;AACG/jB,2BAAS7mB,IAAT,CAAcumB,YADjB;AAEE;AAAA;AAAA,sBAAM,WAAU,aAAhB;AAA+B,yBAAKskB,QAAL,CAAchkB,SAAS7mB,IAAvB;AAA/B;AAFF;AADF,eADF;AAOE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT;AACE;AAAC,uBAAD;AAAA;AACE,0BAAK,QADP;AAEE,0BAAK,cAFP;AAGE,2BAAOgnC,SAAShnC,IAHlB;AAIE,8BAAU,KAAK8oC,oBAJjB;AAKE,8BAAU,CAAC,KAAK97C,KAAL,CAAW80C;AALxB;AAOGjb,2BAAS7mB,IAAT,CAAcR,OAAd,CAAsBL,GAAtB,CAA0B;AAAA,2BACzB;AAAA;AAAA,wBAAQ,KAAK2rC,OAAOnnC,KAApB;AAA4BmnC,6BAAOnnC;AAAnC,qBADyB;AAAA,mBAA1B;AAPH;AADF;AAPF,aAvDF;AA4EE;AAAC,uBAAD;AAAA,gBAAW,SAAX;AACE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT,EAAY,OAAO,EAAEinC,SAAS,MAAX,EAAnB,EAAwC,WAAU,MAAlD;AACE;AAAC,uBAAD;AAAA,oBAAO,OAAI,WAAX,EAAuB,WAAU,gCAAjC;AACG/jB,2BAASrvB,MAAT,CAAgB+uB,YADnB;AAEE;AAAA;AAAA,sBAAM,WAAU,aAAhB;AACG,yBAAKskB,QAAL,CAAchkB,SAASrvB,MAAvB;AADH;AAFF;AADF,eADF;AASE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT;AACE,oCAAC,YAAD;AACE,8BAAY,SAASV,MAAT,GAAkB,QADhC;AAEE,iCAAeioC,WAAWp7B;AAC1B;AAHF,oBAIE,cACE+lC,oBAAoB3K,WAAWp7B,KAA/B,IAAwC,CAAC8mC,mBAAzC,GACI,QADJ,GAEI,KAAKz9C,KAAL,CAAW80C,aAAX,GACA,UADA,GAEA,MATR;AAWE,0BAAQ/C,WAAWtwC,EAXrB;AAYE,yCAAuB,CAAC,KAAKzB,KAAL,CAAW06C,gBAZrC;AAaE,+BAAa,KAAK16C,KAAL,CAAWq5C;AAb1B,kBADF;AAgBE;AAAC,wBAAD;AAAA;AACE,iCADF;AAEE,0BAAK,IAFP;AAGE,+BAAU,aAHZ;AAIE,4BACE,EACE,KAAKr5C,KAAL,CAAW80C,aAAX,IACA,KAAK90C,KAAL,CAAW26C,cADX,KAEC5I,WAAWp7B,KAAX,KAAqB,KAAK9W,KAAL,CAAW68C,eAAhC,IACCe,mBAHF,CADF,CALJ;AAYE,6BAAS,KAAK5B,cAZhB;AAaE,2BAAM;AAbR;AAAA;AAAA,iBAhBF;AAiCE;AAAC,wBAAD;AAAA;AACE,iCADF;AAEE,0BAAK,IAFP;AAGE,+BAAU,aAHZ;AAIE,2BAAO,EAAE5oB,aAAa,KAAf,EAJT;AAKE,4BAAQ,EAAE,KAAKjzB,KAAL,CAAW80C,aAAX,IAA4B,KAAK90C,KAAL,CAAW26C,cAAzC,CALV;AAME,6BAAS,KAAKgB,qBANhB;AAOE,2BAAM;AAPR;AAAA;AAAA;AAjCF;AATF,aA5EF;AAmIE;AAAC,uBAAD;AAAA,gBAAW,SAAX,EAAe,QAAQ9hB,SAASiC,QAAT,CAAkBxD,MAAzC;AACE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT,EAAY,OAAO,EAAEslB,SAAS,MAAX,EAAnB,EAAwC,WAAU,MAAlD;AACE;AAAC,uBAAD;AAAA,oBAAO,OAAI,UAAX,EAAsB,WAAU,gCAAhC;AACG/jB,2BAASiC,QAAT,CAAkBvC,YADrB;AAEE;AAAA;AAAA,sBAAM,WAAU,aAAhB;AACG,yBAAKskB,QAAL,CAAchkB,SAASiC,QAAvB;AADH;AAFF;AADF,eADF;AASE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT;AACE,oCAAC,KAAD;AACE,wBAAK,MADP;AAEE,wBAAK,UAFP;AAGE,yBAAOke,SAASle,QAHlB;AAIE,4BAAU,KAAKugB,gBAJjB;AAKE,4BAAU,CAAC,KAAKr8C,KAAL,CAAW80C;AALxB;AADF;AATF,aAnIF;AAsJE;AAAC,uBAAD;AAAA,gBAAW,SAAX,EAAe,QAAQjb,SAASV,QAAT,CAAkBb,MAAzC;AACE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT,EAAY,OAAO,EAAEslB,SAAS,MAAX,EAAnB,EAAwC,WAAU,MAAlD;AACE;AAAC,uBAAD;AAAA,oBAAO,OAAI,UAAX,EAAsB,WAAU,gCAAhC;AACG/jB,2BAASV,QAAT,CAAkBI,YADrB;AAEE;AAAA;AAAA,sBAAM,WAAU,aAAhB;AACG,yBAAKskB,QAAL,CAAchkB,SAASV,QAAvB;AADH;AAFF;AADF,eADF;AASE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT;AACE,oCAAC,KAAD;AACE,wBAAK,MADP;AAEE,wBAAK,UAFP;AAGE,yBAAO6gB,SAAS7gB,QAHlB;AAIE,4BAAU,KAAKijB,gBAJjB;AAKE,4BAAU,CAAC,KAAKp8C,KAAL,CAAW80C;AALxB;AADF;AATF,aAtJF;AAyKE;AAAC,uBAAD;AAAA,gBAAW,SAAX,EAAe,QAAQjb,SAASgC,KAAT,CAAevD,MAAtC;AACE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT,EAAY,OAAO,EAAEslB,SAAS,MAAX,EAAnB,EAAwC,WAAU,MAAlD;AACE;AAAC,uBAAD;AAAA,oBAAO,OAAI,OAAX,EAAmB,WAAU,gCAA7B;AACG/jB,2BAASgC,KAAT,CAAetC,YADlB;AAEE;AAAA;AAAA,sBAAM,WAAU,aAAhB;AAA+B,yBAAKskB,QAAL,CAAchkB,SAASgC,KAAvB;AAA/B;AAFF;AADF,eADF;AAOE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT;AACE,oCAAC,KAAD;AACE,wBAAK,UADP;AAEE,wBAAK,OAFP;AAGE,yBAAO,EAAE96B,SAAS,KAAKf,KAAL,CAAW80C,aAAX,GAA2B,OAA3B,GAAqC,MAAhD,EAHT;AAIE,yBAAOkF,SAASne,KAJlB;AAKE,4BAAU,KAAKkgB,aALjB;AAME,4BAAU,CAAC,KAAK/7C,KAAL,CAAW80C;AANxB,kBADF;AASG,qBAAKiJ,eAAL,CAAqB,KAAK/9C,KAAL,CAAWg6C,QAAX,CAAoBne,KAApB,IAA6B,EAAlD;AATH;AAPF,aAzKF;AA4LE;AAAC,uBAAD;AAAA,gBAAW,SAAX,EAAe,QAAQhC,SAASxZ,IAAT,CAAciY,MAArC;AACE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT,EAAY,OAAO,EAAEslB,SAAS,MAAX,EAAnB,EAAwC,WAAU,MAAlD;AACE;AAAC,uBAAD;AAAA,oBAAO,OAAI,MAAX,EAAkB,WAAU,gCAA5B;AACG/jB,2BAASxZ,IAAT,CAAckZ,YADjB;AAEE;AAAA;AAAA,sBAAM,WAAU,aAAhB;AAA+B,yBAAKskB,QAAL,CAAchkB,SAASxZ,IAAvB;AAA/B;AAFF;AADF,eADF;AAOE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT;AACE,oCAAC,KAAD;AACE,wBAAK,MADP;AAEE,wBAAK,MAFP;AAGE,yBAAO25B,SAAS35B,IAHlB;AAIE,4BAAU,KAAK27B,YAJjB;AAKE,4BAAU,CAAC,KAAKh8C,KAAL,CAAW80C;AALxB;AADF;AAPF,aA5LF;AA8ME;AAAC,uBAAD;AAAA,gBAAW,SAAX,EAAe,QAAQjb,SAASwB,MAAT,CAAgB/C,MAAvC;AACE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT,EAAY,OAAO,EAAEslB,SAAS,MAAX,EAAnB,EAAwC,WAAU,MAAlD;AACE;AAAC,uBAAD;AAAA,oBAAO,OAAI,QAAX,EAAoB,WAAU,gCAA9B;AACG/jB,2BAASwB,MAAT,CAAgB9B,YADnB;AAEE;AAAA;AAAA,sBAAM,WAAU,aAAhB;AACG,yBAAKskB,QAAL,CAAchkB,SAASwB,MAAvB;AADH;AAFF;AADF,eADF;AASE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT;AACE,oCAAC,KAAD;AACE,wBAAK,QADP;AAEE,wBAAK,QAFP;AAGE,uBAAI,GAHN;AAIE,yBAAO2e,SAAS3e,MAJlB;AAKE,4BAAU,KAAK4gB,cALjB;AAME,4BAAU,CAAC,KAAKj8C,KAAL,CAAW80C;AANxB;AADF;AATF,aA9MF;AAmOE;AAAC,uBAAD;AAAA,gBAAW,SAAX,EAAe,QAAQjb,SAASyB,UAAT,CAAoBhD,MAA3C;AACE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT,EAAY,OAAO,EAAEslB,SAAS,MAAX,EAAnB,EAAwC,WAAU,MAAlD;AACE;AAAC,uBAAD;AAAA,oBAAO,OAAI,YAAX,EAAwB,WAAU,gCAAlC;AACG/jB,2BAASyB,UAAT,CAAoB/B,YADvB;AAEE;AAAA;AAAA,sBAAM,WAAU,aAAhB;AACG,yBAAKskB,QAAL,CAAchkB,SAASyB,UAAvB;AADH;AAFF;AADF,eADF;AASE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT;AACE,oCAAC,KAAD;AACE,wBAAK,MADP;AAEE,wBAAK,YAFP;AAGE,yBAAO0e,SAAS1e,UAHlB;AAIE,4BAAU,KAAK4gB,kBAJjB;AAKE,4BAAU,CAAC,KAAKl8C,KAAL,CAAW80C;AALxB;AADF;AATF,aAnOF;AAsPE;AAAC,uBAAD;AAAA,gBAAW,SAAX,EAAe,QAAQjb,SAAS0B,QAAT,CAAkBjD,MAAzC;AACE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT,EAAY,OAAO,EAAEslB,SAAS,MAAX,EAAnB,EAAwC,WAAU,MAAlD;AACE;AAAC,uBAAD;AAAA,oBAAO,OAAI,UAAX,EAAsB,WAAU,gCAAhC;AACG/jB,2BAAS0B,QAAT,CAAkBhC,YADrB;AAEE;AAAA;AAAA,sBAAM,WAAU,aAAhB;AACG,yBAAKskB,QAAL,CAAchkB,SAAS0B,QAAvB;AADH;AAFF;AADF,eADF;AASE;AAAC,mBAAD;AAAA,kBAAK,IAAI,CAAT;AACE;AACE,wBAAK,MADP;AAEE,wBAAK,UAFP;AAGE,6BAAU,UAHZ;AAIE,wBAAK,GAJP;AAKE,yBAAOye,SAASze,QALlB;AAME,4BAAU,KAAK4gB,gBANjB;AAOE,4BAAU,CAAC,KAAKn8C,KAAL,CAAW80C,aAPxB;AAQE,4BAAU,CAAC,KAAK90C,KAAL,CAAW80C;AARxB;AADF;AATF,aAtPF;AA4QE;AAAA;AAAA;AACE,oBAAG,gBADL;AAEE,wBAAQ,KAAK90C,KAAL,CAAW46C,SAFrB;AAGE,2BAAU;AAHZ;AAKE;AAAA;AAAA,kBAAM,WAAU,OAAhB,EAAwB,SAAS,KAAKY,gBAAtC;AAAA;AAAA,eALF;AAQE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,iBADF;AAEE,+CAFF;AAGE,+CAHF;AAAA;AAIa,qBAAKjzB,QAAL,CAAc,UAAd,EAA0B1U,IAJvC;AAAA;AAI4D,mBAJ5D;AAKG,qBAAK7T,KAAL,CAAWg6C,QAAX,CAAoBrjC,KALvB;AAAA;AAKmC,qBAAK3W,KAAL,CAAWg6C,QAAX,CAAoBv4C,EALvD;AAAA;AAMGqwC,2BAAWn7B,KANd;AAAA;AAMqCo7B,2BAAWp7B,KANhD;AAAA;AAM8D,mBAN9D;AAOGwiB,yBAAStmB,IAPZ;AAAA;AAOqC,qBAAK4oC,aAAL,EAPrC;AAAA;AAAA;AARF,aA5QF;AA8RE,2CA9RF;AA+RE;AAAC,uBAAD;AAAA,gBAAW,WAAU,YAArB,EAAkC,OAAO,EAAEuC,cAAc,KAAhB,EAAzC;AACE;AAAC,sBAAD;AAAA;AACE,6BAAU,wCADZ;AAEE,wBAAK,IAFP;AAGE,0BAAQ,KAAKh+C,KAAL,CAAW6+B,QAAX,IAAuBub,YAAvB,IAAuCkD,kBAHjD;AAIE,2BAAS,KAAKjC;AAJhB;AAAA;AAAA,eADF;AAAA;AAUE;AAAC,sBAAD;AAAA;AACE,+BADF;AAEE,wBAAK,IAFP;AAGE,0BAAQliB,SAASb,MAHnB;AAIE,2BAAS,KAAKijB;AAJhB;AAAA;AAAA,eAVF;AAAA;AAmBE;AAAC,sBAAD;AAAA;AACE,+BADF;AAEE,wBAAK,IAFP;AAGE,0BACE,KAAKv7C,KAAL,CAAW6+B,QAAX,IACAub,YADA,IAEA,KAAKp6C,KAAL,CAAW80C,aAFX,IAGAwI,kBAPJ;AASE,4BAAUhD,WATZ;AAUE,2BAAS,KAAKgB;AAVhB;AAYG,qBAAKt7C,KAAL,CAAW80C,aAAX,GAA2B,cAA3B,GAA4C;AAZ/C,eAnBF;AAAA;AAkCE;AAAC,sBAAD;AAAA;AACE,wBAAK,IADP;AAEE,2BAAS,KAAK90C,KAAL,CAAW80C,aAFtB;AAGE,2BAAS,KAAKsG;AAHhB;AAKG,qBAAKp7C,KAAL,CAAW80C,aAAX,GAA2B,QAA3B,GAAsC;AALzC,eAlCF;AAAA;AA0CE;AAAC,sBAAD;AAAA;AACE,yBAAM,SADR;AAEE,wBAAK,IAFP;AAGE,0BAAQ,CAAC,KAAK90C,KAAL,CAAW80C,aAHtB;AAIE,4BAAU,EAAE,KAAK90C,KAAL,CAAW80C,aAAX,IAA4B,KAAK90C,KAAL,CAAW26C,cAAzC;AAJZ;AAAA;AAAA,eA1CF;AAkDE;AAAA;AAAA;AACE,0BACE,KAAK36C,KAAL,CAAW6+B,QAAX,IACA,KAAK7+B,KAAL,CAAW80C,aADX,IAEAwI,kBAJJ;AAME,yBAAO,EAAEv8C,SAAS,QAAX;AANT;AAQE;AAAA;AAAA;AACE,4BAAQ,CAAC,KAAKf,KAAL,CAAWq6C,UADtB;AAEE,+BAAU;AAFZ;AAIG1hB;AAJH,iBARF;AAcE;AAAA;AAAA,oBAAG,QAAQ,CAAC2hB,WAAZ,EAAyB,WAAU,2BAAnC;AACGP;AADH;AAdF;AAlDF;AA/RF;AADF;AADF,OADF;AA2WD;AACD;AACA;;;;wCACwB;AACtB,UAAIr4C,GAAJ,EAASH,QAAQC,GAAR,CAAY,+BAAZ;AACT,WAAKq7C,mBAAL;AACA,WAAKrP,qBAAL,CAA2B,KAAKjlB,QAAL,CAAc,SAAd,CAA3B;AACA,WAAKuyB,eAAL;AACA,WAAK16C,QAAL,CAAc;AACZ;AACAg6C,sBAAc36C,OAAOmJ,gBAAP;AAFF,OAAd;AAIAjK,aAAOkD,gBAAP,CAAwB,cAAxB,EAAwC,KAAKy6C,WAA7C;AACA39C,aAAOkD,gBAAP,CAAwB,QAAxB,EAAkC,KAAK06C,QAAvC;AACD;;;gCAEWl5C,C,EAAG;AACbA,QAAE8vB,cAAF;AACA,UAAI,KAAKnzB,KAAL,CAAW80C,aAAf,EAA8B;AAC5B,SAACzxC,KAAK1E,OAAO4D,KAAb,EAAoB07C,WAApB,GAAkC,IAAlC;AACD,OAFD,MAEO;AACLlnC,gBAAQmX,cAAR,CAAuB7qB,CAAvB,EAA0B,aAA1B;AACD;AACD,aAAOA,CAAP;AACD;;;6BAEQA,C,EAAG;AACV,UAAI,KAAKrD,KAAL,CAAW80C,aAAf,EAA8B;AAC5B,aAAK5rC,OAAL,CAAa,kBAAb,EAAiC,EAAEY,QAAQ,KAAK9J,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAA9B,EAAjC;AACA,aAAKyH,OAAL,CAAa,uBAAb,EAAsC,EAAE06B,QAAQ13B,WAAWI,IAArB,EAAtC;AACD;AACF;;AAED;AACA;;;;;2CAEuB;AAAA;;AACrB,UAAI5K,GAAJ,EAASH,QAAQC,GAAR,CAAY,kCAAZ;AACT,UAAI,KAAKxB,KAAL,CAAW80C,aAAf,EAA8B;AAC5B,aAAK5rC,OAAL,CAAa,kBAAb,EAAiC,EAAEY,QAAQ,KAAK9J,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAA9B,EAAjC,EAAqEqH,IAArE,CACE,gBAAQ;AACN,cAAIzI,KAAK4+B,GAAT,EAAc;AACZ,gBAAIv9B,GAAJ,EAASH,QAAQC,GAAR,mBAA4BnB,KAAK4+B,GAAjC,SAAwC5+B,KAAK6+B,IAA7C;AACV,WAFD,MAEO,IAAI7+B,KAAKs+B,QAAT,EAAmB;AACxB,gBAAIj9B,GAAJ,EACEH,QAAQC,GAAR,0DACyDnB,KAAKyJ,MAD9D;AAGF,mBAAK1J,QAAL,CAAc,EAAEi6C,YAAY,KAAd,EAAd;AACD;AACF,SAXH;AAaA;AACA,aAAKnxC,OAAL,CAAa,uBAAb,EAAsC,EAAE06B,QAAQ13B,WAAWI,IAArB,EAAtC;AACD;AACD;AACA;AACA,WAAKoc,iBAAL,CAAuB,SAAvB,EAAkC,KAAK8kB,qBAAvC;AACA,WAAK9kB,iBAAL,CAAuB,WAAvB,EAAoC,KAAKsyB,eAAzC;AACA,WAAKtyB,iBAAL,CAAuB,UAAvB,EAAmC,KAAKmyB,WAAxC;AACAr4C,YAAMqc,eAAN,CAAsB,aAAtB,EAAqC,KAAKo8B,mBAA1C;AACAz4C,YAAMqc,eAAN,CAAsB,WAAtB,EAAmC,KAAKq8B,cAAxC;AACA14C,YAAMqc,eAAN,CAAsB,YAAtB,EAAoC,KAAKs8B,eAAzC;AACA34C,YAAMqc,eAAN,CAAsB,yBAAtB,EAAiD,KAAKk8B,YAAtD;AACAp8C,aAAO+oB,mBAAP,CAA2B,cAA3B,EAA2C,KAAK40B,WAAhD;AACA39C,aAAO+oB,mBAAP,CAA2B,QAA3B,EAAqC,KAAK60B,QAA1C;AACD;;AAED;AACA;;;;;6BAGS1mC,G,EAAK;AACZ,UAAI,CAACA,GAAL,EAAU;AACV,UAAIhD,OAAO,EAAX;AACA,UAAIgD,IAAI4jB,IAAJ,KAAax1B,SAAb,IAA0B4R,IAAI4jB,IAAJ,KAAa,EAA3C,EAA+C5mB,OAAOgD,IAAIc,KAAX,CAA/C,KACK9D,OAAOgD,IAAI4jB,IAAX;AACL,aAAO5mB,IAAP;AACD;;;oCAEeA,I,EAAM;AACpB,UAAI,CAAC,KAAK7S,KAAL,CAAW80C,aAAhB,EAA+B;AAC7B,eAAO4E,QAAQ;AACbwE,qBAAW,KAAKC,eADH;AAEbC,2BAAiB,EAAEC,aAAa,IAAf,EAAqBC,SAAS,IAA9B,EAFJ;AAGbC,mBAAS,CAAC5E,OAAD;AAHI,SAAR,EAIJ9mC,IAJI,CAAP;AAKD;AACF;;;oCAEe2rC,G,EAAK3+C,K,EAAO4+C,Q,EAAUC,K,EAAO;AAC3C,UAAIF,QAAQ,GAAZ,EAAiB;AACf3+C,cAAM2K,MAAN,GAAe,QAAf;AACD;AACD,aAAO;AAAC,WAAD;AAAS3K,aAAT;AAAiB4+C;AAAjB,OAAP;AACD;;;;EAh3CsBh/C,OAAO4B,S,GAi3C9B;;AAEF;AACA;;;AACA5C,OAAOC,OAAP,GAAiBo7C,UAAjB;;;;;;;;ACniDA;;;;AACA;;;;;;;;;;;;AAxCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,IAAMl7C,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;AACA,IAAMqwC,OAAOrwC,QAAQ,UAAR,CAAb;AACA,IAAMutC,SAASvtC,QAAQ,gBAAR,CAAf;AACA,IAAMa,WAAWb,QAAQ,UAAR,CAAjB;AACA,IAAM01B,SAAS11B,QAAQ,sBAAR,CAAf;;eACgCA,QAAQ,kBAAR,C;IAAxB4N,mB,YAAAA,mB;;gBAC2B5N,QAAQ,sBAAR,C;IAA3BkN,W,aAAAA,W;IAAaC,S,aAAAA,S;;IACb0kB,M,GAAWH,U,CAAXG,M;;AACR,IAAMjxB,SAASZ,QAAQ,eAAR,CAAf;;;AAIA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA,IAAMs0C,UAAUt2C,SAASwH,OAAT,EAAhB;AACA;AACA,IAAI1E,QAAQ,IAAZ;;AAEA;AACA;AACA;;IACMm8C,S;;;AACJ,qBAAY9+C,KAAZ,EAAmB;AAAA;;AAAA,sHACXA,KADW;;AAGjB,QAAMsM,WAAW,MAAKoc,QAAL,CAAc,UAAd,CAAjB;AACA,UAAKvoB,KAAL,GAAa;AACX65B,gBAAU1tB,SAAS0tB,QADR;AAEXuC,aAAO,EAFI;AAGXwiB,sBAAgB36C,SAHL;AAIX46C,yBAAmB1yC,SAAS+sB,WAJjB;AAKX4lB,qBAAe,EALJ;AAMX7iB,aAAO,EANI,EAMA;AACXqe,mBAAa,KAPF;AAQXzb,gBAAU,KARC;AASX0b,kBAAY,IATD;AAUXwE,eAAS;AAVE,KAAb;;AAaA,UAAKvR,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BztC,IAA3B,OAA7B;AACA,UAAK83C,uBAAL,GAA+B,MAAKA,uBAAL,CAA6B93C,IAA7B,OAA/B;AACA,UAAKi/C,WAAL,GAAmB,MAAKA,WAAL,CAAiBj/C,IAAjB,OAAnB;AACA,UAAKk/C,qBAAL,GAA6B,MAAKA,qBAAL,CAA2Bl/C,IAA3B,OAA7B;AACA,UAAKm/C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBn/C,IAAtB,OAAxB;AACA,UAAKo/C,sBAAL,GAA8B,MAAKA,sBAAL,CAA4Bp/C,IAA5B,OAA9B;AACA,UAAK+6C,eAAL,GAAuB,MAAKA,eAAL,CAAqB/6C,IAArB,OAAvB;AACA,UAAKq/C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBr/C,IAAtB,OAAxB;AACA,UAAKs/C,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBt/C,IAAvB,OAAzB;AACA,UAAKu7C,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBv7C,IAAvB,OAAzB;AACA,UAAKu/C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBv/C,IAAtB,OAAxB;AACA,UAAKw/C,eAAL,GAAuB,MAAKA,eAAL,CAAqBx/C,IAArB,OAAvB;AACA,UAAKy/C,wBAAL,GAAgC,MAAKA,wBAAL,CAA8Bz/C,IAA9B,OAAhC;AACA,UAAK0/C,wBAAL,GAAgC,MAAKA,wBAAL,CAA8B1/C,IAA9B,OAAhC;AACA,UAAK2/C,cAAL,GAAsB,MAAKA,cAAL,CAAoB3/C,IAApB,OAAtB;AACA,UAAK4/C,UAAL,GAAkB,MAAKA,UAAL,CAAgB5/C,IAAhB,OAAlB;AACA,UAAK6/C,UAAL,GAAkB,MAAKA,UAAL,CAAgB7/C,IAAhB,OAAlB;AACA,UAAK8/C,eAAL,GAAuB,MAAKA,eAAL,CAAqB9/C,IAArB,OAAvB;;AAEA,UAAK+/C,aAAL,GAAqB,CAArB;;AAEA;AACAt9C,YAAQ/C,OAAOgD,WAAP,OAAR;;AAEAD,UAAMrC,aAAN,CAAoB,WAApB,EAAiC,MAAK6+C,WAAtC;AACAx8C,UAAMrC,aAAN,CAAoB,yBAApB,EAA+C,MAAK26C,eAApD;;AAEA;AACA;AACA,UAAKzyC,gBAAL,CAAsB,SAAtB,EAAiC,MAAKmlC,qBAAtC;;AAEA;AACA;AACA,UAAKnlC,gBAAL,CAAsB,QAAtB,EAAgC,MAAK62C,gBAArC;;AAEA;AACA,UAAK72C,gBAAL,CAAsB,UAAtB,EAAkC,MAAK+2C,gBAAvC;;AAEA;AACA,UAAK/2C,gBAAL,CAAsB,gBAAtB,EAAwC,MAAK82C,sBAA7C;;AAEA,UAAK92C,gBAAL,CAAsB,WAAtB,EAAmC,MAAKwvC,uBAAxC;AA1DiB;AA2DlB,G,CAAC;;AAEF;;;;;wCACoB;AAAA;;AAClB,UAAIn2C,GAAJ,EAASH,QAAQC,GAAR,CAAY,8BAAZ;;AAET,WAAKgsC,qBAAL,CAA2B,KAAKjlB,QAAL,CAAc,SAAd,CAA3B;;AAEA;AACA;AACA;AACA,UAAMw3B,iBAAiBv9C,MAAM+lB,QAAN,CAAe,gBAAf,CAAvB;AACA,WAAKnoB,QAAL,CAAc,EAAE0+C,eAAeiB,eAAe3jB,KAAhC,EAAd,EAAuD,YAAM;AAC3D,YAAIt0B,SAAS,OAAKygB,QAAL,CAAc,QAAd,CAAb;AACA,eAAK22B,gBAAL,CAAsBp3C,MAAtB;AACD,OAHD;;AAKA;AACA;AACA,WAAKgzC,eAAL;AACD;;;2CAEsB;AACrBt4C,YAAMqc,eAAN,CAAsB,WAAtB,EAAmC,KAAKmgC,WAAxC;AACAx8C,YAAMqc,eAAN,CAAsB,yBAAtB,EAAiD,KAAKi8B,eAAtD;AACA,WAAKpyB,iBAAL,CAAuB,SAAvB,EAAkC,KAAK8kB,qBAAvC;AACA,WAAK9kB,iBAAL,CAAuB,QAAvB,EAAiC,KAAKw2B,gBAAtC;AACA,WAAKx2B,iBAAL,CAAuB,gBAAvB,EAAyC,KAAKy2B,sBAA9C;AACA,WAAKz2B,iBAAL,CAAuB,UAAvB,EAAmC,KAAK02B,gBAAxC;AACA,WAAK12B,iBAAL,CAAuB,WAAvB,EAAoC,KAAKmvB,uBAAzC;AACD;;AAED;;;;4CACwBx3C,I,EAAM;AAC5B,WAAKD,QAAL,CAAc;AACZw+C,wBAAgBv+C,KAAK+7B,KAAL,CAAW53B,MAAX,GAAoB,CAApB,GAAwBnE,KAAK+7B,KAAL,CAAW,CAAX,EAAc36B,EAAtC,GAA2CwC;AAD/C,OAAd;AAGD;AACD;;;;;;;;;0CAMsB6rB,O,EAAS;AAC7B,WAAK1vB,QAAL,CAAc,EAAEy+B,UAAU,CAAC/O,QAAQvnB,OAArB,EAAd;AACD;;AAED;;;;mCACey3C,Q,EAAU;AACvB;AACA,UAAI,CAACA,SAASnnC,IAAd,EAAoB,OAAO,EAAP;;AAEpB,UAAIsP,IAAI,IAAIxkB,IAAJ,CACNq8C,SAASnnC,IAAT,CAAconC,QAAd,GAAyB,CAAzB,GAA6BD,SAASnnC,IAAT,CAAc8gB,OAA3C,GAAqDqmB,SAASnnC,IAAT,CAAc+gB,OAD7D,CAAR;;AAIA,UAAIxsB,OAAO8vC,OAAO/0B,EAAE0e,WAAF,EAAP,CAAX;AACA,UAAIt1B,OAAO4W,EAAEqe,QAAF,KAAe,CAAf,GAAmB,GAAnB,GAAyBre,EAAEue,OAAF,EAAzB,GAAuC,GAAvC,GAA6Ct5B,KAAK2H,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAxD;AACA,UAAI44B,OAAOxlB,EAAEg1B,YAAF,GAAiBpoC,MAAjB,CAAwB,CAAxB,EAA2B,CAA3B,CAAX;AACA,UAAIqoC,WAAW7rC,OAAO,MAAP,GAAgBo8B,IAA/B;AACA,UAAIuS,cAAc,MAAMF,SAASnnC,IAAT,CAAconC,QAAtC;AACA,UAAID,SAASve,KAAb,EACEye,eAAe,SAASF,SAASve,KAAT,CAAeue,SAASve,KAAT,CAAej9B,MAAf,GAAwB,CAAvC,CAAxB;AACF,UAAI27C,MAAM;AAAA;AAAA,UAAM,OAAOD,WAAb;AAAA;AAA4B9C,gBAA5B;AAAA;AAAA,OAAV;;AAEA,aAAO+C,GAAP;AACD;;AAED;AACA;;;;gCACY9/C,I,EAAM;AAChB,WAAKD,QAAL,CAAc,EAAEw+C,gBAAgBv+C,KAAK48B,IAAL,CAAUx7B,EAA5B,EAAd;AACD;;AAED;AACA;;;;0CACsB26B,K,EAAO0iB,a,EAAe;AAC1C;AACA,UAAIA,cAAct6C,MAAd,GAAuB,CAA3B,EAA8B;AAC5B;AACA;AACA,YAAM47C,aAAa59C,MAAM+lB,QAAN,CAAe,YAAf,CAAnB;AACA,YACE63B,WAAWC,YAAX,KAA4B9rB,OAAO+rB,MAAP,CAAcC,MAA1C,IACAH,WAAWC,YAAX,KAA4B9rB,OAAO+rB,MAAP,CAAcE,KAF5C,EAGE;AACApkB,kBAAQA,MAAMxb,MAAN,CAAa,gBAAQ;AAC3B,gBAAM6/B,eAAe3B,cAAc9f,IAAd,CAAmB;AAAA,qBAAKjC,EAAEt7B,EAAF,KAASw7B,KAAKx7B,EAAnB;AAAA,aAAnB,CAArB;AACA,mBAAOg/C,YAAP,CAF2B,CAEN;AACtB,WAHO,CAAR;AAID,SARD,MAQO;AACLrkB,kBAAQA,MAAMjqB,GAAN,CAAU,gBAAQ;AACxB,gBAAMsuC,eAAe3B,cAAc9f,IAAd,CAAmB;AAAA,qBAAKjC,EAAEt7B,EAAF,KAASw7B,KAAKx7B,EAAnB;AAAA,aAAnB,CAArB;AACAw7B,iBAAKyjB,UAAL,GAAkB,CAACD,YAAnB;AACA,mBAAOxjB,IAAP;AACD,WAJO,CAAR;AAKD;AACF;AACD,WAAK78B,QAAL,CAAc,EAAEg8B,YAAF,EAAd;AACD;;AAED;AACA;;;;;qCAEiB/7B,I,EAAM;AAAA;;AACrB,UAAIA,QAAQA,KAAK+7B,KAAb,IAAsB/7B,KAAK47B,KAA/B,EAAsC;AACpC;AACA;AACA,aAAK77B,QAAL,CAAc,EAAE67B,OAAO57B,KAAK47B,KAAd,EAAd,EAAqC,YAAM;AACzC;AACA,cAAIG,QAAQ/7B,KAAK+7B,KAAL,CAAWjqB,GAAX,CAAe,aAAK;AAC9B9O,cAAE2uC,WAAF,GAAgB,OAAK6N,eAAL,CAAqBx8C,EAAEq4B,MAAvB,CAAhB,CAD8B,CACkB;AAChDr4B,cAAEs9C,WAAF,GAAgB,OAAKd,eAAL,CAAqBx8C,EAAEmH,MAAvB,CAAhB;AACA,mBAAOnH,CAAP;AACD,WAJW,CAAZ;AAKA;AACA+4B,kBAAQ,OAAKwkB,SAAL,CAAe,OAAK5gD,KAAL,CAAW++C,OAA1B,EAAmC3iB,KAAnC,CAAR;AACA;AACA,iBAAKh8B,QAAL,CAAc,EAAEg8B,YAAF,EAAd;AAVyC,cAWjC0iB,aAXiC,GAWf,OAAK9+C,KAXU,CAWjC8+C,aAXiC;;AAYzC,iBAAKG,qBAAL,CAA2B7iB,KAA3B,EAAkC0iB,aAAlC;AACD,SAbD;AAcD;AACF;;AAED;AACA;;;;;;;2CAIuBz+C,I,EAAM;AAAA;;AAC3B,UAAIA,KAAK+7B,KAAT,EAAgB;AACd,YAAM0iB,gBAAgBz+C,KAAK+7B,KAA3B;AACA;AACA;AACA;AACA,YAAMgkB,aAAa59C,MAAM+lB,QAAN,CAAe,YAAf,CAAnB;AACA,YAAI63B,WAAWC,YAAX,KAA4B9rB,OAAO+rB,MAAP,CAAcO,IAA9C,EAAoD;AAClD,cAAM/4C,SAAStF,MAAM+lB,QAAN,CAAe,QAAf,CAAf;AACA,eAAKnoB,QAAL,CACE;AACEg8B,mBAAOt0B,OAAOs0B,KADhB;AAEE0iB;AAFF,WADF,EAKE,YAAM;AACJ,gBAAM1iB,QAAQ,OAAKwkB,SAAL,CAAe,OAAK5gD,KAAL,CAAW++C,OAA1B,EAAmCj3C,OAAOs0B,KAA1C,CAAd;AACA,mBAAK6iB,qBAAL,CAA2B7iB,KAA3B,EAAkC0iB,aAAlC;AACD,WARH;AAUD,SAZD,MAYO;AACL,eAAK1+C,QAAL,CACE;AACEg8B,mBAAO0iB,aADT;AAEEA;AAFF,WADF,EAKE,YAAM;AACJ,gBAAM1iB,QAAQ,OAAKwkB,SAAL,CAAe,OAAK5gD,KAAL,CAAW++C,OAA1B,EAAmCD,aAAnC,CAAd;AACA,mBAAKG,qBAAL,CAA2B7iB,KAA3B,EAAkC0iB,aAAlC;AACD,WARH;AAUD;AACF;AACF;;AAED;;;;sCACkB;AAAA;;AAChB;AACA,UAAIxE,cAAc,KAAlB;AACA93C,YAAM0G,OAAN,CAAc,qBAAd,EAAqCJ,IAArC,CAA0C,gBAAQ;AAChD;AACAwxC,sBACEj6C,KAAK8iC,mBAAL,IACA9iC,KAAK+iC,YADL,IAEA/iC,KAAKgjC,qBAFL,IAGAhjC,KAAKijC,sBAJP,CAFgD,CAMjB;AAC/B,eAAKljC,QAAL,CAAc,EAAEk6C,wBAAF,EAAd;AACD,OARD;AASD;;AAED;;;;qCACiBj6C,I,EAAM;AACrB,WAAKD,QAAL,CAAc;AACZy5B,kBAAUx5B,KAAKw5B,QADH;AAEZglB,2BAAmBx+C,KAAK64B;AAFZ,OAAd;AAID;;AAED;AACA;AACA;;;;;6BAESkD,K,EAAO;AAAA;;AACd,UAAIA,KAAJ,EAAW;AACT,eAAOA,MAAM0kB,IAAN,CAAW,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC1B,cAAI+8C,OAAOh9C,EAAEtC,EAAb;AAAA,cACEu/C,OAAOh9C,EAAEvC,EADX;AAEA,cAAIs/C,OAAOC,IAAX,EAAiB,OAAO,CAAC,CAAD,GAAKvxB,OAAO,OAAKqwB,aAAZ,CAAZ;AACjB,cAAIiB,OAAOC,IAAX,EAAiB,OAAO,IAAIvxB,OAAO,OAAKqwB,aAAZ,CAAX;AACjB,iBAAO,CAAP;AACD,SANM,CAAP;AAOD;AACD,aAAO77C,SAAP;AACD;AACD;AACA;;;;;sCAEkBm4B,K,EAAO;AAAA;;AACvB,UAAIA,KAAJ,EAAW;AACT,eAAOA,MAAM0kB,IAAN,CAAW,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC1B,cAAI+8C,OAAOh9C,EAAEiuC,WAAb;AAAA,cACEgP,OAAOh9C,EAAEguC,WADX;AAEA,iBAAO+O,KAAKE,aAAL,CAAmBD,IAAnB,IAA2B,OAAKlB,aAAvC;AACD,SAJM,CAAP;AAKD;AACD,aAAO77C,SAAP;AACD;AACD;AACA;;;;;sCAEkBm4B,K,EAAO;AAAA;;AACvB,UAAIA,KAAJ,EAAW;AACT,eAAOA,MAAM0kB,IAAN,CAAW,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC1B,cAAI+8C,OAAOh9C,EAAE48C,WAAb;AAAA,cACEK,OAAOh9C,EAAE28C,WADX;;AAGA,iBAAOI,KAAKE,aAAL,CAAmBD,IAAnB,IAA2B,OAAKlB,aAAvC;AACD,SALM,CAAP;AAMD;AACD,aAAO77C,SAAP;AACD;AACD;AACA;;;;;oCAEgBm4B,K,EAAOr3B,G,EAAK;AAAA;;AAC1B,UAAIq3B,KAAJ,EAAW;AACT,eAAOA,MAAM0kB,IAAN,CAAW,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC1B,cAAI+8C,OAAOh9C,EAAEm9C,UAAF,CAAan8C,GAAb,CAAX;AAAA,cACEi8C,OAAOh9C,EAAEk9C,UAAF,CAAan8C,GAAb,CADT;AAEA,cAAIg8C,OAAOC,IAAX,EAAiB,OAAO,CAAC,CAAD,GAAKvxB,OAAO,OAAKqwB,aAAZ,CAAZ;AACjB,cAAIiB,OAAOC,IAAX,EAAiB,OAAO,IAAIvxB,OAAO,OAAKqwB,aAAZ,CAAX;AACjB,cAAIiB,SAASC,IAAb,EAAmB;AACjB;AACA,gBAAIG,WAAWp9C,EAAEiuC,WAAjB;AACA,gBAAIoP,WAAWp9C,EAAEguC,WAAjB;AACA,gBAAImP,WAAWC,QAAf,EAAyB,OAAO,CAAC,CAAD,GAAK3xB,OAAO,OAAKqwB,aAAZ,CAAZ;AACzB,gBAAIqB,WAAWC,QAAf,EAAyB,OAAO,IAAI3xB,OAAO,OAAKqwB,aAAZ,CAAX;AAC1B;AACD,iBAAO,CAAP;AACD,SAbM,CAAP;AAcD;AACD,aAAO77C,SAAP;AACD;AACD;AACA;;;;;8BAEUm4B,K,EAAOr3B,G,EAAKiO,I,EAAM;AAAA;;AAC1B,UAAIopB,KAAJ,EAAW;AACT,eAAOA,MAAM0kB,IAAN,CAAW,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC1B,cAAI+8C,aAAJ;AAAA,cAAUC,aAAV;AACA,cAAIhuC,SAASuhB,OAAO8sB,KAAP,CAAaC,MAA1B,EAAkC;AAChCP,mBAAOh9C,EAAEgB,GAAF,KAAU,EAAjB,CADgC,CACX;AACrB;AACA;AACAi8C,mBAAOh9C,EAAEe,GAAF,KAAU,EAAjB;AACD,WALD,MAKO,IAAIiO,SAASuhB,OAAO8sB,KAAP,CAAaE,MAA1B,EAAkC;AACvCR,mBAAOtxB,OAAO1rB,EAAEgB,GAAF,KAAU,EAAjB,CAAP,CADuC,CACV;AAC7Bi8C,mBAAOvxB,OAAOzrB,EAAEe,GAAF,KAAU,EAAjB,CAAP;AACD,WAHM,MAGA,IAAIiO,SAASuhB,OAAO8sB,KAAP,CAAa10C,KAA1B,EAAiC;AACtC,gBAAI,CAAC5I,EAAEgB,GAAF,CAAD,IAAW,CAACf,EAAEe,GAAF,CAAhB,EAAwB,OAAO,CAAP;AACxBg8C,mBAAOp0C,gBAAMgF,KAAN,CAAY5N,EAAEgB,GAAF,EAAOM,KAAnB,CAAP,CAFsC,CAEJ;AAClC27C,mBAAOr0C,gBAAMgF,KAAN,CAAY3N,EAAEe,GAAF,EAAOM,KAAnB,CAAP;AACA,gBAAI07C,KAAKv8C,MAAL,GAAc,CAAd,IAAmBw8C,KAAKx8C,MAAL,GAAc,CAArC,EAAwC,OAAO,EAAP;AACxC,gBAAMg9C,KAAKT,KAAK,CAAL,EAAQ/uC,KAAR,CAAcD,WAAzB;AACA,gBAAMuwB,KAAK0e,KAAK,CAAL,EAAQhvC,KAAR,CAAcD,WAAzB;AACA,gBAAI0vC,cAAJ;AACA,gBAAID,GAAGp0C,IAAH,KAAYk1B,GAAGl1B,IAAnB,EAAyB;AACvBq0C,sBAAQD,GAAGp0C,IAAH,GAAUk1B,GAAGl1B,IAArB;AACD,aAFD,MAEO,IAAIo0C,GAAG/vC,KAAH,KAAa6wB,GAAG7wB,KAApB,EAA2B;AAChCgwC,sBAAQD,GAAG/vC,KAAH,GAAW6wB,GAAG7wB,KAAtB;AACD,aAFM,MAEA,IAAI+vC,GAAGtuC,GAAH,KAAWovB,GAAGpvB,GAAlB,EAAuB;AAC5BuuC,sBAAQD,GAAGtuC,GAAH,GAASovB,GAAGpvB,GAApB;AACD,aAFM,MAEA,IAAIsuC,GAAGE,IAAH,KAAYpf,GAAGof,IAAnB,EAAyB;AAC9BD,sBAAQD,GAAGE,IAAH,GAAUpf,GAAGof,IAArB;AACD,aAFM,MAEA,IAAIF,GAAGG,MAAH,KAAcrf,GAAGqf,MAArB,EAA6B;AAClCF,sBAAQD,GAAGG,MAAH,GAAYrf,GAAGqf,MAAvB;AACD,aAFM,MAEA,IAAIH,GAAGI,MAAH,KAActf,GAAGsf,MAArB,EAA6B;AAClCH,sBAAQD,GAAGI,MAAH,GAAYtf,GAAGsf,MAAvB;AACD;AACD,mBAAOH,QAAQhyB,OAAO,QAAKqwB,aAAZ,CAAf;AACD,WAtBM,MAsBA;AACL;AACAiB,mBAAOh9C,EAAEgB,GAAF,CAAP;AACAi8C,mBAAOh9C,EAAEe,GAAF,CAAP;AACD;AACD,cAAIg8C,OAAOC,IAAX,EAAiB,OAAO,CAAC,CAAD,GAAKvxB,OAAO,QAAKqwB,aAAZ,CAAZ;AACjB,cAAIiB,OAAOC,IAAX,EAAiB,OAAO,IAAIvxB,OAAO,QAAKqwB,aAAZ,CAAX;AACjB,cAAIiB,SAASC,IAAb,EAAmB;AACjB;AACA,gBAAIG,WAAWp9C,EAAEiuC,WAAjB;AACA,gBAAIoP,WAAWp9C,EAAEguC,WAAjB;AACA,gBAAImP,WAAWC,QAAf,EAAyB,OAAO,CAAC,CAAD,GAAK3xB,OAAO,QAAKqwB,aAAZ,CAAZ;AACzB,gBAAIqB,WAAWC,QAAf,EAAyB,OAAO,IAAI3xB,OAAO,QAAKqwB,aAAZ,CAAX;AAC1B;AACD,iBAAO,CAAP;AACD,SA/CM,CAAP;AAgDD;AACD,aAAO77C,SAAP;AACD;AACD;AACA;;;;;kCAEcm4B,K,EAAO;AAAA;;AACnB,UAAIA,KAAJ,EAAW;AACT,eAAOA,MAAM0kB,IAAN,CAAW,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC1B,cAAI+8C,OAAOh9C,EAAE8U,IAAF,CAAOonC,QAAP,GAAkB,CAAlB,GAAsBl8C,EAAE8U,IAAF,CAAO8gB,OAA7B,GAAuC51B,EAAE8U,IAAF,CAAO+gB,OAAzD;AAAA,cACEonB,OAAOh9C,EAAE6U,IAAF,CAAOonC,QAAP,GAAkB,CAAlB,GAAsBj8C,EAAE6U,IAAF,CAAO8gB,OAA7B,GAAuC31B,EAAE6U,IAAF,CAAO+gB,OADvD;AAEA,cAAImnB,OAAOC,IAAX,EAAiB,OAAO,CAAC,CAAD,GAAKvxB,OAAO,QAAKqwB,aAAZ,CAAZ;AACjB,cAAIiB,OAAOC,IAAX,EAAiB,OAAO,IAAIvxB,OAAO,QAAKqwB,aAAZ,CAAX;AACjB,iBAAO,CAAP;AACD,SANM,CAAP;AAOD;AACD,aAAO77C,SAAP;AACD;AACD;AACA;;;;;kCAEcm4B,K,EAAO;AAAA;;AACnB;AACA,UAAMte,MAAMsuB,OAAO6E,gBAAP,EAAZ;AACA,UAAM4Q,eAAezlB,MAAMjqB,GAAN,CAAU,aAAK;AAClC,YAAMw/B,OAAOvF,OAAOkF,WAAP,CAAmBjuC,EAAE5B,EAArB,CAAb;AACA4B,UAAEy+C,YAAF,GAAiB1V,OAAO6I,2BAAP,CAAmCtD,IAAnC,EAAyC7zB,GAAzC,CAAjB;AACA,eAAOza,CAAP;AACD,OAJoB,CAArB;AAKA,UAAIw+C,YAAJ,EAAkB;AAChB,eAAOA,aAAaf,IAAb,CAAkB,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AACjC,cAAI+8C,OAAOh9C,EAAE+9C,YAAF,IAAkB,CAA7B;AAAA,cACEd,OAAOh9C,EAAE89C,YAAF,IAAkB,CAD3B;AAEA;AACA,cAAIf,OAAOC,IAAX,EAAiB,OAAO,IAAIvxB,OAAO,QAAKqwB,aAAZ,CAAX;AACjB,cAAIiB,OAAOC,IAAX,EAAiB,OAAO,CAAC,CAAD,GAAKvxB,OAAO,QAAKqwB,aAAZ,CAAZ;AACjB,iBAAO,CAAP;AACD,SAPM,CAAP;AAQD;AACD,aAAO,CAAP;AACD;;AAED;AACA;;;;;gCAEqD;AAAA,UAA3Cf,OAA2C,uEAAjC,KAAK/+C,KAAL,CAAW++C,OAAsB;AAAA,UAAb3iB,KAAa;AAAA,UAANppB,IAAM;;AACnD,cAAQ+rC,OAAR;AACE,aAAK,IAAL;AACE,iBAAO,KAAKgD,QAAL,CAAc3lB,KAAd,CAAP;AACF,aAAK,QAAL;AACE,iBAAO,KAAK4lB,iBAAL,CAAuB5lB,KAAvB,CAAP;AACF,aAAK,QAAL;AACE,iBAAO,KAAK6lB,iBAAL,CAAuB7lB,KAAvB,CAAP;AACF,aAAK,YAAL;AACE,iBAAO,KAAK8lB,aAAL,CAAmB9lB,KAAnB,CAAP;AACF;AACA;AACA;AACE,iBAAO,KAAK+lB,SAAL,CAAe/lB,KAAf,EAAsB2iB,OAAtB,EAA+B/rC,IAA/B,CAAP;AAZJ;AAcD;AACD;AACA;;;;;+BAEWjO,G,EAAK;AACd,UAAIA,QAAQ,KAAK/E,KAAL,CAAW++C,OAAvB,EAAgC,OAAO,EAAP;AAChC;AADA,WAEK,OAAO,KAAKe,aAAL,KAAuB,CAAvB,GAA2B,GAA3B,GAAiC,GAAxC,CAHS,CAGoC;AACnD;AACD;AACA;;;;;oCAEgBzO,M,EAAQ;AACtB,UAAMvU,OAAO,KAAK98B,KAAL,CAAWi8B,KAAX,CAAiB+C,IAAjB,CAAsB;AAAA,eAAKjC,EAAEt7B,EAAF,KAAS4vC,MAAd;AAAA,OAAtB,CAAb;AACA,UAAIvU,SAAS74B,SAAb,EAAwB,OAAO,KAAP;AACxB;AACA,aAAO64B,KAAKnmB,KAAZ;AACD;;AAED;AACA;AACA;;;;;sCAEkBpU,K,EAAOgvC,M,EAAQ;AAC/BhvC,YAAM4wB,cAAN;AACA5wB,YAAM6/C,eAAN;AACA,UAAIt4C,SAASuD,SAASkkC,MAAT,CAAb;AACA,UAAItU,OAAO,KAAKyiB,cAAL,CAAoB51C,MAApB,CAAX;AACA,UAAIpI,GAAJ,EAASH,QAAQC,GAAR,CAAY,oBAAZ,EAAkCy7B,KAAKx7B,EAAvC,EAA2C,sBAA3C;AACT;AACAe,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAACuzB,KAAKvB,MAAN,CAAX,EAAjC,EAA6D5yB,IAA7D,CAAkE,YAAM;AACtEtG,cAAME,SAAN,CAAgB,aAAhB,EAA+B,EAAE6uC,QAAQtU,KAAKx7B,EAAf,EAA/B;AACD,OAFD;AAGD;;;sCACiBc,K,EAAOgvC,M,EAAQ;AAC/BhvC,YAAM4wB,cAAN;AACA5wB,YAAM6/C,eAAN;AACA,UAAIt4C,SAASuD,SAASkkC,MAAT,CAAb;AACA,UAAItU,OAAO,KAAKyiB,cAAL,CAAoB51C,MAApB,CAAX;AACA,UAAIpI,GAAJ,EAASH,QAAQC,GAAR,CAAY,oBAAZ,EAAkCy7B,KAAKx7B,EAAvC,EAA2C,sBAA3C;AACT;AACAe,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAACuzB,KAAKvB,MAAN,CAAX,EAAjC,EAA6D5yB,IAA7D,CAAkE,YAAM;AACtEtG,cAAME,SAAN,CAAgB,sBAAhB,EAAwC,EAAE6uC,QAAQtU,KAAKx7B,EAAf,EAAxC;AACD,OAFD;AAGD;AACD;AACA;;;;;qCAEiBc,K,EAAO;AACtB,WAAKnC,QAAL,CAAc;AACZm6C,oBAAY,CAAC,KAAKv6C,KAAL,CAAWu6C;AADZ,OAAd;AAGD;AACD;AACA;;;;;oCAEgBlJ,M,EAAQ;AACtB7uC,YAAME,SAAN,CAAgB,mBAAhB,EAAqC,EAAE2uC,cAAF,EAArC;AACD;AACD;AACA;;;;;+BAEWtsC,G,EAAKiO,I,EAAM;AACpB,UAAIjO,QAAQ,KAAK/E,KAAL,CAAW++C,OAAvB,EAAgC,KAAKe,aAAL,GAAqB,CAAC,CAAD,GAAK,KAAKA,aAA/B;AAChC;AADA,WAEK,KAAKA,aAAL,GAAqB,CAArB;;AAEL,UAAM1jB,QAAQ,KAAKwkB,SAAL,CAAe77C,GAAf,EAAoB,KAAK/E,KAAL,CAAWo8B,KAA/B,EAAsCppB,IAAtC,CAAd;AACA,WAAK5S,QAAL,CAAc;AACZg8B,oBADY;AAEZ2iB,iBAASh6C;AAFG,OAAd;AAIAtF,aAAO6C,GAAP,CAAW,iBAAX,EAA8ByC,GAA9B,EAAmC,KAAK+6C,aAAxC;AACD;AACD;AACA;;;;;+BAEWr+C,E,EAAIc,K,EAAO;AACpBA,YAAM4wB,cAAN;;AAEA;AACA,UAAIzxB,GAAJ,EAASH,QAAQC,GAAR,CAAY,oBAAZ,EAAkCC,EAAlC,EAAsC,sBAAtC;AACTe,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAACjI,EAAD,CAAX,EAAjC;AACD;;AAED;AACA;AACA;AACA;;;;;;6CAGyB4gD,Q,EAAyB;AAAA,UAAfC,QAAe,uEAAJ,EAAI;;AAChD;AACA,UAAI,CAAC3mB,MAAMC,OAAN,CAAcymB,QAAd,CAAL,EACE,MAAMz9C,MAAM,8CAAN,CAAN;AACF,UAAIm6B,UAAUsjB,SAASzhC,MAAT,CAAgB,eAAO;AACnC,YAAIzE,OAAO,IAAX;AACA,aAAK,IAAIpX,GAAT,IAAgBu9C,QAAhB,EAA0B;AACxB,cAAIA,SAASv9C,GAAT,MAAkB8Q,IAAI9Q,GAAJ,CAAtB,EAAgCoX,OAAO,KAAP;AAChC;AACD;AACD,eAAOA,IAAP;AACD,OAPa,CAAd;AAQA;AACA,aAAO4iB,OAAP;AACD;;AAED;AACA;AACA;;;;;;+CAGwC;AAAA,UAAfujB,QAAe,uEAAJ,EAAI;;AACtC,aAAO,KAAK9C,wBAAL,CAA8B,KAAKx/C,KAAL,CAAWo8B,KAAzC,EAAgDkmB,QAAhD,CAAP;AACD;AACD;AACA;;;;;mCAEe7gD,E,EAAI;AACjB,aAAO,KAAKg+C,wBAAL,CAA8B,EAAEh+C,MAAF,EAA9B,EAAsC,CAAtC,CAAP;AACD;;AAED;AACA;AACA;;;;;AAKA;AACA;;;;;6BAES;AAAA;;AAAA,mBAEL,KAAKzB,KAFA;AAAA,UACD65B,QADC,UACDA,QADC;AAAA,UACS+kB,cADT,UACSA,cADT;AAAA,UACyBC,iBADzB,UACyBA,iBADzB;AAAA,UAC4CvE,WAD5C,UAC4CA,WAD5C;AAAA,UACyDzb,QADzD,UACyDA,QADzD;;AAGP,UAAIhF,SAASiC,QAAT,KAAsB73B,SAA1B,EAAqC;AACnC;AACA41B,iBAASiC,QAAT,GAAoB,EAApB;AACAjC,iBAASiC,QAAT,CAAkBnlB,KAAlB,GAA0B,EAA1B;AACAkjB,iBAASiC,QAAT,CAAkBxD,MAAlB,GAA2B,IAA3B;AACD;AARM,UASCiqB,WATD,GASiB,KAAK1iD,KATtB,CASC0iD,WATD;;AAUP,UAAMC,ynBAAN;AAeA,UAAItB,aAAav2C,OAAOuH,IAAP,CAAY2nB,QAAZ,EAAsBjZ,MAAtB,CACf;AAAA,eAAK,CAACnU,oBAAoBsG,QAApB,CAA6BX,CAA7B,CAAN;AAAA,OADe,CAAjB;;AAIA;AACA;AACA,UAAMqwC,eAAe5oB,SAAS,MAAT,CAArB;AACA,UAAI4oB,YAAJ,EAAkBvB,aAAaA,WAAWtgC,MAAX,CAAkB;AAAA,eAAK7c,MAAM,MAAX;AAAA,OAAlB,CAAb;;AAElB,aACE;AAAA;AAAA;AACE,wBAAc;AAAA,mBAAM,QAAKw7C,eAAL,CAAqBt7C,SAArB,CAAN;AAAA,WADhB;AAEE,iBAAO;AACLkqC,sBAAU,MADL;AAELhc,sBAAU,UAFL;AAGLpxB,qBAAS,OAHJ;AAIL+tC,kBAAM,KAJD;AAKL1c,mBAAO,MALF;AAMLlxB,oBAAQqhD,WANH;AAOLphD,6BAAiB;AAPZ;AAFT;AAYE;AAAA;AAAA;AAAQqhD;AAAR,SAZF;AAaE;AAAC,gBAAD;AAAA,YAAQ,MAAK,IAAb,EAAkB,aAAlB,EAA0B,YAA1B,EAAiC,SAAS,KAAKlD,gBAA/C;AACG,eAAKt/C,KAAL,CAAWu6C,UAAX,GAAwB,iBAAxB,GAA4C;AAD/C,SAbF;AAgBE;AAAA;AAAA;AACE,oBAAQ,CAAC,KAAKv6C,KAAL,CAAWu6C;AACpB;AACA;AACA;AAJF,cAKE,WAAU;AALZ;AAOE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA,kBAAI,OAAM,IAAV,EAAe,QAAQ,CAAC74C,GAAxB;AACE;AAAC,wBAAD;AAAA;AACE,0BAAK,IADP;AAEE,6BAAS;AAAA,6BAAM,QAAKi+C,UAAL,CAAgB,IAAhB,EAAsB9lB,SAASp4B,EAAT,CAAYuR,IAAlC,CAAN;AAAA;AAFX;AAAA;AAIM,uBAAK4sC,UAAL,CAAgB,IAAhB;AAJN;AADF,eADF;AASE;AAAA;AAAA,kBAAI,QAAQ,CAACl+C,GAAb;AAAA;AAAA,eATF;AAUE;AAAA;AAAA,kBAAI,OAAM,IAAV;AACE;AAAA;AAAA,oBAAK,OAAO,EAAEgwB,OAAO,SAAT,EAAZ;AAAA;AAAA;AADF,eAVF;AAaE;AAAA;AAAA,kBAAI,QAAQ,CAAChwB,GAAb;AAAA;AAAA,eAbF;AAcE;AAAA;AAAA,kBAAI,OAAM,KAAV;AACE;AAAC,wBAAD;AAAA;AACE,0BAAK,IADP;AAEE,6BAAS;AAAA,6BAAM,QAAKi+C,UAAL,CAAgB,QAAhB,EAA0B9lB,SAAS6B,MAAT,CAAgB1oB,IAA1C,CAAN;AAAA;AAFX;AAIG6mB,2BAAS6B,MAAT,CAAgBnC,YAJnB;AAAA;AAIkC,uBAAKqmB,UAAL,CAAgB,QAAhB;AAJlC;AADF,eAdF;AAsBG6C,8BACC;AAAA;AAAA,kBAAI,QAAQ5oB,SAAS7mB,IAAT,CAAcslB,MAA1B,EAAkC,OAAM,KAAxC;AACE;AAAC,wBAAD;AAAA;AACE,0BAAK,IADP;AAEE,6BAAS;AAAA,6BACP,QAAKqnB,UAAL,CAAgB,cAAhB,EAAgC9lB,SAAS7mB,IAAT,CAAcA,IAA9C,CADO;AAAA;AAFX;AAMG6mB,2BAAS7mB,IAAT,CAAcumB,YANjB;AAAA;AAMgC,uBAAKqmB,UAAL,CAAgB,cAAhB;AANhC;AADF,eAvBJ;AAkCE;AAAA;AAAA,kBAAI,QAAQ,CAACl+C,GAAb;AAAA;AAAA,eAlCF;AAmCE;AAAA;AAAA,kBAAI,OAAM,KAAV;AACE;AAAC,wBAAD;AAAA;AACE,0BAAK,IADP;AAEE,6BAAS;AAAA,6BAAM,QAAKi+C,UAAL,CAAgB,QAAhB,EAA0B9lB,SAASrvB,MAAT,CAAgBwI,IAA1C,CAAN;AAAA;AAFX;AAIG6mB,2BAASrvB,MAAT,CAAgB+uB,YAJnB;AAAA;AAIkC,uBAAKqmB,UAAL,CAAgB,QAAhB;AAJlC;AADF,eAnCF;AA2CGsB,yBAAW/uC,GAAX,CAAe;AAAA,uBACd;AAAA;AAAA,oBAAI,QAAQ0nB,SAAS91B,CAAT,EAAYu0B,MAAxB,EAAgC,KAAKv0B,CAArC;AACE;AAAC,0BAAD;AAAA;AACE,4BAAK,IADP;AAEE,+BAAS;AAAA,+BAAM,QAAK47C,UAAL,CAAgB57C,CAAhB,EAAmB81B,SAAS91B,CAAT,EAAYiP,IAA/B,CAAN;AAAA;AAFX;AAIG6mB,6BAAS91B,CAAT,EAAYw1B,YAJf;AAAA;AAI8B,4BAAKqmB,UAAL,CAAgB77C,CAAhB;AAJ9B;AADF,iBADc;AAAA,eAAf,CA3CH;AAqDE;AAAA;AAAA,kBAAI,OAAO,EAAEkuB,QAAQ,CAAV,EAAX;AACE;AAAA;AAAA;AACE,+BAAU,qCADZ;AAEE,6BAAS;AAAA,6BAAM,QAAK0tB,UAAL,CAAgB,YAAhB,CAAN;AAAA;AAFX;AAIGvT,yBAAOwD,WAJV;AAKG,uBAAKgQ,UAAL,CAAgB,YAAhB;AALH;AADF;AArDF;AADF,WAPF;AA0FE;AAAA;AAAA,cAAO,OAAO,EAAE8C,WAAWH,WAAb,EAA0BjxB,UAAU,MAApC,EAAd;AACG,iBAAKtxB,KAAL,CAAWo8B,KAAX,CAAiBjqB,GAAjB,CAAqB,UAAC8qB,IAAD,EAAO93B,CAAP;AAAA,qBACpB;AAAA;AAAA;AACE,uBAAKA,CADP;AAEE,yBAAO;AACLusB,2BAAOuL,KAAKyjB,UAAL,GAAkB,KAAlB,GAA0B,OAD5B;AAEL;AACA;AACAiC,6BACE1lB,KAAK2lB,oBAAL,GAA4B,GAA5B,GAAkC,CAAlC,GAAsC3lB,KAAK2lB,oBALxC;AAMLzxB,4BACEytB,mBAAmB3hB,KAAKx7B,EAAxB,kBACiBo9C,iBADjB,GAEI;AATD;AAFT;AAcE;AAAA;AAAA,oBAAI,QAAQ,CAACn9C,GAAb;AAAmBu7B,uBAAKx7B;AAAxB,iBAdF;AAeE;AAAA;AAAA,oBAAI,QAAQ,CAACC,GAAb;AAAmBu7B,uBAAK4lB;AAAxB,iBAfF;AAgBE;AAAA;AAAA;AACG,mBAACvI,WAAD,IACC;AAAA;AAAA;AACE,iCAAU,eADZ;AAEE,+BAAS;AAAA,+BAAS,QAAK+E,iBAAL,CAAuB98C,KAAvB,EAA8B06B,KAAKx7B,EAAnC,CAAT;AAAA;AAFX;AAIGuK;AAJH,mBAFJ;AASG,mBAACsuC,WAAD,IAAgB,CAACzb,QAAjB,IACC;AAAA;AAAA;AACE,iCAAU,eADZ;AAEE,+BAAS;AAAA,+BAAS,QAAKyc,iBAAL,CAAuB/4C,KAAvB,EAA8B06B,KAAKx7B,EAAnC,CAAT;AAAA;AAFX;AAIGsK;AAJH;AAVJ,iBAhBF;AAmCE;AAAA;AAAA,oBAAI,QAAQ,CAACrK,GAAb;AAAmBw7C,yBAAOjgB,KAAKvB,MAAZ;AAAnB,iBAnCF;AAoCE;AAAA;AAAA;AACG,mBAAC4e,WAAD,GACC;AAAA;AAAA;AACE,4BAAK,GADP;AAEE,+BAAS;AAAA,+BAAK,QAAKd,UAAL,CAAgBvc,KAAKvB,MAArB,EAA6Br4B,CAA7B,CAAL;AAAA,uBAFX;AAGE,mCAAa;AAAA,+BAAM,QAAKk8C,eAAL,CAAqBtiB,KAAKvB,MAA1B,CAAN;AAAA;AAHf;AAKGuB,yBAAK+U;AALR,mBADD,GASC/U,KAAK+U;AAVT,iBApCF;AAiDGyQ,gCAAgB;AAAA;AAAA,oBAAI,QAAQ5oB,SAAS7mB,IAAT,CAAcslB,MAA1B;AAAmC2E,uBAAKjqB;AAAxC,iBAjDnB;AAmDE;AAAA;AAAA,oBAAI,QAAQ,CAACtR,GAAb;AAAmBw7C,yBAAOjgB,KAAKzyB,MAAZ;AAAnB,iBAnDF;AAoDE;AAAA;AAAA;AACG,mBAAC8vC,WAAD,GACC;AAAA;AAAA;AACE,4BAAK,GADP;AAEE,+BAAS;AAAA,+BAAK,QAAKd,UAAL,CAAgBvc,KAAKzyB,MAArB,EAA6BnH,CAA7B,CAAL;AAAA,uBAFX;AAGE,mCAAa;AAAA,+BAAM,QAAKk8C,eAAL,CAAqBtiB,KAAKzyB,MAA1B,CAAN;AAAA;AAHf;AAKGyyB,yBAAK0jB;AALR,mBADD,GASC1jB,KAAK0jB;AAVT,iBApDF;AAiEGO,2BAAW/uC,GAAX,CAAe;AAAA,yBACd;AAAA;AAAA,sBAAI,QAAQ0nB,SAAS91B,CAAT,EAAYu0B,MAAxB,EAAgC,UAAQ2E,KAAKx7B,EAAb,GAAkBsC,CAAlD;AACG81B,6BAAS91B,CAAT,EAAYiP,IAAZ,KAAqB,UAArB,GACGk8B,KAAK4T,WAAL,CAAiB7lB,KAAKl5B,CAAL,CAAjB,CADH,GAEG81B,SAAS91B,CAAT,EAAYiP,IAAZ,KAAqB,OAArB,GACCiqB,KAAKl5B,CAAL,KAAWk5B,KAAKl5B,CAAL,EAAQg/C,mBAApB,IAA4C,EAD5C,GAEA9lB,KAAKl5B,CAAL;AALN,mBADc;AAAA,iBAAf,CAjEH;AA0EE;AAAA;AAAA;AACE,sCAAC,sBAAD;AACE,0BAAMqoC,OAAOkF,WAAP,CAAmBrU,KAAKx7B,EAAxB,CADR;AAEE,2BAAO;AAFT;AADF;AA1EF,eADoB;AAAA,aAArB;AADH;AA1FF;AAhBF,OADF;AA8MD;;;;EA9xBqBhC,OAAO4B,S,GA+xB7B;;AAEF;AACA;;;AACA5C,OAAOC,OAAP,GAAiBigD,SAAjB;;;;;;;;;;;;;;ACv1BA;AACA;;;;;;;;AAQA,IAAM//C,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQ6xB,M,GAAkBH,U,CAAlBG,M;IAAQsyB,K,GAAUzyB,U,CAAVyyB,K;;AAChB,IAAMvjD,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAI6C,MAAM,KAAV;AACA;AACA,IAAIc,QAAQ,IAAZ;;AAEA;AACA;AACA;;IACMygD,I;;;;;;;;;;;6BACK;AACP,aACE;AAAA;AAAA;AACE,iBAAO,EAAE9hD,iBAAiB,wBAAnB,EAA6CC,SAAS,WAAtD;AADT;AAGE;AAAA;AAAA;AAAA;AAAA,SAHF;AAIE;AAAA;AAAA;AAAA;AAAA,SAJF;AAQE;AAAA;AAAA;AAAA;AAAA,SARF;AASE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEE;AAAA;AAAA;AAAA;AAEE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,eADF;AAEE;AAAA;AAAA;AAAA;AAAA,eAFF;AAGE;AAAA;AAAA;AAAA;AAAA,eAHF;AAIE;AAAA;AAAA;AAAA;AAAA;AAJF;AAFF,WAFF;AAWE;AAAA;AAAA;AAAA;AAAA;AAXF,SATF;AAsBE;AAAA;AAAA;AAAA;AAAA,SAtBF;AAuBE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AADF,SAvBF;AA6BE;AAAA;AAAA;AAAA;AAAA,SA7BF;AA8BE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAKE;AAAA;AAAA;AAAA;AAAA,WALF;AAQE;AAAA;AAAA;AAAA;AAAA,WARF;AAYE;AAAA;AAAA;AAAA;AAAA;AAZF,SA9BF;AA+CE;AAAA;AAAA;AAAA;AAAA,SA/CF;AAgDE;AAAA;AAAA;AAAA;AACmC,aADnC;AAEE;AAAA;AAAA;AACE,oBAAK,sEADP;AAEE,sBAAO;AAFT;AAAA;AAAA,WAFF;AAOO,aAPP;AAAA;AAQK,aARL;AASE;AAAA;AAAA,cAAG,MAAK,sBAAR,EAA+B,QAAO,KAAtC;AAAA;AAAA,WATF;AAWO,aAXP;AAAA;AAaE;AAAA;AAAA;AACE,oBAAK,0DADP;AAEE,sBAAO;AAFT;AAAA;AAAA,WAbF;AAAA;AAmBI,aAnBJ;AAoBE;AAAA;AAAA,cAAG,MAAK,4BAAR,EAAqC,QAAO,OAA5C;AAAA;AAAA,WApBF;AAsBO,aAtBP;AAAA;AAuByB,aAvBzB;AAwBE;AAAA;AAAA,cAAG,MAAK,6BAAR,EAAsC,QAAO,QAA7C;AAAA;AAAA,WAxBF;AA0BO,aA1BP;AAAA;AA2BM,aA3BN;AA4BE;AAAA;AAAA;AACE,oBAAK,gFADP;AAEE,sBAAO;AAFT;AAAA;AAAA,WA5BF;AAAA;AAkCqC,aAlCrC;AAmCE;AAAA;AAAA,cAAG,MAAK,sBAAR,EAA+B,QAAO,WAAtC;AAAA;AAAA,WAnCF;AAAA;AAsC8B,aAtC9B;AAuCE;AAAA;AAAA,cAAG,MAAK,sBAAR,EAA+B,QAAO,cAAtC;AAAA;AAAA;AAvCF;AAhDF,OADF;AA8FD;;;;EAhGgB3B,OAAO4B,S,GAiGxB;;AAEF;AACA;;;AACA5C,OAAOC,OAAP,GAAiBukD,IAAjB;;;;;;;;;;;;;;AC5HA;;;;;;;;;;;;;;;;;AAiBA,IAAMrkD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQ6xB,M,GAAkBH,U,CAAlBG,M;IAAQsyB,K,GAAUzyB,U,CAAVyyB,K;;AAChB,IAAMtjD,WAAWb,QAAQ,UAAR,CAAjB;AACA,IAAM6I,aAAa7I,QAAQ,gCAAR,CAAnB;;AAEA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;AACA,IAAMowC,YAAYpwC,QAAQ,kBAAR,CAAlB;;eACuBA,QAAQ,kBAAR,C;IAAfqN,U,YAAAA,U;;AAER,IAAMg3C,eAAerkD,QAAQ,qBAAR,CAArB;;AAEA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA,IAAM8F,KAAK,cAAX;AACA;AACA,IAAM27C,yBAAyB,mCAA/B;AACA,IAAMC,yBAAyB,oCAA/B;AACA;AACA,IAAI5gD,QAAQ,IAAZ;;AAEA;AACA;AACA;;IACM6gD,Y;;;AACJ,wBAAYxjD,KAAZ,EAAmB;AAAA;;AAAA,4HACXA,KADW;;AAEjB,QAAMsM,WAAW,MAAKoc,QAAL,CAAc,UAAd,CAAjB;AACA,UAAKvoB,KAAL,GAAa;AACXu6C,kBAAY,IADD;AAEX+I,qBAAe,KAFJ,EAEW;AACtBC,sBAAgB,KAHL,EAGY;AACvBC,gBAAUv/C,SAJC;AAKXw/C,sBAAgBN,sBALL;AAMXO,0BAAoBz/C,SANT;AAOX0/C,sBAAgB,KAPL;AAQXC,gBAAU3/C,SARC;AASX4/C,sBAAgBT,sBATL;AAUXU,0BAAoB7/C,SAVT;AAWX8/C,sBAAgB,KAXL;AAYXC,kBAAY,KAZD;AAaXC,kBAAYhgD,SAbD;AAcXs0B,iCAA2BpsB,SAASosB;AAdzB,KAAb;AAgBA,UAAK+jB,WAAL,GAAmB,MAAKA,WAAL,CAAiBv8C,IAAjB,OAAnB;AACA,UAAKw8C,QAAL,GAAgB,MAAKA,QAAL,CAAcx8C,IAAd,OAAhB;AACA,UAAKmkD,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BnkD,IAA3B,OAA7B;AACA,UAAK+6C,eAAL,GAAuB,MAAKA,eAAL,CAAqB/6C,IAArB,OAAvB;AACA,UAAKokD,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBpkD,IAAzB,OAA3B;AACA,UAAKqkD,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBrkD,IAAzB,OAA3B;AACA,UAAKskD,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BtkD,IAA5B,OAA9B;AACA,UAAKukD,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BvkD,IAA5B,OAA9B;AACA,UAAKwkD,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBxkD,IAAzB,OAA3B;AACA,UAAKykD,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBzkD,IAAzB,OAA3B;AACA,UAAK0kD,eAAL,GAAuB,MAAKA,eAAL,CAAqB1kD,IAArB,OAAvB;AACA,UAAK2kD,UAAL,GAAkB,MAAKA,UAAL,CAAgB3kD,IAAhB,OAAlB;AACA,UAAK4kD,SAAL,GAAiB,MAAKA,SAAL,CAAe5kD,IAAf,OAAjB;;AAEAyC,YAAQ/C,OAAOgD,WAAP,OAAR;AACAD,UAAMrC,aAAN,CAAoB,yBAApB,EAA+C,MAAK+jD,qBAApD;AAlCiB;AAmClB,G,CAAC;;;;wCAEkB;AAClB,WAAKpJ,eAAL;AACAn8C,aAAOkD,gBAAP,CAAwB,cAAxB,EAAwC,KAAKy6C,WAA7C;AACA39C,aAAOkD,gBAAP,CAAwB,QAAxB,EAAkC,KAAK06C,QAAvC;AACD;;;2CAEsB;AACrB/5C,YAAM0G,OAAN,CAAc,uBAAd,EAAuC,EAAE06B,QAAQ13B,WAAWE,QAArB,EAAvC;AACA5J,YAAMqc,eAAN,CAAsB,yBAAtB,EAAiD,KAAKqlC,qBAAtD;AACAvlD,aAAO+oB,mBAAP,CAA2B,cAA3B,EAA2C,KAAK40B,WAAhD;AACA39C,aAAO+oB,mBAAP,CAA2B,QAA3B,EAAqC,KAAK60B,QAA1C;AACD;;;gCAEWl5C,C,EAAG;AACbA,QAAE8vB,cAAF;AACA,UAAI,KAAKnzB,KAAL,CAAWujD,cAAf,EAA+B;AAC7B,SAAClgD,KAAK1E,OAAO4D,KAAb,EAAoB07C,WAApB,GAAkC,IAAlC;AACD,OAFD,MAEO;AACLlnC,gBAAQmX,cAAR,CAAuB7qB,CAAvB,EAA0B,aAA1B;AACD;AACD,aAAOA,CAAP;AACD;;;6BAEQA,C,EAAG;AACV,UAAI,KAAKrD,KAAL,CAAWujD,cAAf,EAA+B;AAC7B,aAAKr6C,OAAL,CAAa,uBAAb,EAAsC,EAAE06B,QAAQ13B,WAAWE,QAArB,EAAtC;AACD;AACF;;AAED;AACA;;;;0CACsB/L,I,EAAM;AAAA,UAClBkjD,cADkB,GACC,KAAKvjD,KADN,CAClBujD,cADkB;;AAE1B,UAAI,CAACA,cAAL,EAAqB;AACnB,YAAMD,gBACJjjD,KAAK8iC,mBAAL,IACA9iC,KAAK+iC,YADL,IAEA/iC,KAAKgjC,qBAFL,IAGA5jC,OAAOmJ,gBAAP,EAJF;AAKA,aAAKxI,QAAL,CAAc,EAAEkjD,4BAAF,EAAd;AACD;AACF;;;sCACiB;AAAA;;AAChB;AACA9gD,YAAM0G,OAAN,CAAc,qBAAd,EAAqCJ,IAArC,CAA0C,KAAKo7C,qBAA/C;AACAjV,gBAAUhmC,yBAAV,GAAsCH,IAAtC,CAA2C,gBAAQ;AACjD,eAAK1I,QAAL,CAAc,EAAEwkD,YAAYvkD,OAAO,CAArB,EAAd;AACD,OAFD;AAGA4uC,gBAAUtlC,yBAAV,GAAsCb,IAAtC,CAA2C,gBAAQ;AACjD,eAAK1I,QAAL,CAAc,EAAEykD,YAAYxkD,OAAO,CAArB,EAAd;AACD,OAFD;AAGD;;;0CAEqB;AACpB6iD,mBAAa4B,WAAb;AACD;;;0CACqB;AACpB5B,mBAAa6B,WAAb;AACD;;;2CAEsB1hD,C,EAAG;AAAA;;AACxB,UAAMmgD,WAAWngD,EAAEmH,MAAF,CAASw6C,KAAT,CAAe,CAAf,CAAjB;AACA9B,mBAAa+B,gBAAb,CAA8B,EAAEzB,kBAAF,EAA9B,EAA4C16C,IAA5C,CAAiD,kBAAU;AACzD,YAAMuO,MACJ;AAAA;AAAA;AACE;AAAA;AAAA;AAAM7R,mBAAO0/C;AAAb,WADF;AAEG1/C,iBAAO2/C;AAFV,SADF;AAMA;AACA,YAAMnB,aAAa,OAAKhkD,KAAL,CAAW+jD,cAAX,IAA6Bv+C,OAAO+C,OAAvD;AACA,eAAKnI,QAAL,CAAc;AACZujD,0BAAgBn+C,OAAO+C,OADX;AAEZy7C,gCAFY;AAGZP,0BAAgBj+C,OAAO+C,OAAP,GAAiB,iBAAjB,GAAqC46C,sBAHzC;AAIZO,8BAAoBrsC,GAJR;AAKZ4sC,sBAAYhgD;AALA,SAAd;AAOA;AACA,YAAI,CAACuB,OAAO+C,OAAZ,EAAqB3G,SAASqS,cAAT,CAAwB,eAAxB,EAAyC5O,KAAzC,GAAiD,EAAjD;AACtB,OAlBD;AAmBD;;;2CACsBhC,C,EAAG;AAAA;;AACxB,UAAMugD,WAAWvgD,EAAEmH,MAAF,CAASw6C,KAAT,CAAe,CAAf,CAAjB;AACA9B,mBAAakC,gBAAb,CAA8B,EAAExB,kBAAF,EAA9B,EAA4C96C,IAA5C,CAAiD,kBAAU;AACzD,YAAMuO,MACJ;AAAA;AAAA;AACE;AAAA;AAAA;AAAM7R,mBAAO0/C;AAAb,WADF;AAEG1/C,iBAAO2/C;AAFV,SADF;AAMA;AACA,YAAMnB,aAAa,OAAKhkD,KAAL,CAAW2jD,cAAX,IAA6Bn+C,OAAO+C,OAAvD;AACA,eAAKnI,QAAL,CAAc;AACZ2jD,0BAAgBv+C,OAAO+C,OADX;AAEZy7C,gCAFY;AAGZH,0BAAgBr+C,OAAO+C,OAAP,GAAiB,iBAAjB,GAAqC66C,sBAHzC;AAIZU,8BAAoBzsC,GAJR;AAKZ4sC,sBAAYhgD;AALA,SAAd;AAOA;AACA,YAAI,CAACuB,OAAO+C,OAAZ,EAAqB3G,SAASqS,cAAT,CAAwB,eAAxB,EAAyC5O,KAAzC,GAAiD,EAAjD;AACtB,OAlBD;AAmBD;;;0CAEqB;AACpB;AACA;AACA,UAAMk+C,iBAAiB,KAAKvjD,KAAL,CAAWujD,cAAX,IAA6B,KAApD;AACA,WAAKnjD,QAAL,CAAc;AACZmjD,sCADY;AAEZC,kBAAUv/C,SAFE;AAGZw/C,wBAAgBN,sBAHJ;AAIZO,4BAAoBz/C;AAJR,OAAd;AAMA;AACA,UAAI,CAACs/C,cAAL,EACE/gD,MAAM0G,OAAN,CAAc,uBAAd,EAAuC,EAAE06B,QAAQ13B,WAAWE,QAArB,EAAvC;AACF82C,mBAAamC,mBAAb;AACD;;;0CAEqB;AACpB;AACA;AACA,UAAM9B,iBAAiB,KAAKvjD,KAAL,CAAWujD,cAAX,IAA6B,KAApD;AACA,WAAKnjD,QAAL,CAAc;AACZmjD,sCADY;AAEZK,kBAAU3/C,SAFE;AAGZ4/C,wBAAgBT,sBAHJ;AAIZU,4BAAoB7/C;AAJR,OAAd;AAMA;AACA,UAAI,CAACs/C,cAAL,EACE/gD,MAAM0G,OAAN,CAAc,uBAAd,EAAuC,EAAE06B,QAAQ13B,WAAWE,QAArB,EAAvC;AACF82C,mBAAaoC,mBAAb;AACD;;;sCAEiB;AAChB;AACA9iD,YAAM0G,OAAN,CAAc,uBAAd,EAAuC,EAAE06B,QAAQ13B,WAAWE,QAArB,EAAvC;AACAxK,eAASqS,cAAT,CAAwB,eAAxB,EAAyC5O,KAAzC,GAAiD,EAAjD;AACAzD,eAASqS,cAAT,CAAwB,eAAxB,EAAyC5O,KAAzC,GAAiD,EAAjD;AACA,WAAKk/C,mBAAL;AACA,WAAKC,mBAAL;;AAEAtB,mBAAaqC,eAAb;AACA,WAAKnlD,QAAL,CAAc;AACZsjD,4BAAoBz/C,SADR;AAEZ6/C,4BAAoB7/C,SAFR;AAGZggD,oBAAYhgD;AAHA,OAAd;AAKD;;;iCAEY;AAAA;;AACX,UAAIvC,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,YAAhB;AACT07C,mBAAasC,MAAb,GAAsB18C,IAAtB,CAA2B,kBAAU;AACnC,eAAK1I,QAAL,CAAc;AACZ4jD,sBAAY,KADA,EACO;AACnBL,0BAAgB,KAFJ;AAGZI,0BAAgB,KAHJ;AAIZE,sBAAYz+C,OAAO2/C;AAJP,SAAd;AAMAvjD,iBAASqS,cAAT,CAAwB,eAAxB,EAAyC5O,KAAzC,GAAiD,EAAjD;AACAzD,iBAASqS,cAAT,CAAwB,eAAxB,EAAyC5O,KAAzC,GAAiD,EAAjD;AACD,OATD;AAUD;;;gCAEW;AACV7C,YAAM0G,OAAN,CAAc,iBAAd;AACD;;AAED;AACA;;;;6BAES;AAAA;;AAAA,mBAeH,KAAKlJ,KAfF;AAAA,UAELsjD,aAFK,UAELA,aAFK;AAAA,UAGLC,cAHK,UAGLA,cAHK;AAAA,UAILC,QAJK,UAILA,QAJK;AAAA,UAKLC,cALK,UAKLA,cALK;AAAA,UAMLG,QANK,UAMLA,QANK;AAAA,UAOLC,cAPK,UAOLA,cAPK;AAAA,UAQLI,UARK,UAQLA,UARK;AAAA,UASL1rB,yBATK,UASLA,yBATK;AAAA,UAULqsB,UAVK,UAULA,UAVK;AAAA,UAWLC,UAXK,UAWLA,UAXK;AAAA,UAYLnB,kBAZK,UAYLA,kBAZK;AAAA,UAaLI,kBAbK,UAaLA,kBAbK;AAAA,UAcLE,UAdK,UAcLA,UAdK;;AAiBP;AACA;AACA;;AACA,UAAMyB,UAAU/lD,SAASwH,OAAT,EAAhB;AACA,UAAM2lC,aAAanlC,WAAWimB,aAAX,EAAnB;AACA,UAAM+3B,iBAAiB,EAAED,WAAYltB,6BAA6BsU,UAA3C,CAAvB;;AAEA,UAAM8Y,oBAAoB,CAAC3B,UAA3B;;AAEA,UAAI4B,kBAAJ;AACA,UAAItC,iBAAiB,CAACC,cAAtB,EAAsC;AACpCqC,oBACE;AAAA;AAAA;AACE,mBAAO;AACLzkD,+BAAiB,wBADZ;AAELwwB,yBAAW,MAFN;AAGLvwB,uBAAS;AAHJ;AADT;AAOE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AADF,WAPF;AAaE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AADF;AAbF,SADF;AAmBD,OApBD,MAoBO;AACLwkD,oBACE;AAAA;AAAA;AACE,oBAAQF,cADV;AAEE,mBAAO;AACLvkD,+BAAiB,wBADZ;AAELwwB,yBAAW,MAFN;AAGLvwB,uBAAS;AAHJ;AAFT;AAQE;AAAA;AAAA;AAAA;AAAA,WARF;AASE;AAAA;AAAA,cAAK,WAAU,kBAAf;AACE;AAAA;AAAA;AAAA;AAAA;AADF,WATF;AAYE;AAAA;AAAA,cAAK,WAAU,kBAAf;AAAA;AAEE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAA0BwjD;AAA1B,eADF;AAEE;AAAA;AAAA;AAAA;AAA0BC;AAA1B;AAFF;AAFF,WAZF;AAmBE;AAAA;AAAA,cAAO,WAAU,kBAAjB;AAAA;AAEE;AACE,oBAAK,MADP;AAEE,sBAAO,UAFT;AAGE,kBAAG,eAHL;AAIE,uBAAS,KAAKR,sBAJhB;AAKE,uBAAS,oBAAK;AACZ;AACA;AACA;AACA,uBAAKE,mBAAL;AACD;AAVH,cAFF;AAAA;AAcQ;AAAA;AAAA,gBAAG,WAAU,OAAb;AAAsBd;AAAtB,aAdR;AAeE;AAfF,WAnBF;AAoCE,yCApCF;AAqCE;AAAA;AAAA,cAAO,WAAU,kBAAjB;AAAA;AAEE;AACE,oBAAK,MADP;AAEE,sBAAO,UAFT;AAGE,kBAAG,eAHL;AAIE,uBAAS,KAAKa,sBAJhB;AAKE,uBAAS,oBAAK;AACZ;AACA;AACA;AACA,uBAAKE,mBAAL;AACD;AAVH,cAFF;AAAA;AAcQ;AAAA;AAAA,gBAAG,WAAU,OAAb;AAAsBX;AAAtB,aAdR;AAeE;AAfF,WArCF;AAsDE,yCAtDF;AAuDE;AAAA;AAAA;AACE;AAAC,oBAAD;AAAA;AACE,uBAAO,EAAEvyB,UAAU,OAAZ,EAAqBlwB,SAAS,SAA9B,EADT;AAEE,6BAFF;AAGE,yBAAS,KAAKqjD;AAHhB;AAAA;AAAA;AADF,WAvDF;AAgEE,yCAhEF;AAiEGf,gCAAsB;AAAA;AAAA,cAAK,WAAU,OAAf;AAAwBA;AAAxB,WAjEzB;AAkEGI,gCAAsB;AAAA;AAAA,cAAK,WAAU,OAAf;AAAwBA;AAAxB,WAlEzB;AAmEGG,wBAAc;AAAA;AAAA,cAAK,WAAU,OAAf;AAAwBA;AAAxB,WAnEjB;AAoEE;AAAC,kBAAD;AAAA;AACE,oBAAK,IADP;AAEE,2BAFF;AAGE,qBAAO0B,oBAAoB,OAApB,GAA8B,SAHvC;AAIE,wBAAUA,iBAJZ;AAKE,uBAAS,KAAKjB;AALhB;AAAA;AAAA,WApEF;AAAA;AAAA,SADF;AAiFD;;AAED,UAAImB,qBAAJ;AACA,UAAIJ,OAAJ,EAAa;AACXI,uBACE;AAAA;AAAA;AACE,yCADF;AAEE;AAAA;AAAA;AAAA;AAAA,WAFF;AAGE;AAAC,kBAAD;AAAA,cAAQ,MAAK,IAAb,EAAkB,aAAlB,EAA0B,OAAO,SAAjC,EAA4C,SAAS,KAAKlB,SAA1D;AAAA;AAAA,WAHF;AAME;AAAA;AAAA,cAAO,WAAU,kBAAjB;AAAA;AAEE,2CAFF;AAAA;AAME,2CANF;AAAA;AAWE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,eADF;AAAA;AAEkE,iBAFlE;AAGE;AAAA;AAAA;AAAA;AAAA;AAHF;AAXF;AANF,SADF;AA0BD;;AAED,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE,mBAAO;AACLxjD,+BAAiB,wBADZ;AAELC,uBAAS;AAFJ;AADT;AAME;AAAA;AAAA;AAAA;AAAA,WANF;AAOE;AAAA;AAAA,cAAG,WAAU,kBAAb;AAAA;AAAA,WAPF;AAQE,yCARF;AASE;AAAC,kBAAD;AAAA,cAAQ,MAAK,IAAb,EAAkB,aAAlB,EAA0B,SAAS,KAAK+iD,mBAAxC;AAAA;AAAA,WATF;AAAA;AAaE;AAAC,kBAAD;AAAA,cAAQ,MAAK,IAAb,EAAkB,aAAlB,EAA0B,SAAS,KAAKC,mBAAxC;AAAA;AAAA,WAbF;AAAA;AAAA,SADF;AAoBGwB,iBApBH;AAqBGC;AArBH,OADF;AAyBD;;;;EA9YwBpmD,OAAO4B,S,GA+YhC;;AAEF;AACA;;;AACA5C,OAAOC,OAAP,GAAiB2kD,YAAjB;;;;;;;;;;;;;;AC7bA;;;;;;;;;;;;;;;;AAgBA,IAAM5jD,SAASZ,QAAQ,eAAR,CAAf;AACA,IAAMD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQinD,U,GAAiEv1B,U,CAAjEu1B,U;IAAYC,O,GAAqDx1B,U,CAArDw1B,O;IAAS7mD,G,GAA4CqxB,U,CAA5CrxB,G;IAAKC,O,GAAuCoxB,U,CAAvCpxB,O;IAASC,O,GAA8BmxB,U,CAA9BnxB,O;IAASwxB,G,GAAqBL,U,CAArBK,G;IAAKD,G,GAAgBJ,U,CAAhBI,G;IAAKD,M,GAAWH,U,CAAXG,M;;AAC9D,IAAMs1B,aAAannD,QAAQ,YAAR,CAAnB;AACA,IAAMonD,cAAcpnD,QAAQ,eAAR,CAApB;AACA,IAAMqnD,cAAcrnD,QAAQ,eAAR,CAApB;AACA,IAAMsnD,OAAOtnD,QAAQ,QAAR,CAAb;;AAEA;AACA;AACA,IAAI6C,MAAM,KAAV;AACA;AACA,IAAIc,QAAQ,IAAZ;AACA;AACA,IAAM4jD,OAAO;AACXC,SAAO,OADI;AAEXC,cAAY,aAFD;AAGXC,cAAY,aAHD;AAIXC,QAAM;AAJK,CAAb;AAMA,IAAMC,wBAAwB,EAA9B,C,CAAkC;;AAElC;AACA;AACA;;IACM5a,S;;;AACJ,qBAAYhsC,KAAZ,EAAmB;AAAA;;AAAA,sHACXA,KADW;;AAGjB,UAAKG,KAAL,GAAa;AACX0mD,iBAAWN,KAAKC,KADL;AAEXM,mBAAa,GAFF;AAGXC,2BAAqB,GAHV,EAGe;AAC1B;AACAC,sBAAmBJ,qBAAnB,OALW;AAMXlE,mBAAa,OANF,EAMW;AACtBuE,2BAAqB,OAPV;AAQXC,kBAAY,SARD;AASXC,mBAAa,IATF;AAUXC,sBAAgB;AAVL,KAAb;;AAaA,UAAKnnD,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,OAAd;AACA,UAAKguC,eAAL,GAAuB,MAAKA,eAAL,CAAqBhuC,IAArB,OAAvB;AACA,UAAKmnD,OAAL,GAAe,MAAKA,OAAL,CAAannD,IAAb,OAAf;AACA,UAAKonD,UAAL,GAAkB,MAAKA,UAAL,CAAgBpnD,IAAhB,OAAlB;AACA,UAAKqnD,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBrnD,IAAzB,OAA3B;AACA,UAAKsnD,eAAL,GAAuB,MAAKA,eAAL,CAAqBtnD,IAArB,OAAvB;AACA,UAAKunD,SAAL,GAAiB,MAAKA,SAAL,CAAevnD,IAAf,OAAjB;;AAEAyC,YAAQ/C,OAAOgD,WAAP,OAAR;AACAD,UAAMrC,aAAN,CAAoB,uBAApB,EAA6C,MAAKinD,mBAAlD;AACA5kD,UAAMrC,aAAN,CAAoB,eAApB,EAAqC,MAAKmnD,SAA1C;AA1BiB;AA2BlB,G,CAAC;;AAEF;AACA;AACA;;;;;;;;;2BAKOC,U,EAAY3kD,G,EAAK;AACtB,UAAIjE,OAAO6oD,EAAP,KAAcvjD,SAAlB,EAA6B;AAC7B,UAAItF,OAAOP,SAAP,IAAoBO,OAAOP,SAAP,CAAiBG,OAAzC,EAAkD;AAChD,YAAMA,UAAUI,OAAOP,SAAP,CAAiBG,OAAjC;AACA,YAAIA,WAAW,GAAf,EAAoB;AAClBI,iBAAO6oD,EAAP,CAAU,MAAV,EAAkB;AAChBC,qBAAS,OADO;AAEhBC,2BAAe,KAFC;AAGhBC,yBAAaJ,UAHG;AAIhBK,wBAAY,KAAKhlD;AAJD,WAAlB;AAMD;AACF;AACF;;AAED;AACA;AACA;;;;;2BAEOilD,G,EAAK;AACVlpD,aAAO4D,KAAP,CAAa6/C,eAAb;AACA,UAAIsE,kBAAJ;AACA,UAAI,KAAK1mD,KAAL,CAAW0mD,SAAX,KAAyBmB,GAA7B,EAAkC;AAChCnB,oBAAYmB,GAAZ;AACA,YAAIA,QAAQzB,KAAKC,KAAb,IAAsBwB,QAAQzB,KAAKI,IAAvC,EAA6C;AAC3C;AACA,eAAKpmD,QAAL,CAAc;AACZsmD,gCADY;AAEZG,4BAAmBJ,qBAAnB,OAFY,EAEkC;AAC9CO,yBAAa;AAHD,WAAd;AAKD,SAPD,MAOO;AACL,eAAK5mD,QAAL,CAAc;AACZsmD,gCADY;AAEZG,4BAAgB,KAAK7mD,KAAL,CAAW8mD,mBAFf;AAGZE,yBAAa;AAHD,WAAd;AAKD;AACDvnD,eAAO6C,GAAP,iBAAyBulD,GAAzB;AACD,OAjBD,MAiBO;AACL;AACA;AACAnB,oBAAYN,KAAKC,KAAjB;AACA,aAAKjmD,QAAL,CAAc;AACZsmD,8BADY;AAEZG,0BAAmBJ,qBAAnB,OAFY,EAEkC;AAC9CO,uBAAa;AAHD,SAAd;AAKAvnD,eAAO6C,GAAP,mBAA2BulD,GAA3B,uBAAgDzB,KAAKC,KAArD;AACD;AACD,WAAKyB,MAAL,CAAYD,GAAZ,EAAiBlpD,OAAO8B,QAAxB;AACD;;;oCAEe4C,C,EAAG;AACjBA,QAAE++C,eAAF;;AAEA,UAAIvU,UAAUxqC,EAAEmH,MAAhB;AACA,WAAKpK,QAAL,CAAc,EAAEwmD,qBAAqB/Y,QAAQka,SAAR,GAAoB1kD,EAAE2kD,OAA7C,EAAd;;AAEApmD,eAASqmD,SAAT,GAAqB,KAAKf,OAA1B;AACAtlD,eAASsmD,WAAT,GAAuB,KAAKf,UAA5B;AACD;;;+BACU9jD,C,EAAG;AACZA,QAAE++C,eAAF;AACA;AACA;AACA,UAAI5N,MAAMrhC,KAAKqjB,GAAL,CACR,GADQ,EAERnzB,EAAE2kD,OAAF,GAAY,KAAKhoD,KAAL,CAAW4mD,mBAAvB,GAA6CH,qBAFrC,CAAV;AAIA,WAAKrmD,QAAL,CAAc;AACZymD,wBAAgBrS,MAAM,KAAKx0C,KAAL,CAAW2mD,WAAjB,GAA+B,EAA/B,GAAoC,IADxC;AAEZpE,qBAAa/N,MAAM,KAAKx0C,KAAL,CAAW2mD,WAAjB,GAA+B,EAA/B,GAAoCF,qBAApC,GAA4D,IAF7D;AAGZK,6BAAqBtS,MAAM,KAAKx0C,KAAL,CAAW2mD,WAAjB,GAA+B,EAA/B,GAAoC,IAH7C,CAGkD;AAHlD,OAAd;AAKD;;;8BACS;AACR/kD,eAASqmD,SAAT,GAAqB,IAArB;AACArmD,eAASsmD,WAAT,GAAuB,IAAvB;AACD;;;wCAEmB7nD,I,EAAM;AACxB,WAAKD,QAAL,CAAc,EAAE6mD,gBAAgB5mD,KAAK4mD,cAAvB,EAAd;AACD;;;sCAEiB;AAChBzkD,YAAME,SAAN,CAAgB,cAAhB;AACD;;;gCAEW;AACV,WAAK5C,MAAL,CAAY,GAAZ;AACD;;AAED;AACA;AACA;;;;;AAKA;;;;;wCAEoB;AAClB,UAAIqoD,WAAWvmD,SAASqS,cAAT,CAAwB,UAAxB,CAAf;AACA,WAAK7T,QAAL,CAAc;AACZumD,qBAAawB,SAASJ;AADV,OAAd;AAGD;;;2CAEsB;AACrBvlD,YAAMqc,eAAN,CAAsB,uBAAtB,EAA+C,KAAKuoC,mBAApD;AACA5kD,YAAMqc,eAAN,CAAsB,eAAtB,EAAuC,KAAKyoC,SAA5C;AACD;;;0CAEqBznD,K,EAAO;AAC3B,aAAO,IAAP;AACD;AACD;AACA;;;;;6BAES;AAAA;;AAAA,mBAQH,KAAKG,KARF;AAAA,UAEL0mD,SAFK,UAELA,SAFK;AAAA,UAGLG,cAHK,UAGLA,cAHK;AAAA,UAILtE,WAJK,UAILA,WAJK;AAAA,UAKLyE,WALK,UAKLA,WALK;AAAA,UAMLD,UANK,UAMLA,UANK;AAAA,UAOLE,cAPK,UAOLA,cAPK;AASP;;AACA,aACE;AAAA;AAAA,UAAK,WAAU,aAAf;AACE;AAAA;AAAA;AACE,gBAAG,UADL;AAEE,mBAAO;AACL/lD,sBAAQ2lD,cADH;AAEL1Y,wBAAU,QAFL;AAGLhtC,+BAAiB;AAHZ;AAFT;AAQE;AAAC,eAAD;AAAA,cAAK,UAAL,EAAU,WAAU,EAApB;AACE;AAAC,qBAAD;AAAA;AACE;AAAC,uBAAD;AAAA;AACE,6BAAW6kD,WAAW,EAAEoC,QAAQ1B,cAAcN,KAAKC,KAA7B,EAAX,CADb;AAEE,2BAAS;AAAA,2BAAM,OAAKvmD,MAAL,CAAYsmD,KAAKC,KAAjB,CAAN;AAAA;AAFX;AAAA;AAAA;AADF,aADF;AASE;AAAC,qBAAD;AAAA;AACE;AAAC,uBAAD;AAAA;AACE,6BAAWL,WAAW,EAAEoC,QAAQ1B,cAAcN,KAAKE,UAA7B,EAAX,CADb;AAEE,2BAAS;AAAA,2BAAM,OAAKxmD,MAAL,CAAYsmD,KAAKE,UAAjB,CAAN;AAAA;AAFX;AAAA;AAAA;AADF,aATF;AAiBE;AAAC,qBAAD;AAAA;AACE;AAAC,uBAAD;AAAA;AACE,6BAAWN,WAAW,EAAEoC,QAAQ1B,cAAcN,KAAKG,UAA7B,EAAX,CADb;AAEE,2BAAS;AAAA,2BAAM,OAAKzmD,MAAL,CAAYsmD,KAAKG,UAAjB,CAAN;AAAA;AAFX;AAAA;AAAA;AADF,aAjBF;AAyBE;AAAC,qBAAD;AAAA;AACE;AAAC,uBAAD;AAAA;AACE,6BAAWP,WAAW,EAAEoC,QAAQ1B,cAAcN,KAAKI,IAA7B,EAAX,CADb;AAEE,2BAAS;AAAA,2BAAM,OAAK1mD,MAAL,CAAYsmD,KAAKI,IAAjB,CAAN;AAAA;AAFX;AAAA;AAAA;AADF;AAzBF,WARF;AA0CE;AAAC,sBAAD;AAAA;AACE,yBAAWE,SADb;AAEE,qBAAO;AACLxlD,wBAAQ,MADH;AAELitC,0BAAU,QAFL;AAGLhtC,iCAAiB;AAHZ;AAFT;AAQE,gCAAC,OAAD,IAAS,OAAOilD,KAAKC,KAArB,GARF;AASE;AAAC,qBAAD;AAAA,gBAAS,OAAOD,KAAKE,UAArB;AACE;AAAC,mBAAD;AAAA;AACE;AAAC,qBAAD;AAAA,oBAAK,IAAG,IAAR;AACE,sCAAC,WAAD;AACE,iCAAa/D,WADf;AAEE,4BAAQmE,cAAcN,KAAKE;AAF7B;AADF;AADF;AADF,aATF;AAmBE;AAAC,qBAAD;AAAA,gBAAS,OAAOF,KAAKG,UAArB;AACE;AAAC,mBAAD;AAAA;AACE;AAAC,qBAAD;AAAA,oBAAK,IAAG,IAAR;AACE,sCAAC,WAAD;AACE,iCAAahE,WADf;AAEE,4BAAQmE,cAAcN,KAAKG;AAF7B;AADF;AADF;AADF,aAnBF;AA6BE;AAAC,qBAAD;AAAA,gBAAS,OAAOH,KAAKI,IAArB;AACE,kCAAC,IAAD;AADF;AA7BF;AA1CF,SADF;AA8EE;AACE,cAAG,SADL;AAEE,kBAAQQ,WAFV;AAGE,iBAAO;AACL70B,sBAAU,UADL;AAELqiB,iBAAK,KAFA;AAGL1F,kBAAM,KAHD;AAIL1c,mBAAO,KAJF;AAKLlxB,oBAAQ,MALH;AAMLC,6BAAiB,MANZ;AAOLknD,oBAAQ;AAPH,WAHT;AAYE,uBAAa,KAAKta;AAZpB,UA9EF;AA6FE;AAAA;AAAA;AACE,oBAAQ,CAACiZ,WAAD,IAAgBC,mBAAmB,EAD7C;AAEE,mBAAO;AACL7lD,uBAAS,SADJ;AAELkwB,wBAAU,OAFL;AAGLC,yBAAW,OAHN;AAILG,qBAAO,MAJF;AAKLvwB,+BAAiB;AALZ;AAFT;AAUG8lD,wBAVH;AAAA;AAWE;AAAC,kBAAD;AAAA;AACE,oBAAK,IADP;AAEE,2BAFF;AAGE,uBAAS,KAAKI,eAHhB;AAIE,qBAAO;AACL31B,uBAAO,MADF;AAELgsB,6BAAa,MAFR;AAGLpsB,0BAAU,OAHL;AAILlwB,yBAAS;AAJJ;AAJT;AAAA;AAAA;AAXF;AA7FF,OADF;AAyHD;;;;EAhSqB3B,OAAO4B,S,GAiS7B;;AAEF;AACA;;;AACA5C,OAAOC,OAAP,GAAiBmtC,SAAjB;;;;;;;;;;;;;;AC/UA;;;;;;;;;;;AAWA,IAAMyc,mBAAmBzpD,QAAQ,mBAAR,CAAzB;AACA,IAAM86C,UAAU96C,QAAQ,mBAAR,CAAhB;AACA,IAAMD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;;IACM0pD,Y;;;AACJ,0BAAc;AAAA;;AAAA;;AAEZ,UAAKpK,eAAL,GAAuB,MAAKA,eAAL,CAAqBp+C,IAArB,OAAvB;AAFY;AAGb;;;;oCAEey+C,G,EAAK3+C,K,EAAO4+C,Q,EAAU;AACpC,UAAID,QAAQ,GAAZ,EAAiB;AACf3+C,cAAM2K,MAAN,GAAe,QAAf;AACD;AACD,aAAO;AAAC,WAAD;AAAS3K,aAAT;AAAiB4+C;AAAjB,OAAP;AACD;;;0CAEqB+J,E,EAAIlgC,E,EAAI;AAC5B,UAAImgC,UAAU,IAAd;AACA,UAAI,KAAK51C,IAAL,KAAc21C,GAAG31C,IAArB,EAA2B41C,UAAU,KAAV,CAA3B,KACK,KAAK51C,IAAL,GAAY21C,GAAG31C,IAAf;AACL,aAAO41C,OAAP;AACD;;;6BAEQ;AAAA,UACC51C,IADD,GACU,KAAKhT,KADf,CACCgT,IADD;;AAEP,aACE,oBAAC,gBAAD;AACE,cAAMA,IADR;AAEE,mBAAW,KAAKsrC,eAFlB;AAGE,yBAAiB,EAAEE,aAAa,IAAf,EAAqBC,SAAS,IAA9B,EAHnB;AAIE,iBAAS,CAAC3E,OAAD;AAJX,QADF;AAQD;;;;EA9BwBl6C,OAAO4B,S;;AAiClC;AACA;;;AACA5C,OAAOC,OAAP,GAAiB6pD,YAAjB;;;;;;;;;;;;;;ACrDA;;;;;;;;;;;AAWA,IAAM3pD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQinD,U,GAAiEv1B,U,CAAjEu1B,U;IAAYC,O,GAAqDx1B,U,CAArDw1B,O;IAAS7mD,G,GAA4CqxB,U,CAA5CrxB,G;IAAKC,O,GAAuCoxB,U,CAAvCpxB,O;IAASC,O,GAA8BmxB,U,CAA9BnxB,O;IAASwxB,G,GAAqBL,U,CAArBK,G;IAAKD,G,GAAgBJ,U,CAAhBI,G;IAAKD,M,GAAWH,U,CAAXG,M;;AAC9D,IAAMs1B,aAAannD,QAAQ,YAAR,CAAnB;AACA,IAAMa,WAAWb,QAAQ,UAAR,CAAjB;AACA,IAAMokD,OAAOpkD,QAAQ,QAAR,CAAb;AACA,IAAM6pD,aAAa7pD,QAAQ,cAAR,CAAnB;AACA,IAAMwkD,eAAexkD,QAAQ,gBAAR,CAArB;AACA,IAAM8pD,WAAW9pD,QAAQ,YAAR,CAAjB;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAI6C,MAAM,KAAV;AACA,IAAIc,QAAQ,IAAZ;;AAEA;AACA;AACA;;IACM2jD,I;;;AACJ,gBAAYtmD,KAAZ,EAAmB;AAAA;;AAAA,4GACXA,KADW;;AAEjB,UAAKG,KAAL,GAAa;AACXu6C,kBAAY,IADD;AAEXmM,iBAAW;AAFA,KAAb;AAIA,UAAKkC,SAAL,GAAiB,MAAKA,SAAL,CAAe7oD,IAAf,OAAjB;;AAEAyC,YAAQ/C,OAAOgD,WAAP,OAAR;AARiB;AASlB,G,CAAC;;AAEF;AACA;;;;;8BACUolD,G,EAAK;AACblpD,aAAO4D,KAAP,CAAa6/C,eAAb;AACA,UAAI,KAAKpiD,KAAL,CAAW0mD,SAAX,KAAyBmB,GAA7B,EAAkC;AAChC,aAAKznD,QAAL,CAAc,EAAEsmD,WAAWmB,GAAb,EAAd;AACD;AACF;;AAED;AACA;AACA;;;;;AAKA;;;;6BACS;AAAA;;AAAA,UACCnB,SADD,GACe,KAAK1mD,KADpB,CACC0mD,SADD;;AAEP,UAAMjB,UAAU/lD,SAASwH,OAAT,EAAhB;AACA,aACE;AAAA;AAAA;AACE,qBAAU,MADZ;AAEE,iBAAO;AACLirB,sBAAU,OADL;AAELC,mBAAO,MAFF;AAGLnxB,mBAAO,KAHF;AAILC,oBAAQ,KAJH;AAKLitC,sBAAU,QALL;AAMLlc,oBAAQ,MANH;AAOL7wB,qBAAS,MAPJ;AAQLD,6BAAiB,MARZ,EAQoB;AACzBgwB,oBAAQ,gBATH;AAUL03B,uBAAW;AAVN;AAFT;AAeE;AAAA;AAAA;AACE,mBAAO;AACL3nD,sBAAQ,MADH;AAELitC,wBAAU,QAFL;AAGL/sC,uBAAS;AAHJ;AADT;AAOE;AAAA;AAAA,cAAK,IAAG,UAAR;AACE;AAAC,iBAAD;AAAA,gBAAK,UAAL;AACE;AAAC,uBAAD;AAAA;AACE;AAAC,yBAAD;AAAA;AACE,+BAAW4kD,WAAW,EAAEoC,QAAQ1B,cAAc,GAAxB,EAAX,CADb;AAEE,6BAAS,mBAAM;AACb,6BAAKkC,SAAL,CAAe,GAAf;AACD;AAJH;AAAA;AAAA;AADF,eADF;AAWE;AAAC,uBAAD;AAAA;AACE;AAAC,yBAAD;AAAA;AACE,+BAAW5C,WAAW,EAAEoC,QAAQ1B,cAAc,GAAxB,EAAX,CADb;AAEE,6BAAS,mBAAM;AACb,6BAAKkC,SAAL,CAAe,GAAf;AACD;AAJH;AAAA;AAAA;AADF,eAXF;AAqBE;AAAC,uBAAD;AAAA;AACE;AAAC,yBAAD;AAAA;AACE,+BAAW5C,WAAW,EAAEoC,QAAQ1B,cAAc,GAAxB,EAAX,CADb;AAEE,6BAAS,mBAAM;AACb,6BAAKkC,SAAL,CAAe,GAAf;AACD;AAJH;AAAA;AAAA;AADF,eArBF;AA+BE;AAAC,uBAAD;AAAA;AACE;AAAC,yBAAD;AAAA;AACE,4BAAQ,CAACnD,OADX;AAEE,+BAAWO,WAAW,EAAEoC,QAAQ1B,cAAc,GAAxB,EAAX,CAFb;AAGE,6BAAS,mBAAM;AACb,6BAAKkC,SAAL,CAAe,GAAf;AACD;AALH;AAAA;AAAA;AADF;AA/BF;AADF,WAPF;AAoDE;AAAC,sBAAD;AAAA;AACE,yBAAWlC,SADb;AAEE,qBAAO;AACLxlD,wBAAQ,MADH;AAELitC,0BAAU;AAFL;AAFT;AAOE;AAAC,qBAAD;AAAA,gBAAS,OAAM,GAAf;AAAoBuY,4BAAc,GAAd,IAAqB,oBAAC,IAAD;AAAzC,aAPF;AAQE;AAAC,qBAAD;AAAA,gBAAS,OAAM,GAAf;AAAoBA,4BAAc,GAAd,IAAqB,oBAAC,UAAD;AAAzC,aARF;AASE;AAAC,qBAAD;AAAA,gBAAS,OAAM,GAAf;AAAoBA,4BAAc,GAAd,IAAqB,oBAAC,YAAD;AAAzC,aATF;AAUE;AAAC,qBAAD;AAAA,gBAAS,OAAM,GAAf;AAAoBA,4BAAc,GAAd,IAAqB,oBAAC,QAAD;AAAzC;AAVF;AApDF;AAfF,OADF;AAmFD;;;;EAnHgBjnD,OAAO4B,S,GAoHxB;;AAEF;AACA;;;AACA5C,OAAOC,OAAP,GAAiBynD,IAAjB;;;;;;;;;;;;;;ACtJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,IAAMvnD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;;eAC+BA,QAAQ,sBAAR,C;IAAvB8M,kB,YAAAA,kB;;AAER;AACA;;;AACA,IAAMjK,MAAM,KAAZ;AACA,IAAM8F,KAAK,eAAX;AACA;AACA,IAAIhF,cAAJ;;AAEA;AACA;AACA;;IACMsmD,a;;;AACJ,yBAAYjpD,KAAZ,EAAmB;AAAA;;AAAA,8HACXA,KADW;;AAGjB,UAAKG,KAAL,GAAa;AACX++B,eAAS,EADE,EACE;AACbgqB,sBAAgB,CAAC,CAFN;AAGXC,mBAAa,IAHF;AAIXC,sBAAgB;AAJL,KAAb;;AAOA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBnpD,IAApB,OAAtB;AACA,UAAKopD,cAAL,GAAsB,MAAKA,cAAL,CAAoBppD,IAApB,OAAtB;AACA,UAAKqpD,UAAL,GAAkB,MAAKA,UAAL,CAAgBrpD,IAAhB,OAAlB;AACA,UAAKspD,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBtpD,IAAvB,OAAzB;AACA,UAAKupD,cAAL,GAAsB,MAAKA,cAAL,CAAoBvpD,IAApB,OAAtB;AACA,UAAKwpD,WAAL,GAAmB,MAAKA,WAAL,CAAiBxpD,IAAjB,OAAnB;AACA,UAAKypD,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BzpD,IAA5B,OAA9B;AACA,UAAK0pD,wBAAL,GAAgC,MAAKA,wBAAL,CAA8B1pD,IAA9B,OAAhC;AACA,UAAK2pD,iBAAL,GAAyB,MAAKA,iBAAL,CAAuB3pD,IAAvB,OAAzB;AACA,UAAK4pD,gBAAL,GAAwB,MAAKA,gBAAL,CAAsB5pD,IAAtB,OAAxB;;AAEA6B,aAASC,gBAAT,CAA0B,OAA1B,EAAmC,MAAK8nD,gBAAxC;;AAEA;AACAnnD,YAAQ/C,OAAOgD,WAAP,OAAR;AAxBiB;AAyBlB;;;;2CAEsB;AACrBb,eAAS8lB,mBAAT,CAA6B,OAA7B,EAAsC,KAAKiiC,gBAA3C;AACD;;AAED;;;;;;;;mCAKepnD,K,EAAO;AACpBA,YAAMiI,MAAN,CAAao/C,MAAb;AACA,WAAKR,UAAL,CAAgB7mD,KAAhB;AACD;;AAED;;;;;;;mCAIeA,K,EAAO;AACpBA,YAAM4wB,cAAN,GADoB,CACI;AACxB5wB,YAAM6/C,eAAN;AACA,WAAKhiD,QAAL,CAAc,EAAE6oD,gBAAgB,IAAlB,EAAd;AACD;;AAED;;;;;;;;;;+BAOW1mD,K,EAAO;AAAA;;AAAA,UACR+2C,QADQ,GACK,KAAKz5C,KADV,CACRy5C,QADQ;;AAEhB,UAAMv0C,MAAMxC,MAAMiI,MAAN,CAAa/I,EAAzB;AACA,UAAM4D,QAAQ9C,MAAMiI,MAAN,CAAanF,KAA3B;AACA;AACA,UAAMwkD,WAAWtnD,MAAMiI,MAAN,CAAas/C,cAA9B;AACA,UAAMC,UAAUxnD,MAAMiI,MAAtB;;AAEA,UAAIw+C,cAAc,KAAlB;AACAxmD,YAAME,SAAN,CAAgB,qBAAhB,EAAuC,EAAEu2C,cAAc5zC,KAAhB,EAAvC,EAAgEyD,IAAhE,CAAqE,gBAAQ;AAC3E,YAAMi2B,UACJ1+B,KAAK47B,KAAL,IAAc57B,KAAK47B,KAAL,CAAWz3B,MAAX,GAAoB,CAAlC,GACInE,KAAK47B,KAAL,CAAW9pB,GAAX,CAAe,aAAK;AAClB,cAAIgW,EAAExR,KAAF,KAAYtR,KAAhB,EAAuB2jD,cAAc,IAAd;AACvB,iBAAO,EAAEvnD,IAAI0mB,EAAE1mB,EAAR,EAAYkV,OAAOwR,EAAExR,KAArB,EAAP;AACD,SAHD,CADJ,GAKI1S,SANN;AAOA,eAAK7D,QAAL,CAAc,EAAE2+B,gBAAF,EAAWiqB,wBAAX,EAAwBC,gBAAgB,IAAxC,EAAd;AACA,YAAI,OAAO3P,QAAP,KAAoB,UAAxB,EACEA,SAASv0C,GAAT,EAAcM,KAAd,EAAqB,YAAM;AACzB;AACA0kD,kBAAQD,cAAR,GAAyBD,QAAzB;AACAE,kBAAQC,YAAR,GAAuBH,QAAvB;AACD,SAJD;AAKH,OAfD;AAgBD;AACD;;;;;;;;;;;sCAQkBtnD,K,EAAO0nD,S,EAAW5kD,K,EAAO;AACzC9C,YAAM4wB,cAAN,GADyC,CACjB;AACxB5wB,YAAM6/C,eAAN;AAFyC,UAGjC8H,QAHiC,GAGpB,KAAKrqD,KAHe,CAGjCqqD,QAHiC;AAAA,UAIjCnrB,OAJiC,GAIrB,KAAK/+B,KAJgB,CAIjC++B,OAJiC;;AAKzC,UAAMorB,mBAAmBprB,UAAUA,QAAQC,IAAR,CAAa;AAAA,eAAKjC,EAAEt7B,EAAF,KAAS4D,KAAd;AAAA,OAAb,CAAV,GAA8CpB,SAAvE;AACA,WAAK7D,QAAL,CAAc;AACZ4oD,qBAAamB,gBADD;AAEZprB,iBAAS,EAFG;AAGZgqB,wBAAgB,CAAC,CAHL;AAIZE,wBAAgB;AAJJ,OAAd,EANyC,CAWrC;AACJ,UAAI,OAAOiB,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,iBACED,SADF,EAEE5kD,KAFF,EAGE8kD,mBAAmBA,iBAAiB1oD,EAApC,GAAyCwC,SAH3C,CAGqD;AAHrD,UADkC,CAK/B;AACJ;AACF;;;mCAEc1B,K,EAAO0nD,S,EAAWxoD,E,EAAI;AACnCc,YAAM4wB,cAAN,GADmC,CACX;AACxB5wB,YAAM6/C,eAAN;AAFmC,mBAGP,KAAKviD,KAHE;AAAA,UAG3BqqD,QAH2B,UAG3BA,QAH2B;AAAA,UAGjB7kD,KAHiB,UAGjBA,KAHiB;AAAA,UAI3B05B,OAJ2B,GAIf,KAAK/+B,KAJU,CAI3B++B,OAJ2B;;AAKnC,UAAMorB,mBAAmBprB,UAAUA,QAAQC,IAAR,CAAa;AAAA,eAAKjC,EAAEt7B,EAAF,KAASA,EAAd;AAAA,OAAb,CAAV,GAA2CwC,SAApE;AACA,WAAK7D,QAAL,CAAc;AACZ4oD,qBAAamB,gBADD;AAEZprB,iBAAS,EAFG;AAGZgqB,wBAAgB,CAAC,CAHL;AAIZE,wBAAgB;AAJJ,OAAd,EANmC,CAW/B;AACJ,UAAI,OAAOiB,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,iBACED,SADF,EAEE5kD,KAFF,EAES;AACP8kD,2BAAmBA,iBAAiB1oD,EAApC,GAAyCwC,SAH3C,CAGqD;AAHrD,UADkC,CAK/B;AACJ;AACF;;AAED;;;;;;;;;;gCAOY1B,K,EAAO;AAAA,mBACmB,KAAKvC,KADxB;AAAA,UACT++B,OADS,UACTA,OADS;AAAA,UACAgqB,cADA,UACAA,cADA;AAAA,oBAEsB,KAAKlpD,KAF3B;AAAA,UAEToqD,SAFS,WAETA,SAFS;AAAA,UAEE5kD,KAFF,WAEEA,KAFF;AAAA,UAES6kD,QAFT,WAESA,QAFT;;AAGjB,UAAME,YAAY7nD,MAAMwC,GAAxB;AACA,UAAMslD,WAAWtrB,UAAUA,QAAQv6B,MAAlB,GAA2B,CAAC,CAA7C;AACA,UAAI8lD,qBAAqBvB,cAAzB;AACA,UAAIqB,cAAc,OAAlB,EAA2B;AACzB,YAAIrB,iBAAiB,CAAC,CAAlB,IAAuBhqB,OAA3B,EAAoC;AAClC;AACA;AACA,cAAMt9B,KAAKs9B,QAAQgqB,cAAR,EAAwBtnD,EAAnC;AACA,eAAK6nD,cAAL,CAAoB/mD,KAApB,EAA2B0nD,SAA3B,EAAsCxoD,EAAtC,EAJkC,CAIS;AAC5C,SALD,MAKO,IAAI4D,UAAU,EAAd,EAAkB;AACvB;AACA,eAAKgkD,iBAAL,CAAuB9mD,KAAvB,EAA8B0nD,SAA9B,EAAyC5kD,KAAzC,EAFuB,CAE0B;AAClD;AACF;AACD,UAAI+kD,cAAc,QAAd,IAA0BA,cAAc,KAA5C,EAAmD;AACjD7nD,cAAM4wB,cAAN,GADiD,CACzB;AACxB5wB,cAAM6/C,eAAN;AACA,aAAKhiD,QAAL,CAAc,EAAE2+B,SAAS,EAAX,EAAegqB,gBAAgB,CAAC,CAAhC,EAAd,EAHiD,CAGG;AACrD;AACD,UAAIqB,cAAc,SAAlB,EAA6BE;AAC7B,UAAIF,cAAc,WAAlB,EAA+BE;AAC/B,UACEvB,mBAAmBuB,kBAAnB,IACAA,qBAAqB,CAAC,CADtB,IAEAD,WAAW,CAHb,EAIE;AACA,aAAKX,iBAAL,CAAuBY,kBAAvB;AACD;AACF;;;2CAEsB/nD,K,EAAOsiC,I,EAAM;AAClC,WAAK6kB,iBAAL,CAAuB7kB,IAAvB;AACD;;;6CACwBtiC,K,EAAO;AAC9B;AACA;AACA;AACA;AACD;;;sCAEiBsiC,I,EAAM;AAAA,UACd9F,OADc,GACF,KAAK/+B,KADH,CACd++B,OADc;;AAEtB,UAAMsrB,WAAWtrB,UAAUA,QAAQv6B,MAAlB,GAA2B,CAAC,CAA7C;AACAqgC,aAAO1xB,KAAKghC,GAAL,CAASkW,WAAW,CAApB,EAAuBl3C,KAAKqjB,GAAL,CAAS,CAAT,EAAYqO,IAAZ,CAAvB,CAAP;AACA,WAAKzkC,QAAL,CAAc,EAAE2oD,gBAAgBlkB,IAAlB,EAAwBokB,gBAAgB,IAAxC,EAAd;AACA,UAAMsB,kBAAkBxrB,QAAQ8F,IAAR,CAAxB;AACAriC,YAAME,SAAN,CAAgB,yBAAhB,EAA2C,EAAE2uC,QAAQkZ,gBAAgB9oD,EAA1B,EAA3C;AACD;;AAED;;;;qCACiBc,K,EAAO;AACtB,UAAIA,MAAMioD,gBAAV,EACE,OADF,CACU;AADV,WAEK,KAAKpqD,QAAL,CAAc,EAAE2+B,SAAS,EAAX,EAAegqB,gBAAgB,CAAC,CAAhC,EAAmCE,gBAAgB,KAAnD,EAAd,EAHiB,CAG0D;AACjF;;;6BAEQ;AAAA;;AAAA,oBAC0D,KAAKjpD,KAD/D;AAAA,UACC++B,OADD,WACCA,OADD;AAAA,UACUgqB,cADV,WACUA,cADV;AAAA,UAC0BC,WAD1B,WAC0BA,WAD1B;AAAA,UACuCC,cADvC,WACuCA,cADvC;AAAA,oBAEgC,KAAKppD,KAFrC;AAAA,UAECoqD,SAFD,WAECA,SAFD;AAAA,UAEY5kD,KAFZ,WAEYA,KAFZ;AAAA,UAEmB6kD,QAFnB,WAEmBA,QAFnB;;AAGP,UAAMO,YACJ1rB,WAAWA,QAAQv6B,MAAR,GAAiB,CAA5B,GACIu6B,QAAQ5sB,GAAR,CAAY,UAAC4qB,CAAD,EAAI53B,CAAJ;AAAA,eACV;AAAA;AAAA;AACE,sBAAQ43B,EAAEpmB,KAAV,GAAkBxR,CADpB;AAEE,mBAAO43B,EAAEpmB,KAFX;AAGE,uBAAWoyC,mBAAmB5jD,CAAnB,GAAuB,aAAvB,GAAuC,EAHpD;AAIE,qBAAS;AAAA,qBAAS,OAAKmkD,cAAL,CAAoB/mD,KAApB,EAA2B0nD,SAA3B,EAAsCltB,EAAEt7B,EAAxC,CAAT;AAAA,aAJX;AAKE,0BAAc;AAAA,qBAAS,OAAK+nD,sBAAL,CAA4BjnD,KAA5B,EAAmC4C,CAAnC,CAAT;AAAA;AALhB;AAOG43B,YAAEpmB,KAPL;AAAA;AAOY;AAAA;AAAA,cAAM,WAAU,IAAhB;AAAA;AAAuBomB,cAAEt7B;AAAzB;AAPZ,SADU;AAAA,OAAZ,CADJ,GAYIwC,SAbN;AAcA,aACE;AAAA;AAAA,UAAK,OAAO,EAAEkuB,UAAU,UAAZ,EAAwB+b,UAAU,GAAlC,EAAZ;AACE;AAAA;AAAA,YAAK,WAAU,SAAf;AAAA;AAAA,SADF;AAEE;AACE,cAAI+b,SADN;AAEE,eAAQA,SAAR,UAFF;AAGE,iBAAO5kD,KAHT;AAIE,gBAAK,QAJP;AAKE,qBAAW,CAAC2jD,WAAD,GAAe,SAAf,GAA2B,EALxC;AAME,oBAAU,KAAKI,UANjB;AAOE,qBAAW,KAAKG,WAPlB;AAQE,mBAAS,KAAKL,cARhB;AASE,mBAAS,KAAKC,cAThB;AAUE,uBAAax9C,kBAVf;AAWE,wBAAa,KAXf,CAWqB;AAXrB,UAFF;AAeE,uCAfF;AAgBGs9C,0BAAkBwB,SAAlB,IACC;AAAA;AAAA,YAAK,OAAO,EAAEt4B,UAAU,UAAZ,EAAZ;AACE;AAAA;AAAA;AACE,kBAAG,WADL;AAEE,yBAAU,WAFZ;AAGE,4BAAc,KAAKs3B;AAHrB;AAKGgB;AALH;AADF;AAjBJ,OADF;AA8BD;;;;EAxPyBhrD,OAAO4B,S;;AA2PnC;AACA;;;AACA5C,OAAOC,OAAP,GAAiBoqD,aAAjB;;;;;;;;;;;;;;ACpTA;;;;;;;;;;;;;;;AAeA,IAAMlqD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM6rD,YAAY7rD,QAAQ,iBAAR,CAAlB;;AAEA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA,IAAM8F,KAAK,UAAX;;AAEA;AACA;;IACM2nC,Q;;;AACJ,oBAAYtvC,KAAZ,EAAmB;AAAA;;AAAA,+GACXA,KADW;AAElB;;;;6BAEQ;AAAA,mBAOH,KAAKA,KAPF;AAAA,kCAELwmB,OAFK;AAAA,UAELA,OAFK,kCAEK,eAFL;AAAA,oCAGLwvB,SAHK;AAAA,UAGLA,SAHK,oCAGO,IAHP;AAAA,wCAILC,aAJK;AAAA,UAILA,aAJK,wCAIW,QAJX;AAAA,UAKL6U,IALK,UAKLA,IALK;AAAA,UAMLC,QANK,UAMLA,QANK;;AAQP,UAAMC,QAAQ;AAAA;AAAA,UAAQ,SAASF,IAAjB;AAAwB9U;AAAxB,OAAd;AACA,UAAMiV,YAAYF,WAChB;AAAA;AAAA,UAAQ,SAASA,QAAjB;AAA4B9U;AAA5B,OADgB,GAGhB,EAHF;AAKA,aACE;AAAA;AAAA,UAAK,WAAU,QAAf;AACE,qCAAK,WAAU,QAAf,GADF;AAEE;AAAC,mBAAD;AAAA;AACE;AAAA;AAAA,cAAK,WAAU,cAAf;AACE;AAAA;AAAA,gBAAK,WAAU,eAAf;AAAgCzvB;AAAhC,aADF;AAEE;AAAA;AAAA,gBAAK,WAAU,kBAAf;AACGykC,uBADH;AAAA;AAGGD;AAHH;AAFF;AADF;AAFF,OADF;AAeD;;;;EAlCoBjsD,MAAMyC,S;;AAqC7B;AACA;;;AACA5C,OAAOC,OAAP,GAAiBywC,QAAjB;;;;;;;;;;;;;;AChEA;;;;;;;;;;;;;;;;AAgBA,IAAMvwC,QAAQC,QAAQ,OAAR,CAAd;;AAEA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA,IAAM8F,KAAK,kBAAX;;AAEA;AACA;;IACMujD,gB;;;AACJ,4BAAYlrD,KAAZ,EAAmB;AAAA;;AAAA,oIACXA,KADW;;AAEjB,UAAKG,KAAL,GAAa,EAAEgrD,eAAe,EAAjB,EAAb;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBlrD,IAAhB,OAAlB;AAHiB;AAIlB;;;;iCAEY;AAAA,UACHmrD,OADG,GACS,KAAKrrD,KADd,CACHqrD,OADG;;AAEX,UAAMC,YAAYvpD,SAASwB,aAAT,CAAuB,kBAAvB,CAAlB;AACA+nD,gBAAUvB,MAAV;AACAhoD,eAASwpD,WAAT,CAAqB,MAArB,EAJW,CAImB;AAC9B,UAAI,OAAOF,OAAP,KAAmB,UAAvB,EAAmC;AACjC,aAAK9qD,QAAL,CAAc,EAAE4qD,eAAe,sBAAjB,EAAd,EAAyD;AAAA,iBACvDjlD,WAAWmlD,OAAX,EAAoB,GAApB,CADuD;AAAA,SAAzD;AAGD;AACF;;;6BAEQ;AAAA,UACCF,aADD,GACmB,KAAKhrD,KADxB,CACCgrD,aADD;AAAA,mBAMH,KAAKnrD,KANF;AAAA,kCAGLwmB,OAHK;AAAA,UAGLA,OAHK,kCAGK,SAHL;AAAA,sCAILglC,WAJK;AAAA,UAILA,WAJK,sCAIS,mBAJT;AAAA,UAKLH,OALK,UAKLA,OALK;;AAOP,UAAMI,UAAU;AAAA;AAAA,UAAQ,SAAS,KAAKL,UAAtB;AAAmCI;AAAnC,OAAhB;AACA,aACE;AAAA;AAAA,UAAK,WAAU,QAAf;AACE,qCAAK,WAAU,QAAf,GADF;AAEE;AAAA;AAAA,YAAK,WAAU,cAAf;AACE;AAAA;AAAA,cAAK,WAAU,eAAf;AACE;AACE,kBAAG,iBADL;AAEE,4BAAchlC,OAFhB;AAGE,oBAAK,GAHP;AAIE,oBAAK,IAJP;AAKE,4BALF;AAME,qBAAO;AACLiL,0BAAU,MADL;AAELksB,2BAAW,QAFN;AAGLp8C,yBAAS,UAHJ;AAIL+vB,wBAAQ,MAJH;AAKLO,uBAAO,MALF;AAML65B,4BAAY;AANP;AANT;AADF,WADF;AAkBE;AAAA;AAAA,cAAK,WAAU,kBAAf;AACGP,yBADH;AAAA;AACmBM;AADnB;AAlBF;AAFF,OADF;AA2BD;;;;EAtD4B1sD,MAAMyC,S;;AAyDrC;AACA;;;AACA5C,OAAOC,OAAP,GAAiBqsD,gBAAjB;;;;;;;;;;;;;;ACpFA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAMnsD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA,IAAM8F,KAAK,eAAX;AACA;AACA,IAAIhF,cAAJ;;AAEA;AACA;;IACMgpD,sB;;;AACJ,kCAAY3rD,KAAZ,EAAmB;AAAA;;AAAA,gJACXA,KADW;;AAEjB,UAAKG,KAAL,GAAa;AACXC,cAAQ,KADG;AAEX2C,WAAK;AAFM,KAAb;AAIA,UAAK6oD,cAAL,GAAsB,MAAKA,cAAL,CAAoB1rD,IAApB,OAAtB;AACA,UAAK2rD,eAAL,GAAuB,MAAKA,eAAL,CAAqB3rD,IAArB,OAAvB;AACA,UAAK4rD,QAAL,GAAgB,MAAKA,QAAL,CAAc5rD,IAAd,OAAhB;AACA,UAAK6rD,YAAL,GAAoB,MAAKA,YAAL,CAAkB7rD,IAAlB,OAApB;;AAEA;AACAyC,YAAQ/C,OAAOgD,WAAP,OAAR;AACAD,UAAMrC,aAAN,CAAoB,uBAApB,EAA6C,MAAKsrD,cAAlD;AAbiB;AAclB;;;;2CAEsB;AACrBjpD,YAAMqc,eAAN,CAAsB,uBAAtB,EAA+C,KAAK4sC,cAApD;AACD;;;mCAEcprD,I,EAAM;AAAA,UACXoB,EADW,GACJ,KAAK5B,KADD,CACX4B,EADW;;AAEnB,UAAIA,OAAOpB,KAAKoB,EAAhB,EAAoB,KAAKrB,QAAL,CAAc,EAAEH,QAAQ,IAAV,EAAd;AACrB;;;oCAEesC,K,EAAO;AACrB,WAAKnC,QAAL,CAAc,EAAEwC,KAAKL,MAAMiI,MAAN,CAAanF,KAApB,EAAd;AACD;;;+BAEU;AAAA,UACDzC,GADC,GACO,KAAK5C,KADZ,CACD4C,GADC;AAAA,UAED+nD,IAFC,GAEQ,KAAK9qD,KAFb,CAED8qD,IAFC;;AAGT,WAAKvqD,QAAL,CAAc,EAAEH,QAAQ,KAAV,EAAd,EAAiC;AAAA,eAAM0qD,QAAQA,KAAK/nD,GAAL,CAAd;AAAA,OAAjC;AACD;;;mCAEc;AAAA,UACLgoD,QADK,GACQ,KAAK/qD,KADb,CACL+qD,QADK;;AAEb,WAAKxqD,QAAL,CAAc,EAAEH,QAAQ,KAAV,EAAd,EAAiC;AAAA,eAAM2qD,YAAYA,UAAlB;AAAA,OAAjC;AACD;;;6BAEQ;AAAA,mBACiB,KAAK5qD,KADtB;AAAA,UACCC,MADD,UACCA,MADD;AAAA,UACS2C,GADT,UACSA,GADT;AAAA,mBASH,KAAK/C,KATF;AAAA,UAGL4B,EAHK,UAGLA,EAHK;AAAA,kCAIL4kB,OAJK;AAAA,UAILA,OAJK,kCAIK,eAJL;AAAA,oCAKLwvB,SALK;AAAA,UAKLA,SALK,oCAKO,IALP;AAAA,wCAMLC,aANK;AAAA,UAMLA,aANK,wCAMW,QANX;AAAA,UAOL6U,IAPK,UAOLA,IAPK;AAAA,UAQLC,QARK,UAQLA,QARK;;AAUP,UAAMC,QAAQ;AAAA;AAAA,UAAQ,SAAS,KAAKc,QAAtB;AAAiC9V;AAAjC,OAAd;AACA,UAAMiV,YAAY;AAAA;AAAA,UAAQ,SAAS,KAAKc,YAAtB;AAAqC9V;AAArC,OAAlB;;AAEA,aAAO,CAAC71C,MAAD,GACL,EADK,GAGL;AAAA;AAAA,UAAK,WAAU,QAAf;AACE,qCAAK,WAAU,QAAf,GADF;AAEE;AAAA;AAAA,YAAK,WAAU,cAAf;AACE;AAAA;AAAA,cAAK,WAAU,eAAf;AACE;AAAA;AAAA,gBAAI,WAAU,aAAd;AAAA;AAAA,aADF;AAEE;AAAA;AAAA,gBAAK,WAAU,eAAf;AACE;AAAA;AAAA,kBAAK,WAAU,eAAf;AACE;AAAA;AAAA,oBAAK,WAAU,OAAf;AAAA;AAAA,iBADF;AAEE,6CAAK,KAAK2C,GAAV,EAAe,KAAI,0BAAnB;AAFF,eADF;AAKE;AAAA;AAAA;AAAMyjB;AAAN,eALF;AAME,6CAAO,UAAU,KAAKqlC,eAAtB;AANF,aAFF;AAUE;AAAA;AAAA,gBAAK,WAAU,kBAAf;AACGZ,uBADH;AAAA;AAGGD;AAHH;AAVF;AADF;AAFF,OAHF;AAyBD;;;;EA/EkCjsD,MAAMyC,S;;AAkF3C;AACA;;;AACA5C,OAAOC,OAAP,GAAiB8sD,sBAAjB;;;;;;;;ACjFA;;;;;;;;;;;;AAxCA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAM5sD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;;eAC4CA,QAAQ,kBAAR,C;IAApCqN,U,YAAAA,U;IAAYO,mB,YAAAA,mB;;gBAMhB5N,QAAQ,sBAAR,C;IAJF8M,kB,aAAAA,kB;IACAC,U,aAAAA,U;IACAC,Y,aAAAA,Y;IACAC,W,aAAAA,W;;AAEF,IAAMojC,OAAOrwC,QAAQ,UAAR,CAAb;AACA,IAAMutC,SAASvtC,QAAQ,gBAAR,CAAf;AACA,IAAMktC,UAAUltC,QAAQ,aAAR,CAAhB;AACA,IAAMiqD,gBAAgBjqD,QAAQ,iBAAR,CAAtB;AACA,IAAMswC,WAAWtwC,QAAQ,YAAR,CAAjB;AACA,IAAMksD,mBAAmBlsD,QAAQ,oBAAR,CAAzB;AACA,IAAMa,WAAWb,QAAQ,UAAR,CAAjB;;;AAGA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA,IAAM8F,KAAK,QAAX;AACA;AACA,IAAMwuC,UAAUt2C,SAASwH,OAAT,EAAhB;AACA;AACA,IAAMk/C,OAAO;AACX;AACAyF,cAAY,YAFD;AAGXC,cAAY;AAHD,CAAb;AAKA;AACA,IAAItpD,cAAJ;;AAEA;AACA;AACA;;IACMupD,M;;;AACJ,kBAAYlsD,KAAZ,EAAmB;AAAA;;AAAA,gHACXA,KADW;;AAGjB,UAAKG,KAAL,GAAa;AACX6sC,kBAAY,KADD;AAEXmf,qBAAe;AAFJ,KAAb,CAHiB,CAMd;;AAEH;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBlsD,IAAhB,OAAlB;AACA,UAAKmsD,aAAL,GAAqB,MAAKA,aAAL,CAAmBnsD,IAAnB,OAArB;AACA,UAAKosD,YAAL,GAAoB,MAAKA,YAAL,CAAkBpsD,IAAlB,OAApB;AACA,UAAKqsD,UAAL,GAAkB,MAAKA,UAAL,CAAgBrsD,IAAhB,OAAlB;AACA,UAAKssD,cAAL,GAAsB,MAAKA,cAAL,CAAoBtsD,IAApB,OAAtB;AACA,UAAKusD,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBvsD,IAAvB,OAAzB;;AAEA;AACA,UAAKwsD,WAAL,GAAmB,MAAKA,WAAL,CAAiBxsD,IAAjB,OAAnB;AACA,UAAKysD,QAAL,GAAgB,MAAKA,QAAL,CAAczsD,IAAd,OAAhB;AACA,UAAK0sD,cAAL,GAAsB,MAAKA,cAAL,CAAoB1sD,IAApB,OAAtB;AACA,UAAK2sD,eAAL,GAAuB,MAAKA,eAAL,CAAqB3sD,IAArB,OAAvB;AACA,UAAK4sD,WAAL,GAAmB,MAAKA,WAAL,CAAiB5sD,IAAjB,OAAnB;AACA;AACA,UAAK6sD,QAAL,GAAgB,MAAKA,QAAL,CAAc7sD,IAAd,OAAhB;AACA,UAAK8sD,UAAL,GAAkB,MAAKA,UAAL,CAAgB9sD,IAAhB,OAAlB;AACA,UAAK+sD,cAAL,GAAsB,MAAKA,cAAL,CAAoB/sD,IAApB,OAAtB;AACA,UAAKgtD,cAAL,GAAsB,MAAKA,cAAL,CAAoBhtD,IAApB,OAAtB;AACA,UAAKitD,QAAL,GAAgB,MAAKA,QAAL,CAAcjtD,IAAd,OAAhB;AACA,UAAKktD,UAAL,GAAkB,MAAKA,UAAL,CAAgBltD,IAAhB,OAAlB;AACA,UAAKmtD,YAAL,GAAoB,MAAKA,YAAL,CAAkBntD,IAAlB,OAApB;AACA,UAAKotD,QAAL,GAAgB,MAAKA,QAAL,CAAcptD,IAAd,OAAhB;AACA,UAAKqtD,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBrtD,IAAzB,OAA3B;AACA,UAAKstD,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BttD,IAA1B,OAA5B;AACA,UAAKutD,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BvtD,IAA1B,OAA5B;AACA,UAAKwtD,UAAL,GAAkB,MAAKA,UAAL,CAAgBxtD,IAAhB,OAAlB;AACA,UAAKytD,aAAL,GAAqB,MAAKA,aAAL,CAAmBztD,IAAnB,OAArB;AACA,UAAK0tD,eAAL,GAAuB,MAAKA,eAAL,CAAqB1tD,IAArB,OAAvB;AACA,UAAK2tD,oBAAL,GAA4B,MAAKA,oBAAL,CAA0B3tD,IAA1B,OAA5B;AACA;AACA,UAAK4tD,QAAL,GAAgB,MAAKA,QAAL,CAAc5tD,IAAd,OAAhB;AACA;AACA,UAAK6tD,kBAAL,GAA0B,MAAKA,kBAAL,CAAwB7tD,IAAxB,OAA1B;AACA,UAAK8tD,wBAAL,GAAgC,MAAKA,wBAAL,CAA8B9tD,IAA9B,OAAhC;AACA,UAAK+tD,mBAAL,GAA2B,MAAKA,mBAAL,CAAyB/tD,IAAzB,OAA3B;AACA,UAAKguD,eAAL,GAAuB,MAAKA,eAAL,CAAqBhuD,IAArB,OAAvB;AACA;AACA,UAAKiuD,cAAL,GAAsB,MAAKC,gBAAL,CAAsBluD,IAAtB,OAAtB;AACA;AACA,UAAKmuD,WAAL,GAAmB,MAAKA,WAAL,CAAiBnuD,IAAjB,OAAnB;AACA,UAAKouD,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBpuD,IAAvB,OAAzB;AACA,UAAKquD,cAAL,GAAsB,MAAKA,cAAL,CAAoBruD,IAApB,OAAtB;AACA,UAAKsuD,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBtuD,IAAtB,OAAxB;AACA,UAAKuuD,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBvuD,IAAvB,OAAzB;AACA,UAAKwuD,YAAL,GAAoB,MAAKA,YAAL,CAAkBxuD,IAAlB,OAApB;AACA,UAAKyuD,aAAL,GAAqB,MAAKA,aAAL,CAAmBzuD,IAAnB,OAArB;AACA,UAAK0uD,uBAAL,GAA+B,MAAKA,uBAAL,CAA6B1uD,IAA7B,OAA/B;AACA,UAAK2uD,0BAAL,GAAkC,MAAKA,0BAAL,CAAgC3uD,IAAhC,OAAlC;AACA,UAAK4uD,yBAAL,GAAiC,MAAKA,yBAAL,CAA+B5uD,IAA/B,OAAjC;AACA,UAAK6uD,yBAAL,GAAiC,MAAKA,yBAAL,CAA+B7uD,IAA/B,OAAjC;AACA,UAAK8uD,cAAL,GAAsB,MAAKA,cAAL,CAAoB9uD,IAApB,OAAtB;AACA,UAAK+uD,eAAL,GAAuB,MAAKA,eAAL,CAAqB/uD,IAArB,OAAvB;AACA;AACA,UAAKgvD,UAAL,GAAkB,MAAKA,UAAL,CAAgBhvD,IAAhB,OAAlB;AACA,UAAKivD,UAAL,GAAkB,MAAKA,UAAL,CAAgBjvD,IAAhB,OAAlB;AACA;AACA,UAAKkvD,wBAAL,GAAgC,MAAKA,wBAAL,CAA8BlvD,IAA9B,OAAhC;;AAEA;AACAyC,YAAQ/C,OAAOgD,WAAP,OAAR;;AAEA;AACA;AACAD,UAAM6F,gBAAN,CAAuB,SAAvB,EAAkC,MAAK6jD,aAAvC;AACA1pD,UAAM6F,gBAAN,CAAuB,QAAvB,EAAiC,MAAK8jD,YAAtC;AACA3pD,UAAM6F,gBAAN,CAAuB,WAAvB,EAAoC,MAAKqkD,eAAzC;AACAlqD,UAAMrC,aAAN,CAAoB,WAApB,EAAiC,MAAKwsD,WAAtC;AACAnqD,UAAMrC,aAAN,CAAoB,eAApB,EAAqC,MAAKssD,cAA1C;AACAjqD,UAAMrC,aAAN,CAAoB,yBAApB,EAA+C,MAAKksD,cAApD;AACA7pD,UAAMrC,aAAN,CAAoB,WAApB,EAAiC,MAAKgtD,QAAtC,EA9EiB,CA8EgC;AACjD3qD,UAAMrC,aAAN,CAAoB,qBAApB,EAA2C,MAAKstD,eAAhD;AA/EiB;AAgFlB;;;;wCAEmB;AAClB,WAAKxB,UAAL,GADkB,CACC;;AADD,UAGV1a,MAHU,GAGC,KAAK1xC,KAHN,CAGV0xC,MAHU;;AAIlB,UAAMtU,OAAOz6B,MAAM+lB,QAAN,CAAe,QAAf,EAAyB6T,KAAzB,CAA+B4C,IAA/B,CAAoC;AAAA,eAAK37B,EAAE5B,EAAF,KAAS8vC,MAAd;AAAA,OAApC,CAAb;AACA,WAAKqb,QAAL,CAAc3vB,IAAd;;AAEAt+B,aAAOkD,gBAAP,CAAwB,cAAxB,EAAwC,KAAK0qD,WAA7C;AACA5tD,aAAOkD,gBAAP,CAAwB,QAAxB,EAAkC,KAAK2qD,QAAvC;AACD;;;2CACsB;AACrBhqD,YAAMkmB,iBAAN,CAAwB,SAAxB,EAAmC,KAAKwjC,aAAxC;AACA1pD,YAAMkmB,iBAAN,CAAwB,QAAxB,EAAkC,KAAKyjC,YAAvC;AACA3pD,YAAMkmB,iBAAN,CAAwB,WAAxB,EAAqC,KAAKgkC,eAA1C;AACAlqD,YAAMqc,eAAN,CAAsB,WAAtB,EAAmC,KAAK8tC,WAAxC;AACAnqD,YAAMqc,eAAN,CAAsB,eAAtB,EAAuC,KAAK4tC,cAA5C;AACAjqD,YAAMqc,eAAN,CAAsB,yBAAtB,EAAiD,KAAKwtC,cAAtD;AACA7pD,YAAMqc,eAAN,CAAsB,WAAtB,EAAmC,KAAKsuC,QAAxC;AACA3qD,YAAMqc,eAAN,CAAsB,qBAAtB,EAA6C,KAAK4uC,eAAlD;AACA9uD,aAAO+oB,mBAAP,CAA2B,cAA3B,EAA2C,KAAK6kC,WAAhD;AACA5tD,aAAO+oB,mBAAP,CAA2B,QAA3B,EAAqC,KAAK8kC,QAA1C;AACD;;AAED;AACA;AACA;;;;iCACa;AACX,WAAKpsD,QAAL,CAAc;AACZ;AACAqB,YAAI,IAFQ;AAGZ;AACA;AACAw4C,kBAAU,IALE;AAMZC,kBAAU,IANE;AAOZlnC,cAAM,EAPM;AAQZkuC,oBAAY,EARA;AASZ5lB,oBAAY,EATA;AAUZ1B,iBAAS31B,SAVG;AAWZ01B,iBAAS11B,SAXG;AAYZg8C,kBAAU,CAZE;;AAcZ;AACA;AACA;;AAEA;AACAiP,yBAAiB,KAnBL;AAoBZC,sBAAc,KApBF;AAqBZC,mBAAWlgB,KAAKiC,QAAL,CAAcke,IArBb;AAsBZC,sBAAclJ,KAAKyF,UAtBP;AAuBZ0D,6BAAqBtrD,SAvBT;AAwBZurD,0BAAkB,MAxBN,EAwBc;AAC1BC,uBAAe,KAzBH,EAyBU;AACtBC,6BAAqB,KA1BT;AA2BZC,2BAAmB,KA3BP;AA4BZC,0BAAkB,EA5BN;AA6BZC,qBAAa5rD,SA7BD;AA8BZ6rD,uBAAe7rD,SA9BH;AA+BZ8rD,6BAAqB,KA/BT;;AAiCZ;AACAC,qBAAa/rD,SAlCD;AAmCZgsD,0BAAkB,IAnCN;AAoCZC,qBAAajsD,SApCD;AAqCZksD,0BAAkB;AArCN,OAAd;AAuCD;AACD;AACA;AACA;;;;gCACY5tD,K,EAAO;AACjBA,YAAM4wB,cAAN;AACA,UAAI,KAAKnzB,KAAL,CAAWovD,SAAX,KAAyBlgB,KAAKiC,QAAL,CAAcif,IAA3C,EAAiD;AAC/C,SAAC7tD,SAAS5D,OAAO4D,KAAjB,EAAwB07C,WAAxB,GAAsC,IAAtC;AACD,OAFD,MAEO;AACLlnC,gBAAQmX,cAAR,CAAuB3rB,KAAvB,EAA8B,aAA9B;AACD;AACD,aAAOA,KAAP;AACD;;;6BACQA,K,EAAO;AACd,UAAI,KAAKvC,KAAL,CAAWovD,SAAX,KAAyBlgB,KAAKiC,QAAL,CAAcif,IAA3C,EAAiD;AAC/C5tD,cAAM0G,OAAN,CAAc,kBAAd,EAAkC,EAAEY,QAAQ,KAAK9J,KAAL,CAAWyB,EAArB,EAAlC;AACAe,cAAM0G,OAAN,CAAc,uBAAd,EAAuC,EAAE06B,QAAQ13B,WAAWI,IAArB,EAAvC;AACD;AACF;AACD;;;;;;;;;;;;kCAScwjB,O,EAAS;AAAA;;AACrB,WAAK1vB,QAAL,CAAc,EAAEysC,YAAY/c,QAAQvnB,OAAtB,EAAd,EAA+C;AAAA,eAAM,OAAK+jD,iBAAL,EAAN;AAAA,OAA/C;AACD;AACD;;;;;;iCAGajsD,I,EAAM;AAAA;;AACjB;AACA,UAAMmgC,cAAcngC,KAAK+7B,KAAL,CAAW4C,IAAX,CAAgB;AAAA,eAAK37B,EAAE5B,EAAF,KAAS,OAAK5B,KAAL,CAAW0xC,MAAzB;AAAA,OAAhB,CAApB;AACA,WAAKqb,QAAL,CAAcpsB,WAAd;AACD;AACD;;;;;;;;;;iCAOa;AACX,UAAMlQ,UAAU9tB,MAAM+lB,QAAN,CAAe,SAAf,CAAhB;AACA,UAAMskB,aAAavc,QAAQ/nB,OAA3B;AACA,WAAKnI,QAAL,CAAc,EAAEysC,sBAAF,EAAd;AACA,aAAOA,UAAP;AACD;;;mCACcxsC,I,EAAM;AAAA;;AAAA,UACXoB,EADW,GACJ,KAAKzB,KADD,CACXyB,EADW;;AAEnB,UAAM4uD,eAAehwD,KAAKojC,WAAL,CAAiB1wB,QAAjB,CAA0BtR,EAA1B,CAArB;AACA,WAAKrB,QAAL,CACE;AACEqvD,uBAAeY,YADjB;AAEEX,6BAAqBrvD,KAAK8iC,mBAF5B;AAGEwsB,2BAAmBtvD,KAAK+iC;AAH1B,OADF,EAME;AAAA,eAAM,OAAKkpB,iBAAL,EAAN;AAAA,OANF;AAQD;;;wCACmB;AAAA,mBACgD,KAAKtsD,KADrD;AAAA,UACVyvD,aADU,UACVA,aADU;AAAA,UACKC,mBADL,UACKA,mBADL;AAAA,UAC0BC,iBAD1B,UAC0BA,iBAD1B;;AAElB,UAAM9iB,aAAa,KAAKuf,UAAL,EAAnB;AACA,UAAMjgD,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,UAAIqnC,mBAAmB,EAAvB;AACA,UAAIV,kBAAkB,KAAtB;AACA,UAAIC,eAAe,IAAnB;AACA,UAAItiB,UAAJ,EAAgBsiB,eAAe,KAAf;AAChB,UAAIM,aAAJ,EAAmB;AACjBP,0BAAkB,IAAlB;AACAU,4BAAoBzjD,SAASwsB,mBAA7B;AACD;AACD,UAAI+2B,mBAAJ,EAAyB;AACvBR,0BAAkB,IAAlB;AACAU,4BAAoBzjD,SAAS0sB,uBAA7B;AACD;AACD,UAAI82B,iBAAJ,EAAuB;AACrBT,0BAAkB,IAAlB;AACAU,4BAAoBzjD,SAASuuB,qBAA7B;AACD;AACD,WAAKt6B,QAAL,CAAc,EAAE8uD,gCAAF,EAAmBC,0BAAnB,EAAiCS,kCAAjC,EAAd;AACD;;;qCACgB;AACf,WAAK3D,UAAL;AACD;;;oCACe5rD,I,EAAM;AAAA,UACZiwD,kBADY,GACW,KAAKtwD,KADhB,CACZswD,kBADY;;AAEpB,UAAMC,eAAelwD,KAAK47B,KAAL,CAAW,CAAX,CAArB,CAFoB,CAEgB;AACpC,UAAIq0B,uBAAuB,QAA3B,EAAqC;AACnC,aAAKlwD,QAAL,CAAc;AACZ65C,oBAAUsW,aAAa9uD,EADX;AAEZuuD,uBAAaO;AAFD,SAAd;AAID,OALD,MAKO,IAAID,uBAAuB,QAA3B,EAAqC;AAC1C,aAAKlwD,QAAL,CAAc;AACZ85C,oBAAUqW,aAAa9uD,EADX;AAEZyuD,uBAAaK;AAFD,SAAd;AAID,OALM,MAKA;AACL;AACD;AACF;;;gCACWlwD,I,EAAM;AAChB;AACA,WAAKusD,QAAL,CAAcvsD,KAAK48B,IAAnB;AACD;;AAED;AACA;AACA;;;;6BACSA,I,EAAM;AAAA;;AAAA,UACLmyB,SADK,GACS,KAAKpvD,KADd,CACLovD,SADK;;AAGb;;AACA,UAAIA,cAAclgB,KAAKiC,QAAL,CAAcif,IAAhC,EAAsC;;AAEtC;AACA,UAAI,CAACnzB,IAAL,EAAW;AACT,aAAKwvB,cAAL;AACA;AACD;;AAED;AACA,UAAMvL,aAAa,KAAK4L,cAAL,CAAoB7vB,IAApB,CAAnB;AACA,UAAM3B,aAAa,KAAKyxB,cAAL,CAAoB9vB,IAApB,CAAnB;AACA,WAAK78B,QAAL,CACE;AACEqB,YAAIw7B,KAAKx7B,EADX;AAEEw4C,kBAAUhd,KAAKvB,MAFjB;AAGEwe,kBAAUjd,KAAKzyB,MAHjB;AAIEwI,cAAMiqB,KAAKjqB,IAJb;AAKEkuC,oBAAYA,UALd;AAME5lB,oBAAYA,UANd;AAOE1B,iBAASqD,KAAKpkB,IAAL,GAAY,IAAIlV,IAAJ,CAASs5B,KAAKpkB,IAAL,CAAU+gB,OAAnB,EAA4B42B,cAA5B,EAAZ,GAA2D,EAPtE;AAQEC,mBAAWxzB,KAAKwzB,SARlB;AASE92B,iBAASsD,KAAKpkB,IAAL,GAAY,IAAIlV,IAAJ,CAASs5B,KAAKpkB,IAAL,CAAU8gB,OAAnB,EAA4B62B,cAA5B,EAAZ,GAA2D,EATtE;AAUEE,mBAAWzzB,KAAKyzB,SAVlB;AAWEzQ,kBAAUhjB,KAAKpkB,IAAL,GAAYokB,KAAKpkB,IAAL,CAAUonC,QAAtB,GAAiC;AAX7C,OADF,EAcE;AAAA,eAAM,OAAKmN,mBAAL,EAAN;AAAA,OAdF;AAgBD;AACD;;;;;;;;;;;;mCASenwB,I,EAAM;AACnB,UAAMxC,WAAWj4B,MAAM+lB,QAAN,CAAe,UAAf,EAA2BsR,QAA5C;AACA,UAAMqnB,aAAa,EAAnB;AACAv2C,aAAOuH,IAAP,CAAYuoB,QAAZ,EAAsB7mB,OAAtB,CAA8B,aAAK;AACjC,YAAInH,oBAAoBsG,QAApB,CAA6BX,CAA7B,CAAJ,EAAqC,OADJ,CACY;AAC7C,YAAMu+C,WAAWl2B,SAASroB,CAAT,CAAjB;AACA,YAAIu+C,SAASr4B,MAAb,EAAqB,OAHY,CAGJ;AAC7B,YAAIq4B,SAASC,YAAb,EAA2B,OAJM,CAIE;AACnC1P,mBAAW9uC,CAAX,IAAgB6qB,KAAK7qB,CAAL,CAAhB;AACD,OAND;AAOA,aAAO8uC,UAAP;AACD;AACD;;;;;;;;;;;;mCASejkB,I,EAAM;AACnB,UAAMxC,WAAWj4B,MAAM+lB,QAAN,CAAe,UAAf,EAA2BsR,QAA5C;AACA,UAAMyB,aAAa,EAAnB;AACA3wB,aAAOuH,IAAP,CAAYuoB,QAAZ,EAAsB7mB,OAAtB,CAA8B,aAAK;AACjC,YAAInH,oBAAoBsG,QAApB,CAA6BX,CAA7B,CAAJ,EAAqC,OADJ,CACY;AAC7C,YAAMy+C,iBAAiBp2B,SAASroB,CAAT,CAAvB;AACA,YAAIy+C,eAAev4B,MAAnB,EAA2B,OAHM,CAGE;AACnC,YAAI,CAACu4B,eAAeD,YAApB,EAAkC,OAJD,CAIS;AAC1Ct1B,mBAAWlpB,CAAX,IAAgB6qB,KAAK7qB,CAAL,CAAhB;AACD,OAND;AAOA,aAAOkpB,UAAP;AACD;;AAED;;;;;;;;;;6BAOSqa,E,EAAI;AAAA,UACHl0C,EADG,GACI,KAAKzB,KADT,CACHyB,EADG;;AAEX,UAAIqvD,cAAc,KAAlB;AACAtuD,YAAM0G,OAAN,CAAc,gBAAd,EAAgC,EAAEY,QAAQrI,EAAV,EAAhC,EAAgDqH,IAAhD,CAAqD,gBAAQ;AAC3D,YAAIzI,KAAK4+B,GAAT,EAAc;AACZ19B,kBAAQC,GAAR,mBAA4BnB,KAAK4+B,GAAjC,SAAwC5+B,KAAK6+B,IAA7C;AACD,SAFD,MAEO,IAAI7+B,KAAKo+B,MAAT,EAAiB;AACtBl9B,kBAAQC,GAAR,mDAA4DnB,KAAKyJ,MAAjE;AACAvI,kBAAQC,GAAR;AACAsvD,wBAAc,IAAd;AACA;AACAtuD,gBAAM0G,OAAN,CAAc,mBAAd,EAAmC,EAAE06B,QAAQ13B,WAAWI,IAArB,EAAnC;AACD;AACD,YAAI,OAAOqpC,EAAP,KAAc,UAAlB,EAA8BA,GAAGmb,WAAH;AAC/B,OAXD;AAYD;AACD;;;;;;;+BAIWnb,E,EAAI;AAAA,UACLl0C,EADK,GACE,KAAKzB,KADP,CACLyB,EADK;;AAEb,UAAIsvD,gBAAgB,KAApB;AACAvuD,YAAM0G,OAAN,CAAc,kBAAd,EAAkC,EAAEY,QAAQrI,EAAV,EAAlC,EAAkDqH,IAAlD,CAAuD,gBAAQ;AAC7D,YAAIzI,KAAK4+B,GAAT,EAAc;AACZ19B,kBAAQC,GAAR,mBAA4BnB,KAAK4+B,GAAjC,SAAwC5+B,KAAK6+B,IAA7C;AACD,SAFD,MAEO,IAAI7+B,KAAKs+B,QAAT,EAAmB;AACxBp9B,kBAAQC,GAAR,0DACyDnB,KAAKyJ,MAD9D;AAGAinD,0BAAgB,IAAhB;AACA;AACAvuD,gBAAM0G,OAAN,CAAc,uBAAd,EAAuC,EAAE06B,QAAQ13B,WAAWI,IAArB,EAAvC;AACD;AACD,YAAI,OAAOqpC,EAAP,KAAc,UAAlB,EAA8BA,GAAGob,aAAH;AAC/B,OAZD;AAaD;;;iCACYpb,E,EAAI;AAAA,UACPl0C,EADO,GACA,KAAKzB,KADL,CACPyB,EADO;;AAEf,UAAI4uD,eAAe,KAAnB;AACA7tD,YAAM0G,OAAN,CAAc,oBAAd,EAAoC,EAAEY,QAAQrI,EAAV,EAApC,EAAoDqH,IAApD,CAAyD,gBAAQ;AAC/D,YAAIzI,KAAK4+B,GAAT,EAAc;AACZ;AACA;AACA;AACA19B,kBAAQC,GAAR,mBAA4BnB,KAAK4+B,GAAjC,SAAwC5+B,KAAK6+B,IAA7C;AACD,SALD,MAKO,IAAI7+B,KAAKo+B,MAAT,EAAiB;AACtBl9B,kBAAQC,GAAR,wDACuDnB,KAAKyJ,MAD5D;AAGAumD,yBAAe,IAAf;AACD;AACD,YAAI,OAAO1a,EAAP,KAAc,UAAlB,EAA8BA,GAAG0a,YAAH;AAC/B,OAbD;AAcD;AACD;;;;;;;+BAIW;AAAA;;AACT,UAAI,CAAC,KAAKjE,UAAL,EAAL,EAAwB;AACxB,WAAKY,QAAL,CAAc,uBAAe;AAC3B,eAAK5sD,QAAL,CAAc,EAAEqvD,eAAe,CAACqB,WAAlB,EAAd,EAA+C,YAAM;AACnD,cAAIA,WAAJ,EAAiB,OAAK7C,gBAAL;AAClB,SAFD;AAGD,OAJD;AAKD;;AAED;;;;;;;0CAIsB;AAAA;;AAAA,oBACW,KAAKjuD,KADhB;AAAA,UACZi6C,QADY,WACZA,QADY;AAAA,UACFC,QADE,WACFA,QADE;AAEpB;;AACA,UAAMpyC,SAAStF,MAAM+lB,QAAN,CAAe,QAAf,CAAf;AACA,UAAMynC,cAAcloD,OAAOm0B,KAAP,CAAa+C,IAAb,CAAkB;AAAA,eAAKjC,EAAEt7B,EAAF,KAASw4C,QAAd;AAAA,OAAlB,KAA6C;AAC/DtjC,eAAO;AADwD,OAAjE;AAGA,UAAMu5C,cAAcpoD,OAAOm0B,KAAP,CAAa+C,IAAb,CAAkB;AAAA,eAAKjC,EAAEt7B,EAAF,KAASy4C,QAAd;AAAA,OAAlB,KAA6C;AAC/DvjC,eAAO;AADwD,OAAjE;AAGA,WAAKvW,QAAL,CACE;AACE4vD,gCADF;AAEEE;AAFF,OADF,EAKE,YAAM;AACJ,eAAKtC,kBAAL;AACA,eAAKC,wBAAL;AACA;AACA,eAAKztD,QAAL,CAAc,EAAE4rD,eAAe,YAAjB,EAAd,EAJI,CAI4C;AAChD;AACA,eAAKkB,YAAL,CAAkB,wBAAgB;AAChC,iBAAK9sD,QAAL,CAAc,EAAEqvD,eAAeY,YAAjB,EAAd,EAA+C;AAAA,mBAC7C,OAAK/D,iBAAL,EAD6C;AAAA,WAA/C;AAGD,SAJD;AAKD,OAhBH;AAkBD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;yCAUqBvnD,G,EAAK4R,K,EAAOlV,E,EAAI;AAAA;;AACnC;AACA;AACA,UAAIuvD,gBAAJ;AAAA,UAAa/X,qBAAb;AACA,UAAIx3C,EAAJ,EAAQ;AACN;AACAuvD,kBAAU,IAAV;AACA/X,uBAAex3C,EAAf;AACD,OAJD,MAIO;AACL;AACAuvD,kBAAU,OAAV;AACA/X,uBAAetiC,KAAf;AACD;AACDnU,YAAME,SAAN,CAAgB,mBAAhB,EAAqC;AACnCqC,aAAKisD,OAD8B;AAEnC/X;AAFmC,OAArC,EAGGnwC,IAHH,CAGQ,gBAAQ;AACd,YAAIzI,KAAK47B,KAAL,CAAWz3B,MAAX,GAAoB,CAAxB,EAA2B;AACzB,cAAMs4B,OAAOz8B,KAAK47B,KAAL,CAAW,CAAX,CAAb;AACA,iBAAKyxB,oBAAL,CAA0B3oD,GAA1B,EAA+B+3B,IAA/B;AACD,SAHD,MAGO;AACL,iBAAKwwB,oBAAL,CAA0BvoD,GAA1B,EAA+B4R,KAA/B;AACD;AACF,OAVD;AAWD;AACD;;;;;;;;;yCAMqB5R,G,EAAKM,K,EAAO;AAC/B,WAAKjF,QAAL,CAAc;AACZyvD,qBAAa9qD,GADD;AAEZ+qD,uBAAezqD;AAFH,OAAd;AAID;AACD;;;;;;;iCAIa;AAAA;;AAAA,oBAC4B,KAAKrF,KADjC;AAAA,UACH6vD,WADG,WACHA,WADG;AAAA,UACUC,aADV,WACUA,aADV;;AAEXttD,YAAME,SAAN,CAAgB,aAAhB,EAA+B,EAAEiU,OAAOm5C,aAAT,EAA/B,EAAyDhnD,IAAzD,CAA8D,gBAAQ;AACpE,eAAK1I,QAAL,CAAc,EAAEyvD,aAAa5rD,SAAf,EAA0B6rD,eAAe7rD,SAAzC,EAAd,EAAoE;AAAA,iBAClE,OAAKypD,oBAAL,CAA0BmC,WAA1B,EAAuC/yB,IAAvC,CADkE;AAAA,SAApE;AAGD,OAJD;AAKD;AACD;;;;;;;oCAIgB;AACd,WAAK18B,QAAL,CAAc,EAAEyvD,aAAa5rD,SAAf,EAA0B6rD,eAAe7rD,SAAzC,EAAd;AACD;AACD;;;;;;;;;oCAMgB5D,I,EAAM;AAAA,UACZkvD,mBADY,GACY,KAAKvvD,KADjB,CACZuvD,mBADY;;AAGpB;;AACA/sD,YAAME,SAAN,CAAgB,oBAAhB,EAAsC,EAAE8rB,MAAM,WAAR,EAAtC;;AAEA;AACAhsB,YAAME,SAAN,CAAgB,8BAAhB;;AAEA,WAAKgrD,oBAAL,CAA0B6B,mBAA1B,EAA+ClvD,KAAKy8B,IAApD;AACD;AACD;;;;;;;;;;yCAOqB/3B,G,EAAK+3B,I,EAAM;AAAA;;AAC9B;AACA;AACA,UAAM98B,QAAQ;AACZuvD,6BAAqBtrD,SADT;AAEZ4rD,qBAAa5rD,SAFD,EAEY;AACxB6rD,uBAAe7rD,SAHH,CAGa;AAHb,OAAd;AAKA,UAAIc,QAAQ,QAAZ,EAAsB;AACpB/E,cAAMi6C,QAAN,GAAiBnd,KAAKr7B,EAAtB;AACD,OAFD,MAEO;AACL;AACAzB,cAAMk6C,QAAN,GAAiBpd,KAAKr7B,EAAtB;AACD;;AAED;AACAe,YAAME,SAAN,CAAgB,4BAAhB,EAA8C,EAAEo6B,UAAF,EAA9C;;AAEA,WAAK18B,QAAL,CAAcJ,KAAd,EAAqB;AAAA,eAAM,QAAKotD,mBAAL,EAAN;AAAA,OAArB;AACD;;AAED;AACA;AACA;;;;+BACW;AAAA;;AAAA,oBACwD,KAAKptD,KAD7D;AAAA,UACDyB,EADC,WACDA,EADC;AAAA,UACGw4C,QADH,WACGA,QADH;AAAA,UACaC,QADb,WACaA,QADb;AAAA,UACuBlnC,IADvB,WACuBA,IADvB;AAAA,UAC6BkuC,UAD7B,WAC6BA,UAD7B;AAAA,UACyC5lB,UADzC,WACyCA,UADzC;;AAET,UAAMxd,MAAMiuB,QAAQkF,gBAAR,EAAZ;AACA,UAAMhU,OAAO;AACXx7B,cADW;AAEXi6B,gBAAQue,QAFG;AAGXzvC,gBAAQ0vC,QAHG;AAIXlnC,kBAJW;AAKX09C,mBAAW5yC;AALA,OAAb;AAOAnT,aAAOuH,IAAP,CAAYgvC,UAAZ,EAAwBttC,OAAxB,CAAgC;AAAA,eAAMqpB,KAAK7qB,CAAL,IAAU8uC,WAAW9uC,CAAX,CAAhB;AAAA,OAAhC;AACAzH,aAAOuH,IAAP,CAAYopB,UAAZ,EAAwB1nB,OAAxB,CAAgC;AAAA,eAAMqpB,KAAK7qB,CAAL,IAAUkpB,WAAWlpB,CAAX,CAAhB;AAAA,OAAhC;;AAEA,WAAKhS,QAAL,CACE;AACEgvD,mBAAWlgB,KAAKiC,QAAL,CAAcke;AAD3B,OADF,EAIE,YAAM;AACJ,gBAAKrW,OAAL,CAAa,WAAb,EAA0B,EAAE/b,UAAF,EAA1B,EAAoCn0B,IAApC,CAAyC,YAAM;AAC7C,kBAAKmkD,UAAL,CAAgB,YAAM;AACpB;AACAzqD,kBAAME,SAAN,CAAgB,8BAAhB;;AAEAF,kBAAME,SAAN,CAAgB,oBAAhB,EAAsC,EAAE8rB,MAAM,QAAR,EAAtC;AACA,oBAAKpuB,QAAL,CAAc;AACZqvD,6BAAe,KADH;AAEZF,mCAAqBtrD;AAFT,aAAd;AAID,WATD;AAUD,SAXD;AAYD,OAjBH;AAmBAxE,aAAO6C,GAAP,CAAW,iBAAX,EAA8Bb,EAA9B,EAAkC,KAAKssD,eAAL,EAAlC,EAA0D3kD,KAAKC,SAAL,CAAe4zB,IAAf,CAA1D;AACD;;;iCACY;AAAA,UACHx7B,EADG,GACI,KAAKzB,KADT,CACHyB,EADG;;AAEX,WAAKu3C,OAAL,CAAa,WAAb,EAA0B,EAAElvC,QAAQrI,EAAV,EAA1B,EAFW,CAEgC;AAC5C;;AAED;AACA;AACA;AACA;;;;;;;;yCAKqB;AAAA,UACXuR,IADW,GACF,KAAKhT,KADH,CACXgT,IADW;;AAEnB,UAAMi+C,WAAWzuD,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,UAAMinC,mBAAmByB,SAASC,YAAT,CAAsBl+C,IAAtB,KAA+B,SAAxD;AACA,WAAK5S,QAAL,CAAc,EAAEovD,kCAAF,EAAd;AACD;;;+CAC0B;AAAA,oBACY,KAAKxvD,KADjB;AAAA,UACjBgwD,WADiB,WACjBA,WADiB;AAAA,UACJE,WADI,WACJA,WADI;;AAEzB,UAAMe,WAAWzuD,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,UAAM0nC,mBACJgB,SAASE,YAAT,CAAsBnB,cAAcA,YAAYh9C,IAA1B,GAAiC,EAAvD,CADF;AAEA,UAAMm9C,mBACJc,SAASE,YAAT,CAAsBjB,cAAcA,YAAYl9C,IAA1B,GAAiC,EAAvD,CADF;AAEA,WAAK5S,QAAL,CAAc,EAAE6vD,kCAAF,EAAoBE,kCAApB,EAAd;AACD;;;0CACqB;AAAA,oBAQhB,KAAKnwD,KARW;AAAA,UAElBi6C,QAFkB,WAElBA,QAFkB;AAAA,UAGlB+V,WAHkB,WAGlBA,WAHkB;AAAA,UAIlBC,gBAJkB,WAIlBA,gBAJkB;AAAA,UAKlB/V,QALkB,WAKlBA,QALkB;AAAA,UAMlBgW,WANkB,WAMlBA,WANkB;AAAA,UAOlBC,gBAPkB,WAOlBA,gBAPkB;;AAUpB;;AACA,UAAMiB,kBAAkBnX,QAAxB;AACA,UAAMoX,kBAAkBnX,QAAxB;AACA,UAAMoX,oBAAoBtB,WAA1B;AACA,UAAMuB,oBAAoBrB,WAA1B;AACA,UAAMsB,yBAAyBvB,gBAA/B;AACA,UAAMwB,yBAAyBtB,gBAA/B;;AAEA,WAAK/vD,QAAL,CAAc;AACZ65C,kBAAUoX,eADE;AAEZrB,qBAAauB,iBAFD;AAGZtB,0BAAkBwB,sBAHN;AAIZvX,kBAAUkX,eAJE;AAKZlB,qBAAaoB,iBALD;AAMZnB,0BAAkBqB;AANN,OAAd;AAQD;;;sCACiB;AAAA,oBACqB,KAAKxxD,KAD1B;AAAA,UACRgwD,WADQ,WACRA,WADQ;AAAA,UACKE,WADL,WACKA,WADL;;AAEhB,kBAAUF,YAAYr5C,KAAtB,GAA8B7K,WAA9B,GAA4CokD,YAAYv5C,KAAxD;AACD;;AAED;AACA;AACA;AACA;;;;;;uCAGmB;AAAA,oBAEf,KAAK3W,KAFU;AAAA,UACTsvD,YADS,WACTA,YADS;AAAA,UACK7tD,EADL,WACKA,EADL;AAAA,UACSw4C,QADT,WACSA,QADT;AAAA,UACmBC,QADnB,WACmBA,QADnB;AAAA,UAC6BlnC,IAD7B,WAC6BA,IAD7B;AAAA,UACmCkuC,UADnC,WACmCA,UADnC;AAAA,UAC+C5lB,UAD/C,WAC+CA,UAD/C;;AAGjB,UAAMo2B,gBAAgB;AACpBzX,0BADoB;AAEpBC,0BAFoB;AAGpBlnC,kBAHoB;AAIpBkuC,oBAAYv2C,OAAOC,MAAP,CAAc,EAAd,EAAkBs2C,UAAlB;AACZ;AALoB,OAAtB;AAOA,WAAK9gD,QAAL,CAAc;AACZgvD,mBAAWlgB,KAAKiC,QAAL,CAAcif,IADb;AAEZd,kCAFY;AAGZoC;AAHY,OAAd;AAKAlvD,YAAME,SAAN,CAAgB,oBAAhB,EAAsC,EAAE8rB,MAAM,WAAR,EAAtC;;AAEA,UAAMyO,OAAO;AACXx7B,cADW;AAEXi6B,gBAAQue,QAFG;AAGXzvC,gBAAQ0vC,QAHG;AAIXlnC,kBAJW;AAKXsoB;AALW,OAAb;AAOA3wB,aAAOuH,IAAP,CAAYgvC,UAAZ,EAAwBttC,OAAxB,CAAgC;AAAA,eAAMqpB,KAAK7qB,CAAL,IAAU8uC,WAAW9uC,CAAX,CAAhB;AAAA,OAAhC;AACAzH,aAAOuH,IAAP,CAAYopB,UAAZ,EAAwB1nB,OAAxB,CAAgC;AAAA,eAAMqpB,KAAK7qB,CAAL,IAAUkpB,WAAWlpB,CAAX,CAAhB;AAAA,OAAhC;AACA3S,aAAO6C,GAAP,CAAW,WAAX,EAAwBb,EAAxB,EAA4B,KAAKssD,eAAL,EAA5B,EAAoD3kD,KAAKC,SAAL,CAAe4zB,IAAf,CAApD;AACD;;AAED;AACA;AACA;;;;gCACY16B,K,EAAO;AACjBA,YAAM6/C,eAAN;AADiB,UAET3gD,EAFS,GAEF,KAAKzB,KAFH,CAETyB,EAFS;;AAGjB,WAAKrB,QAAL,CAAc,EAAEkvD,cAAc/sD,MAAMiI,MAAN,CAAanF,KAA7B,EAAd;AACA5F,aAAO6C,GAAP,CAAW,iBAAX,EAA8Bb,EAA9B,EAAkC,KAAKssD,eAAL,EAAlC,EAA0DxrD,MAAMiI,MAAN,CAAanF,KAAvE;AACD;;;sCAEiB9C,K,EAAO;AACvBA,YAAM6/C,eAAN;AACA,WAAK+K,QAAL;AACD;;;qCAEgB;AACf3qD,YAAME,SAAN,CAAgB,eAAhB;AACD;;;uCAEkB;AAAA;;AAAA,oBACuB,KAAK1C,KAD5B;AAAA,UACTyB,EADS,WACTA,EADS;AAAA,UACLw+C,QADK,WACLA,QADK;AAAA,UACKyR,aADL,WACKA,aADL;;AAGjB;;AACA,UAAIzR,WAAW,CAAf,EAAkB;AAChB,aAAKqO,iBAAL;AACA,aAAKzB,UAAL;AACA;AACD;;AAED;AACA,WAAKzsD,QAAL,CACE;AACE65C,kBAAUyX,cAAczX,QAD1B;AAEEC,kBAAUwX,cAAcxX,QAF1B;AAGElnC,cAAM0+C,cAAc1+C,IAHtB;AAIEkuC,oBAAYwQ,cAAcxQ,UAJ5B;AAKEqO,6BAAqBtrD;AACrB;AANF,OADF,EASE,YAAM;AACJ,gBAAKmpD,mBAAL;AACA,gBAAKkB,iBAAL;AACD,OAZH;AAcA7uD,aAAO6C,GAAP,CAAW,kBAAX,EAA+Bb,EAA/B,EAAmC,KAAKssD,eAAL,EAAnC;AACD;;;wCACmB;AAAA;;AAClB,WAAKd,UAAL,CAAgB,YAAM;AACpB,gBAAK7sD,QAAL,CAAc;AACZgvD,qBAAWlgB,KAAKiC,QAAL,CAAcke,IADb;AAEZI,yBAAe;AAFH,SAAd;;AAKA;AACAjtD,cAAME,SAAN,CAAgB,8BAAhB;;AAEAF,cAAME,SAAN,CAAgB,oBAAhB,EAAsC,EAAE8rB,MAAM,QAAR,EAAtC;AACAhsB,cAAM0G,OAAN,CAAc,uBAAd,EAAuC,EAAE06B,QAAQ13B,WAAWI,IAArB,EAAvC;AACD,OAXD;AAYD;;;mCAEc;AACb,WAAKgiD,iBAAL;AACA,WAAKzB,UAAL;AACD;;;kCAEa9nD,G,EAAKM,K,EAAO;AAAA;;AACxB,UAAIoH,oBAAoBsG,QAApB,CAA6BhO,GAA7B,CAAJ,EAAuC;AACrC,YAAM1E,OAAO,EAAb;AACAA,aAAK0E,GAAL,IAAYM,KAAZ;AACA,aAAKjF,QAAL,CAAcC,IAAd,EAAoB;AAAA,iBAAM,QAAKutD,kBAAL,EAAN;AAAA,SAApB;AACD,OAJD,MAIO;AAAA,YACG1M,UADH,GACkB,KAAKlhD,KADvB,CACGkhD,UADH;;AAELA,mBAAWn8C,GAAX,IAAkBM,KAAlB;AACA,aAAKjF,QAAL,CAAc,EAAE8gD,sBAAF,EAAd,EAA8B;AAAA,iBAAM,QAAK0M,kBAAL,EAAN;AAAA,SAA9B;AACD;AACF;;;4CACuB7oD,G,EAAKM,K,EAAO;AAAA;;AAClC,UAAIoH,oBAAoBsG,QAApB,CAA6BhO,GAA7B,CAAJ,EAAuC;AACrC,YAAM1E,OAAO,EAAb;AACAA,aAAK0E,GAAL,IAAYM,KAAZ;AACA,aAAKjF,QAAL,CAAcC,IAAd;AACD,OAJD,MAIO;AAAA,YACGi7B,UADH,GACkB,KAAKt7B,KADvB,CACGs7B,UADH;;AAELA,mBAAWv2B,GAAX,IAAkBM,KAAlB;AACA,aAAKjF,QAAL,CAAc,EAAEk7B,sBAAF,EAAd,EAA8B;AAAA,iBAAM,QAAKsyB,kBAAL,EAAN;AAAA,SAA9B;AACD;AACF;;;+CAE0BrrD,K,EAAO;AAChC,UAAMwC,MAAMxC,MAAMiI,MAAN,CAAa/I,EAAzB;AACA,WAAKrB,QAAL,CAAc,EAAEmvD,qBAAqBxqD,GAAvB,EAAd;AACAvC,YAAME,SAAN,CAAgB,oBAAhB,EAAsC,EAAE8rB,MAAM,cAAR,EAAtC;AACD;;AAED;;;;;;;;8CAK0BzpB,G,EAAKM,K,EAAO;AACpC,UAAMssD,eAAe,EAArB;AACA,UAAI5sD,QAAQ,QAAZ,EAAsB;AACpB4sD,qBAAa3B,WAAb,GAA2B,EAAEr5C,OAAOtR,KAAT,EAA3B;AACD,OAFD,MAEO;AACLssD,qBAAazB,WAAb,GAA2B,EAAEv5C,OAAOtR,KAAT,EAA3B;AACD;AACD,WAAKjF,QAAL,CAAcuxD,YAAd;AACD;;AAED;;;;;;;;;;;8CAQ0B5sD,G,EAAK4R,K,EAAOlV,E,EAAI;AACxC,WAAK4rD,oBAAL,CAA0BtoD,GAA1B,EAA+B4R,KAA/B,EAAsClV,EAAtC;AACD;;;mCAEcc,K,EAAO;AACpBA,YAAM6/C,eAAN;AACA,WAAKhiD,QAAL,CAAc,EAAE2vD,qBAAqB,IAAvB,EAAd;AACD;;;sCACiB;AAChB,WAAK3vD,QAAL,CAAc,EAAE2vD,qBAAqB,KAAvB,EAAd;AACD;;AAED;AACA;;;;iCACa;AAAA,qBAaP,KAAK/vD,KAbE;AAAA,UAETsvD,YAFS,YAETA,YAFS;AAAA,UAGTE,gBAHS,YAGTA,gBAHS;AAAA,UAITxD,aAJS,YAITA,aAJS;AAAA,UAKTkD,eALS,YAKTA,eALS;AAAA,UAMTC,YANS,YAMTA,YANS;AAAA,UAOTS,gBAPS,YAOTA,gBAPS;AAAA,UAQTG,mBARS,YAQTA,mBARS;AAAA,UASTtuD,EATS,YASTA,EATS;AAAA,0CAUTuuD,WAVS;AAAA,UAUTA,WAVS,wCAUK,EAAEr5C,OAAO1S,SAAT,EAVL;AAAA,0CAWTisD,WAXS;AAAA,UAWTA,WAXS,wCAWK,EAAEv5C,OAAO1S,SAAT,EAXL;AAAA,UAYT+O,IAZS,YAYTA,IAZS;;AAcX,UAAM4+C,UAAUpC,mBAAmB,IAAnC,CAdW,CAc8B;AACzC,UAAMrjD,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,UAAMspC,OAAO1lD,SAAS0tB,QAAtB;AACA,UAAMi4B,sBAAsB3lD,SAASgtB,QAAT,IAAqB,CAAChtB,SAASgtB,QAAT,CAAkBb,MAApE;AACA,UAAMy5B,4BAA4B,IAAlC;AACA,UAAM54B,WACJ,eAAahtB,SAAS0H,IAAtB,kCACapS,EADb,wBAESuuD,YAAYr5C,KAFrB,cAEmCu5C,YAAYv5C,KAF/C,aAGCxK,SAASgtB,QAAT,IAAqBhtB,SAASgtB,QAAT,CAAkBtmB,IAAvC,GACM1G,SAASgtB,QAAT,CAAkBtmB,IADxB,UAEG,EALJ,2BAMoBq8B,KAAK8iB,aAAL,EANpB,OADF;AAQA,UAAM1wB,iBAAiB8K,OAAOkF,WAAP,CAAmB7vC,EAAnB,CAAvB;;AAEA,aACE;AAAA;AAAA,UAAK,mCAAiCuqD,aAAtC;AACE;AAAA;AAAA;AACE,uBAAU,MADZ;AAEE,mBAAO,EAAE7qD,iBAAiBywD,OAAnB,EAFT;AAGE,qBAAS,KAAKxD;AAHhB;AAME;AAAA;AAAA,cAAK,WAAU,UAAf,EAA0B,OAAO,EAAEt8B,cAAc,KAAhB,EAAjC;AACE;AAAA;AAAA,gBAAK,WAAU,YAAf;AAAA;AAAkCrwB,gBAAlC;AAAA;AAAA,aADF;AAEE,4CAFF;AAGE,gCAAC,sBAAD,IAAc,MAAM6/B,cAApB;AAHF,WANF;AAWE;AAAA;AAAA,cAAK,WAAU,UAAf;AACG4N,iBAAK+iB,WAAL,CAAiB,QAAjB,EAA2BJ,KAAK,QAAL,EAAet4B,YAA1C,CADH;AAEG,iBAAK01B,wBAAL,CACC,QADD,EAECe,YAAYr5C,KAFb,EAGCo7C,yBAHD,CAFH;AAOE,4CAPF;AAQE;AAAA;AAAA,gBAAK,WAAU,aAAf;AACE;AAAA;AAAA,kBAAK,WAAU,aAAf;AAA8BnmD;AAA9B,eADF;AAGGimD,mBAAK,MAAL,KAAgB,CAACA,KAAK,MAAL,EAAav5B,MAA9B,GACC;AAAA;AAAA,kBAAK,WAAU,mBAAf;AACG4W,qBAAK+iB,WAAL,CACC,MADD,EAECJ,KAAK,MAAL,EAAat4B,YAFd,EAGCs4B,KAAK,MAAL,EAAap4B,IAHd,CADH;AAMGyV,qBAAKgjB,iBAAL,CAAuB,MAAvB,EAA+Bl/C,IAA/B;AANH,eADD,GAUC;AAbJ,aARF;AAwBGk8B,iBAAK+iB,WAAL,CAAiB,QAAjB,EAA2BJ,KAAK,QAAL,EAAet4B,YAA1C,CAxBH;AAyBG,iBAAK01B,wBAAL,CACC,QADD,EAECiB,YAAYv5C,KAFb,EAGCo7C,yBAHD;AAzBH,WAXF;AA2CE;AAAA;AAAA,cAAK,WAAU,cAAf;AACG7iB,iBAAKijB,kBAAL,CAAwB/L,IAAxB,EAA8B,KAAKpmD,KAAnC,EAA0C,KAAKkuD,WAA/C,CADH;AAEE;AAAA;AAAA,gBAAK,WAAU,SAAf;AACGoB,+BAAiBlJ,KAAKyF,UAAtB,IACC3c,KAAKkjB,uBAAL,CAA6B,KAAKpyD,KAAlC,EAAyC6xD,IAAzC,CAFJ;AAGGvC,+BAAiBlJ,KAAK0F,UAAtB,IACC5c,KAAKmjB,uBAAL,CAA6B,KAAKryD,KAAlC,EAAyC6xD,IAAzC;AAJJ;AAFF,WA3CF;AAqDE;AAAA;AAAA,cAAK,WAAU,YAAf;AACGC,mCACC;AAAA;AAAA;AACE,oBAAG,aADL;AAEE,2BAAU,gBAFZ;AAGE,yBAAS,KAAKjD;AAHhB;AAAA;AAAA,aAFJ;AAUE,yCAAK,OAAO,EAAE3gB,UAAU,CAAZ,EAAZ,GAVF;AAWG,aAACihB,YAAD,IAAiBG,iBAAiBlJ,KAAKjxB,KAAvC,IACC;AAAA;AAAA;AACE,oBAAG,SADL;AAEE,yBAAS,KAAKg5B,iBAFhB;AAGE,0BAAUe;AAHZ;AAAA;AAAA;AAZJ,WArDF;AA0EG,WAACC,YAAD,IAAiBS,gBAAjB,IACC;AAAA;AAAA,cAAK,WAAU,iBAAf,EAAiC,OAAO,EAAEj+B,WAAW,KAAb,EAAxC;AACE;AAAA;AAAA;AAAIi+B;AAAJ,aADF;AAEE;AAAA;AAAA,gBAAG,QAAQ,CAAC5Z,OAAZ;AACE;AAAA;AAAA;AAAA;AAAA,eADF;AAAA;AAGE;AAAA;AAAA,kBAAQ,SAAS,KAAKsY,iBAAtB,EAAyC,OAAO,EAAEgE,YAAY,CAAd,EAAhD;AAAA;AAAA;AAHF;AAFF;AA3EJ,SADF;AAwFGvC,+BACC,oBAAC,gBAAD,IAAkB,SAAS52B,QAA3B,EAAqC,SAAS,KAAK21B,eAAnD;AAzFJ,OADF;AA8FD;;;iCAEY;AAAA,UACHyD,YADG,GACc,KAAK1yD,KADnB,CACH0yD,YADG;AAAA,qBAcP,KAAKvyD,KAdE;AAAA,UAGTi6C,QAHS,YAGTA,QAHS;AAAA,UAITC,QAJS,YAITA,QAJS;AAAA,UAKTlnC,IALS,YAKTA,IALS;AAAA,UAMTitC,QANS,YAMTA,QANS;AAAA,UAOTqP,YAPS,YAOTA,YAPS;AAAA,UAQTC,mBARS,YAQTA,mBARS;AAAA,UASTC,gBATS,YASTA,gBATS;AAAA,UAUTM,aAVS,YAUTA,aAVS;AAAA,UAWT9D,aAXS,YAWTA,aAXS;AAAA,UAYTgE,WAZS,YAYTA,WAZS;AAAA,UAaTE,WAbS,YAaTA,WAbS;;AAeX,UAAM0B,UAAUpC,mBAAmB,IAAnC,CAfW,CAe8B;AACzC,UAAMqC,OAAOrvD,MAAM+lB,QAAN,CAAe,UAAf,EAA2BsR,QAAxC;AACA,UAAM24B,gBAAgB1C,gBACpB,oBAAC,QAAD;AACE,4BAAkBA,aAAlB,iDADF;AAEE,gCAAsBA,aAAtB,WAFF;AAGE,cAAM,KAAKvC,UAHb;AAIE,uBAAc,mBAJhB;AAKE,kBAAU,KAAKC;AALjB,QADoB,GASpB,EATF;AAWA,UAAMiF,iBAAiBlD,uBAAuBzwB,MAAMmb,QAAN,CAAvB,IAA0Cnb,MAAMob,QAAN,CAAjE;AACA,aACE;AAAA;AAAA;AACE,qCAAK,WAAU,QAAf,GADF;AAEE;AAAA;AAAA,YAAK,mCAAiC8R,aAAtC;AACE;AAAA;AAAA;AACE,yBAAU,MADZ;AAEE,qBAAO;AACLT,4BAAYqG,OADP;AAELlU,6BAAa8R;AAFR;AAFT;AAQE;AAAA;AAAA,gBAAK,WAAU,UAAf;AACGtgB,mBAAK+iB,WAAL,CAAiB,QAAjB,EAA2BJ,KAAK,QAAL,EAAet4B,YAA1C,CADH;AAEG,mBAAK01B,wBAAL,CACC,QADD,EAECe,YAAYr5C,KAFb,EAGC47C,iBAAiBtY,QAHlB,CAFH;AAOE,8CAPF;AAQE;AAAA;AAAA,kBAAK,WAAU,aAAf;AACE;AAAA;AAAA,oBAAK,WAAU,aAAf;AACE;AAAA;AAAA;AACE,iCAAU,SADZ;AAEE,+BAAS,KAAK6T,mBAFhB;AAGE,6BAAM;AAHR;AAKGjiD;AALH;AADF,iBADF;AAWGgmD,qBAAK,MAAL,KAAgB,CAACA,KAAK,MAAL,EAAav5B,MAA9B,IACC;AAAA;AAAA,oBAAK,WAAU,mBAAf;AACG4W,uBAAK+iB,WAAL,CACC,MADD,EAECJ,KAAK,MAAL,EAAat4B,YAFd,EAGCs4B,KAAK,MAAL,EAAap4B,IAHd,CADH;AAMGyV,uBAAKwjB,kBAAL,CACC,MADD,EAEC1/C,IAFD,EAGC6+C,IAHD,EAIC,KAAKrD,aAJN,EAKCqD,KAAK,MAAL,EAAap4B,IALd;AANH;AAZJ,eARF;AAoCGyV,mBAAK+iB,WAAL,CAAiB,QAAjB,EAA2BJ,KAAK,QAAL,EAAet4B,YAA1C,CApCH;AAqCG,mBAAK01B,wBAAL,CACC,QADD,EAECiB,YAAYv5C,KAFb,EAGC47C,iBAAiBrY,QAHlB;AArCH,aARF;AAoDE;AAAA;AAAA,gBAAK,WAAU,cAAf;AACGhL,mBAAKijB,kBAAL,CAAwB/L,IAAxB,EAA8B,KAAKpmD,KAAnC,EAA0C,KAAKkuD,WAA/C,CADH;AAEE;AAAA;AAAA,kBAAK,WAAU,SAAf;AACGoB,iCAAiBlJ,KAAKyF,UAAtB,IACC3c,KAAKyjB,uBAAL,CAA6B,KAAK3yD,KAAlC,EAAyC6xD,IAAzC,EAA+C,KAAKrD,aAApD,CAFJ;AAGGc,iCAAiBlJ,KAAK0F,UAAtB,IACC5c,KAAK0jB,uBAAL,CACE,KAAK5yD,KADP,EAEE6xD,IAFF,EAGE,KAAKpD,uBAHP;AAJJ;AAFF,aApDF;AAkEE;AAAA;AAAA,gBAAK,WAAU,YAAf,EAA4B,OAAO,EAAEoE,gBAAgB,eAAlB,EAAnC;AACG5S,yBAAW,CAAX,IACC;AAAA;AAAA,kBAAQ,WAAU,WAAlB,EAA8B,SAAS,KAAKsO,YAA5C;AAAA;AAAA,eAFJ;AAME;AAAA;AAAA,kBAAQ,WAAU,WAAlB,EAA8B,SAAS,KAAKF,gBAA5C;AAAA;AAAA,eANF;AASE;AAAA;AAAA,kBAAQ,SAAS,KAAKV,QAAtB,EAAgC,UAAU8E,cAA1C;AAAA;AAAA;AATF;AAlEF;AADF,SAFF;AAoFGD;AApFH,OADF;AAwFD;;AAED;AACA;AACA;;AAEA;;;;;;;;;;;;;;6CAWyBztD,G,EAAKM,K,EAAOytD,Q,EAAU;AAAA,qBAOzC,KAAK9yD,KAPoC;AAAA,UAE3Ci6C,QAF2C,YAE3CA,QAF2C;AAAA,UAG3CC,QAH2C,YAG3CA,QAH2C;AAAA,UAI3CqV,mBAJ2C,YAI3CA,mBAJ2C;AAAA,UAK3CU,gBAL2C,YAK3CA,gBAL2C;AAAA,UAM3CE,gBAN2C,YAM3CA,gBAN2C;;AAQ7C,UAAIz+B,cAAJ;AACA,UAAI,CAACohC,QAAD,KAAcvD,wBAAwBxqD,GAAxB,IAA+BM,UAAUpB,SAAvD,CAAJ,EAAuE;AACrE,eACE,oBAAC,aAAD;AACE,qBAAWc,GADb;AAEE,iBAAOM,KAFT;AAGE,oBAAU,KAAKspD,yBAHjB;AAIE,oBAAU,KAAKC;AAJjB,UADF;AAQD,OATD,MASO;AACLl9B,gBAAQ3sB,QAAQ,QAAR,GAAmBkrD,gBAAnB,GAAsCE,gBAA9C;AACA;AACA,YAAM4C,YAAYvwD,MAAM+lB,QAAN,CAAe,WAAf,CAAlB;AACA,YAAIyqC,uBAAuB,KAA3B;AACA,YAAIjuD,QAAQ,QAAZ,EAAsB;AACpBiuD,iCAAuBD,UAAUE,iBAAV,KAAgChZ,QAAvD;AACD,SAFD,MAEO;AACL;AACA+Y,iCAAuBD,UAAUE,iBAAV,KAAgC/Y,QAAvD;AACD;AACD,YAAMgZ,WAAWF,uBAAuB,UAAvB,GAAoC,EAArD;AACA,eACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE,kBAAIjuD,GADN;AAEE,mBAAQA,GAAR,UAFF;AAGE,8CAA8BmuD,QAHhC;AAIE,uBAAS,KAAKxE,0BAJhB;AAKE,qBAAO,EAAEvtD,iBAAiBuwB,QAAQ,IAA3B,EAAiCgsB,aAAahsB,KAA9C,EALT;AAME,wBAAUohC;AANZ;AAQGztD,qBAASsG;AARZ;AADF,SADF;AAcD;AACF;;AAED;AACA;AACA;;;;6BACS;AAAA,qBACmB,KAAK3L,KADxB;AAAA,UACCyB,EADD,YACCA,EADD;AAAA,UACK2tD,SADL,YACKA,SADL;;AAEP,UAAI,CAAC3tD,EAAL,EAAS,OAAO,EAAP,CAFF,CAEa;AACpB,UAAI2tD,cAAclgB,KAAKiC,QAAL,CAAcke,IAAhC,EAAsC;AACpC,eAAO,KAAKN,UAAL,EAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAKC,UAAL,EAAP;AACD;AACF;;;;EAvoCkBvvD,OAAO4B,S;;AA0oC5B;AACA;;;AACA5C,OAAOC,OAAP,GAAiBqtD,MAAjB;;;;;;;;;;AC/pCA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AA3CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,IAAMntD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMqwC,OAAOrwC,QAAQ,UAAR,CAAb;AACA,IAAMutC,SAASvtC,QAAQ,gBAAR,CAAf;AACA,IAAMa,WAAWb,QAAQ,UAAR,CAAjB;AACA,IAAM01B,SAAS11B,QAAQ,sBAAR,CAAf;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;;eAIgCA,QAAQ,kBAAR,C;IAAxB4N,mB,YAAAA,mB;;gBAC2B5N,QAAQ,sBAAR,C;IAA3BkN,W,aAAAA,W;IAAaC,S,aAAAA,S;;AAErB;AACA;;;AACA,IAAMtK,MAAM,KAAZ;AACA,IAAMs0C,UAAUt2C,SAASwH,OAAT,EAAhB;AACA;AACA,IAAI1E,QAAQ,IAAZ;;AAEA;AACA;AACA,SAAS2wD,aAAT,CAAuBxhB,IAAvB,EAA6B;AAC3B,mCAA+BA,IAA/B;AACD;;AAED;AACA;AACA;;IACMuU,W;;;AACJ,uBAAYrmD,KAAZ,EAAmB;AAAA;;AAAA,0HACXA,KADW;;AAGjB,QAAMsM,WAAW,MAAKoc,QAAL,CAAc,UAAd,CAAjB;AACA,UAAKvoB,KAAL,GAAa;AACX65B,gBAAU1tB,SAAS0tB,QADR;AAEXuC,aAAO,EAFI;AAGXwiB,sBAAgB36C,SAHL;AAIX46C,yBAAmB1yC,SAAS+sB,WAJjB;AAKX4lB,qBAAe,EALJ;AAMX7iB,aAAO,EANI,EAMA;AACXqe,mBAAa,KAPF;AAQXzb,gBAAU,KARC;AASX0b,kBAAY,IATD;AAUXwE,eAAS,cAVE;AAWXqU,aAAO,CAXI,EAWD;;AAEVC,kBAAY;AAbD,KAAb;;AAgBA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBvzD,IAAvB,OAAzB;AACA,UAAKytC,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BztC,IAA3B,OAA7B;AACA,UAAK83C,uBAAL,GAA+B,MAAKA,uBAAL,CAA6B93C,IAA7B,OAA/B;AACA,UAAKi/C,WAAL,GAAmB,MAAKA,WAAL,CAAiBj/C,IAAjB,OAAnB;AACA,UAAKk/C,qBAAL,GAA6B,MAAKA,qBAAL,CAA2Bl/C,IAA3B,OAA7B;AACA,UAAKm/C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBn/C,IAAtB,OAAxB;AACA,UAAKo/C,sBAAL,GAA8B,MAAKA,sBAAL,CAA4Bp/C,IAA5B,OAA9B;AACA,UAAK+6C,eAAL,GAAuB,MAAKA,eAAL,CAAqB/6C,IAArB,OAAvB;AACA,UAAKq/C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBr/C,IAAtB,OAAxB;AACA,UAAKs/C,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBt/C,IAAvB,OAAzB;AACA,UAAKu7C,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBv7C,IAAvB,OAAzB;AACA,UAAKu/C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBv/C,IAAtB,OAAxB;AACA,UAAKw/C,eAAL,GAAuB,MAAKA,eAAL,CAAqBx/C,IAArB,OAAvB;AACA,UAAKy/C,wBAAL,GAAgC,MAAKA,wBAAL,CAA8Bz/C,IAA9B,OAAhC;AACA,UAAK0/C,wBAAL,GAAgC,MAAKA,wBAAL,CAA8B1/C,IAA9B,OAAhC;AACA,UAAK2/C,cAAL,GAAsB,MAAKA,cAAL,CAAoB3/C,IAApB,OAAtB;AACA,UAAK8/C,eAAL,GAAuB,MAAKA,eAAL,CAAqB9/C,IAArB,OAAvB;;AAEA,UAAKwzD,aAAL,GAAqB,MAAKA,aAAL,CAAmBxzD,IAAnB,OAArB;;AAEA,UAAK+/C,aAAL,GAAqB,CAArB;;AAEA;AACAt9C,YAAQ/C,OAAOgD,WAAP,OAAR;;AAEAD,UAAMrC,aAAN,CAAoB,WAApB,EAAiC,MAAK6+C,WAAtC;AACAx8C,UAAMrC,aAAN,CAAoB,yBAApB,EAA+C,MAAK26C,eAApD;;AAEA;AACA;AACA,UAAKzyC,gBAAL,CAAsB,SAAtB,EAAiC,MAAKmlC,qBAAtC;;AAEA;AACA;AACA,UAAKnlC,gBAAL,CAAsB,QAAtB,EAAgC,MAAK62C,gBAArC;;AAEA;AACA,UAAK72C,gBAAL,CAAsB,UAAtB,EAAkC,MAAK+2C,gBAAvC;;AAEA;AACA,UAAK/2C,gBAAL,CAAsB,gBAAtB,EAAwC,MAAK82C,sBAA7C;;AAEA,UAAK92C,gBAAL,CAAsB,WAAtB,EAAmC,MAAKwvC,uBAAxC;;AAEA;AACA;AACAr1C,UAAMrC,aAAN,CAAoB,0BAApB,EAAgD,MAAKmzD,iBAArD;AACA9wD,UAAMrC,aAAN,CAAoB,0BAApB,EAAgD,MAAKmzD,iBAArD;AACA9wD,UAAMrC,aAAN,CAAoB,8BAApB,EAAoD,MAAKmzD,iBAAzD;AApEiB;AAqElB,G,CAAC;;AAEF;;;;;wCACoB;AAAA;;AAClB,UAAI5xD,GAAJ,EAASH,QAAQC,GAAR,CAAY,8BAAZ;;AAET,WAAKgsC,qBAAL,CAA2B,KAAKjlB,QAAL,CAAc,SAAd,CAA3B;;AAEA;AACA;AACA;AACA,UAAMw3B,iBAAiBv9C,MAAM+lB,QAAN,CAAe,gBAAf,CAAvB;AACA,WAAKnoB,QAAL,CAAc,EAAE0+C,eAAeiB,eAAe3jB,KAAhC,EAAd,EAAuD,YAAM;AAC3D,YAAIt0B,SAAS,OAAKygB,QAAL,CAAc,QAAd,CAAb;AACA,eAAK22B,gBAAL,CAAsBp3C,MAAtB;AACA,eAAKyrD,aAAL;AACD,OAJD;;AAMA;AACA;AACA,WAAKzY,eAAL;AACD;;;2CAEsB;AACrBt4C,YAAMqc,eAAN,CAAsB,WAAtB,EAAmC,KAAKmgC,WAAxC;AACAx8C,YAAMqc,eAAN,CAAsB,yBAAtB,EAAiD,KAAKi8B,eAAtD;AACA,WAAKpyB,iBAAL,CAAuB,SAAvB,EAAkC,KAAK8kB,qBAAvC;AACA,WAAK9kB,iBAAL,CAAuB,QAAvB,EAAiC,KAAKw2B,gBAAtC;AACA,WAAKx2B,iBAAL,CAAuB,gBAAvB,EAAyC,KAAKy2B,sBAA9C;AACA,WAAKz2B,iBAAL,CAAuB,UAAvB,EAAmC,KAAK02B,gBAAxC;AACA,WAAK12B,iBAAL,CAAuB,WAAvB,EAAoC,KAAKmvB,uBAAzC;AACAr1C,YAAMqc,eAAN,CAAsB,0BAAtB,EAAkD,KAAKy0C,iBAAvD;AACA9wD,YAAMqc,eAAN,CAAsB,0BAAtB,EAAkD,KAAKy0C,iBAAvD;AACA9wD,YAAMqc,eAAN,CAAsB,8BAAtB,EAAsD,KAAKy0C,iBAA3D;AACD;;AAED;AACA;;;;sCACkBjzD,I,EAAM;AACtB,WAAKD,QAAL,CAAc,EAAEgzD,OAAO,KAAKpzD,KAAL,CAAWozD,KAAX,GAAmB,CAA5B,EAAd;AACD;;AAED;;;;4CACwB/yD,I,EAAM;AAC5B,WAAKD,QAAL,CAAc;AACZw+C,wBAAgBv+C,KAAK+7B,KAAL,CAAW53B,MAAX,GAAoB,CAApB,GAAwBnE,KAAK+7B,KAAL,CAAW,CAAX,EAAc36B,EAAtC,GAA2CwC;AAD/C,OAAd;AAGD;AACD;;;;;;;;;0CAMsB6rB,O,EAAS;AAC7B,WAAK1vB,QAAL,CAAc,EAAEy+B,UAAU,CAAC/O,QAAQvnB,OAArB,EAAd;AACD;;AAED;;;;mCACey3C,Q,EAAU;AACvB;AACA,UAAI,CAACA,SAASnnC,IAAd,EAAoB,OAAO,EAAP;;AAEpB,UAAIsP,IAAI,IAAIxkB,IAAJ,CACNq8C,SAASnnC,IAAT,CAAconC,QAAd,GAAyB,CAAzB,GAA6BD,SAASnnC,IAAT,CAAc8gB,OAA3C,GAAqDqmB,SAASnnC,IAAT,CAAc+gB,OAD7D,CAAR;;AAIA,UAAIxsB,OAAO8vC,OAAO/0B,EAAE0e,WAAF,EAAP,CAAX;AACA,UAAIt1B,OAAO4W,EAAEqe,QAAF,KAAe,CAAf,GAAmB,GAAnB,GAAyBre,EAAEue,OAAF,EAAzB,GAAuC,GAAvC,GAA6Ct5B,KAAK2H,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAxD;AACA,UAAI44B,OAAOxlB,EAAEg1B,YAAF,GAAiBpoC,MAAjB,CAAwB,CAAxB,EAA2B,CAA3B,CAAX;AACA,UAAIqoC,WAAW7rC,OAAO,MAAP,GAAgBo8B,IAA/B;AACA,UAAIuS,cAAc,MAAMF,SAASnnC,IAAT,CAAconC,QAAtC;AACA,UAAID,SAASve,KAAb,EACEye,eAAe,SAASF,SAASve,KAAT,CAAeue,SAASve,KAAT,CAAej9B,MAAf,GAAwB,CAAvC,CAAxB;AACF,UAAI27C,MAAM;AAAA;AAAA,UAAM,OAAOD,WAAb;AAAA;AAA4B9C,gBAA5B;AAAA;AAAA,OAAV;;AAEA,aAAO+C,GAAP;AACD;;AAED;AACA;;;;gCACY9/C,I,EAAM;AAChB,WAAKD,QAAL,CAAc,EAAEw+C,gBAAgBv+C,KAAK48B,IAAL,CAAUx7B,EAA5B,EAAd;AACD;;AAED;AACA;;;;0CACsB26B,K,EAAO0iB,a,EAAe;AAC1C;AACA,UAAIA,cAAct6C,MAAd,GAAuB,CAA3B,EAA8B;AAC5B;AACA;AACA,YAAM47C,aAAa59C,MAAM+lB,QAAN,CAAe,YAAf,CAAnB;AACA,YACE63B,WAAWC,YAAX,KAA4B9rB,OAAO+rB,MAAP,CAAcC,MAA1C,IACAH,WAAWC,YAAX,KAA4B9rB,OAAO+rB,MAAP,CAAcE,KAF5C,EAGE;AACA;AACApkB,kBAAQA,MAAMxb,MAAN,CAAa,gBAAQ;AAC3B,gBAAM6/B,eAAe3B,cAAc9f,IAAd,CAAmB;AAAA,qBAAK37B,EAAE5B,EAAF,KAASw7B,KAAKx7B,EAAnB;AAAA,aAAnB,CAArB;AACA,mBAAOg/C,YAAP,CAF2B,CAEN;AACtB,WAHO,CAAR;AAID,SATD,MASO;AACL;AACA;AACA;AACA;AACD;AACF;AACD,WAAKrgD,QAAL,CAAc,EAAEg8B,YAAF,EAAd;AACD;;AAED;AACA;;;;;qCAEiB/7B,I,EAAM;AAAA;;AACrB,UAAIA,QAAQA,KAAK+7B,KAAb,IAAsB/7B,KAAK47B,KAA/B,EAAsC;AACpC;AACA;AACA,aAAK77B,QAAL,CAAc,EAAE67B,OAAO57B,KAAK47B,KAAd,EAAd,EAAqC,YAAM;AACzC;AACA,cAAIG,QAAQ/7B,KAAK+7B,KAAL,CAAWjqB,GAAX,CAAe,aAAK;AAC9B9O,cAAE2uC,WAAF,GAAgB,OAAK6N,eAAL,CAAqBx8C,EAAEq4B,MAAvB,CAAhB,CAD8B,CACkB;AAChDr4B,cAAEs9C,WAAF,GAAgB,OAAKd,eAAL,CAAqBx8C,EAAEmH,MAAvB,CAAhB;AACA,mBAAOnH,CAAP;AACD,WAJW,CAAZ;AAKA,iBAAKjD,QAAL,CAAc,EAAEg8B,YAAF,EAAd;AAPyC,cAQjC0iB,aARiC,GAQf,OAAK9+C,KARU,CAQjC8+C,aARiC;;AASzC,iBAAKG,qBAAL,CAA2B7iB,KAA3B,EAAkC0iB,aAAlC;AACD,SAVD;AAWD;AACF;;AAED;AACA;;;;;;;2CAIuBz+C,I,EAAM;AAAA;;AAC3B,UAAIA,KAAK+7B,KAAT,EAAgB;AACd,YAAM0iB,gBAAgBz+C,KAAK+7B,KAA3B;AACA;AACA;AACA;AACA,YAAMgkB,aAAa59C,MAAM+lB,QAAN,CAAe,YAAf,CAAnB;AACA,YAAI63B,WAAWC,YAAX,KAA4B9rB,OAAO+rB,MAAP,CAAcO,IAA9C,EAAoD;AAClD,cAAM/4C,SAAStF,MAAM+lB,QAAN,CAAe,QAAf,CAAf;AACA,eAAKnoB,QAAL,CACE;AACEg8B,mBAAOt0B,OAAOs0B,KADhB;AAEE0iB;AAFF,WADF,EAKE,YAAM;AACJ,gBAAM1iB,QAAQt0B,OAAOs0B,KAArB;AACA,mBAAK6iB,qBAAL,CAA2B7iB,KAA3B,EAAkC0iB,aAAlC;AACD,WARH;AAUD,SAZD,MAYO;AACL,eAAK1+C,QAAL,CACE;AACEg8B,mBAAO0iB,aADT;AAEEA;AAFF,WADF,EAKE,YAAM;AACJ,gBAAM1iB,QAAQ0iB,aAAd;AACA,mBAAKG,qBAAL,CAA2B7iB,KAA3B,EAAkC0iB,aAAlC;AACD,WARH;AAUD;AACF;AACF;;AAED;;;;sCACkB;AAAA;;AAChB;AACA,UAAIxE,cAAc,KAAlB;AACA93C,YAAM0G,OAAN,CAAc,qBAAd,EAAqCJ,IAArC,CAA0C,gBAAQ;AAChD;AACAwxC,sBACEj6C,KAAK8iC,mBAAL,IACA9iC,KAAK+iC,YADL,IAEA/iC,KAAKgjC,qBAFL,IAGAhjC,KAAKijC,sBAJP,CAFgD,CAMjB;AAC/B,eAAKljC,QAAL,CAAc,EAAEk6C,wBAAF,EAAd;AACD,OARD;AASD;;AAED;;;;qCACiBj6C,I,EAAM;AACrB,WAAKD,QAAL,CAAc;AACZy5B,kBAAUx5B,KAAKw5B,QADH;AAEZglB,2BAAmBx+C,KAAK64B;AAFZ,OAAd;AAID;;AAED;AACA;;;;;oCAEgBmY,M,EAAQ;AACtB,UAAMvU,OAAO,KAAK98B,KAAL,CAAWi8B,KAAX,CAAiB+C,IAAjB,CAAsB;AAAA,eAAKjC,EAAEt7B,EAAF,KAAS4vC,MAAd;AAAA,OAAtB,CAAb;AACA,UAAIvU,SAAS74B,SAAb,EAAwB,OAAO,KAAP;AACxB;AACA,aAAO64B,KAAKnmB,KAAZ;AACD;;AAED;AACA;AACA;;;;;sCAEkBpU,K,EAAOgvC,M,EAAQ;AAC/BhvC,YAAM4wB,cAAN;AACA5wB,YAAM6/C,eAAN;AACA,UAAIt4C,SAASuD,SAASkkC,MAAT,CAAb;AACA,UAAItU,OAAO,KAAKyiB,cAAL,CAAoB51C,MAApB,CAAX;AACA,UAAIpI,GAAJ,EAASH,QAAQC,GAAR,CAAY,oBAAZ,EAAkCy7B,KAAKx7B,EAAvC,EAA2C,sBAA3C;AACT;AACAe,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAACuzB,KAAKvB,MAAN,CAAX,EAAjC,EAA6D5yB,IAA7D,CAAkE,YAAM;AACtEtG,cAAME,SAAN,CAAgB,aAAhB,EAA+B,EAAE6uC,QAAQtU,KAAKx7B,EAAf,EAA/B;AACD,OAFD;AAGD;;;sCACiBc,K,EAAOgvC,M,EAAQ;AAC/BhvC,YAAM4wB,cAAN;AACA5wB,YAAM6/C,eAAN;AACA,UAAIt4C,SAASuD,SAASkkC,MAAT,CAAb;AACA,UAAItU,OAAO,KAAKyiB,cAAL,CAAoB51C,MAApB,CAAX;AACA,UAAIpI,GAAJ,EAASH,QAAQC,GAAR,CAAY,oBAAZ,EAAkCy7B,KAAKx7B,EAAvC,EAA2C,sBAA3C;AACT;AACAe,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAACuzB,KAAKvB,MAAN,CAAX,EAAjC,EAA6D5yB,IAA7D,CAAkE,YAAM;AACtEtG,cAAME,SAAN,CAAgB,sBAAhB,EAAwC,EAAE6uC,QAAQtU,KAAKx7B,EAAf,EAAxC;AACD,OAFD;AAGD;AACD;AACA;;;;;qCAEiBc,K,EAAO;AACtB,WAAKnC,QAAL,CAAc;AACZm6C,oBAAY,CAAC,KAAKv6C,KAAL,CAAWu6C;AADZ,OAAd;AAGD;AACD;AACA;;;;;oCAEgBlJ,M,EAAQ;AACtB7uC,YAAME,SAAN,CAAgB,mBAAhB,EAAqC,EAAE2uC,cAAF,EAArC;AACD;AACD;AACA;;;;;+BAEWtsC,G,EAAKiO,I,EAAM;AACpB,UAAIjO,QAAQ,KAAK/E,KAAL,CAAW++C,OAAvB,EAAgC,KAAKe,aAAL,GAAqB,CAAC,CAAD,GAAK,KAAKA,aAA/B;AAChC;AADA,WAEK,KAAKA,aAAL,GAAqB,CAArB;;AAEL,UAAM1jB,QAAQ,KAAKwkB,SAAL,CAAe77C,GAAf,EAAoB,KAAK/E,KAAL,CAAWo8B,KAA/B,EAAsCppB,IAAtC,CAAd;AACA,WAAK5S,QAAL,CAAc;AACZg8B,oBADY;AAEZ2iB,iBAASh6C;AAFG,OAAd;AAIAtF,aAAO6C,GAAP,CAAW,iBAAX,EAA8ByC,GAA9B,EAAmC,KAAK+6C,aAAxC;AACD;AACD;AACA;;;;;+BAEWr+C,E,EAAIc,K,EAAO;AACpBA,YAAM4wB,cAAN;;AAEA;AACA,UAAIzxB,GAAJ,EAASH,QAAQC,GAAR,CAAY,oBAAZ,EAAkCC,EAAlC,EAAsC,sBAAtC;AACTe,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAACjI,EAAD,CAAX,EAAjC;AACD;;AAED;AACA;;;;oCACgB;AAAA,mBACqC,KAAKzB,KAD1C;AAAA,UACNo8B,KADM,UACNA,KADM;AAAA,UACCvC,QADD,UACCA,QADD;AAAA,UACWygB,WADX,UACWA,WADX;AAAA,UACwBzb,QADxB,UACwBA,QADxB;;AAEd,UAAI20B,gBAAgB7oD,OAAOuH,IAAP,CAAY2nB,QAAZ,EAAsBjZ,MAAtB,CAClB;AAAA,eAAK,CAACnU,oBAAoBsG,QAApB,CAA6BX,CAA7B,CAAN;AAAA,OADkB,CAApB;;AAIA;AACA;AACA,eAASqhD,gBAAT,CAA0BlxD,KAA1B,EAAiC8C,KAAjC,EAAwC;AACtC9C,cAAM4wB,cAAN;AACA5wB,cAAM6/C,eAAN;AAFsC,YAG9B7Q,MAH8B,GAGTlsC,KAHS,CAG9BksC,MAH8B;AAAA,YAGtB0I,QAHsB,GAGT50C,KAHS,CAGtB40C,QAHsB;AAItC;;AACAz3C,cAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAACuwC,QAAD,CAAX,EAAjC,EAA0DnxC,IAA1D,CAA+D,YAAM;AACnEtG,gBAAME,SAAN,CAAgB,aAAhB,EAA+B,EAAE6uC,cAAF,EAA/B;AACD,SAFD;AAGD;AACD;AACA,eAASmiB,gBAAT,CAA0BnxD,KAA1B,EAAiC8C,KAAjC,EAAwC;AACtC9C,cAAM4wB,cAAN;AACA5wB,cAAM6/C,eAAN;AAFsC,YAG9B7Q,MAH8B,GAGTlsC,KAHS,CAG9BksC,MAH8B;AAAA,YAGtB0I,QAHsB,GAGT50C,KAHS,CAGtB40C,QAHsB;AAItC;;AACAz3C,cAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAACuwC,QAAD,CAAX,EAAjC,EAA0DnxC,IAA1D,CAA+D,YAAM;AACnEtG,gBAAME,SAAN,CAAgB,sBAAhB,EAAwC,EAAE6uC,cAAF,EAAxC;AACD,SAFD;AAGD;AACD;AACA,eAASoiB,gBAAT,CAA0BpxD,KAA1B,EAAiC8uC,MAAjC,EAAyC;AACvC9uC,cAAM4wB,cAAN;AACA5wB,cAAM6/C,eAAN;AACA5/C,cAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAAC2D,SAASgkC,MAAT,CAAD,CAAX,EAAjC;AACD;AACD;AACA;AACA,eAASuiB,eAAT,CAAyBjiB,IAAzB,EAA+B;AAC7B,YAAMxf,WAAWia,OAAOyH,wBAAP,CAAgCsf,cAAcxhB,IAAd,CAAhC,CAAjB;AACA,YAAMyB,QAAQ+f,cAAcxhB,IAAd,CAAd;AACAvF,eAAOmH,uBAAP,CAA+BH,KAA/B,EAAsCzB,IAAtC,EAA4Cxf,QAA5C;AACD;AACD;AACA;AACA,eAAS0hC,gBAAT,CAA0BxuD,KAA1B,EAAiC;AAC/B,eACE;AAAA;AAAA;AACG,WAACi1C,WAAD,IACC;AAAA;AAAA;AACE,yBAAU,SADZ;AAEE,uBAAS;AAAA,uBAASmZ,iBAAiBlxD,KAAjB,EAAwB8C,KAAxB,CAAT;AAAA;AAFX;AAIG2G;AAJH,WAFJ;AASG,WAACsuC,WAAD,IAAgB,CAACzb,QAAjB,IACC;AAAA;AAAA;AACE,yBAAU,SADZ;AAEE,uBAAS;AAAA,uBAAS60B,iBAAiBnxD,KAAjB,EAAwB8C,KAAxB,CAAT;AAAA;AAFX;AAIG0G;AAJH;AAVJ,SADF;AAoBD;AACD;AACA;AACA;AACA;AACA;AACA,eAAS+nD,UAAT,CAAoBzuD,KAApB,EAA2B;AACzB,YAAI,CAACA,KAAL,EAAY,OADa,CACL;AACpB,YAAIA,MAAM5D,EAAN,KAAawC,SAAb,IAA0BoB,MAAMsR,KAAN,KAAgB1S,SAA9C,EAAyD;AACvD;AACA,iBAAO;AAAA;AAAA,cAAM,OAAO,EAAEytB,OAAO,KAAT,EAAb;AAAA;AAAA,WAAP;AACD;AACD,eACE;AAAA;AAAA;AACE,uBAAU,SADZ;AAEE,qBAAS;AAAA,qBAASiiC,iBAAiBpxD,KAAjB,EAAwB8C,MAAM5D,EAA9B,CAAT;AAAA;AAFX;AAIE;AAAA;AAAA,cAAM,OAAO,EAAEiwB,OAAO,MAAT,EAAb;AAAiCrsB,kBAAMsR;AAAvC;AAJF,SADF;AAQD;AACD;AACA,eAASo9C,gBAAT,CAA0B1uD,KAA1B,EAAiC;AAC/B,eACE,oBAAC,uBAAD;AACE,iBAAO8tD,cAAc9tD,MAAMssC,IAApB,CADT;AAEE,iBAAOtsC,MAAMoE,KAFf;AAGE,6BAAmBpE,MAAM2uD,iBAH3B;AAIE,oBAAU3uD,MAAM6tD,QAJlB;AAKE,cAAI;AAAA,mBAAKU,gBAAgBvuD,MAAMssC,IAAtB,CAAL;AAAA;AALN,UADF;AASD;AACD;AACA;AACA;AACA,eAASsiB,SAAT,CAAmBlvD,GAAnB,EAAwBmvD,KAAxB,EAA+BzS,KAA/B,EAAsC;AACpC,YAAM0S,aAAa,6BAAID,KAAJ,GAAWpT,IAAX,CAAgB,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC3C,cAAID,EAAEgB,GAAF,EAAO4R,KAAP,GAAe3S,EAAEe,GAAF,EAAO4R,KAA1B,EAAiC,OAAO8qC,KAAP;AACjC,cAAI19C,EAAEgB,GAAF,EAAO4R,KAAP,GAAe3S,EAAEe,GAAF,EAAO4R,KAA1B,EAAiC,OAAO8qC,QAAQ,CAAC,CAAhB;AACjC,iBAAO,CAAP;AACD,SAJkB,CAAnB;AAKA,eAAO0S,UAAP;AACD;AACD;AACA,eAASC,mBAAT,CAA6BrvD,GAA7B,EAAkCmvD,KAAlC,EAAyCzS,KAAzC,EAAgD;AAC9C,YAAM0S,aAAa,6BAAID,KAAJ,GAAWpT,IAAX,CAAgB,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC3C,cAAID,EAAEgB,GAAF,EAAO0E,KAAP,GAAezF,EAAEe,GAAF,EAAO0E,KAA1B,EAAiC,OAAOg4C,KAAP;AACjC,cAAI19C,EAAEgB,GAAF,EAAO0E,KAAP,GAAezF,EAAEe,GAAF,EAAO0E,KAA1B,EAAiC,OAAOg4C,QAAQ,CAAC,CAAhB;AACjC,iBAAO,CAAP;AACD,SAJkB,CAAnB;AAKA,eAAO0S,UAAP;AACD;AACD;AACA;AACA;AACA;AACA,UAAME,uBAAuBb,cAAcrhD,GAAd,CAAkB,eAAO;AACpD,YAAMmiD,QAAQz6B,SAAS90B,GAAT,EAAcw0B,YAA5B;AACA,YAAMvmB,OAAO6mB,SAAS90B,GAAT,EAAciO,IAA3B;AACA,eAAO;AACLshD,sBADK;AAELthD,oBAFK;AAGL3S,gBAAM0E;AAHD,SAAP;AAKD,OAR4B,CAA7B;AASA,UAAMsuD,aAAa,CACjB;AACEiB,eAAO,EADT,EACa;AACXj0D,cAAM,IAFR;AAGE2S,cAAM,QAHR;AAIE/R,eAAO,EAJT,EAIa;AACXszD,kBAAUV;AALZ,OADiB,EAQjB;AACES,eAAOz6B,SAAS,QAAT,EAAmBN,YAD5B;AAEEt4B,eAAO,GAFT,EAEc;AACZZ,cAAM,WAHR;AAIEk0D,kBAAUT,UAJZ;AAKEU,gBAAQP;AALV,OARiB,CAAnB;AAgBA,UAAIp6B,SAAS,MAAT,KAAoB,CAACA,SAAS,MAAT,EAAiBvB,MAA1C,EAAkD;AAChD+6B,mBAAW9yD,IAAX,CAAgB;AACd+zD,iBAAOz6B,SAAS,MAAT,EAAiBN,YADV;AAEdvmB,gBAAM,MAFQ;AAGd/R,iBAAO,GAHO,EAGF;AACZZ,gBAAM;AAJQ,SAAhB;AAMD;AACDgzD,iBAAW9yD,IAAX,oBACE;AACE+zD,eAAOz6B,SAAS,QAAT,EAAmBN,YAD5B;AAEEt4B,eAAO,GAFT,EAEc;AACZZ,cAAM,WAHR;AAIEk0D,kBAAUT,UAJZ;AAKEU,gBAAQP;AALV,OADF,4BAQKI,oBARL,IASE;AACEC,eAAO,UADT;AAEEj0D,cAAM,gBAFR;AAGE2S,cAAM,MAHR;AAIE/R,eAAO,EAJT,EAIa;AACXszD,kBAAUR,gBALZ;AAMES,gBAAQJ;AANV,OATF;AAkBA,WAAKh0D,QAAL,CAAc,EAAEizD,sBAAF,EAAd;AACD;;AAED;AACA;AACA;AACA;;;;;;6CAGyBhR,Q,EAAyB;AAAA,UAAfC,QAAe,uEAAJ,EAAI;;AAChD;AACA,UAAI,CAAC3mB,MAAMC,OAAN,CAAcymB,QAAd,CAAL,EACE,MAAMz9C,MAAM,8CAAN,CAAN;AACF,UAAIm6B,UAAUsjB,SAASzhC,MAAT,CAAgB,eAAO;AACnC,YAAIzE,OAAO,IAAX;AACA,aAAK,IAAIpX,GAAT,IAAgBu9C,QAAhB,EAA0B;AACxB,cAAIA,SAASv9C,GAAT,MAAkB8Q,IAAI9Q,GAAJ,CAAtB,EAAgCoX,OAAO,KAAP;AAChC;AACD;AACD,eAAOA,IAAP;AACD,OAPa,CAAd;AAQA;AACA,aAAO4iB,OAAP;AACD;;AAED;AACA;AACA;;;;;;+CAGwC;AAAA,UAAfujB,QAAe,uEAAJ,EAAI;;AACtC,aAAO,KAAK9C,wBAAL,CAA8B,KAAKx/C,KAAL,CAAWo8B,KAAzC,EAAgDkmB,QAAhD,CAAP;AACD;AACD;AACA;;;;;mCAEe7gD,E,EAAI;AACjB,aAAO,KAAKg+C,wBAAL,CAA8B,EAAEh+C,MAAF,EAA9B,EAAsC,CAAtC,CAAP;AACD;;AAED;AACA;AACA;;;;;AAKA;AACA;;;;;6BAES;AAAA,oBACwD,KAAKzB,KAD7D;AAAA,UACCo8B,KADD,WACCA,KADD;AAAA,UACQvC,QADR,WACQA,QADR;AAAA,UACkBygB,WADlB,WACkBA,WADlB;AAAA,UAC+Bzb,QAD/B,WAC+BA,QAD/B;AAAA,UACyCw0B,UADzC,WACyCA,UADzC;AAAA,mBAEyB,KAAKxzD,KAF9B;AAAA,UAECI,MAFD,UAECA,MAFD;AAAA,UAESsiD,WAFT,UAESA,WAFT;;AAGP,UAAMzkC,MAAMsuB,OAAO6E,gBAAP,EAAZ;;AAEA;AACA;AACA,UAAIuiB,gBAAgB7oD,OAAOuH,IAAP,CAAY2nB,QAAZ,EAAsBjZ,MAAtB,CAClB;AAAA,eAAK,CAACnU,oBAAoBsG,QAApB,CAA6BX,CAA7B,CAAD,IAAoC,CAACynB,SAASznB,CAAT,EAAYkmB,MAAtD;AAAA,OADkB,CAApB;;AAIA;AACA;AACA,UAAMmqB,eAAe5oB,SAAS,MAAT,CAArB;AACA,UAAI4oB,YAAJ,EAAkB+Q,gBAAgBA,cAAc5yC,MAAd,CAAqB;AAAA,eAAK7c,MAAM,MAAX;AAAA,OAArB,CAAhB;;AAElB;AACA;AACA,UAAM0wD,YAAYr4B,MAAMjqB,GAAN,CAAU,UAAC8qB,IAAD,EAAO93B,CAAP,EAAa;AAAA,YAC/B1D,EAD+B,GACwBw7B,IADxB,CAC/Bx7B,EAD+B;AAAA,YAC3Bi6B,MAD2B,GACwBuB,IADxB,CAC3BvB,MAD2B;AAAA,YACnBlxB,MADmB,GACwByyB,IADxB,CACnBzyB,MADmB;AAAA,YACXwnC,WADW,GACwB/U,IADxB,CACX+U,WADW;AAAA,YACE2O,WADF,GACwB1jB,IADxB,CACE0jB,WADF;AAAA,YACe3tC,IADf,GACwBiqB,IADxB,CACejqB,IADf;;;AAGvC,YAAM0hD,YAAY,EAAEjzD,IAAIi6B,MAAN,EAAc/kB,OAAOq7B,WAArB,EAAlB;AACA,YAAM2iB,YAAY,EAAElzD,IAAI+I,MAAN,EAAcmM,OAAOgqC,WAArB,EAAlB;;AAEA;AACA,YAAMO,aAAa,EAAnB;AACAsS,sBAAc5/C,OAAd,CAAsB,UAAC7O,GAAD,EAAMI,CAAN,EAAY;AAChC,cAAI9E,OAAO,EAAX;AACA,cAAIw5B,SAAS90B,GAAT,EAAciO,IAAd,KAAuB,UAA3B,EAAuC;AACrC;AACA;AACA;AACA3S,iBAAKu0D,IAAL,GAAY1lB,KAAK4T,WAAL,CAAiB7lB,KAAKl4B,GAAL,CAAjB,CAAZ;AACA1E,iBAAKw0D,GAAL,GAAW53B,KAAKl4B,GAAL,CAAX;AACD,WAND,MAMO,IAAI80B,SAAS90B,GAAT,EAAciO,IAAd,KAAuB,OAA3B,EACL3S,OAAO48B,KAAKl4B,GAAL,KAAak4B,KAAKl4B,GAAL,EAAUg+C,mBAA9B,CADK,KAEF1iD,OAAO48B,KAAKl4B,GAAL,CAAP;AACLm8C,qBAAWn8C,GAAX,IAAkB1E,IAAlB;AACD,SAZD;;AAcA;AACA,YAAMsxC,OAAOvF,OAAOgF,WAAP,CAAmB3vC,EAAnB,CAAb;AACA,YAAMg2B,eAAe2U,OAAO6I,2BAAP,CAAmCtD,IAAnC,EAAyC7zB,GAAzC,CAArB;AACA,YAAMg3C,OAAO1oB,OAAO+G,oBAAP,CAA4BxB,IAA5B,KAAqC,EAAlD;AACA,YAAMqiB,oBAAoBc,KAAKd,iBAA/B;AACA,YAAMd,WAAW9mB,OAAOqH,eAAP,CAAuB9B,IAAvB,CAAjB;AACA,YAAMojB,iBAAiB;AACrBpjB,oBADqB;AAErBloC,iBAAOguB,YAFc;AAGrBu8B,8CAHqB;AAIrBd;AAJqB,SAAvB;;AAOA;AACEzxD,cAAI,EAAE8vC,QAAQ9vC,EAAV,EAAcw4C,UAAUve,MAAxB,EADN,EACwC;AACtCg5B,8BAFF,EAEa;AACXC,8BAHF,EAGa;AACX3hD;AAJF,WAKKkuC,UALL;AAME6T,wCANF;AAOEl8C,gBAAM;AACJ+pC,kCAAsB3lB,KAAK2lB;AADvB;AAPR;AAWD,OA9CiB,CAAlB;AA+CA,aACE;AAAA;AAAA,UAAK,WAAU,aAAf,EAA6B,OAAO,EAAE1hD,QAAQqhD,WAAV,EAApC;AACE,4BAAC,iBAAD,IAAS,QAAQtiD,MAAjB,EAAyB,MAAMw0D,SAA/B,EAA0C,SAASpB,UAAnD;AADF,OADF;AAKD;;;;EA1nBuB5zD,OAAO4B,S,GA2nB/B;;AAEF;AACA;;;AACA5C,OAAOC,OAAP,GAAiBwnD,WAAjB;;;;;;;;;;;;;;AC9rBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,IAAMtnD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM8C,WAAW9C,QAAQ,WAAR,CAAjB;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQ6xB,M,GAAWH,U,CAAXG,M;;AACR,IAAMskC,kBAAkBn2D,QAAQ,mBAAR,CAAxB;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;AACA,IAAMo2D,YAAYp2D,QAAQ,eAAR,CAAlB;;AAEA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA,IAAM8F,KAAK,SAAX;AACA;AACA,IAAIhF,QAAQ,IAAZ;;AAEA;AACA;AACA;;IACMopC,O;;;AACJ,mBAAY/rC,KAAZ,EAAmB;AAAA;;AAAA,kHACXA,KADW;;AAEjB,UAAKG,KAAL,GAAa;AACXk1D,uBAAiB,EADN;AAEX3pD,cAAQ,EAFG;AAGX4pD,iBAAW,EAHA;AAIXC,iBAAW;AAJA,KAAb;;AAOA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBt1D,IAAjB,OAAnB;AACA,UAAKu1D,cAAL,GAAsB,MAAKA,cAAL,CAAoBv1D,IAApB,OAAtB;AACA,UAAKw1D,cAAL,GAAsB,MAAKA,cAAL,CAAoBx1D,IAApB,OAAtB;AACA,UAAKy1D,eAAL,GAAuB,MAAKA,eAAL,CAAqBz1D,IAArB,OAAvB;AACA,UAAK01D,WAAL,GAAmB,MAAKA,WAAL,CAAiB11D,IAAjB,OAAnB;AACA,UAAK21D,QAAL,GAAgB,MAAKA,QAAL,CAAc31D,IAAd,OAAhB;AACA,UAAK41D,SAAL,GAAiB,MAAKA,SAAL,CAAe51D,IAAf,OAAjB;AACA,UAAK61D,cAAL,GAAsB,MAAKA,cAAL,CAAoB71D,IAApB,OAAtB;;AAEA;AACAyC,YAAQ/C,OAAOgD,WAAP,OAAR;;AAEAD,UAAM6F,gBAAN,CAAuB,OAAvB,EAAgC,MAAKgtD,WAArC;AACA7yD,UAAM6F,gBAAN,CAAuB,UAAvB,EAAmC,MAAKitD,cAAxC;AACA9yD,UAAM6F,gBAAN,CAAuB,UAAvB,EAAmC,MAAKktD,cAAxC;AACA/yD,UAAM6F,gBAAN,CAAuB,WAAvB,EAAoC,MAAKmtD,eAAzC;AACAhzD,UAAM6F,gBAAN,CAAuB,QAAvB,EAAiC,MAAKmtD,eAAtC;AACAhzD,UAAMrC,aAAN,CAAoB,iBAApB,EAAuC,MAAKy1D,cAA5C;AA1BiB;AA2BlB,G,CAAC;;AAEF;AACA;AACA;AACA;;;;;;;;;;gCAMYv1D,I,EAAM;AAChB,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,kBAAhB,EAAoCnH,IAApC,EAA0C40D,SAA1C;AACT,UAAM1pD,SAAS0pD,UAAUY,aAAV,CAAwBx1D,IAAxB,CAAf;AACA,WAAKL,KAAL,CAAWk1D,eAAX,CAA2BhuC,OAA3B,CAAmC3b,MAAnC;AACD;AACD;;;;;;;mCAIelL,I,EAAM;AAAA;;AACnB,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,oBAAhB,EAAsCnH,IAAtC;AACT,UAAM8L,WAAW,KAAKoc,QAAL,CAAc,UAAd,CAAjB;AACA;AACA,UAAM4sC,YAAYhpD,SAASktB,QAAT,CAAkBrmB,IAAlB,CAAuBR,OAAzC;AACA,UAAM4iD,YAAYjpD,SAAS0tB,QAAT,CAAkB7mB,IAAlB,CAAuBR,OAAzC;AACA;AACA,WAAKpS,QAAL,CAAc,EAAE+0D,oBAAF,EAAaC,oBAAb,EAAd,EAAwC,YAAM;AAC5C,eAAKU,WAAL,GAD4C,CACxB;AACrB,OAFD;AAGD;AACD;;;;;;;;;mCAMez1D,I,EAAM;AACnB,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,oBAAhB,EAAsCnH,IAAtC;AACT,WAAKL,KAAL,CAAWk1D,eAAX,CAA2Ba,WAA3B;AACD;AACD;;;;;;;oCAIgB11D,I,EAAM;AACpB,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,iBAAhB,EAAmCnH,IAAnC;AACT,UAAMkL,SAAS0pD,UAAUvI,eAAV,CAA0BrsD,IAA1B,CAAf;AACA,WAAKL,KAAL,CAAWk1D,eAAX,CAA2BhuC,OAA3B,CAAmC3b,MAAnC,EAA2C,EAAEyqD,iBAAiB,IAAnB,EAA3C;AACD;;AAED;AACA;;AAEA;;;;;kCAEc;AACZ,WAAKh2D,KAAL,CAAWk1D,eAAX,CAA2Be,SAA3B;AACD;AACD;;;;;+BAEW;AACT,WAAKj2D,KAAL,CAAWk1D,eAAX,CAA2BgB,MAA3B;AACD;AACD;;;;;gCAEY;AACV,WAAKl2D,KAAL,CAAWk1D,eAAX,CAA2BiB,OAA3B;AACD;;AAED;AACA;AACA;;;;;qCAEiB;AACf;AACA,UAAMC,WAAWx0D,SAASqS,cAAT,CAAwB,UAAxB,CAAjB;AACA,UAAImiD,QAAJ,EAAcA,SAASC,MAAT;;AAEd;AACA,UAAMlqD,WAAW,KAAKoc,QAAL,CAAc,UAAd,CAAjB;AACA,UAAI,KAAKvoB,KAAL,CAAWk1D,eAAX,IAA8B,KAAKl1D,KAAL,CAAWk1D,eAAX,CAA2BoB,UAA7D,EAAyE;AACvE;AACA,aAAKt2D,KAAL,CAAWk1D,eAAX,CAA2BoB,UAA3B;AACD;AACD,UAAMpB,kBAAkB,IAAIF,eAAJ,CAAoB,KAAKuB,GAAzB,CAAxB,CAXe,CAWwC;AACvD,UAAI;AACF,YAAMpB,YAAYhpD,SAASktB,QAAT,CAAkBrmB,IAAlB,CAAuBR,OAAzC;AACA,YAAM4iD,YAAYjpD,SAAS0tB,QAAT,CAAkB7mB,IAAlB,CAAuBR,OAAzC;AACA,aAAKpS,QAAL,CAAc,EAAE80D,gCAAF,EAAmBC,oBAAnB,EAA8BC,oBAA9B,EAAd;AACA,aAAKU,WAAL,GAJE,CAIkB;AACrB,OALD,CAKE,OAAO/0C,GAAP,EAAY;AACZxf,gBAAQwB,IAAR,CAAa,sBAAb,EAAqCge,GAArC;AACD;AACF;;AAED;AACA;AACA;;;;;wCAEoB;AAClB,WAAK60C,cAAL;AACD;AACD;AACA;;;;;2CAEuB;AACrBpzD,YAAMkmB,iBAAN,CAAwB,OAAxB,EAAiC,KAAK2sC,WAAtC;AACA7yD,YAAMkmB,iBAAN,CAAwB,UAAxB,EAAoC,KAAK4sC,cAAzC;AACA9yD,YAAMkmB,iBAAN,CAAwB,UAAxB,EAAoC,KAAK6sC,cAAzC;AACA/yD,YAAMkmB,iBAAN,CAAwB,WAAxB,EAAqC,KAAK8sC,eAA1C;AACAhzD,YAAMkmB,iBAAN,CAAwB,QAAxB,EAAkC,KAAK8sC,eAAvC;AACAhzD,YAAMqc,eAAN,CAAsB,iBAAtB,EAAyC,KAAK+2C,cAA9C;AACD;AACD;AACA;;;;;4CAEwB;AACtB;AACA;AACA;AACA;AACA,aAAO,KAAP;AACD;AACD;AACA;;;;;6BAES;AAAA;;AAAA,mBAC0B,KAAK51D,KAD/B;AAAA,UACCm1D,SADD,UACCA,SADD;AAAA,UACYC,SADZ,UACYA,SADZ;;AAEP,aACE;AAAA;AAAA;AACE,qBAAU,WADZ;AAEE,eAAK;AAAA,mBAAQ,OAAKmB,GAAL,GAAWA,GAAnB;AAAA,WAFP;AAGE,iBAAO,EAAEr1D,QAAQ,MAAV,EAAkBixB,UAAU,UAA5B;AAHT;AAKE;AAAA;AAAA,YAAK,OAAO,EAAEH,QAAQ,eAAV,EAAZ;AACE;AAAA;AAAA,cAAK,WAAU,eAAf;AACE;AAAA;AAAA,gBAAM,OAAO,EAAEV,UAAU,KAAZ,EAAb;AACE;AAAA;AAAA,kBAAK,WAAU,OAAf;AAAA;AAAA,eADF;AAAA;AAEgB,mBAAK/I,QAAL,CAAc,UAAd,EAA0B1U;AAF1C,aADF;AAKE;AAAA;AAAA,gBAAM,OAAO,EAAEyd,UAAU,MAAZ,EAAb,EAAmC,WAAU,aAA7C;AACG,mBAAK/I,QAAL,CAAc,UAAd,EAA0B0P;AAD7B;AALF;AADF,SALF;AAgBE;AAAA;AAAA;AACE,mBAAO,EAAE9F,UAAU,UAAZ,EAAwBC,OAAO,MAA/B,EAAuCnxB,OAAO,MAA9C,EAAsDgxB,QAAQ,IAA9D;AADT;AAGE;AAAC,kBAAD;AAAA;AACE,2BADF;AAEE,uBAAS,KAAKyjC,QAFhB;AAGE,qBAAO,EAAEz0D,OAAO,MAAT,EAAiBE,iBAAiB,MAAlC,EAA0CwhD,SAAS,KAAnD;AAHT;AAAA;AAAA,WAHF;AAAA;AAWE;AAAC,kBAAD;AAAA;AACE,2BADF;AAEE,uBAAS,KAAK8S,WAFhB;AAGE,qBAAO,EAAEx0D,OAAO,MAAT,EAAiBE,iBAAiB,MAAlC,EAA0CwhD,SAAS,KAAnD;AAHT;AAAA;AAAA,WAXF;AAAA;AAmBE;AAAC,kBAAD;AAAA;AACE,2BADF;AAEE,uBAAS,KAAKgT,SAFhB;AAGE,qBAAO,EAAE10D,OAAO,MAAT,EAAiBE,iBAAiB,MAAlC,EAA0CwhD,SAAS,KAAnD;AAHT;AAAA;AAAA;AAnBF,SAhBF;AA2CE;AAAA;AAAA;AACE,mBAAO;AACLxwB,wBAAU,UADL;AAEL4c,sBAAQ,KAFH;AAGLujB,0BAAY,MAHP;AAILxgC,4BAAc,KAJT;AAKLR,wBAAU;AALL;AADT;AASE;AAAA;AAAA,cAAK,OAAO,EAAEvwB,SAAS,cAAX,EAA2Bi9C,cAAc,KAAzC,EAAZ;AAAA;AAAA,WATF;AAUE,yCAVF;AAWE;AAAA;AAAA,cAAK,OAAO,EAAEj9C,SAAS,cAAX,EAA2Bi9C,cAAc,KAAzC,EAAZ;AACG,eADH;AAAA;AAAA,WAXF;AAeGmX,oBAAUhjD,GAAV,CAAc,UAACa,IAAD,EAAO7N,CAAP;AAAA,mBACb;AAAA;AAAA,gBAAK,KAAKA,CAAV,EAAa,WAAU,eAAvB;AACE;AAAA;AAAA;AACE,yBAAO;AACLpE,6BAAS,cADJ;AAELi9C,kCAAc,KAFT;AAGLwY,gCAAY;AAHP;AADT;AAOE;AACE,yBAAO;AACLz1D,6BAAS,cADJ;AAELE,2BAAO,MAFF;AAGLC,4BAAQ,KAHH;AAILC,qCAAiB6R,KAAK0e;AAJjB;AADT,kBAPF;AAAA;AAeS1e,qBAAK2D,KAAL,KAAe,EAAf,GAAoB,kBAApB,GAAyC3D,KAAK2D;AAfvD,eADF;AAkBE;AAAA;AAAA,kBAAM,WAAU,kBAAhB;AACG3D,qBAAK2D,KAAL,KAAe,EAAf,GAAoB,kBAApB,GAAyC3D,KAAKymB,IAAL,IAAazmB,KAAK2D;AAD9D;AAlBF,aADa;AAAA,WAAd,CAfH;AAuCE,yCAvCF;AAwCE;AAAA;AAAA,cAAK,OAAO,EAAE5V,SAAS,cAAX,EAA2Bi9C,cAAc,KAAzC,EAAZ;AACG,eADH;AAAA;AAAA,WAxCF;AA4CGoX,oBAAUjjD,GAAV,CAAc,UAACa,IAAD,EAAO7N,CAAP;AAAA,mBACb;AAAA;AAAA,gBAAK,KAAKA,CAAV,EAAa,WAAU,eAAvB;AACE;AAAA;AAAA;AACE,yBAAO;AACLpE,6BAAS,cADJ;AAELi9C,kCAAc,KAFT;AAGLwY,gCAAY;AAHP;AADT;AAOE;AACE,yBAAO;AACLz1D,6BAAS,cADJ;AAELE,2BAAO,MAFF;AAGLC,4BAAQ,KAHH;AAILC,qCAAiB6R,KAAK0e;AAJjB;AADT,kBAPF;AAAA;AAeS1e,qBAAK2D,KAAL,KAAe,EAAf,GAAoB,kBAApB,GAAyC3D,KAAK2D;AAfvD,eADF;AAkBE;AAAA;AAAA,kBAAM,WAAU,kBAAhB;AACG3D,qBAAK2D,KAAL,KAAe,EAAf,GAAoB,kBAApB,GAAyC3D,KAAKymB,IAAL,IAAazmB,KAAK2D;AAD9D;AAlBF,aADa;AAAA,WAAd;AA5CH;AA3CF,OADF;AAmHD;;;;EAhRmBlX,OAAO4B,S,GAiR3B;;AAEF;AACA;;;AACA5C,OAAOC,OAAP,GAAiBktC,OAAjB;;;;;;;;;;ACpUA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA,IAAM6qB,KAAK53D,QAAQ,IAAR,CAAX;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;AACA,IAAI2D,QAAQ,IAAZ;;AAEA;AACA;AACA,IAAMd,MAAM,KAAZ;AACA,IAAM8F,KAAK,iBAAX;AACA;AACA,IAAIkvD,UAAU,GAAd;AACA,IAAIC,WAAW,GAAf;AACA;AACA,IAAMC,oBAAoB;AACxB;AACAC,UAAQ;AACNviB,OAAG,GADG;AAENC,OAAG;AAFG,GAFgB;AAMxBuiB,UAAQ;AACN;AACAC,aAAS,IAFH;AAGN;AACAC,cAAU,CAAC,GAJL,EAIU;AAChB;AACAC,iBAAa,CANP,EAMU;AAChBC,iBAAa,GAPP,CAOW;AACjB;AARM,GANgB;AAgBxBC,WAAS;AACP;AACA;AACAJ,aAAS,IAHF;AAIPC,cAAU,IAJH,EAIS;AAChB;AACA;AACAI,gBAAY,CAPL,EAOQ;AACf;AACAC,YAAQ,CATD,CASG;AATH,GAhBe;AA2BxBC,UAAQ;AACN;AACA;AACA;AACA;AACA;AACAP,aAAS,IANH;AAONC,cAAU,IAPJ,EAOU;AAChB1iB,OAAG;AARG,GA3BgB;AAqCxBijB,UAAQ;AACN;AACA;AACA;AACA;AACA;AACAR,aAAS,IANH;AAONC,cAAU,IAPJ,EAOU;AAChBziB,OAAG;AARG,GArCgB;AA+CxBijB,QAAM;AACJT,aAAS,IADL;AAEJU,cAAU,EAFN,EAEU;AACd;AACA;AACA;AACA;AACAL,gBAAY,CAPR,CAOU;AAPV;AA/CkB,CAA1B,C,CAwDG;;AAEH;AACA;;IACMpC,e;AACJ,2BAAY0C,WAAZ,EAAyB;AAAA;;AACvB,SAAKA,WAAL,GAAmBA,WAAnB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKz3D,IAAL,GAAY,EAAE47B,OAAO,EAAT,EAAaG,OAAO,EAApB,EAAZ;;AAEA,SAAK27B,OAAL,GAAe,EAAf;;AAEA;AACAv1D,YAAQ/C,OAAOgD,WAAP,CAAmB,IAAnB,CAAR;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAKm1D,IAAL,GAAYnB,GAAGmB,IAAH,GAAU5uB,EAAV,CAAa,MAAb,EAAqB,KAAKgvB,YAA1B,CAAZ;;AAEA;;;;AAIA,SAAKL,KAAL,GAAalB,GACV7M,MADU,CACH8N,WADG,EAEVO,MAFU,CAEH,KAFG,EAGVC,IAHU,CAGL,IAHK,EAGC,UAHD,EAIVA,IAJU,CAIL,OAJK,EAII,MAJJ,EAIY;AAJZ,KAKVA,IALU,CAKL,QALK,EAKK,MALL,EAKa;AALb,KAMVlvB,EANU,CAMP,OANO,EAME,UAAC3lC,CAAD,EAAId,KAAJ,EAAc;AACzB;AACAC,YAAME,SAAN,CAAgB,gBAAhB,EAAkC,EAAEy1D,YAAY,EAAd,EAAlC;AACA;AACA;AACD,KAXU,EAYVnvB,EAZU,CAYP,WAZO,EAYM,aAAK;AACpBxmC,YAAME,SAAN,CAAgB,kBAAhB,EAAoC,EAAE2uC,QAAQptC,SAAV,EAApC;AACA;AACAwyD,SAAG2B,SAAH,CAAa,OAAb,EACGC,UADH,GAEGC,QAFH,CAEY,IAFZ,EAGGC,KAHH,CAGS,cAHT,EAGyB;AAAA,eAAKl1D,EAAEpC,KAAP;AAAA,OAHzB;AAIAw1D,SAAGl0D,KAAH,CAAS6/C,eAAT;AACD,KApBU,EAqBV1qC,IArBU,CAqBL,KAAKkgD,IArBA,CAAb;;AAuBA,SAAKC,WAAL,GAAmB,KAAKF,KAAL,CAAWM,MAAX,CAAkB,GAAlB,EAAuBC,IAAvB,CAA4B,OAA5B,EAAqC,QAArC,CAAnB;;AAEA;AACA,QAAIM,MAAM52D,SAASqS,cAAT,CAAwB,UAAxB,CAAV;AACAyiD,cAAU8B,IAAIC,WAAd;AACA9B,eAAW6B,IAAIE,YAAf;;AAEA,SAAKZ,UAAL,GAAkBrB,GAAGkC,eAAH,EAAlB;;AAEA;AACA;;AAEA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAc74D,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKmnB,OAAL,GAAe,KAAKA,OAAL,CAAannB,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAK84D,YAAL,GAAoB,KAAKA,YAAL,CAAkB94D,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKg2D,WAAL,GAAmB,KAAKA,WAAL,CAAiBh2D,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAK+4D,cAAL,GAAsB,KAAKA,cAAL,CAAoB/4D,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKg5D,MAAL,GAAc,KAAKA,MAAL,CAAYh5D,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKk2D,SAAL,GAAiB,KAAKA,SAAL,CAAel2D,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKm2D,MAAL,GAAc,KAAKA,MAAL,CAAYn2D,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKo2D,OAAL,GAAe,KAAKA,OAAL,CAAap2D,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKi5D,YAAL,GAAoB,KAAKA,YAAL,CAAkBj5D,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKi4D,YAAL,GAAoB,KAAKA,YAAL,CAAkBj4D,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKk5D,YAAL,GAAoB,KAAKA,YAAL,CAAkBl5D,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKm5D,aAAL,GAAqB,KAAKA,aAAL,CAAmBn5D,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKo5D,SAAL,GAAiB,KAAKA,SAAL,CAAep5D,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKq5D,WAAL,GAAmB,KAAKA,WAAL,CAAiBr5D,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAED;AACA;;;;;iCACa;AACX,UAAI2B,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,6BAAhB;AACT;AACA;AACD;;AAED;AACA;;AAEA;;;;;;;;+BAKW;AACT,WAAKqwD,WAAL,CAAiBO,SAAjB,CAA2B,OAA3B,EAAoC/B,MAApC;AACA,WAAKwB,WAAL,CAAiBO,SAAjB,CAA2B,OAA3B,EAAoC/B,MAApC;AACD;;AAED;;;;;;;;;;;;;;4BAWQgD,O,EAAuB;AAAA,UAAd7mD,OAAc,uEAAJ,EAAI;;AAC7B,UAAI6mD,OAAJ,EAAa;AACX;AACA;AACA;AACA;AACA,YAAMC,WAAW,KAAKzB,WAAL,CAAiBO,SAAjB,CAA2B,OAA3B,CAAjB;AACA,YAAMmB,WAAW,IAAIj8C,GAAJ,CAAQg8C,SAASj5D,IAAT,GAAgB8R,GAAhB,CAAoB;AAAA,iBAAK,CAACgW,EAAE1mB,EAAH,EAAO0mB,CAAP,CAAL;AAAA,SAApB,CAAR,CAAjB;;AAEA,aAAK9nB,IAAL,CAAU47B,KAAV,GAAkBo9B,QAAQp9B,KAAR,CAAc9pB,GAAd,CAAkB;AAAA,iBAClCxH,OAAOC,MAAP,CAAc2uD,SAASh5C,GAAT,CAAa4H,EAAE1mB,EAAf,KAAsB,EAApC,EAAwC0mB,CAAxC,CADkC;AAAA,SAAlB,CAAlB;AAGA,aAAK9nB,IAAL,CAAU+7B,KAAV,GAAkBi9B,QAAQj9B,KAAR,CAAcjqB,GAAd,CAAkB;AAAA,iBAAKxH,OAAOC,MAAP,CAAc,EAAd,EAAkBud,CAAlB,CAAL;AAAA,SAAlB,CAAlB;;AAEA;AACA,YAAI,CAAC3V,QAAQwjD,eAAb,EAA8B,KAAK6C,YAAL;AAC9B,YAAI,CAACrmD,QAAQwjD,eAAb,EAA8B,KAAK8C,cAAL;AAC9B,aAAK/C,WAAL,CAAiBvjD,QAAQwjD,eAAzB;;AAEA;AACA;AACA;AACA;AACA,YAAI,CAACxjD,QAAQwjD,eAAb,EAA8B,KAAK8B,UAAL,CAAgB0B,KAAhB,CAAsB,GAAtB,EAA2BC,OAA3B,GAtBnB,CAsByD;AACrE;AACF;;AAED;;;;;mCAEe;AACb;AACA;AACA;AACA,WAAK3B,UAAL,CACG4B,KADH,CACS,MADT,EACiBjD,GAAGkD,SAAH,EADjB,EAEGD,KAFH,CAES,QAFT,EAEmBjD,GAAGmD,aAAH,EAFnB,EAGGF,KAHH,CAGS,SAHT,EAGoBjD,GAAGoD,YAAH,EAHpB,EAIGH,KAJH,CAIS,QAJT,EAImBjD,GAAGqD,WAAH,EAJnB,EAKGJ,KALH,CAKS,QALT,EAKmBjD,GAAGa,MAAH,EALnB,EAMGoC,KANH,CAMS,QANT,EAMmBjD,GAAGc,MAAH,EANnB,EAQGvuB,EARH,CAQM,MARN,EAQc,KAAK+vB,MARnB;AASD;AACD;AACA;;;;;;;;;;;;;;;;;;;;kCAoBc;AAAA;;AACZ;AACA;AACA;AACA;;AAEA;AACA,UAAIgB,eAAe,KAAKlC,WAAL,CAChBO,SADgB,CACN,OADM,EAEhB/3D,IAFgB,CAEX,KAAKA,IAAL,CAAU47B,KAFC,EAEM,aAAK;AAC1B,eAAO9T,EAAE1mB,EAAT;AACD,OAJgB,CAAnB,CAPY,CAWN;;AAEN;AACA,UAAIu4D,eAAe,KAAKnC,WAAL,CAChBO,SADgB,CACN,OADM,EAEhB/3D,IAFgB,CAEX,KAAKA,IAAL,CAAU+7B,KAFC,EAEM,aAAK;AAC1B,eAAOjU,EAAE1mB,EAAT;AACD,OAJgB,CAAnB,CAdY,CAkBN;;AAEN;AACA;AACA;AACA,UAAIw4D,WAAWF,aAAaG,KAAb,GAAqBjC,MAArB,CAA4B,GAA5B,EAAiCkC,OAAjC,CAAyC,MAAzC,EAAiD,IAAjD,CAAf;;AAEA;AACAF,eACGviD,IADH,CAEI++C,GACG2D,IADH,GAEGpxB,EAFH,CAEM,OAFN,EAEe,aAAK;AAChB,cAAKkwB,aAAL,CAAmB/wC,CAAnB,EAAsB,KAAtB;AACD,OAJH,EAKG6gB,EALH,CAKM,MALN,EAKc,KAAKmwB,SALnB,EAMGnwB,EANH,CAMM,KANN,EAMa,aAAK;AACd,cAAKowB,WAAL,CAAiBjxC,CAAjB,EAAoB,KAApB;AACD,OARH,CAFJ,EAYG6gB,EAZH,CAYM,OAZN,EAYe,aAAK;AAChB,YAAItnC,GAAJ,EAASH,QAAQC,GAAR,CAAY,YAAZ,EAA0B2mB,EAAExR,KAA5B,EAAmCwR,EAAE1mB,EAArC;AACTe,cAAME,SAAN,CAAgB,gBAAhB,EAAkC,EAAEgH,SAAS,CAACye,EAAE1mB,EAAH,CAAX,EAAlC;AACA;AACA;AACAg1D,WAAGl0D,KAAH,CAAS6/C,eAAT;AACD,OAlBH,EAmBGpZ,EAnBH,CAmBM,WAnBN,EAmBmB,aAAK;AACpBxmC,cAAME,SAAN,CAAgB,kBAAhB,EAAoC,EAAE2uC,QAAQlpB,EAAE1mB,EAAZ,EAApC;AACAg1D,WAAG2B,SAAH,CAAa,OAAb,EACGC,UADH,GAEGC,QAFH,CAEY,GAFZ,EAGGC,KAHH,CAGS,cAHT,EAGyB;AAAA,iBAAKl1D,EAAEpC,KAAP;AAAA,SAHzB;AAIAw1D,WAAGl0D,KAAH,CAAS6/C,eAAT;AACD,OA1BH;;AA4BA;AACA6X,eACGhC,MADH,CACU,QADV,EAEGC,IAFH,CAEQ,GAFR,EAEa;AAAA,eAAK/vC,EAAE06B,IAAP;AAAA,OAFb,EAE0B;AAF1B,OAGGqV,IAHH,CAGQ,MAHR,EAGgB;AAAA,eAAK/vC,EAAEuJ,KAAP;AAAA,OAHhB,EAIG6mC,KAJH,CAIS,SAJT,EAIoB;AAAA,eAAKpwC,EAAEw6B,OAAP;AAAA,OAJpB;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAsX,eACGhC,MADH,CACU,MADV,EAEGkC,OAFH,CAEW,UAFX,EAEuB,IAFvB,EAGGjC,IAHH,CAGQ,WAHR,EAGqB,EAHrB,EAIGA,IAJH,CAIQ,IAJR,EAIc;AAAA,eAAK/vC,EAAE06B,IAAF,GAAS,CAAd;AAAA,OAJd,EAKGqV,IALH,CAKQ,IALR,EAKc,QALd,EAKwB;AALxB,OAMGrlD,IANH,CAMQ;AAAA,eAAKsV,EAAExR,KAAP;AAAA,OANR,EAOG4hD,KAPH,CAOS,SAPT,EAOoB;AAAA,eAAKpwC,EAAEw6B,OAAP;AAAA,OAPpB;;AASA;AACA;AACAsX,eACGhC,MADH,CACU,OADV,EACmB;AADnB,OAEGplD,IAFH,CAEQ;AAAA,eAAKsV,EAAEsR,IAAP;AAAA,OAFR;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACAsgC,mBACGtwC,KADH,CACSswC,YADT,EAEG3B,SAFH,CAEa,QAFb,EAGGF,IAHH,CAGQ,QAHR,EAGkB;AAAA,eAAK/vC,EAAEkyC,WAAP;AAAA,OAHlB,EAIGnC,IAJH,CAIQ,cAJR,EAIwB;AAAA,eAAK/vC,EAAEmyC,WAAP;AAAA,OAJxB,EAKGpC,IALH,CAKQ,MALR,EAKgB;AAAA,eAAK/vC,EAAEuJ,KAAP;AAAA,OALhB,EAMGwmC,IANH,CAMQ,GANR,EAMa;AAAA,eAAK/vC,EAAE06B,IAAP;AAAA,OANb,EAOGwV,UAPH,GAQGC,QARH,CAQY,GARZ,EASGC,KATH,CASS,SATT,EASoB;AAAA,eAAKpwC,EAAEw6B,OAAP;AAAA,OATpB;;AAWA;AACA;AACA;AACA;AACAoX,mBACGtwC,KADH,CACSswC,YADT,EAEG3B,SAFH,CAEa,MAFb,EAGGF,IAHH,CAGQ,MAHR,EAGgB;AAAA,eAAK/vC,EAAEoyC,SAAP;AAAA,OAHhB;AAIE;AACA;AALF,OAMGrC,IANH,CAMQ,aANR,EAMuB,aAAK;AACxB,eAAO/vC,EAAEkyC,WAAF,GAAgB,MAAhB,GAAyBp2D,SAAhC;AACD,OARH,EASG4O,IATH,CASQ;AAAA,eAAKsV,EAAExR,KAAP;AAAA,OATR,EASsB;AATtB,OAUG0hD,UAVH,GAWGC,QAXH,CAWY,GAXZ,EAYGC,KAZH,CAYS,SAZT,EAYoB;AAAA,eAAKpwC,EAAEw6B,OAAP;AAAA,OAZpB;;AAcAoX,mBACGtwC,KADH,CACSswC,YADT,EAEG3B,SAFH,CAEa,OAFb,EAEsB;AAFtB,OAGGvlD,IAHH,CAGQ;AAAA,eAAKsV,EAAEsR,IAAP;AAAA,OAHR;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAsgC,mBAAaS,IAAb,GAAoBnE,MAApB;;AAEA;AACA;AACA;AACA2D,mBACGE,KADH,GAEGv9B,MAFH,CAEU,MAFV,EAEkB,OAFlB,EAGGw9B,OAHH,CAGW,MAHX,EAGmB,IAHnB,EAIG5B,KAJH,CAIS,QAJT,EAImB;AAAA,eAAKl1D,EAAEquB,KAAP;AAAA,OAJnB,EAKG6mC,KALH,CAKS,cALT,EAKyB;AAAA,eAAKl1D,EAAEpC,KAAP;AAAA,OALzB,EAMGs3D,KANH,CAMS,gBANT,EAM2B,OAN3B;AAOE;AACA;AACA;AACA;AACA;AAXF,OAYGA,KAZH,CAYS,SAZT,EAYoB;AAAA,eAAKl1D,EAAEs/C,OAAP;AAAA,OAZpB;;AAcA;AACAqX,mBACGvwC,KADH,CACSuwC,YADT;AAEE;AAFF,OAGGzB,KAHH,CAGS,QAHT,EAGmB;AAAA,eAAKl1D,EAAEquB,KAAP;AAAA,OAHnB,EAIG6mC,KAJH,CAIS,cAJT,EAIyB;AAAA,eAAKl1D,EAAEpC,KAAP;AAAA,OAJzB,EAKGs3D,KALH,CAKS,gBALT,EAK2B,OAL3B,EAMGF,UANH,GAOGC,QAPH,CAOY,GAPZ,EAQGC,KARH,CAQS,SART,EAQoB;AAAA,eAAKl1D,EAAEs/C,OAAP;AAAA,OARpB;;AAUAqX,mBAAaQ,IAAb,GAAoBnE,MAApB;;AAEA;AACA;AACA,WAAKyB,UAAL,CAAgB77B,KAAhB,CAAsB,KAAK57B,IAAL,CAAU47B,KAAhC;AACA,UAAI,KAAK57B,IAAL,CAAU+7B,KAAd,EAAqB;AACnB,aAAK07B,UAAL,CAAgB4B,KAAhB,CAAsB,MAAtB,EAA8Be,KAA9B,CAAoC,KAAKp6D,IAAL,CAAU+7B,KAA9C;AACD;;AAED;AACA,WAAKu7B,KAAL,CAAWS,SAAX,CAAqB,gBAArB,EAAuC/B,MAAvC;AACA,WAAKsB,KAAL,CAAWS,SAAX,CAAqB,yBAArB,EAAgD/B,MAAhD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAKqE,cAAL,GAAsBX,aACnBtwC,KADmB,CACbswC,YADa,EAEnBn5C,MAFmB,CAEZ;AAAA,eAAKuH,EAAE+qC,QAAP;AAAA,OAFY,EAGnB+E,MAHmB,CAGZ,GAHY,EAInBC,IAJmB,CAId,IAJc,EAIR,eAJQ,EAKnBA,IALmB,CAKd,WALc,EAKD;AAAA,+BAAkB,CAAC/vC,EAAE06B,IAAH,GAAU,CAA5B;AAAA,OALC,CAAtB;AAMA,WAAK6X,cAAL,CACGzC,MADH,CACU,SADV,EAEGC,IAFH,CAEQ,QAFR,EAEkB,mBAFlB,EAGGA,IAHH,CAGQ,MAHR,EAGgB;AAAA,eAAK/vC,EAAEkyC,WAAP;AAAA,OAHhB,EAIGpC,MAJH,CAIU,kBAJV,EAKGC,IALH,CAKQ,eALR,EAKyB,WALzB,EAMGA,IANH,CAMQ,eANR,EAMyB,KANzB,EAOGA,IAPH,CAOQ,MAPR,EAOgB,QAPhB,EAQGA,IARH,CAQQ,MARR,EAQgB;AAAA,uBAAU/vC,EAAE06B,IAAF,GAAS,CAAnB;AAAA,OARhB,EASGqV,IATH,CASQ,IATR,EASc;AAAA,yBAAY/vC,EAAE06B,IAAF,GAAS,CAArB;AAAA,OATd,EAUGqV,IAVH,CAUQ,KAVR,EAUe,IAVf,EAWGA,IAXH,CAWQ,aAXR,EAWuB,YAXvB;AAYA,WAAKwC,cAAL,CACGzC,MADH,CACU,SADV,EAEGC,IAFH,CAEQ,WAFR,EAEqB;AAAA,+BAAkB/vC,EAAE06B,IAAF,GAAS,CAA3B;AAAA,OAFrB,EAGGqV,IAHH,CAGQ,QAHR,EAGkB,mBAHlB,EAIGA,IAJH,CAIQ,MAJR,EAIgB;AAAA,eAAK/vC,EAAEkyC,WAAP;AAAA,OAJhB,EAKGpC,MALH,CAKU,kBALV,EAMGC,IANH,CAMQ,eANR,EAMyB,WANzB,EAOGA,IAPH,CAOQ,eAPR,EAOyB,KAPzB,EAQGA,IARH,CAQQ,MARR,EAQgB,QARhB,EASGA,IATH,CASQ,MATR,EASgB;AAAA,yBAAY/vC,EAAE06B,IAAF,GAAS,CAArB;AAAA,OAThB,EAS4C;AAT5C,OAUGqV,IAVH,CAUQ,IAVR,EAUc;AAAA,yBAAY/vC,EAAE06B,IAAF,GAAS,CAArB;AAAA,OAVd,EAU0C;AAV1C,OAWGqV,IAXH,CAWQ,KAXR,EAWe,IAXf,EAYGA,IAZH,CAYQ,aAZR,EAYuB,YAZvB;AAaA,WAAKwC,cAAL,CACGzC,MADH,CACU,SADV,EAEGC,IAFH,CAEQ,WAFR,EAEqB;AAAA,+BAAkB/vC,EAAE06B,IAAF,GAAS,CAA3B;AAAA,OAFrB,EAGGqV,IAHH,CAGQ,QAHR,EAGkB,mBAHlB,EAIGA,IAJH,CAIQ,MAJR,EAIgB;AAAA,eAAK/vC,EAAEkyC,WAAP;AAAA,OAJhB,EAKGpC,MALH,CAKU,kBALV,EAMGC,IANH,CAMQ,eANR,EAMyB,WANzB,EAOGA,IAPH,CAOQ,eAPR,EAOyB,KAPzB,EAQGA,IARH,CAQQ,MARR,EAQgB,QARhB,EASGA,IATH,CASQ,MATR,EASgB;AAAA,yBAAY/vC,EAAE06B,IAAF,GAAS,CAArB;AAAA,OAThB,EAS4C;AAT5C,OAUGqV,IAVH,CAUQ,IAVR,EAUc;AAAA,yBAAY/vC,EAAE06B,IAAF,GAAS,CAArB;AAAA,OAVd,EAU0C;AAV1C,OAWGqV,IAXH,CAWQ,KAXR,EAWe,IAXf,EAYGA,IAZH,CAYQ,aAZR,EAYuB,YAZvB;;AAcA;AACA6B,mBACGtwC,KADH,CACSswC,YADT,EAEGn5C,MAFH,CAEU;AAAA,eAAKuH,EAAE8qC,iBAAP;AAAA,OAFV,EAGGgF,MAHH,CAGU,GAHV,EAIGC,IAJH,CAIQ,IAJR,EAIc,wBAJd,EAKGA,IALH,CAKQ,WALR,EAKqB;AAAA,+BAAkB,CAAC/vC,EAAE06B,IAAH,GAAU,CAA5B;AAAA,OALrB,EAMGoV,MANH,CAMU,SANV,EAOGC,IAPH,CAOQ,QAPR,EAOkB,mBAPlB,EAQGA,IARH,CAQQ,MARR,EAQgB,MARhB;AASE;AATF,OAUGD,MAVH,CAUU,kBAVV,EAWGC,IAXH,CAWQ,eAXR,EAWyB,WAXzB,EAYGA,IAZH,CAYQ,eAZR,EAYyB,KAZzB,EAaGA,IAbH,CAaQ,MAbR,EAagB,QAbhB,EAcGA,IAdH,CAcQ,MAdR,EAcgB;AAAA,uBAAU/vC,EAAE06B,IAAF,GAAS,CAAnB;AAAA,OAdhB,EAeGqV,IAfH,CAeQ,IAfR,EAec;AAAA,yBAAY/vC,EAAE06B,IAAF,GAAS,CAArB;AAAA,OAfd,EAgBGqV,IAhBH,CAgBQ,KAhBR,EAgBe,IAhBf,EAiBGA,IAjBH,CAiBQ,aAjBR,EAiBuB,YAjBvB;AAkBD;;AAED;AACA;;;;;;qCAGiB;AACf,WAAKJ,UAAL,CACG4B,KADH,CAEI,MAFJ,EAGIjD,GACGkD,SADH,GAEGl4D,EAFH,CAEM;AAAA,eAAK0mB,EAAE1mB,EAAP;AAAA,OAFN,EAEiB;AACf;AAHF,OAIGg2D,QAJH,CAIYb,kBAAkBY,IAAlB,CAAuBC,QAJnC,EAKGL,UALH,CAKcR,kBAAkBY,IAAlB,CAAuBJ,UALrC,CAHJ,EAUGsC,KAVH,CAWI,QAXJ,EAYIjD,GACGmD,aADH;AAEE;AAFF,OAGG5C,QAHH,CAII;AAAA,eACE7uC,EAAE06B,IAAF,GACA+T,kBAAkBE,MAAlB,CAAyBE,QADzB,GAEAJ,kBAAkBE,MAAlB,CAAyBC,OAH3B;AAAA,OAJJ,EASGE,WATH,CASeL,kBAAkBE,MAAlB,CAAyBG,WATxC,EAUGC,WAVH,CAUeN,kBAAkBE,MAAlB,CAAyBI,WAVxC,CAZJ,EAwBGwC,KAxBH,CAyBI,SAzBJ,EA0BIjD,GACGoD,YADH,GAEG7C,QAFH,CAGIJ,kBAAkBO,OAAlB,CAA0BH,QAA1B,GAAqCJ,kBAAkBO,OAAlB,CAA0BJ,OAHnE;AAKE;AACA;AANF,OAOGM,MAPH,CAOU;AAAA,eAAKlvC,EAAE06B,IAAF,GAAS+T,kBAAkBO,OAAlB,CAA0BE,MAAxC;AAAA,OAPV,EAQGD,UARH,CAQcR,kBAAkBO,OAAlB,CAA0BC,UARxC,CA1BJ,EAoCGsC,KApCH,CAqCI,QArCJ,EAsCIjD,GACGqD,WADH,GAEGxlB,CAFH,CAEKoiB,UAAUE,kBAAkBC,MAAlB,CAAyBviB,CAFxC,EAGGC,CAHH,CAGKoiB,WAAWC,kBAAkBC,MAAlB,CAAyBtiB,CAHzC,CAtCJ,EA2CGmlB,KA3CH,CA4CI,QA5CJ,EA6CIjD,GACGa,MADH,GAEGN,QAFH,CAGIJ,kBAAkBU,MAAlB,CAAyBN,QAAzB,GAAoCJ,kBAAkBU,MAAlB,CAAyBP,OAHjE,EAKGziB,CALH,CAKKoiB,UAAUE,kBAAkBU,MAAlB,CAAyBhjB,CALxC,CA7CJ,EAoDGolB,KApDH,CAqDI,QArDJ,EAsDIjD,GACGc,MADH,GAEGP,QAFH,CAGIJ,kBAAkBW,MAAlB,CAAyBP,QAAzB,GAAoCJ,kBAAkBW,MAAlB,CAAyBR,OAHjE,EAKGxiB,CALH,CAKKoiB,WAAWC,kBAAkBW,MAAlB,CAAyBhjB,CALzC,CAtDJ;AA6DD;AACD;AACA;;;;;;;;;;6BASS;AACP;AACA;AACA,WAAKsjB,WAAL,CAAiBO,SAAjB,CAA2B,OAA3B,EAAoCF,IAApC,CAAyC,WAAzC,EAAsD,aAAK;AACzD,eAAO,eAAe/vC,EAAEmsB,CAAjB,GAAqB,GAArB,GAA2BnsB,EAAEosB,CAA7B,GAAiC,GAAxC;AACD,OAFD;;AAIA;AACA;AACA,WAAKsjB,WAAL,CACGO,SADH,CACa,OADb,EAEGF,IAFH,CAEQ,IAFR,EAEc,aAAK;AACf,eAAO/vC,EAAEuT,MAAF,CAAS4Y,CAAhB;AACD,OAJH,EAKG4jB,IALH,CAKQ,IALR,EAKc,aAAK;AACf,eAAO/vC,EAAEuT,MAAF,CAAS6Y,CAAhB;AACD,OAPH,EAQG2jB,IARH,CAQQ,IARR,EAQc,aAAK;AACf,eAAO/vC,EAAE3d,MAAF,CAAS8pC,CAAhB;AACD,OAVH,EAWG4jB,IAXH,CAWQ,IAXR,EAWc,aAAK;AACf,eAAO/vC,EAAE3d,MAAF,CAAS+pC,CAAhB;AACD,OAbH;AAcD;;AAED;AACA;;;;8BAEUl0C,I,EAAM;AACd,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,6BAAhB,EAA+CnH,IAA/C;AACT;AACA,WAAKs3D,KAAL,CAAWU,UAAX,GAAwBC,QAAxB,CAAiC,GAAjC,EAAsC5gD,IAAtC,CAA2C,KAAKkgD,IAAL,CAAU+C,OAArD,EAA8D,CAA9D;AACD;;;2BAEMt6D,I,EAAM;AACX,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,0BAAhB,EAA4CnH,IAA5C;AACT,WAAK44D,YAAL,CAAkB,GAAlB;AACD;;;4BAEO54D,I,EAAM;AACZ,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,2BAAhB,EAA6CnH,IAA7C;AACT,WAAK44D,YAAL,CAAkB,GAAlB;AACD;;AAED;AACA;;;;iCACa54D,I,EAAM;AACjB,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,iCAAhB,EAAmDnH,IAAnD;AACT,UAAMu6D,YAAYnE,GAAGoE,YAAH,CAAgBC,SAAhB,CAA0B,CAA1B,EAA6B,CAA7B,EAAgCC,KAAhC,CAAsC,CAAtC,CAAlB;AACA,WAAKpD,KAAL,CAAWjgD,IAAX,CAAgB,KAAKkgD,IAAL,CAAUgD,SAA1B,EAAqCA,SAArC;AACD;;AAED;;;;;mCAEe;AACb,UAAIl5D,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,YAAhB;AACTivD,SAAG7M,MAAH,CAAU,SAAV,EAAqBsO,IAArB,CAA0B,WAA1B,EAAuCzB,GAAGl0D,KAAH,CAASq4D,SAAhD;AACD;AACD;;;;;iCAEaI,S,EAAW;AACtB,UAAIt5D,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,YAAhB;AACT,WAAKmwD,KAAL,CACGU,UADH;AAEE;AAFF,OAGGC,QAHH,CAGY,GAHZ,EAIG5gD,IAJH,CAIQ,KAAKkgD,IAAL,CAAUqD,OAJlB,EAI2BD,SAJ3B;AAKD;;AAED;AACA;;;;;kCAEc7yC,C,EAAG+yC,I,EAAM;AACrB,UAAIx5D,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,aAAhB,EAA+B2gB,EAAEmsB,CAAjC,EAAoCnsB,EAAEosB,CAAtC;AACT;AACA,UAAI,CAACkiB,GAAGl0D,KAAH,CAAS6lD,MAAd,EAAsB8S,KAAKpD,UAAL,CAAgBqD,WAAhB,CAA4B,IAA5B,EAAkC1B,OAAlC,GAHD,CAG8C;AACnEtxC,QAAEizC,EAAF,GAAOjzC,EAAEmsB,CAAT;AACAnsB,QAAEkzC,EAAF,GAAOlzC,EAAEosB,CAAT;AACD;AACD;AACA;;;;;8BAEUpsB,C,EAAG;AACX,UAAIzmB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,SAAhB;AACT2gB,QAAEizC,EAAF,GAAO3E,GAAGl0D,KAAH,CAAS+xC,CAAhB;AACAnsB,QAAEkzC,EAAF,GAAO5E,GAAGl0D,KAAH,CAASgyC,CAAhB;AACD;AACD;AACA;;;;;gCAEYpsB,C,EAAG+yC,I,EAAM;AACnB,UAAIx5D,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,WAAhB;AACT,UAAI,CAACivD,GAAGl0D,KAAH,CAAS6lD,MAAd,EAAsB8S,KAAKpD,UAAL,CAAgBqD,WAAhB,CAA4B,MAA5B;AACtBhzC,QAAEizC,EAAF,GAAO,IAAP;AACAjzC,QAAEkzC,EAAF,GAAO,IAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;;;KACA;;AAEF;AACA;;;AACA58D,OAAOC,OAAP,GAAiBs2D,eAAjB;AACA;;;;;;;;;;;;;;;;;;;ACzvBA;;;;;;;;;;;;AAlDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,IAAMp2D,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;AACA,IAAMotC,UAAUptC,QAAQ,aAAR,CAAhB,C,CAAwC;AACxC,IAAMutC,SAASvtC,QAAQ,gBAAR,CAAf;;eAC4CA,QAAQ,kBAAR,C;IAApCqN,U,YAAAA,U;IAAYM,mB,YAAAA,mB;;gBACwB3N,QAAQ,sBAAR,C;IAApC8M,kB,aAAAA,kB;IAAoBG,W,aAAAA,W;;AAC5B,IAAMigC,UAAUltC,QAAQ,aAAR,CAAhB;AACA,IAAMqwC,OAAOrwC,QAAQ,UAAR,CAAb;AACA,IAAMktD,SAASltD,QAAQ,UAAR,CAAf;AACA,IAAMksD,mBAAmBlsD,QAAQ,oBAAR,CAAzB;AACA,IAAMa,WAAWb,QAAQ,UAAR,CAAjB;;;AAGA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA,IAAM8F,KAAK,QAAX;AACA;AACA,IAAMwuC,UAAUt2C,SAASwH,OAAT,EAAhB;AACA;AACA,IAAMk/C,OAAO;AACX;AACAyF,cAAY,YAFD;AAGX12B,SAAO,OAHI;AAIX22B,cAAY;AAJD,CAAb;AAMA;AACA,IAAItpD,cAAJ;;AAEA;AACA;AACA;;IACMmpC,M;;;AACJ,kBAAY9rC,KAAZ,EAAmB;AAAA;;AAAA,gHACXA,KADW;;AAGjB,UAAKG,KAAL,GAAa;AACX6sC,kBAAY;AADD,KAAb,CAHiB,CAKd;;AAEH;AACA,UAAKof,UAAL,GAAkB,MAAKA,UAAL,CAAgBlsD,IAAhB,OAAlB;AACA,UAAKmsD,aAAL,GAAqB,MAAKA,aAAL,CAAmBnsD,IAAnB,OAArB;AACA,UAAKosD,YAAL,GAAoB,MAAKA,YAAL,CAAkBpsD,IAAlB,OAApB;AACA,UAAKssD,cAAL,GAAsB,MAAKA,cAAL,CAAoBtsD,IAApB,OAAtB;AACA,UAAKusD,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBvsD,IAAvB,OAAzB;;AAEA;AACA,UAAKwsD,WAAL,GAAmB,MAAKA,WAAL,CAAiBxsD,IAAjB,OAAnB;AACA,UAAKysD,QAAL,GAAgB,MAAKA,QAAL,CAAczsD,IAAd,OAAhB;AACA,UAAK0sD,cAAL,GAAsB,MAAKA,cAAL,CAAoB1sD,IAApB,OAAtB;AACA,UAAK2sD,eAAL,GAAuB,MAAKA,eAAL,CAAqB3sD,IAArB,OAAvB;AACA,UAAKu7D,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBv7D,IAAvB,OAAzB;AACA,UAAKw7D,UAAL,GAAkB,MAAKA,UAAL,CAAgBx7D,IAAhB,OAAlB;AACA,UAAKy7D,YAAL,GAAoB,MAAKA,YAAL,CAAkBz7D,IAAlB,OAApB;AACA;AACA,UAAK07D,QAAL,GAAgB,MAAKA,QAAL,CAAc17D,IAAd,OAAhB;AACA,UAAK27D,SAAL,GAAiB,MAAKA,SAAL,CAAe37D,IAAf,OAAjB;AACA,UAAK+sD,cAAL,GAAsB,MAAKA,cAAL,CAAoB/sD,IAApB,OAAtB;AACA,UAAK47D,QAAL,GAAgB,MAAKA,QAAL,CAAc57D,IAAd,OAAhB;AACA,UAAK67D,UAAL,GAAkB,MAAKA,UAAL,CAAgB77D,IAAhB,OAAlB;AACA,UAAK87D,YAAL,GAAoB,MAAKA,YAAL,CAAkB97D,IAAlB,OAApB;AACA;AACA,UAAK+7D,QAAL,GAAgB,MAAKA,QAAL,CAAc/7D,IAAd,OAAhB;AACA,UAAKg8D,UAAL,GAAkB,MAAKA,UAAL,CAAgBh8D,IAAhB,OAAlB;AACA;AACA,UAAK6tD,kBAAL,GAA0B,MAAKA,kBAAL,CAAwB7tD,IAAxB,OAA1B;AACA,UAAKi8D,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBj8D,IAAxB,OAA1B;AACA;AACA,UAAKmuD,WAAL,GAAmB,MAAKA,WAAL,CAAiBnuD,IAAjB,OAAnB;AACA,UAAKk8D,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBl8D,IAAvB,OAAzB;AACA,UAAKm8D,yBAAL,GAAiC,MAAKA,yBAAL,CAA+Bn8D,IAA/B,OAAjC;AACA,UAAKo8D,SAAL,GAAiB,MAAKA,SAAL,CAAep8D,IAAf,OAAjB;AACA,UAAKkuD,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBluD,IAAtB,OAAxB;AACA,UAAKsuD,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBtuD,IAAtB,OAAxB;AACA,UAAKuuD,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBvuD,IAAvB,OAAzB;AACA,UAAKyuD,aAAL,GAAqB,MAAKA,aAAL,CAAmBzuD,IAAnB,OAArB;AACA,UAAK0uD,uBAAL,GAA+B,MAAKA,uBAAL,CAA6B1uD,IAA7B,OAA/B;AACA,UAAKq8D,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBr8D,IAAxB,OAA1B;AACA,UAAKs8D,UAAL,GAAkB,MAAKA,UAAL,CAAgBt8D,IAAhB,OAAlB;AACA,UAAKu8D,UAAL,GAAkB,MAAKA,UAAL,CAAgBv8D,IAAhB,OAAlB;AACA,UAAK8uD,cAAL,GAAsB,MAAKA,cAAL,CAAoB9uD,IAApB,OAAtB;AACA,UAAK+uD,eAAL,GAAuB,MAAKA,eAAL,CAAqB/uD,IAArB,OAAvB;AACA;AACA,UAAKgvD,UAAL,GAAkB,MAAKA,UAAL,CAAgBhvD,IAAhB,OAAlB;AACA,UAAKivD,UAAL,GAAkB,MAAKA,UAAL,CAAgBjvD,IAAhB,OAAlB;AACA;AACA,UAAKw8D,cAAL,GAAsB,MAAKA,cAAL,CAAoBx8D,IAApB,OAAtB;;AAEA;AACAyC,YAAQ/C,OAAOgD,WAAP,OAAR;;AAEA;AACA;AACAD,UAAM6F,gBAAN,CAAuB,SAAvB,EAAkC,MAAK6jD,aAAvC;AACA1pD,UAAM6F,gBAAN,CAAuB,QAAvB,EAAiC,MAAK8jD,YAAtC;AACA3pD,UAAM6F,gBAAN,CAAuB,WAAvB,EAAoC,MAAKqkD,eAAzC;AACAlqD,UAAMrC,aAAN,CAAoB,yBAApB,EAA+C,MAAKksD,cAApD;AACA7pD,UAAMrC,aAAN,CAAoB,WAApB,EAAiC,MAAK87D,iBAAtC,EAjEiB,CAiEyC;AAC1Dz5D,UAAMrC,aAAN,CAAoB,sBAApB,EAA4C,MAAKm7D,iBAAjD;AACA94D,UAAMrC,aAAN,CAAoB,aAApB,EAAmC,MAAKo7D,UAAxC;AACA/4D,UAAMrC,aAAN,CAAoB,eAApB,EAAqC,MAAKq7D,YAA1C;AApEiB;AAqElB;;;;wCAEmB;AAClB,WAAKvP,UAAL,GADkB,CACC;AACnBttD,aAAOkD,gBAAP,CAAwB,cAAxB,EAAwC,KAAK0qD,WAA7C;AACA5tD,aAAOkD,gBAAP,CAAwB,QAAxB,EAAkC,KAAK2qD,QAAvC;AACD;;;2CACsB;AACrBhqD,YAAMkmB,iBAAN,CAAwB,SAAxB,EAAmC,KAAKwjC,aAAxC;AACA1pD,YAAMkmB,iBAAN,CAAwB,QAAxB,EAAkC,KAAKyjC,YAAvC;AACA3pD,YAAMkmB,iBAAN,CAAwB,WAAxB,EAAqC,KAAKgkC,eAA1C;AACAlqD,YAAMqc,eAAN,CAAsB,yBAAtB,EAAiD,KAAKwtC,cAAtD;AACA7pD,YAAMqc,eAAN,CAAsB,WAAtB,EAAmC,KAAKo9C,iBAAxC;AACAz5D,YAAMqc,eAAN,CAAsB,sBAAtB,EAA8C,KAAKy8C,iBAAnD;AACA94D,YAAMqc,eAAN,CAAsB,aAAtB,EAAqC,KAAK08C,UAA1C;AACA/4D,YAAMqc,eAAN,CAAsB,eAAtB,EAAuC,KAAK28C,YAA5C;AACA78D,aAAO+oB,mBAAP,CAA2B,cAA3B,EAA2C,KAAK6kC,WAAhD;AACA5tD,aAAO+oB,mBAAP,CAA2B,QAA3B,EAAqC,KAAK8kC,QAA1C;AACD;;AAED;AACA;AACA;;;;iCACa;AACX,UAAMrgD,WAAW,KAAKoc,QAAL,CAAc,UAAd,CAAjB;AACA,WAAKnoB,QAAL,CAAc;AACZ;AACAqB,YAAI,IAFQ;AAGZkV,eAAO,EAHK;AAIZ3D,cAAM,EAJM;AAKZwpD,iBAAS,IALG;AAMZtb,oBAAY,EANA;AAOZ5lB,oBAAY,EAPA;AAQZ1B,iBAAS31B,SARG;AASZwsD,mBAAWxsD,SATC;AAUZ01B,iBAAS11B,SAVG;AAWZysD,mBAAWzsD,SAXC;AAYZg8C,kBAAU,CAZE;AAaZ;AACA7jB,eAAO,EAdK,EAcD;AACX;AACA;AACA;AACAs1B,uBAAe,EAlBH;AAmBZ;AACAxC,yBAAiB,KApBL;AAqBZC,sBAAc,KArBF;AAsBZC,mBAAWlgB,KAAKiC,QAAL,CAAcke,IAtBb;AAuBZC,sBAAclJ,KAAKyF,UAvBP;AAwBZjN,wBAAgB,IAxBJ;AAyBZ4Q,0BAAkB,aAzBN;AA0BZC,uBAAe,KA1BH,EA0BU;AACtBC,6BAAqB,KA3BT;AA4BZC,2BAAmB,KA5BP;AA6BZ8M,4BAAoB,KA7BR;AA8BZ7M,0BAAkB,EA9BN;AA+BZ8M,+BAAuBvwD,SAASisB,oBA/BpB;AAgCZukC,4BAAoB,EAhCR;AAiCZC,mCAA2B,IAjCf;AAkCZ3T,wBAAgB,KAlCJ;AAmCZ8G,6BAAqB;AAnCT,OAAd;AAqCD;;AAED;AACA;AACA;;;;gCACYxtD,K,EAAO;AACjB,UAAI,KAAKvC,KAAL,CAAWovD,SAAX,KAAyBlgB,KAAKiC,QAAL,CAAcif,IAA3C,EAAiD;AAC/C7tD,cAAM4wB,cAAN;AACA,SAAC5wB,SAAS5D,OAAO4D,KAAjB,EAAwB07C,WAAxB,GAAsC,IAAtC;AACD,OAHD,MAGO;AACLlnC,gBAAQmX,cAAR,CAAuB3rB,KAAvB,EAA8B,aAA9B;AACD;AACD,aAAOA,KAAP;AACD;;;6BACQA,K,EAAO;AACd,UAAI,KAAKvC,KAAL,CAAWovD,SAAX,KAAyBlgB,KAAKiC,QAAL,CAAcif,IAA3C,EAAiD;AAC/C5tD,cAAM0G,OAAN,CAAc,kBAAd,EAAkC,EAAEK,QAAQ,KAAKvJ,KAAL,CAAWyB,EAArB,EAAlC;AACAe,cAAM0G,OAAN,CAAc,uBAAd,EAAuC,EAAE06B,QAAQ13B,WAAWG,IAArB,EAAvC;AACD;AACF;;AAED;;;;;;;;;;;;kCAScyjB,O,EAAS;AAAA;;AACrB,WAAK1vB,QAAL,CAAc,EAAEysC,YAAY/c,QAAQvnB,OAAtB,EAAd,EAA+C;AAAA,eAAM,OAAK+jD,iBAAL,EAAN;AAAA,OAA/C;AACD;AACD;;;;;;iCAGajsD,I,EAAM;AAAA;;AACjB;AACA,UAAM8/B,cAAc9/B,KAAK47B,KAAL,CAAW+C,IAAX,CAAgB;AAAA,eAAKjC,EAAEt7B,EAAF,KAAS,OAAKzB,KAAL,CAAWyB,EAAzB;AAAA,OAAhB,CAApB;AACA,WAAKg6D,QAAL,CAAct7B,WAAd;AACA,WAAKu7B,SAAL,CAAe,KAAK17D,KAAL,CAAWyB,EAA1B;AACD;;;mCACcpB,I,EAAM;AAAA;;AACnBmC,YAAM0G,OAAN,CAAc,qBAAd,EAAqCJ,IAArC,CAA0C,gBAAQ;AAChD;AADgD,YAExCrH,EAFwC,GAEjC,OAAKzB,KAF4B,CAExCyB,EAFwC;;AAGhD,YAAMo7D,eAAex8D,KAAKmjC,WAAL,CAAiBzwB,QAAjB,CAA0BtR,EAA1B,CAArB;AACA,eAAKrB,QAAL,CACE;AACEqvD,yBAAeoN,YADjB;AAEEnN,+BAAqBrvD,KAAK8iC,mBAF5B;AAGEwsB,6BAAmBtvD,KAAK+iC,YAH1B;AAIEq5B,8BAAoBp8D,KAAKijC;AAJ3B,SADF,EAOE;AAAA,iBAAM,OAAKgpB,iBAAL,EAAN;AAAA,SAPF;AASD,OAbD;AAcD;;;wCACmB;AAAA,mBAOd,KAAKtsD,KAPS;AAAA,UAEhB6sC,UAFgB,UAEhBA,UAFgB;AAAA,UAGhB4iB,aAHgB,UAGhBA,aAHgB;AAAA,UAIhBC,mBAJgB,UAIhBA,mBAJgB;AAAA,UAKhBC,iBALgB,UAKhBA,iBALgB;AAAA,UAMhB8M,kBANgB,UAMhBA,kBANgB;;AAQlB,UAAMtwD,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,UAAIqnC,mBAAmB,EAAvB;AACA,UAAIV,kBAAkB,KAAtB;AACA,UAAIC,eAAe,IAAnB;AACA,UAAItiB,UAAJ,EAAgBsiB,eAAe,KAAf;AAChB,UAAIM,aAAJ,EAAmB;AACjBP,0BAAkB,IAAlB;AACAU,4BAAoBzjD,SAASssB,mBAA7B;AACD;AACD,UAAIi3B,mBAAJ,EAAyB;AACvBR,0BAAkB,IAAlB;AACAU,4BAAoBzjD,SAAS0sB,uBAA7B;AACD;AACD,UAAI82B,iBAAJ,EAAuB;AACrBT,0BAAkB,IAAlB;AACAU,4BAAoBzjD,SAASuuB,qBAA7B;AACD;AACD,UAAI+hC,kBAAJ,EAAwB;AACtBvN,0BAAkB,IAAlB;AACAU,4BAAoB,EAApB;AACD;AACD,WAAKxvD,QAAL,CAAc,EAAE8uD,gCAAF,EAAmBC,0BAAnB,EAAiCS,kCAAjC,EAAd;AACD;;;qCACgB;AACf,WAAK3D,UAAL;AACD;;;oCACe5rD,I,EAAM;AACpB,UAAI,CAACA,KAAK47B,KAAV,EAAiB,OADG,CACK;AACzB,UAAMa,OAAOz8B,KAAK47B,KAAL,CAAW,CAAX,CAAb,CAFoB,CAEQ;AAC5B,WAAKw/B,QAAL,CAAc3+B,IAAd;AACD;AACD;;;;;;;;;;;;sCASkBz8B,I,EAAM;AAAA;;AAAA,UACdkxC,MADc,GACHlxC,IADG,CACdkxC,MADc;;AAEtB,WAAKnxC,QAAL,CAAc,EAAEkvD,cAAclJ,KAAKjxB,KAArB,EAA4BypB,gBAAgBrN,MAA5C,EAAd,EAAoE,YAAM;AAAA,YAChEnV,KADgE,GACtD,OAAKp8B,KADiD,CAChEo8B,KADgE;;AAExE,YAAMa,OAAOb,MAAM4C,IAAN,CAAW;AAAA,iBAAK37B,EAAE5B,EAAF,KAASguB,OAAO8hB,MAAP,CAAd;AAAA,SAAX,CAAb;AACA,eAAKnxC,QAAL,CAAc,EAAEw+C,gBAAgBrN,MAAlB,EAAd;AACA/uC,cAAME,SAAN,CAAgB,WAAhB,EAA6B,EAAEu6B,UAAF,EAA7B,EAAuCn0B,IAAvC,CAA4C,YAAM;AAChDtG,gBAAME,SAAN,CAAgB,WAAhB,EAA6B,EAAE6uC,cAAF,EAA7B;AACD,SAFD;AAGD,OAPD;AAQD;;;+BACUlxC,I,EAAM;AAAA;;AAAA,UACPkxC,MADO,GACIlxC,IADJ,CACPkxC,MADO;;AAEf,WAAKnxC,QAAL,CAAc,EAAEkvD,cAAclJ,KAAKjxB,KAArB,EAA4BypB,gBAAgBrN,MAA5C,EAAd,EAAoE,YAAM;AAAA,YAChEnV,KADgE,GACtD,OAAKp8B,KADiD,CAChEo8B,KADgE;;AAExE,YAAMa,OAAOb,MAAM4C,IAAN,CAAW;AAAA,iBAAK37B,EAAE5B,EAAF,KAASguB,OAAO8hB,MAAP,CAAd;AAAA,SAAX,CAAb;AACA,eAAKnxC,QAAL,CAAc,EAAEw+C,gBAAgBrN,MAAlB,EAAd;AACA/uC,cAAME,SAAN,CAAgB,WAAhB,EAA6B,EAAEu6B,UAAF,EAA7B;AACD,OALD;AAMD;;;mCACc;AACb,WAAK78B,QAAL,CAAc,EAAEw+C,gBAAgB,IAAlB,EAAd;AACD;;AAED;AACA;AACA;;;;6BACS9hB,I,EAAM;AAAA;;AAAA,oBACa,KAAK98B,KADlB;AAAA,UACLyB,EADK,WACLA,EADK;AAAA,UACD2tD,SADC,WACDA,SADC;;AAGb;;AACA,UAAIA,cAAclgB,KAAKiC,QAAL,CAAcif,IAAhC,EAAsC;;AAEtC;AACA,UAAI,CAACtzB,IAAL,EAAW;AACT,aAAK2vB,cAAL;AACA;AACD;;AAED;AACA,UAAI3vB,KAAKr7B,EAAL,KAAYA,EAAhB,EAAoBe,MAAME,SAAN,CAAgB,eAAhB;;AAEpB;AACA,UAAMw+C,aAAa,KAAK4L,cAAL,CAAoBhwB,IAApB,CAAnB;AACA,UAAMxB,aAAa,KAAKyxB,cAAL,CAAoBjwB,IAApB,CAAnB;AACA,WAAK18B,QAAL,CACE;AACEqB,YAAIq7B,KAAKr7B,EADX;AAEEkV,eAAOmmB,KAAKnmB,KAFd;AAGE3D,cAAM8pB,KAAK9pB,IAHb;AAIEwpD,iBAAS1/B,KAAK0/B,OAJhB;AAKEtb,oBAAYA,UALd;AAME5lB,oBAAYA,UANd;AAOE1B,iBAASkD,KAAKjkB,IAAL,GAAY,IAAIlV,IAAJ,CAASm5B,KAAKjkB,IAAL,CAAU+gB,OAAnB,EAA4B42B,cAA5B,EAAZ,GAA2D,EAPtE;AAQEC,mBAAW3zB,KAAK2zB,SARlB;AASE92B,iBAASmD,KAAKjkB,IAAL,GAAY,IAAIlV,IAAJ,CAASm5B,KAAKjkB,IAAL,CAAU8gB,OAAnB,EAA4B62B,cAA5B,EAAZ,GAA2D,EATtE;AAUEE,mBAAW5zB,KAAK4zB,SAVlB;AAWEzQ,kBAAUnjB,KAAKjkB,IAAL,GAAYikB,KAAKjkB,IAAL,CAAUonC,QAAtB,GAAiC;AAX7C,OADF,EAcE,YAAM;AACJ,eAAK2N,kBAAL;AACA,eAAKoO,kBAAL,CAAwBl/B,KAAKnmB,KAA7B;AACA,eAAK+kD,SAAL,CAAe5+B,KAAKr7B,EAApB;AACA,eAAKo6D,YAAL,CAAkB,wBAAgB;AAChC,iBAAKz7D,QAAL,CACE;AACEqvD,2BAAeoN;AADjB,WADF,EAIE;AAAA,mBAAM,OAAKvQ,iBAAL,EAAN;AAAA,WAJF;AAMD,SAPD;AAQD,OA1BH;AA4BD;;;8BACS7qD,E,EAAI;AACZ;AACA,UAAMqG,SAAStF,MAAM+lB,QAAN,CAAe,QAAf,CAAf;AACA,UAAMu0C,cAAch1D,OAAOs0B,KAAP,CAAaxb,MAAb,CAAoB;AAAA,eAAKvd,EAAEq4B,MAAF,KAAaj6B,EAAb,IAAmB4B,EAAEmH,MAAF,KAAa/I,EAArC;AAAA,OAApB,CAApB;AACAq7D,kBAAYhc,IAAZ,CAAiB,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AACzB;AACA,YAAID,EAAEiuC,WAAF,KAAkBhuC,EAAEguC,WAAxB,EAAqC;AACnC,cAAIjuC,EAAE48C,WAAF,GAAgB38C,EAAE28C,WAAtB,EAAmC,OAAO,CAAC,CAAR;AACnC,cAAI58C,EAAE48C,WAAF,GAAgB38C,EAAE28C,WAAtB,EAAmC,OAAO,CAAP;AACpC;AACD;AACA,YAAI58C,EAAE23B,MAAF,KAAaj6B,EAAjB,EAAqB,OAAO,CAAC,CAAR;AACrB,YAAIuC,EAAE03B,MAAF,KAAaj6B,EAAjB,EAAqB,OAAO,CAAP;AACrB;AACA,YAAIsC,EAAEiuC,WAAF,GAAgBhuC,EAAEguC,WAAtB,EAAmC,OAAO,CAAC,CAAR;AACnC,YAAIjuC,EAAEiuC,WAAF,GAAgBhuC,EAAEguC,WAAtB,EAAmC,OAAO,CAAP;AACnC,eAAO,CAAP;AACD,OAbD;AAcA,WAAK5xC,QAAL,CAAc,EAAEg8B,OAAO0gC,WAAT,EAAd;AACD;AACD;;;;;;;;;;;;mCASehgC,I,EAAM;AACnB,UAAMtC,WAAWh4B,MAAM+lB,QAAN,CAAe,UAAf,EAA2B8Q,QAA5C;AACA,UAAM6nB,aAAa,EAAnB;AACAv2C,aAAOuH,IAAP,CAAYsoB,QAAZ,EAAsB5mB,OAAtB,CAA8B,aAAK;AACjC,YAAIpH,oBAAoBuG,QAApB,CAA6BX,CAA7B,CAAJ,EAAqC,OADJ,CACY;AAC7C,YAAMu+C,WAAWn2B,SAASpoB,CAAT,CAAjB;AACA,YAAIu+C,SAASr4B,MAAb,EAAqB,OAHY,CAGJ;AAC7B,YAAIq4B,SAASC,YAAb,EAA2B,OAJM,CAIE;AACnC1P,mBAAW9uC,CAAX,IAAgB0qB,KAAK1qB,CAAL,CAAhB;AACD,OAND;AAOA,aAAO8uC,UAAP;AACD;AACD;;;;;;;;;;;;mCASepkB,I,EAAM;AACnB,UAAMtC,WAAWh4B,MAAM+lB,QAAN,CAAe,UAAf,EAA2B8Q,QAA5C;AACA,UAAMiC,aAAa,EAAnB;AACA3wB,aAAOuH,IAAP,CAAYsoB,QAAZ,EAAsB5mB,OAAtB,CAA8B,aAAK;AACjC,YAAIpH,oBAAoBuG,QAApB,CAA6BX,CAA7B,CAAJ,EAAqC,OADJ,CACY;AAC7C,YAAMy+C,iBAAiBr2B,SAASpoB,CAAT,CAAvB;AACA,YAAIy+C,eAAev4B,MAAnB,EAA2B,OAHM,CAGE;AACnC,YAAI,CAACu4B,eAAeD,YAApB,EAAkC,OAJD,CAIS;AAC1Ct1B,mBAAWlpB,CAAX,IAAgB0qB,KAAK1qB,CAAL,CAAhB;AACD,OAND;AAOA,aAAOkpB,UAAP;AACD;;AAED;;;;;;;;;;6BAOSqa,E,EAAI;AAAA,UACHl0C,EADG,GACI,KAAKzB,KADT,CACHyB,EADG;;AAEX,UAAIqvD,cAAc,KAAlB;AACAtuD,YAAM0G,OAAN,CAAc,gBAAd,EAAgC,EAAEK,QAAQ9H,EAAV,EAAhC,EAAgDqH,IAAhD,CAAqD,gBAAQ;AAC3D,YAAIzI,KAAK4+B,GAAT,EAAc;AACZ19B,kBAAQC,GAAR,mBAA4BnB,KAAK4+B,GAAjC,SAAwC5+B,KAAK6+B,IAA7C;AACD,SAFD,MAEO,IAAI7+B,KAAKo+B,MAAT,EAAiB;AACtBl9B,kBAAQC,GAAR,mDAA4DnB,KAAKkJ,MAAjE;AACAhI,kBAAQC,GAAR;AACAsvD,wBAAc,IAAd;AACA;AACAtuD,gBAAM0G,OAAN,CAAc,mBAAd,EAAmC,EAAE06B,QAAQ13B,WAAWG,IAArB,EAAnC;AACD;AACD,YAAI,OAAOspC,EAAP,KAAc,UAAlB,EAA8BA,GAAGmb,WAAH;AAC/B,OAXD;AAYD;;;+BACUnb,E,EAAI;AAAA,UACLl0C,EADK,GACE,KAAKzB,KADP,CACLyB,EADK;;AAEb,UAAIsvD,gBAAgB,KAApB;AACAvuD,YAAM0G,OAAN,CAAc,kBAAd,EAAkC,EAAEK,QAAQ9H,EAAV,EAAlC,EAAkDqH,IAAlD,CAAuD,gBAAQ;AAC7D,YAAIzI,KAAK4+B,GAAT,EAAc;AACZ19B,kBAAQC,GAAR,mBAA4BnB,KAAK4+B,GAAjC,SAAwC5+B,KAAK6+B,IAA7C;AACD,SAFD,MAEO,IAAI7+B,KAAKs+B,QAAT,EAAmB;AACxBp9B,kBAAQC,GAAR,0DACyDnB,KAAKkJ,MAD9D;AAGAwnD,0BAAgB,IAAhB;AACA;AACAvuD,gBAAM0G,OAAN,CAAc,uBAAd,EAAuC,EAAE06B,QAAQ13B,WAAWG,IAArB,EAAvC;AACD;AACD,YAAI,OAAOspC,EAAP,KAAc,UAAlB,EAA8BA,GAAGob,aAAH;AAC/B,OAZD;AAaD;;;iCACYpb,E,EAAI;AAAA,UACPl0C,EADO,GACA,KAAKzB,KADL,CACPyB,EADO;;AAEf,UAAIo7D,eAAe,KAAnB;AACAr6D,YAAM0G,OAAN,CAAc,oBAAd,EAAoC,EAAEK,QAAQ9H,EAAV,EAApC,EAAoDqH,IAApD,CAAyD,gBAAQ;AAC/D,YAAIzI,KAAK4+B,GAAT,EAAc;AACZ19B,kBAAQC,GAAR,mBAA4BnB,KAAK4+B,GAAjC,SAAwC5+B,KAAK6+B,IAA7C;AACD,SAFD,MAEO,IAAI7+B,KAAKo+B,MAAT,EAAiB;AACtBl9B,kBAAQC,GAAR,wDACuDnB,KAAKkJ,MAD5D;AAGAszD,yBAAe,IAAf;AACD;AACD,YAAI,OAAOlnB,EAAP,KAAc,UAAlB,EAA8BA,GAAGknB,YAAH;AAC/B,OAVD;AAWD;;AAED;AACA;AACA;;;;+BACW;AAAA;;AAAA,oBAEP,KAAK78D,KAFE;AAAA,UACDyB,EADC,WACDA,EADC;AAAA,UACGkV,KADH,WACGA,KADH;AAAA,UACU3D,IADV,WACUA,IADV;AAAA,UACgBkuC,UADhB,WACgBA,UADhB;AAAA,UAC4B5lB,UAD5B,WAC4BA,UAD5B;AAAA,UACwC1B,OADxC,WACwCA,OADxC;AAAA,UACiDD,OADjD,WACiDA,OADjD;AAAA,UAC0DsmB,QAD1D,WAC0DA,QAD1D;;AAGT,UAAMniC,MAAMiuB,QAAQkF,gBAAR,EAAZ;AACA,UAAMnU,OAAO;AACXr7B,cADW;AAEXkV,oBAFW;AAGX3D,kBAHW;AAIX09C,mBAAW5yC;AAJA,OAAb;AAMAnT,aAAOuH,IAAP,CAAYgvC,UAAZ,EAAwBttC,OAAxB,CAAgC;AAAA,eAAMkpB,KAAK1qB,CAAL,IAAU8uC,WAAW9uC,CAAX,CAAhB;AAAA,OAAhC;AACAzH,aAAOuH,IAAP,CAAYopB,UAAZ,EAAwB1nB,OAAxB,CAAgC;AAAA,eAAMkpB,KAAK1qB,CAAL,IAAUkpB,WAAWlpB,CAAX,CAAhB;AAAA,OAAhC;;AAEA;AACA;AACA;AACA;AACA,WAAKhS,QAAL,CACE;AACEgvD,mBAAWlgB,KAAKiC,QAAL,CAAcke;AAD3B,OADF,EAIE,YAAM;AACJ;AACA;AACA;AACA,eAAKrW,OAAL,CAAa,WAAb,EAA0B,EAAElc,UAAF,EAA1B,EAAoCh0B,IAApC,CAAyC,YAAM;AAC7C,iBAAK8yD,UAAL,CAAgB,YAAM;AACpB,mBAAKx7D,QAAL,CAAc,EAAEqvD,eAAe,KAAjB,EAAd;AACD,WAFD;AAGD,SAJD;AAKD,OAbH;AAeAhwD,aAAO6C,GAAP,CAAW,iBAAX,EAA8Bb,EAA9B,EAAkCkV,KAAlC,EAAyCvN,KAAKC,SAAL,CAAeyzB,IAAf,CAAzC;AACD;;;iCACY;AAAA,oBACwB,KAAK98B,KAD7B;AAAA,UACHyB,EADG,WACHA,EADG;AAAA,UACCk7D,kBADD,WACCA,kBADD;;AAGX;AACA;;AACA,UAAM38B,oBACJ28B,uBAAuB,EAAvB,GAA4B,CAAC,CAA7B,GAAiCtvD,SAASsvD,kBAAT,CADnC,CALW,CAMsD;;AAEjE,WAAK1Q,UAAL;AACA,WAAKjT,OAAL,CAAa,WAAb,EAA0B;AACxBzvC,gBAAQ9H,EADgB;AAExBu+B,2BAAmBA;AAFK,OAA1B;AAID;;AAED;AACA;AACA;;;;;;;;yCAKqB;AAAA,UACXhtB,IADW,GACF,KAAKhT,KADH,CACXgT,IADW;;AAEnB,UAAMi+C,WAAWzuD,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,UAAMinC,mBAAmByB,SAASE,YAAT,CAAsBn+C,IAAtB,KAA+B,SAAxD;AACA,WAAK5S,QAAL,CAAc,EAAEovD,kCAAF,EAAd;AACD;;;uCAEkBnqD,K,EAAO;AAAA;;AAAA,UAChB5D,EADgB,GACT,KAAKzB,KADI,CAChByB,EADgB;;AAExBe,YAAME,SAAN,CAAgB,qBAAhB,EAAuC,EAAEu2C,cAAc5zC,KAAhB,EAAvC,EAAgEyD,IAAhE,CAAqE,gBAAQ;AAC3E,YAAMi0D,gBAAgB18D,KAAK47B,KAAL,CAAWrb,MAAX,CAAkB;AAAA,iBAAKmc,EAAEt7B,EAAF,KAASA,EAAd;AAAA,SAAlB,CAAtB,CAD2E,CAChB;AAC3D,eAAKrB,QAAL,CAAc,EAAE28D,4BAAF,EAAd;AACD,OAHD;AAID;;AAED;AACA;;;;gCAEYx6D,K,EAAO;AAAA,oBACK,KAAKvC,KADV;AAAA,UACTyB,EADS,WACTA,EADS;AAAA,UACLkV,KADK,WACLA,KADK;;AAEjB,UAAM24C,eAAe/sD,MAAMiI,MAAN,CAAanF,KAAlC;AACA,WAAKjF,QAAL,CAAc,EAAEkvD,0BAAF,EAAd;AACA,UAAI/sD,MAAMiI,MAAN,CAAanF,KAAb,KAAuB+gD,KAAKjxB,KAAhC,EAAuC3yB,MAAME,SAAN,CAAgB,eAAhB;AACvCjD,aAAO6C,GAAP,CAAW,iBAAX,EAA8Bb,EAA9B,EAAkCkV,KAAlC,EAAyC24C,YAAzC;AACD;;AAED;;;;;;;wCAIoB;AAAA;;AAAA,UACVziB,UADU,GACK,KAAK7sC,KADV,CACV6sC,UADU;;AAElB,UAAI,CAACA,UAAL,EAAiB;AACjB,WAAK8uB,QAAL,CAAc,uBAAe;AAC3B,gBAAKv7D,QAAL,CAAc,EAAEqvD,eAAe,CAACqB,WAAlB,EAAd,EAA+C,YAAM;AACnD,cAAIA,WAAJ,EAAiB,QAAK7C,gBAAL;AAClB,SAFD;AAGD,OAJD;AAKD;;;8CAEyB1rD,K,EAAO;AAC/B,UAAMy6D,oBAAoB3vD,SAAS9K,MAAMiI,MAAN,CAAanF,KAAtB,CAA1B;AACA,UAAIkD,UAAU,KAAd;AACA;AACA,UACEhG,MAAMiI,MAAN,CAAanF,KAAb,KAAuB,EAAvB,IACA7C,MAAM+lB,QAAN,CAAe,QAAf,EAAyB0T,KAAzB,CAA+B+C,IAA/B,CAAoC,gBAAQ;AAC1C,eAAOlC,KAAKr7B,EAAL,KAAYu7D,iBAAnB;AACD,OAFD,CAFF,EAKE;AACAz0D,kBAAU,IAAV;AACD;AACD,WAAKnI,QAAL,CAAc;AACZu8D,4BAAoBK,iBADR;AAEZJ,mCAA2Br0D;AAFf,OAAd;AAID;;;8BAEShG,K,EAAO;AAAA;;AACfA,YAAM4wB,cAAN;AACA3wB,YAAME,SAAN,CAAgB,aAAhB,EAA+B,EAAE2uC,QAAQ,KAAKrxC,KAAL,CAAWyB,EAArB,EAA/B,EAA0DqH,IAA1D,CAA+D,gBAAQ;AACrE;AACA,gBAAKwzD,UAAL,CAAgBr/B,KAAKx7B,EAArB;AACD,OAHD;AAID;;;uCAEkB;AAAA,oBACiD,KAAKzB,KADtD;AAAA,UACTsvD,YADS,WACTA,YADS;AAAA,UACK7tD,EADL,WACKA,EADL;AAAA,UACSkV,KADT,WACSA,KADT;AAAA,UACgB3D,IADhB,WACgBA,IADhB;AAAA,UACsBkuC,UADtB,WACsBA,UADtB;AAAA,UACkC5lB,UADlC,WACkCA,UADlC;AAEjB;AACA;;AACA,UAAM2hC,cAAc3N,iBAAiBlJ,KAAKjxB,KAAtB,GAA8BixB,KAAKyF,UAAnC,GAAgDyD,YAApE;AACA,UAAMoC,gBAAgB;AACpB/6C,oBADoB;AAEpB3D,kBAFoB;AAGpBkuC,oBAAYv2C,OAAOC,MAAP,CAAc,EAAd,EAAkBs2C,UAAlB;AACZ;AAJoB,OAAtB;AAMA,WAAK9gD,QAAL,CAAc;AACZgvD,mBAAWlgB,KAAKiC,QAAL,CAAcif,IADb;AAEZd,sBAAc2N,WAFF;AAGZvL;AAHY,OAAd;;AAMA,UAAM50B,OAAO;AACXr7B,cADW;AAEXkV,oBAFW;AAGX3D,kBAHW;AAIXsoB;AAJW,OAAb;AAMA3wB,aAAOuH,IAAP,CAAYgvC,UAAZ,EAAwBttC,OAAxB,CAAgC;AAAA,eAAMkpB,KAAK1qB,CAAL,IAAU8uC,WAAW9uC,CAAX,CAAhB;AAAA,OAAhC;AACAzH,aAAOuH,IAAP,CAAYopB,UAAZ,EAAwB1nB,OAAxB,CAAgC;AAAA,eAAMkpB,KAAK1qB,CAAL,IAAUkpB,WAAWlpB,CAAX,CAAhB;AAAA,OAAhC;AACA3S,aAAO6C,GAAP,CAAW,WAAX,EAAwBb,EAAxB,EAA4BkV,KAA5B,EAAmCvN,KAAKC,SAAL,CAAeyzB,IAAf,CAAnC;AACD;;;uCAEkB;AAAA;;AAAA,oBAC8B,KAAK98B,KADnC;AAAA,UACTyB,EADS,WACTA,EADS;AAAA,UACLkV,KADK,WACLA,KADK;AAAA,UACEspC,QADF,WACEA,QADF;AAAA,UACYyR,aADZ,WACYA,aADZ;;AAGjB;AACA;;AACA,UAAIzR,WAAW,CAAf,EAAkB;AAChB,aAAKqO,iBAAL;AACA,aAAKyN,UAAL;AACA;AACD;;AAED;AACA,WAAK37D,QAAL,CACE;AACEuW,eAAO+6C,cAAc/6C,KADvB;AAEE3D,cAAM0+C,cAAc1+C,IAFtB;AAGEkuC,oBAAYwQ,cAAcxQ;AAC1B;AAJF,OADF,EAOE;AAAA,eAAM,QAAKoN,iBAAL,EAAN;AAAA,OAPF;AASA7uD,aAAO6C,GAAP,CAAW,kBAAX,EAA+Bb,EAA/B,EAAmCkV,KAAnC;AACD;;;wCAEmB;AAAA;;AAClB,WAAKilD,UAAL,CAAgB,YAAM;AACpB,gBAAKx7D,QAAL,CAAc;AACZgvD,qBAAWlgB,KAAKiC,QAAL,CAAcke,IADb;AAEZI,yBAAe;AAFH,SAAd;AAIAjtD,cAAM0G,OAAN,CAAc,uBAAd,EAAuC,EAAE06B,QAAQ13B,WAAWG,IAArB,EAAvC;AACD,OAND;AAOD;;;kCACatH,G,EAAKM,K,EAAO;AAAA;;AACxB,UAAImH,oBAAoBuG,QAApB,CAA6BhO,GAA7B,CAAJ,EAAuC;AACrC,YAAM1E,OAAO,EAAb;AACAA,aAAK0E,GAAL,IAAYM,KAAZ;AACA,aAAKjF,QAAL,CAAcC,IAAd;AACD,OAJD,MAIO;AAAA,YACG6gD,UADH,GACkB,KAAKlhD,KADvB,CACGkhD,UADH;;AAELA,mBAAWn8C,GAAX,IAAkBM,KAAlB;AACA,aAAKjF,QAAL,CAAc,EAAE8gD,sBAAF,EAAd,EAA8B;AAAA,iBAAM,QAAK0M,kBAAL,EAAN;AAAA,SAA9B;AACD;AACF;;;4CACuB7oD,G,EAAKM,K,EAAO;AAAA;;AAClC,UAAImH,oBAAoBuG,QAApB,CAA6BhO,GAA7B,CAAJ,EAAuC;AACrC,YAAM1E,OAAO,EAAb;AACAA,aAAK0E,GAAL,IAAYM,KAAZ;AACA,aAAKjF,QAAL,CAAcC,IAAd;AACD,OAJD,MAIO;AAAA,YACGi7B,UADH,GACkB,KAAKt7B,KADvB,CACGs7B,UADH;;AAELA,mBAAWv2B,GAAX,IAAkBM,KAAlB;AACA,aAAKjF,QAAL,CAAc,EAAEk7B,sBAAF,EAAd,EAA8B;AAAA,iBAAM,QAAKsyB,kBAAL,EAAN;AAAA,SAA9B;AACD;AACF;;;uCACkB7oD,G,EAAKM,K,EAAO;AAC7B,UAAMhF,OAAO,EAAb;AACAA,WAAK0E,GAAL,IAAYM,KAAZ;AACA,WAAKjF,QAAL,CAAcC,IAAd;AACA,WAAK27D,kBAAL,CAAwB32D,KAAxB;AACD;;;+BAEUksC,M,EAAQ;AAAA,UACTnV,KADS,GACC,KAAKp8B,KADN,CACTo8B,KADS;;AAEjB,UAAMa,OAAOb,MAAM4C,IAAN,CAAW;AAAA,eAAK37B,EAAE5B,EAAF,KAASguB,OAAO8hB,MAAP,CAAd;AAAA,OAAX,CAAb;AACA,WAAKnxC,QAAL,CAAc,EAAEw+C,gBAAgBrN,MAAlB,EAAd;AACA/uC,YAAME,SAAN,CAAgB,WAAhB,EAA6B,EAAEu6B,UAAF,EAA7B;AACD;;;+BAEUsU,M,EAAQ;AAAA,UACTnV,KADS,GACC,KAAKp8B,KADN,CACTo8B,KADS;;AAEjB,UAAMa,OAAOb,MAAM4C,IAAN,CAAW;AAAA,eAAK37B,EAAE5B,EAAF,KAASguB,OAAO8hB,MAAP,CAAd;AAAA,OAAX,CAAb;AACA,WAAKnxC,QAAL,CAAc,EAAEw+C,gBAAgBrN,MAAlB,EAAd;AACA/uC,YAAME,SAAN,CAAgB,WAAhB,EAA6B,EAAEu6B,UAAF,EAA7B,EAAuCn0B,IAAvC,CAA4C;AAAA,eAC1CtG,MAAME,SAAN,CAAgB,WAAhB,EAA6B,EAAEu6B,UAAF,EAA7B,CAD0C;AAAA,OAA5C;AAGD;;;qCAEgB;AACf,WAAK78B,QAAL,CAAc,EAAE2vD,qBAAqB,IAAvB,EAAd;AACD;;;sCACiB;AAChB,WAAK3vD,QAAL,CAAc,EAAE2vD,qBAAqB,KAAvB,EAAd;AACD;;AAED;AACA;;;;iCACa;AAAA,oBAcP,KAAK/vD,KAdE;AAAA,UAETsvD,YAFS,WAETA,YAFS;AAAA,UAGTE,gBAHS,WAGTA,gBAHS;AAAA,UAITN,eAJS,WAITA,eAJS;AAAA,UAKTC,YALS,WAKTA,YALS;AAAA,UAMTS,gBANS,WAMTA,gBANS;AAAA,UAOT8M,qBAPS,WAOTA,qBAPS;AAAA,UAQTC,kBARS,WAQTA,kBARS;AAAA,UASTC,yBATS,WASTA,yBATS;AAAA,UAUT7M,mBAVS,WAUTA,mBAVS;AAAA,UAWTtuD,EAXS,WAWTA,EAXS;AAAA,UAYTkV,KAZS,WAYTA,KAZS;AAAA,UAaT3D,IAbS,WAaTA,IAbS;;AAeX,UAAM7G,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,UAAMspC,OAAO1lD,SAASktB,QAAtB;AACA,UAAMy4B,sBAAsB3lD,SAASgtB,QAAT,IAAqB,CAAChtB,SAASgtB,QAAT,CAAkBb,MAApE;AACA,UAAMs5B,UAAUpC,mBAAmB,IAAnC,CAlBW,CAkB8B;AACzC,UAAMr2B,WACJ,eAAahtB,SAAS0H,IAAtB,+BACU8C,KADV,cACwBlV,EADxB,aAEC0K,SAASgtB,QAAT,IAAqBhtB,SAASgtB,QAAT,CAAkBtmB,IAAvC,GACM1G,SAASgtB,QAAT,CAAkBtmB,IADxB,UAEG,EAJJ,2BAKoBq8B,KAAK8iB,aAAL,EALpB,OADF;AAOA,UAAM1wB,iBAAiB8K,OAAOgF,WAAP,CAAmB3vC,EAAnB,CAAvB;AACA,aACE;AAAA;AAAA,UAAK,WAAU,2BAAf;AACE;AAAA;AAAA,YAAK,WAAU,MAAf,EAAsB,OAAO,EAAE8pD,YAAYqG,OAAd,EAA7B;AAEE;AAAA;AAAA,cAAK,WAAU,UAAf;AACE;AAAA;AAAA,gBAAK,WAAU,YAAf;AAAA;AAAkCnwD;AAAlC,aADF;AAEE;AAAA;AAAA,gBAAK,WAAU,WAAf;AAA4BytC,mBAAK+iB,WAAL,CAAiB,OAAjB,EAA0Bt7C,KAA1B;AAA5B,aAFF;AAGE,gCAAC,sBAAD,IAAc,MAAM2qB,cAApB;AAHF,WAFF;AASGuwB,eAAK,MAAL,KAAgB,CAACA,KAAK,MAAL,EAAav5B,MAA9B,IACC;AAAA;AAAA,cAAK,WAAU,mBAAf;AACG4W,iBAAK+iB,WAAL,CAAiB,MAAjB,EAAyBJ,KAAK,MAAL,EAAat4B,YAAtC,EAAoDs4B,KAAK,MAAL,EAAap4B,IAAjE,CADH;AAEGyV,iBAAKgjB,iBAAL,CAAuB,MAAvB,EAA+Bl/C,IAA/B;AAFH,WAVJ;AAgBE;AAAA;AAAA,cAAK,WAAU,iCAAf;AACGk8B,iBAAKijB,kBAAL,CAAwB/L,IAAxB,EAA8B,KAAKpmD,KAAnC,EAA0C,KAAKkuD,WAA/C,CADH;AAEE;AAAA;AAAA,gBAAK,WAAU,SAAf;AACGoB,+BAAiBlJ,KAAKyF,UAAtB,IACC3c,KAAKkjB,uBAAL,CAA6B,KAAKpyD,KAAlC,EAAyC6xD,IAAzC,CAFJ;AAGGvC,+BAAiBlJ,KAAKjxB,KAAtB,IAA+B,KAAKonC,cAAL,EAHlC;AAIGjN,+BAAiBlJ,KAAK0F,UAAtB,IACC5c,KAAKmjB,uBAAL,CAA6B,KAAKryD,KAAlC,EAAyC6xD,IAAzC;AALJ;AAFF,WAhBF;AA2BG,WAAC1C,YAAD,IAAiBS,gBAAjB,IACC;AAAA;AAAA,cAAK,WAAU,iBAAf,EAAiC,OAAO,EAAEj+B,WAAW,KAAb,EAAxC;AACE;AAAA;AAAA;AAAIi+B;AAAJ,aADF;AAEE;AAAA;AAAA,gBAAG,QAAQ,CAAC5Z,OAAZ;AACE;AAAA;AAAA;AAAA;AAAA,eADF;AAAA;AAGE;AAAA;AAAA,kBAAQ,SAAS,KAAKsY,iBAAtB,EAAyC,OAAO,EAAEgE,YAAY,CAAd,EAAhD;AAAA;AAAA;AAHF;AAFF,WA5BJ;AAuCE;AAAA;AAAA,cAAK,WAAU,mCAAf;AACGR,mCACC;AAAA;AAAA;AACE,oBAAG,aADL;AAEE,2BAAU,gBAFZ;AAGE,yBAAS,KAAKjD;AAHhB;AAAA;AAAA,aAFJ;AAUE,yCAAK,OAAO,EAAE3gB,UAAU,CAAZ,EAAZ,GAVF;AAWG,aAACihB,YAAD,IAAiBG,iBAAiBlJ,KAAKjxB,KAAvC,IACC;AAAA;AAAA;AACE,oBAAG,SADL;AAEE,yBAAS,KAAK8mC,iBAFhB;AAGE,0BAAU/M;AAHZ;AAAA;AAAA;AAZJ,WAvCF;AA4DGlZ,qBAAW,CAACkZ,eAAZ,IAA+B,CAACwN,qBAAhC,IACC;AAAA;AAAA,cAAK,WAAU,uBAAf;AACE;AAAA;AAAA,gBAAK,WAAU,SAAf;AAAA;AAAA,aADF;AAIE;AAAA;AAAA;AACE;AACE,sBAAK,QADP;AAEE,oBAAG,mBAFL;AAGE,6CACEE,4BAA4B,EAA5B,GAAiC,SADnC,CAHF;AAME,uBAAOD,sBAAsB,EAN/B;AAOE,0BAAU,KAAKT;AAPjB,gBADF;AAUG,eAACU,yBAAD,IACC;AAAA;AAAA,kBAAK,WAAU,iBAAf;AAAA;AAAA;AAXJ,aAJF;AAkBE;AAAA;AAAA,gBAAQ,SAAS,KAAKb,UAAtB;AAAA;AAAA;AAlBF;AA7DJ,SADF;AAoFGhM,+BACC,oBAAC,gBAAD,IAAkB,SAAS52B,QAA3B,EAAqC,SAAS,KAAK21B,eAAnD;AArFJ,OADF;AA0FD;;;iCAEY;AAAA;;AAAA,oBASP,KAAK9uD,KATE;AAAA,UAETsvD,YAFS,WAETA,YAFS;AAAA,UAGTE,gBAHS,WAGTA,gBAHS;AAAA,UAITvG,cAJS,WAITA,cAJS;AAAA,UAKT8T,aALS,WAKTA,aALS;AAAA,UAMTt7D,EANS,WAMTA,EANS;AAAA,UAOTkV,KAPS,WAOTA,KAPS;AAAA,UAQT3D,IARS,WAQTA,IARS;;AAUX,UAAM6+C,OAAOrvD,MAAM+lB,QAAN,CAAe,UAAf,EAA2B8Q,QAAxC;AACA,UAAMu4B,UAAUpC,mBAAmB,IAAnC,CAXW,CAW8B;AACzC,UAAM/E,YAAYsS,gBACdA,cAAc5qD,GAAd,CAAkB;AAAA,eAChB;AAAA;AAAA,YAAK,UAAQ4qB,EAAEpmB,KAAV,GAAkBomB,EAAEt7B,EAAzB,EAA+B,OAAOs7B,EAAEt7B,EAAxC;AACGs7B,YAAEpmB,KADL;AAAA;AACY;AAAA;AAAA,cAAM,WAAU,IAAhB;AAAA;AAAuBomB,cAAEt7B;AAAzB;AADZ,SADgB;AAAA,OAAlB,CADc,GAMdwC,SANJ;AAOA,UAAMi5D,cAAcH,iBAAiBA,cAAc/9B,IAAd,CAAmB;AAAA,eAAKjC,EAAEpmB,KAAF,KAAYA,KAAjB;AAAA,OAAnB,CAArC;AACA,UAAM6hB,mBAAmBh2B,MAAM+lB,QAAN,CAAe,UAAf,EAA2BiQ,gBAApD;AACA,aACE;AAAA;AAAA,UAAK,WAAU,eAAf;AACE,qCAAK,WAAU,QAAf,GADF;AAEE;AAAA;AAAA,YAAK,WAAU,aAAf;AACE;AAAA;AAAA;AACE,yBAAU,MADZ;AAEE,qBAAO;AACL+yB,4BAAYqG,OADP;AAELlU,6BAAa8R;AAFR;AAFT;AAQE;AAAA;AAAA,gBAAK,WAAU,WAAf;AACGtgB,mBAAKiuB,iBAAL,CACC,OADD,EAECxmD,KAFD,EAGC,KAAKylD,kBAHN,EAIC,EAJD,EAKC;AAAA,uBAAM,QAAKh8D,QAAL,CAAc,EAAE6oD,gBAAgB,IAAlB,EAAd,CAAN;AAAA,eALD,EAMC;AAAA,uBAAM,QAAK7oD,QAAL,CAAc,EAAE6oD,gBAAgB,KAAlB,EAAd,CAAN;AAAA,eAND,CADH;AASGA,gCAAkBwB,SAAlB,IACC;AAAA;AAAA,kBAAK,WAAU,WAAf;AACGyS,+BAAe;AAAA;AAAA,oBAAK,WAAU,SAAf;AAA0B1kC;AAA1B,iBADlB;AAEGiyB;AAFH,eAVJ;AAeGyS,6BAAe;AAAA;AAAA,kBAAK,WAAU,SAAf;AAA0B1kC;AAA1B;AAflB,aARF;AA0BGq5B,iBAAK,MAAL,KAAgB,CAACA,KAAK,MAAL,EAAav5B,MAA9B,IACC;AAAA;AAAA,gBAAK,WAAU,mBAAf;AACG4W,mBAAK+iB,WAAL,CACC,MADD,EAECJ,KAAK,MAAL,EAAat4B,YAFd,EAGCs4B,KAAK,MAAL,EAAap4B,IAHd,CADH;AAMGyV,mBAAKwjB,kBAAL,CACC,MADD,EAEC1/C,IAFD,EAGC6+C,IAHD,EAIC,KAAKrD,aAJN,EAKCqD,KAAK,MAAL,EAAap4B,IALd;AANH,aA3BJ;AA2CE;AAAA;AAAA,gBAAK,WAAU,cAAf;AACGyV,mBAAKijB,kBAAL,CAAwB/L,IAAxB,EAA8B,KAAKpmD,KAAnC,EAA0C,KAAKkuD,WAA/C,CADH;AAEE;AAAA;AAAA,kBAAK,WAAU,SAAf;AACGoB,iCAAiBlJ,KAAKyF,UAAtB,IACC3c,KAAKyjB,uBAAL,CAA6B,KAAK3yD,KAAlC,EAAyC6xD,IAAzC,EAA+C,KAAKrD,aAApD,CAFJ;AAGGc,iCAAiBlJ,KAAKjxB,KAAtB,IAA+B,KAAKonC,cAAL,EAHlC;AAIGjN,iCAAiBlJ,KAAK0F,UAAtB,IACC5c,KAAK0jB,uBAAL,CACE,KAAK5yD,KADP,EAEE6xD,IAFF,EAGE,KAAKpD,uBAHP;AALJ;AAFF,aA3CF;AA0DE;AAAA;AAAA,gBAAK,WAAU,YAAf;AACE;AAAA;AAAA,kBAAQ,WAAU,WAAlB,EAA8B,SAAS,KAAKJ,gBAA5C;AAAA;AAAA,eADF;AAIE;AAAA;AAAA,kBAAQ,SAAS,KAAKyN,QAAtB;AAAA;AAAA;AAJF;AA1DF;AADF;AAFF,OADF;AAwED;;AAED;AACA;AACA;;;;qCACiB;AAAA;;AAAA,qBASX,KAAK97D,KATM;AAAA,UAEbsvD,YAFa,YAEbA,YAFa;AAAA,UAGb1Q,cAHa,YAGbA,cAHa;AAAA,UAIbsQ,eAJa,YAIbA,eAJa;AAAA,UAKbC,YALa,YAKbA,YALa;AAAA,UAMb1tD,EANa,YAMbA,EANa;AAAA,UAObkV,KAPa,YAObA,KAPa;AAAA,UAQbylB,KARa,YAQbA,KARa;;AAUf,UAAMt0B,SAAStF,MAAM+lB,QAAN,CAAe,QAAf,CAAf;AACA,UAAMpc,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,UAAMg1B,KACJ;AAAA;AAAA,UAAM,OAAO,EAAE7rB,OAAO,iBAAT,EAA4B8rB,WAAW,QAAvC,EAAb;AAAA;AAAA,OADF;AAGA,aACE;AAAA;AAAA,UAAK,WAAU,OAAf;AACGphB,cAAMjqB,GAAN,CAAU,aAAK;AACd,cAAM2/B,aAAahqC,OAAOm0B,KAAP,CAAa+C,IAAb,CAAkB;AAAA,mBAAKjC,EAAEt7B,EAAF,KAAS4B,EAAEq4B,MAAhB;AAAA,WAAlB,KAA6C;AAC9D/kB,mBAAOhL;AADuD,WAAhE;AAGA,cAAMomC,aAAajqC,OAAOm0B,KAAP,CAAa+C,IAAb,CAAkB;AAAA,mBAAKjC,EAAEt7B,EAAF,KAAS4B,EAAEmH,MAAhB;AAAA,WAAlB,KAA6C;AAC9DmM,mBAAOhL;AADuD,WAAhE;AAGA,cAAM+lB,QAAQua,QAAQmxB,eAAR,CAAwB/5D,CAAxB,EAA2B8I,QAA3B,CAAd;AACA,cAAMylD,UAAUlgC,QAAQ,IAAxB,CARc,CAQgB;AAC9B,cAAIruB,EAAE5B,EAAF,KAASm9C,cAAb,EAA6B;AAC3B,mBAAO,oBAAC,MAAD,IAAQ,QAAQv7C,EAAE5B,EAAlB,EAAsB,cAAcA,EAApC,EAAwC,KAAK4B,EAAE5B,EAA/C,GAAP;AACD,WAFD,MAEO;AACL,mBACE;AAAA;AAAA,gBAAK,KAAK4B,EAAE5B,EAAZ;AACE;AAAA;AAAA;AACE,6BAAU,YADZ;AAEE,2BAAS;AAAA,2BAAM,QAAK46D,UAAL,CAAgBh5D,EAAE5B,EAAlB,CAAN;AAAA,mBAFX;AAGE,yBAAO,EAAEN,iBAAiBywD,OAAnB;AAHT;AAKGnwD,uBAAO4B,EAAEq4B,MAAT,GAAkB6hB,EAAlB,GAAuBzL,WAAWn7B,KALrC;AAAA;AAMQ;AAAA;AAAA,oBAAM,OAAOtT,EAAE2P,IAAf;AAAsBlH;AAAtB,iBANR;AAAA;AAOGrK,uBAAO4B,EAAEmH,MAAT,GAAkB+yC,EAAlB,GAAuBxL,WAAWp7B;AAPrC;AADF,aADF;AAaD;AACF,SA1BA,CADH;AA4BG,SAACw4C,YAAD,IAAiBG,iBAAiBlJ,KAAKjxB,KAAvC,IACC;AAAA;AAAA;AACE,uBAAU,eADZ;AAEE,qBAAS,KAAKgnC,SAFhB;AAGE,sBAAUjN;AAHZ;AAAA;AAAA;AA7BJ,OADF;AAwCD;;AAED;AACA;;;;6BACS;AAAA,qBACmB,KAAKlvD,KADxB;AAAA,UACCyB,EADD,YACCA,EADD;AAAA,UACK2tD,SADL,YACKA,SADL;;AAEP,UAAI,CAAC3tD,EAAL,EAAS,OAAO,EAAP,CAFF,CAEa;AACpB,UAAI2tD,cAAclgB,KAAKiC,QAAL,CAAcke,IAAhC,EAAsC;AACpC,eAAO,KAAKN,UAAL,EAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAKC,UAAL,EAAP;AACD;AACF;;;;EA37BkBvvD,OAAO4B,S;;AA87B5B;AACA;;;AACA5C,OAAOC,OAAP,GAAiBitC,MAAjB;;;;;;;;;;ACl+BA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAvCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,IAAM/sC,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMqwC,OAAOrwC,QAAQ,UAAR,CAAb;AACA,IAAMutC,SAASvtC,QAAQ,gBAAR,CAAf;AACA,IAAMa,WAAWb,QAAQ,UAAR,CAAjB;AACA,IAAM01B,SAAS11B,QAAQ,sBAAR,CAAf;;eACgCA,QAAQ,kBAAR,C;IAAxB2N,mB,YAAAA,mB;;AACR,IAAM/M,SAASZ,QAAQ,eAAR,CAAf;;gBAImCA,QAAQ,sBAAR,C;IAA3BkN,W,aAAAA,W;IAAaC,S,aAAAA,S;;AAErB;AACA;;;AACA,IAAMtK,MAAM,KAAZ;AACA,IAAIc,QAAQ,IAAZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS2wD,aAAT,CAAuBxhB,IAAvB,EAA6B;AAC3B,mCAA+BA,IAA/B;AACD;;AAED;AACA;AACA;;IACMsU,W;;;AACJ,uBAAYpmD,KAAZ,EAAmB;AAAA;;AAAA,0HACXA,KADW;;AAGjB,QAAMsM,WAAW,MAAKoc,QAAL,CAAc,UAAd,CAAjB;AACA,UAAKvoB,KAAL,GAAa;AACXq5B,gBAAUltB,SAASktB,QADR;AAEX4C,aAAO,EAFI;AAGXohC,sBAAgBp5D,SAHL;AAIXq5D,qBAAer5D,SAJJ;AAKXs5D,yBAAmBpxD,SAAS+sB,WALjB;AAMXskC,wBAAkBrxD,SAAS8sB,WANhB;AAOXwkC,qBAAe,EAPJ;AAQXnjB,mBAAa,KARF;AASXzb,gBAAU,KATC;AAUX0b,kBAAY,IAVD;AAWXwE,eAAS,OAXE;AAYXqU,aAAO,CAZI,EAYD;;AAEVC,kBAAY;AAdD,KAAb;;AAiBA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBvzD,IAAvB,OAAzB;AACA,UAAKytC,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BztC,IAA3B,OAA7B;AACA,UAAK83C,uBAAL,GAA+B,MAAKA,uBAAL,CAA6B93C,IAA7B,OAA/B;AACA,UAAK29D,oBAAL,GAA4B,MAAKA,oBAAL,CAA0B39D,IAA1B,OAA5B;AACA,UAAK49D,cAAL,GAAsB,MAAKA,cAAL,CAAoB59D,IAApB,OAAtB;AACA,UAAK69D,qBAAL,GAA6B,MAAKA,qBAAL,CAA2B79D,IAA3B,OAA7B;AACA,UAAK+6C,eAAL,GAAuB,MAAKA,eAAL,CAAqB/6C,IAArB,OAAvB;AACA,UAAKm/C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBn/C,IAAtB,OAAxB;AACA,UAAKo/C,sBAAL,GAA8B,MAAKA,sBAAL,CAA4Bp/C,IAA5B,OAA9B;AACA,UAAKq/C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBr/C,IAAtB,OAAxB;AACA,UAAKs/C,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBt/C,IAAvB,OAAzB;AACA,UAAKu7C,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBv7C,IAAvB,OAAzB;AACA,UAAKu/C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBv/C,IAAtB,OAAxB;AACA,UAAK89D,cAAL,GAAsB,MAAKA,cAAL,CAAoB99D,IAApB,OAAtB;;AAEA,UAAKwzD,aAAL,GAAqB,MAAKA,aAAL,CAAmBxzD,IAAnB,OAArB;;AAEA;AACAyC,YAAQ/C,OAAOgD,WAAP,OAAR;;AAEAD,UAAMrC,aAAN,CAAoB,yBAApB,EAA+C,MAAK26C,eAApD;;AAEA;AACA;AACA,UAAKzyC,gBAAL,CAAsB,SAAtB,EAAiC,MAAKmlC,qBAAtC;;AAEA;AACA;AACA,UAAKnlC,gBAAL,CAAsB,QAAtB,EAAgC,MAAK62C,gBAArC;;AAEA;AACA,UAAK72C,gBAAL,CAAsB,gBAAtB,EAAwC,MAAK82C,sBAA7C;;AAEA;AACA,UAAK92C,gBAAL,CAAsB,UAAtB,EAAkC,MAAK+2C,gBAAvC;;AAEA,UAAK/2C,gBAAL,CAAsB,WAAtB,EAAmC,MAAKwvC,uBAAxC;AACA,UAAKxvC,gBAAL,CAAsB,QAAtB,EAAgC,MAAKq1D,oBAArC;;AAEA;AACA;AACAl7D,UAAMrC,aAAN,CAAoB,0BAApB,EAAgD,MAAKmzD,iBAArD;AACA9wD,UAAMrC,aAAN,CAAoB,0BAApB,EAAgD,MAAKmzD,iBAArD;AACA9wD,UAAMrC,aAAN,CAAoB,8BAApB,EAAoD,MAAKmzD,iBAAzD;AAhEiB;AAiElB,G,CAAC;;AAEF;AACA;;;;;;wCAEoB;AAAA;;AAClB,UAAI5xD,GAAJ,EAASH,QAAQC,GAAR,CAAY,8BAAZ;AACT,WAAKgsC,qBAAL,CAA2B,KAAKjlB,QAAL,CAAc,SAAd,CAA3B;;AAEA;AACA;AACA;AACA,UAAMw3B,iBAAiBv9C,MAAM+lB,QAAN,CAAe,gBAAf,CAAvB;AACA,WAAKnoB,QAAL,CAAc,EAAEq9D,eAAe1d,eAAe9jB,KAAhC,EAAd,EAAuD,YAAM;AAC3D,YAAIn0B,SAAS,OAAKygB,QAAL,CAAc,QAAd,CAAb;AACA,eAAK22B,gBAAL,CAAsBp3C,MAAtB;AACA,eAAKyrD,aAAL;AACD,OAJD;;AAMA;AACA;AACA,WAAKzY,eAAL;AACD;;;2CAEsB;AACrBt4C,YAAMqc,eAAN,CAAsB,yBAAtB,EAAiD,KAAKi8B,eAAtD;AACA,WAAKpyB,iBAAL,CAAuB,SAAvB,EAAkC,KAAK8kB,qBAAvC;AACA,WAAK9kB,iBAAL,CAAuB,QAAvB,EAAiC,KAAKw2B,gBAAtC;AACA,WAAKx2B,iBAAL,CAAuB,gBAAvB,EAAyC,KAAKy2B,sBAA9C;AACA,WAAKz2B,iBAAL,CAAuB,UAAvB,EAAmC,KAAK02B,gBAAxC;AACA,WAAK12B,iBAAL,CAAuB,WAAvB,EAAoC,KAAKmvB,uBAAzC;AACA,WAAKnvB,iBAAL,CAAuB,QAAvB,EAAiC,KAAKg1C,oBAAtC;AACAl7D,YAAMqc,eAAN,CAAsB,0BAAtB,EAAkD,KAAKy0C,iBAAvD;AACA9wD,YAAMqc,eAAN,CAAsB,0BAAtB,EAAkD,KAAKy0C,iBAAvD;AACA9wD,YAAMqc,eAAN,CAAsB,8BAAtB,EAAsD,KAAKy0C,iBAA3D;AACD;;AAED;AACA;;;;sCACkBjzD,I,EAAM;AACtB,WAAKD,QAAL,CAAc,EAAEgzD,OAAO,KAAKpzD,KAAL,CAAWozD,KAAX,GAAmB,CAA5B,EAAd;AACD;;AAED;;;;4CACwB/yD,I,EAAM;AAC5B,WAAKD,QAAL,CAAc;AACZi9D,wBAAgBh9D,KAAK47B,KAAL,CAAWz3B,MAAX,GAAoB,CAApB,GAAwBnE,KAAK47B,KAAL,CAAW,CAAX,EAAcx6B,EAAtC,GAA2CwC;AAD/C,OAAd;AAGD;;;yCAEoB5D,I,EAAM;AAAA,UACjBy9D,mBADiB,GACgCz9D,IADhC,CACjBy9D,mBADiB;AAAA,UACIC,uBADJ,GACgC19D,IADhC,CACI09D,uBADJ,EACsC;;AAC/D,UAAIT,sBAAJ;AACA,UAAIS,4BAA4B95D,SAAhC,EACEq5D,gBAAgBS,uBAAhB;AACF,UAAID,wBAAwB75D,SAA5B,EAAuCq5D,gBAAgBQ,mBAAhB;AACvC,WAAK19D,QAAL,CAAc,EAAEk9D,4BAAF,EAAd;AACD;;AAED;;;;;;;;;0CAMsBxtC,O,EAAS;AAC7B,WAAK1vB,QAAL,CAAc,EAAEy+B,UAAU,CAAC/O,QAAQvnB,OAArB,EAAd;AACD;;AAED;;;;mCACey3C,Q,EAAU;AACvB;;AAEA;AACAz+C,cAAQiX,KAAR,CAAc,gCAAd,EAAgDwnC,QAAhD;AACA,UAAI,CAACA,SAASnnC,IAAd,EAAoB;AAClB,eAAO,EAAP;AACD;AACD,UAAIsP,IAAI,IAAIxkB,IAAJ,CACNq8C,SAASnnC,IAAT,CAAconC,QAAd,GAAyB,CAAzB,GAA6BD,SAASnnC,IAAT,CAAc8gB,OAA3C,GAAqDqmB,SAASnnC,IAAT,CAAc+gB,OAD7D,CAAR;;AAIA,UAAIxsB,OAAO8vC,OAAO/0B,EAAE0e,WAAF,EAAP,CAAX;AACA,UAAIt1B,OAAO4W,EAAEqe,QAAF,KAAe,CAAf,GAAmB,GAAnB,GAAyBre,EAAEue,OAAF,EAAzB,GAAuC,GAAvC,GAA6Ct5B,KAAK2H,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAxD;AACA,UAAI44B,OAAOxlB,EAAEg1B,YAAF,GAAiBpoC,MAAjB,CAAwB,CAAxB,EAA2B,CAA3B,CAAX;AACA,UAAIqoC,WAAW7rC,OAAO,MAAP,GAAgBo8B,IAA/B;AACA,UAAIuS,cAAc,MAAMF,SAASnnC,IAAT,CAAconC,QAAtC;AACA,UAAID,SAASve,KAAb,EACEye,eAAe,SAASF,SAASve,KAAT,CAAeue,SAASve,KAAT,CAAej9B,MAAf,GAAwB,CAAvC,CAAxB;AACF,UAAI27C,MAAM;AAAA;AAAA,UAAM,OAAOD,WAAb;AAAA;AAA4B9C,gBAA5B;AAAA;AAAA,OAAV;;AAEA,aAAO+C,GAAP;AACD;;AAED;AACA;;;;0CACsBlkB,K,EAAOwhC,a,EAAe;AAC1C;AACA,UAAIA,cAAcj5D,MAAd,GAAuB,CAA3B,EAA8B;AAC5B;AACA;AACA,YAAM47C,aAAa59C,MAAM+lB,QAAN,CAAe,YAAf,CAAnB;AACA,YACE63B,WAAWC,YAAX,KAA4B9rB,OAAO+rB,MAAP,CAAcC,MAA1C,IACAH,WAAWC,YAAX,KAA4B9rB,OAAO+rB,MAAP,CAAcE,KAF5C,EAGE;AACA;AACAvkB,kBAAQA,MAAMrb,MAAN,CAAa,gBAAQ;AAC3B,gBAAMo9C,eAAeP,cAAcz+B,IAAd,CAAmB;AAAA,qBAAKjC,EAAEt7B,EAAF,KAASq7B,KAAKr7B,EAAnB;AAAA,aAAnB,CAArB;AACA,mBAAOu8D,YAAP,CAF2B,CAEN;AACtB,WAHO,CAAR;AAID,SATD,MASO;AACL;AACA;AACA;AACA;AACD;AACF;AACD,WAAK59D,QAAL,CAAc,EAAE67B,YAAF,EAASwhC,4BAAT,EAAd;AACD;;AAED;;;;sCACkB;AAAA;;AAChB;AACA,UAAInjB,cAAc,KAAlB;AACA93C,YAAM0G,OAAN,CAAc,qBAAd,EAAqCJ,IAArC,CAA0C,gBAAQ;AAChD;AACAwxC,sBACEj6C,KAAK8iC,mBAAL,IACA9iC,KAAK+iC,YADL,IAEA/iC,KAAKgjC,qBAFL,IAGAhjC,KAAKijC,sBAJP,CAFgD,CAMjB;AAC/B,eAAKljC,QAAL,CAAc,EAAEk6C,wBAAF,EAAd;AACD,OARD;AASD;;AAED;AACA;;;;;qCAEiBj6C,I,EAAM;AACrB,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAY,oBAAZ;AACT,UAAInB,KAAK47B,KAAT,EAAgB;AACd;AACA,YAAMA,QAAQ57B,KAAK47B,KAAnB;AAFc,YAGNwhC,aAHM,GAGY,KAAKz9D,KAHjB,CAGNy9D,aAHM;;AAId,aAAKG,qBAAL,CAA2B3hC,KAA3B,EAAkCwhC,aAAlC;AACD;AACF;;AAED;;;;2CACuBp9D,I,EAAM;AAAA;;AAC3B,UAAIA,KAAK47B,KAAT,EAAgB;AACd,YAAMwhC,gBAAgBp9D,KAAK47B,KAA3B;AACA;AACA;AACA;AACA,YAAMn0B,SAAStF,MAAM+lB,QAAN,CAAe,QAAf,CAAf;AACA,YAAM63B,aAAa59C,MAAM+lB,QAAN,CAAe,YAAf,CAAnB;AACA,YAAI63B,WAAWC,YAAX,KAA4B9rB,OAAO+rB,MAAP,CAAcO,IAA9C,EAAoD;AAClD,eAAKzgD,QAAL,CACE;AACE67B,mBAAOn0B,OAAOm0B,KADhB;AAEEwhC;AAFF,WADF,EAKE,YAAM;AACJ,gBAAMxhC,QAAQn0B,OAAOm0B,KAArB;AACA,mBAAK2hC,qBAAL,CAA2B3hC,KAA3B,EAAkCwhC,aAAlC;AACD,WARH;AAUD,SAXD,MAWO;AACL,eAAKr9D,QAAL,CACE;AACE67B,mBAAOwhC,aADT;AAEEA;AAFF,WADF,EAKE,YAAM;AACJ,gBAAMxhC,QAAQwhC,aAAd;AACA,mBAAKG,qBAAL,CAA2B3hC,KAA3B,EAAkCwhC,aAAlC;AACD,WARH;AAUD;AACF;AACF;;AAED;;;;qCACiBp9D,I,EAAM;AACrB,WAAKD,QAAL,CAAc;AACZi5B,kBAAUh5B,KAAKg5B,QADH;AAEZkkC,2BAAmBl9D,KAAK64B,WAFZ;AAGZskC,0BAAkBn9D,KAAK44B;AAHX,OAAd;AAKD;;AAED;AACA;;AAEA;AACA;AACA;;;;;sCAEkB12B,K,EAAO8uC,M,EAAQ;AAC/B9uC,YAAM4wB,cAAN;AACA5wB,YAAM6/C,eAAN;AACA,UAAI74C,SAAS8D,SAASgkC,MAAT,CAAb;AACA7uC,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAACH,MAAD,CAAX,EAAjC;AACD;AACD;;;;;sCAEkBhH,K,EAAO8uC,M,EAAQ;AAC/B9uC,YAAM4wB,cAAN;AACA5wB,YAAM6/C,eAAN;AACA,UAAI74C,SAAS8D,SAASgkC,MAAT,CAAb;AACA7uC,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAACH,MAAD,CAAX,EAAjC,EAAwDT,IAAxD,CAA6D,YAAM;AACjE,YAAIpH,GAAJ,EAASH,QAAQiX,KAAR,CAAc,8BAAd,EAA8CjP,MAA9C;AACT/G,cAAME,SAAN,CAAgB,WAAhB,EAA6B,EAAE6G,QAAQA,MAAV,EAA7B;AACD,OAHD;AAID;AACD;AACA;;;;;qCAEiBhH,K,EAAO;AACtB,WAAKnC,QAAL,CAAc;AACZm6C,oBAAY,CAAC,KAAKv6C,KAAL,CAAWu6C;AADZ,OAAd;AAGD;AACD;AACA;;;;;mCAEelJ,M,EAAQ;AACrB7uC,YAAME,SAAN,CAAgB,mBAAhB,EAAqC,EAAE2uC,cAAF,EAArC;AACD;AACD;AACA;;;;;+BAEW5vC,E,EAAIc,K,EAAO;AACpBA,YAAM4wB,cAAN;;AAEA;AACA;AACA;AACA;AACA3wB,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAAC2D,SAAS5L,EAAT,CAAD,CAAX,EAAjC;AACD;;AAED;AACA;;;;oCACgB;AAAA,mBAC8B,KAAKzB,KADnC;AAAA,UACNq5B,QADM,UACNA,QADM;AAAA,UACIihB,WADJ,UACIA,WADJ;AAAA,UACiBzb,QADjB,UACiBA,QADjB;;AAGd;AACA;;AACA,UAAM20B,gBAAgB7oD,OAAOuH,IAAP,CAAYmnB,QAAZ,EAAsBzY,MAAtB,CACpB;AAAA,eAAK,CAACpU,oBAAoBuG,QAApB,CAA6BX,CAA7B,CAAD,IAAoC,CAACinB,SAASjnB,CAAT,EAAYkmB,MAAtD;AAAA,OADoB,CAAtB;;AAIA;AACA;AACA,eAASq7B,gBAAT,CAA0BpxD,KAA1B,EAAiC8uC,MAAjC,EAAyC;AACvC9uC,cAAM4wB,cAAN;AACA5wB,cAAM6/C,eAAN;AACA5/C,cAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAAC2D,SAASgkC,MAAT,CAAD,CAAX,EAAjC;AACD;AACD;AACA,eAAS4sB,gBAAT,CAA0B17D,KAA1B,EAAiC8uC,MAAjC,EAAyC;AACvC9uC,cAAM4wB,cAAN;AACA5wB,cAAM6/C,eAAN;AACA,YAAM74C,SAAS8D,SAASgkC,MAAT,CAAf;AACA7uC,cAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAACH,MAAD,CAAX,EAAjC,EAAwDT,IAAxD,CAA6D,YAAM;AACjE,cAAIpH,GAAJ,EAASH,QAAQiX,KAAR,CAAc,8BAAd,EAA8CjP,MAA9C;AACT/G,gBAAME,SAAN,CAAgB,WAAhB,EAA6B,EAAE6G,QAAQA,MAAV,EAA7B;AACD,SAHD;AAID;AACD;AACA,eAAS20D,kBAAT,CAA4BvsB,IAA5B,EAAkC;AAChC,YAAMxf,WAAWia,OAAOyH,wBAAP,CAAgCsf,cAAcxhB,IAAd,CAAhC,CAAjB;AACA,YAAMyB,QAAQ+f,cAAcxhB,IAAd,CAAd;AACAvF,eAAOmH,uBAAP,CAA+BH,KAA/B,EAAsCzB,IAAtC,EAA4Cxf,QAA5C;AACD;AACD;AACA;AACA,eAAS0hC,gBAAT,CAA0BxuD,KAA1B,EAAiC;AAC/B,eACE;AAAA;AAAA;AACG,WAACi1C,WAAD,IACC;AAAA;AAAA;AACE,yBAAU,SADZ;AAEE,uBAAS;AAAA,uBAASqZ,iBAAiBpxD,KAAjB,EAAwB8C,KAAxB,CAAT;AAAA;AAFX;AAIG2G;AAJH,WAFJ;AASG,WAACsuC,WAAD,IAAgB,CAACzb,QAAjB,IACC;AAAA;AAAA;AACE,yBAAU,SADZ;AAEE,uBAAS;AAAA,uBAASo/B,iBAAiB17D,KAAjB,EAAwB8C,KAAxB,CAAT;AAAA;AAFX;AAIG0G;AAJH;AAVJ,SADF;AAoBD;AACD;AACA;AACA;AACA;AACA;AACA,eAAS+nD,UAAT,CAAoBzuD,KAApB,EAA2B;AACzB,YAAI,CAACA,KAAL,EAAY,OADa,CACL;AACpB,YAAIA,MAAM5D,EAAN,KAAawC,SAAjB,EACE,MAAM,IAAIW,KAAJ,CAAU,mCAAV,CAAN;AACF,YAAIS,MAAMsR,KAAN,KAAgB1S,SAApB,EACE,MAAM,IAAIW,KAAJ,CAAU,sCAAV,CAAN;AACF,eACE;AAAA;AAAA;AACE,uBAAU,SADZ;AAEE,qBAAS;AAAA,qBAAS+uD,iBAAiBpxD,KAAjB,EAAwB8C,MAAM5D,EAA9B,CAAT;AAAA;AAFX;AAIE;AAAA;AAAA,cAAM,OAAO,EAAEiwB,OAAO,MAAT,EAAb;AAAiCrsB,kBAAMsR;AAAvC;AAJF,SADF;AAQD;AACD;AACA,eAASo9C,gBAAT,CAA0B1uD,KAA1B,EAAiC;AAC/B,eACE,oBAAC,uBAAD;AACE,iBAAO8tD,cAAc9tD,MAAMssC,IAApB,CADT;AAEE,iBAAOtsC,MAAMoE,KAFf;AAGE,6BAAmBpE,MAAM2uD,iBAH3B;AAIE,oBAAU3uD,MAAM6tD,QAJlB;AAKE,cAAI;AAAA,mBAAKgL,mBAAmB74D,MAAMssC,IAAzB,CAAL;AAAA;AALN,UADF;AASD;AACD;AACA;AACA;AACA,eAASsiB,SAAT,CAAmBlvD,GAAnB,EAAwBmvD,KAAxB,EAA+BzS,KAA/B,EAAsC;AACpC,YAAM0S,aAAa,6BAAID,KAAJ,GAAWpT,IAAX,CAAgB,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC3C,cAAID,EAAEgB,GAAF,EAAO4R,KAAP,GAAe3S,EAAEe,GAAF,EAAO4R,KAA1B,EAAiC,OAAO8qC,KAAP;AACjC,cAAI19C,EAAEgB,GAAF,EAAO4R,KAAP,GAAe3S,EAAEe,GAAF,EAAO4R,KAA1B,EAAiC,OAAO8qC,QAAQ,CAAC,CAAhB;AACjC,iBAAO,CAAP;AACD,SAJkB,CAAnB;AAKA,eAAO0S,UAAP;AACD;AACD;AACA,eAASC,mBAAT,CAA6BrvD,GAA7B,EAAkCmvD,KAAlC,EAAyCzS,KAAzC,EAAgD;AAC9C,YAAM0S,aAAa,6BAAID,KAAJ,GAAWpT,IAAX,CAAgB,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC3C,cAAID,EAAEgB,GAAF,EAAO0E,KAAP,GAAezF,EAAEe,GAAF,EAAO0E,KAA1B,EAAiC,OAAOg4C,KAAP;AACjC,cAAI19C,EAAEgB,GAAF,EAAO0E,KAAP,GAAezF,EAAEe,GAAF,EAAO0E,KAA1B,EAAiC,OAAOg4C,QAAQ,CAAC,CAAhB;AACjC,iBAAO,CAAP;AACD,SAJkB,CAAnB;AAKA,eAAO0S,UAAP;AACD;AACD;AACA;AACA;AACA;AACA,UAAME,uBAAuBb,cAAcrhD,GAAd,CAAkB,eAAO;AACpD,YAAMmiD,QAAQj7B,SAASt0B,GAAT,EAAcw0B,YAA5B;AACA,YAAMvmB,OAAOqmB,SAASt0B,GAAT,EAAciO,IAA3B;AACA,eAAO;AACLshD,sBADK;AAELthD,oBAFK;AAGL3S,gBAAM0E;AAHD,SAAP;AAKD,OAR4B,CAA7B;AASA,UAAMsuD,aAAa,CACjB;AACEiB,eAAO,EADT,EACa;AACXj0D,cAAM,IAFR;AAGE2S,cAAM,QAHR;AAIE/R,eAAO,EAJT,EAIa;AACXszD,kBAAUV;AALZ,OADiB,EAQjB;AACES,eAAOj7B,SAAS,SAAT,EAAoBE,YAD7B;AAEEvmB,cAAM,QAFR;AAGE/R,eAAO,EAHT,EAGa;AACXZ,cAAM;AAJR,OARiB,EAcjB;AACEi0D,eAAOj7B,SAAS,OAAT,EAAkBE,YAD3B;AAEEl5B,cAAM,OAFR;AAGEY,eAAO,GAHT,EAGc;AACZszD,kBAAUT,UAJZ;AAKEU,gBAAQP;AALV,OAdiB,CAAnB;AAsBA,UAAI56B,SAAS,MAAT,KAAoB,CAACA,SAAS,MAAT,EAAiBf,MAA1C,EAAkD;AAChD+6B,mBAAW9yD,IAAX,CAAgB;AACd+zD,iBAAOj7B,SAAS,MAAT,EAAiBE,YADV;AAEdvmB,gBAAM,MAFQ;AAGd/R,iBAAO,GAHO,EAGF;AACZZ,gBAAM;AAJQ,SAAhB;AAMD;AACDgzD,iBAAW9yD,IAAX,sCAAmB8zD,oBAAnB,UAAyC;AACvCC,eAAO,UADgC;AAEvCj0D,cAAM,gBAFiC;AAGvCY,eAAO,EAHgC,EAG5B;AACXszD,kBAAUR,gBAJ6B;AAKvCS,gBAAQJ;AAL+B,OAAzC;AAOA,WAAKh0D,QAAL,CAAc,EAAEizD,sBAAF,EAAd;AACD;;AAED;AACA;;;;6BACS;AAAA,oBAWH,KAAKrzD,KAXF;AAAA,UAELi8B,KAFK,WAELA,KAFK;AAAA,UAGL5C,QAHK,WAGLA,QAHK;AAAA,UAILgkC,cAJK,WAILA,cAJK;AAAA,UAKLC,aALK,WAKLA,aALK;AAAA,UAMLC,iBANK,WAMLA,iBANK;AAAA,UAOLC,gBAPK,WAOLA,gBAPK;AAAA,UAQLljB,WARK,WAQLA,WARK;AAAA,UASLzb,QATK,WASLA,QATK;AAAA,UAULw0B,UAVK,WAULA,UAVK;;AAYP,UAAIp3B,UAAUh4B,SAAd,EAAyB,OAAO,EAAP;AAZlB,mBAayB,KAAKpE,KAb9B;AAAA,UAaCI,MAbD,UAaCA,MAbD;AAAA,UAaSsiD,WAbT,UAaSA,WAbT;;AAeP;AACA;;AACA,UAAI8Q,WAAW7uD,MAAX,GAAoB,CAAxB,EAA2B,OAAO,EAAP;;AAE3B,UAAMsZ,MAAMsuB,OAAO6E,gBAAP,EAAZ;;AAEA,UAAMuiB,gBAAgB7oD,OAAOuH,IAAP,CAAYmnB,QAAZ,EAAsBzY,MAAtB,CACpB;AAAA,eAAK,CAACpU,oBAAoBuG,QAApB,CAA6BX,CAA7B,CAAN;AAAA,OADoB,CAAtB;;AAIA;AACA;AACA,UAAMqiD,YAAYx4B,MAAM9pB,GAAN,CAAU,UAAC2qB,IAAD,EAAO33B,CAAP,EAAa;AAAA,YAC/B1D,EAD+B,GACFq7B,IADE,CAC/Br7B,EAD+B;AAAA,YAC3BkV,KAD2B,GACFmmB,IADE,CAC3BnmB,KAD2B;AAAA,YACpB3D,IADoB,GACF8pB,IADE,CACpB9pB,IADoB;AAAA,YACdwpD,OADc,GACF1/B,IADE,CACd0/B,OADc;;;AAGvC,YAAM9H,YAAY,EAAEjzD,MAAF,EAAMkV,YAAN,EAAlB;;AAEA;AACA,YAAMuqC,aAAa,EAAnB;AACAsS,sBAAc5/C,OAAd,CAAsB,UAAC7O,GAAD,EAAMI,CAAN,EAAY;AAChC,cAAI9E,OAAO,EAAX;AACA,cAAIg5B,SAASt0B,GAAT,EAAciO,IAAd,KAAuB,UAA3B,EAAuC;AACrC;AACA;AACA;AACA3S,iBAAKu0D,IAAL,GAAY1lB,KAAK4T,WAAL,CAAiBhmB,KAAK/3B,GAAL,CAAjB,CAAZ;AACA1E,iBAAKw0D,GAAL,GAAW/3B,KAAK/3B,GAAL,CAAX;AACD,WAND,MAMO,IAAIs0B,SAASt0B,GAAT,EAAciO,IAAd,KAAuB,OAA3B,EACL3S,OAAOy8B,KAAK/3B,GAAL,KAAa+3B,KAAK/3B,GAAL,EAAUg+C,mBAA9B,CADK,KAEF1iD,OAAOy8B,KAAK/3B,GAAL,CAAP;AACLm8C,qBAAWn8C,GAAX,IAAkB1E,IAAlB;AACD,SAZD;;AAcA;AACA,YAAMsxC,OAAOvF,OAAOgF,WAAP,CAAmB3vC,EAAnB,CAAb;AACA,YAAMg2B,eAAe2U,OAAO6I,2BAAP,CAAmCtD,IAAnC,EAAyC7zB,GAAzC,CAArB;AACA,YAAMg3C,OAAO1oB,OAAO+G,oBAAP,CAA4BxB,IAA5B,KAAqC,EAAlD;AACA,YAAMqiB,oBAAoBc,KAAKd,iBAA/B;AACA,YAAMd,WAAW9mB,OAAOqH,eAAP,CAAuB9B,IAAvB,CAAjB;AACA,YAAMojB,iBAAiB;AACrBpjB,oBADqB;AAErBloC,iBAAOguB,YAFc;AAGrBu8B,8CAHqB;AAIrBd;AAJqB,SAAvB;;AAOA;AACEzxD,gBADF;AAEEkV,iBAAO+9C,SAFT,EAEoB;AAClB1hD,oBAHF;AAIEwpD;AAJF,WAKKtb,UALL;AAME6T,wCANF;AAOEl8C,gBAAM;AACJ+pC,kCAAsB9lB,KAAK8lB;AADvB;AAPR;AAWD,OA7CiB,CAAlB;;AA+CA,aACE;AAAA;AAAA,UAAK,WAAU,aAAf,EAA6B,OAAO,EAAE1hD,QAAQqhD,WAAV,EAApC;AACE,4BAAC,iBAAD,IAAS,QAAQtiD,MAAjB,EAAyB,MAAMw0D,SAA/B,EAA0C,SAASpB,UAAnD;AADF,OADF;AAKD;;;;EA1iBuB5zD,OAAO4B,S;;AA6iBjC;AACA;;;AACA5C,OAAOC,OAAP,GAAiBunD,WAAjB;;;;;;;;;;;;;;AC3mBA;;;;;;;;;;;;;;;;;AAiBA,IAAMrnD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;AACA,IAAMiqD,gBAAgBjqD,QAAQ,iBAAR,CAAtB;;AAEA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA,IAAM8F,KAAK,UAAX;AACA;AACA,IAAIhF,cAAJ;;AAEA;AACA;AACA;;IACMkpC,Q;;;AACJ,oBAAY7rC,KAAZ,EAAmB;AAAA;;AAAA,oHACXA,KADW;;AAGjB,UAAKG,KAAL,GAAa;AACX6sC,kBAAY,KADD;AAEX4vB,0BAAoB,KAFT;AAGXp3D,aAAO;AAHI,KAAb,CAHiB,CAOd;;AAEH,UAAK6mD,aAAL,GAAqB,MAAKA,aAAL,CAAmBnsD,IAAnB,OAArB;AACA,UAAKssD,cAAL,GAAsB,MAAKA,cAAL,CAAoBtsD,IAApB,OAAtB;AACA,UAAKo+D,UAAL,GAAkB,MAAKA,UAAL,CAAgBp+D,IAAhB,OAAlB;AACA,UAAKq+D,UAAL,GAAkB,MAAKA,UAAL,CAAgBr+D,IAAhB,OAAlB;AACA,UAAKs+D,SAAL,GAAiB,MAAKA,SAAL,CAAet+D,IAAf,OAAjB;;AAEA;AACAyC,YAAQ/C,OAAOgD,WAAP,OAAR;AACA;AACA;AACAD,UAAM6F,gBAAN,CAAuB,SAAvB,EAAkC,MAAK6jD,aAAvC;AACA1pD,UAAMrC,aAAN,CAAoB,yBAApB,EAA+C,MAAKksD,cAApD;AApBiB;AAqBlB;;;;2CAEsB;AACrB7pD,YAAMkmB,iBAAN,CAAwB,SAAxB,EAAmC,KAAKwjC,aAAxC;AACA1pD,YAAMqc,eAAN,CAAsB,yBAAtB,EAAiD,KAAKwtC,cAAtD;AACD;;AAED;;;;;;;;;;;;kCAScv8B,O,EAAS;AACrB,WAAK1vB,QAAL,CAAc,EAAEysC,YAAY/c,QAAQvnB,OAAtB,EAAd;AACD;;;mCAEclI,I,EAAM;AAAA;;AACnBmC,YAAM0G,OAAN,CAAc,qBAAd,EAAqCJ,IAArC,CAA0C,gBAAQ;AAChD,eAAK1I,QAAL,CAAc;AACZq8D,8BAAoBp8D,KAAKijC;AADb,SAAd;AAGD,OAJD;AAKD;AACD;;;;;;;+BAIWv+B,G,EAAKM,K,EAAOswC,E,EAAI;AACzB;AACA;AACA;AACA;AACA,WAAKqD,OAAL,CAAa,eAAb,EAA8B,EAAEC,cAAc5zC,KAAhB,EAA9B;AACA;AACA,WAAKjF,QAAL,CAAc,EAAEiF,YAAF,EAAd,EAAyB,YAAM;AAC7B,YAAI,OAAOswC,EAAP,KAAc,UAAlB,EAA8BA;AAC/B,OAFD;AAGD;;;+BAEU5wC,G,EAAKM,K,EAAO5D,E,EAAI;AAAA;;AAAA,UACjBorC,UADiB,GACF,KAAK7sC,KADH,CACjB6sC,UADiB;AAEzB;;AACA,WAAKzsC,QAAL,CAAc,EAAEiF,YAAF,EAAd,EAAyB,YAAM;AAC7B,YAAI5D,EAAJ,EAAQ;AACN;AACAe,gBAAME,SAAN,CAAgB,gBAAhB,EAAkC,EAAEgH,SAAS,CAACjI,EAAD,CAAX,EAAlC;AACD,SAHD,MAGO,IAAIorC,UAAJ,EAAgB;AACrB;AACA,iBAAKwxB,SAAL;AACD;AACF,OARD,EAHyB,CAWrB;AACL;;;gCAEW;AAAA,UACFh5D,KADE,GACQ,KAAKrF,KADb,CACFqF,KADE;;AAEV,UAAMhF,OAAO,EAAb;AACAA,WAAKsW,KAAL,GAAatR,KAAb;AACA7C,YAAME,SAAN,CAAgB,aAAhB,EAA+BrC,IAA/B,EAAqCyI,IAArC,CAA0C,gBAAQ;AAChDtG,cAAME,SAAN,CAAgB,gBAAhB,EAAkC,EAAEgH,SAAS,CAACozB,KAAKr7B,EAAN,CAAX,EAAlC,EAA0DqH,IAA1D,CAA+D,YAAM;AACnEtG,gBAAME,SAAN,CAAgB,WAAhB,EAA6B,EAAE6G,QAAQuzB,KAAKr7B,EAAf,EAA7B;AACD,SAFD;AAGD,OAJD;AAKD;;AAED;AACA;AACA;;;;6BACS;AAAA,mBAC2C,KAAKzB,KADhD;AAAA,UACCqF,KADD,UACCA,KADD;AAAA,UACQwnC,UADR,UACQA,UADR;AAAA,UACoB4vB,kBADpB,UACoBA,kBADpB;;AAEP,UAAM6B,mBAAmB,CAACzxB,UAAD,IAAe4vB,kBAAxC;AACA,UAAM8B,qBAAqBl5D,UAAU,EAArC;AACA,UAAMN,MAAM,QAAZ,CAJO,CAIe;AACtB,aACE;AAAA;AAAA,UAAK,WAAU,qBAAf;AACE,4BAAC,aAAD;AACE,qBAAWA,GADb;AAEE,iBAAOM,KAFT;AAGE,oBAAU,KAAK84D,UAHjB;AAIE,oBAAU,KAAKC;AAJjB,UADF;AAOE;AAAA;AAAA;AACE,oBAAQE,gBADV;AAEE,sBAAUC,kBAFZ;AAGE,qBAAS,KAAKF;AAHhB;AAAA;AAAA;AAPF,OADF;AAiBD;;;;EAnHoB5+D,OAAO4B,S;;AAsH9B;AACA;;;AACA5C,OAAOC,OAAP,GAAiBgtC,QAAjB;;;;;;;;;;;;;;ACvJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,IAAM9sC,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM8C,WAAW9C,QAAQ,WAAR,CAAjB;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQ6xB,M,GAAWH,U,CAAXG,M;;AACR,IAAM8tC,aAAa3/D,QAAQ,qBAAR,CAAnB;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAI6C,MAAM,KAAV;AACA;AACA,IAAIc,QAAQ,IAAZ;;AAEA;AACA;AACA;;IACMi8D,Q;;;AACJ,oBAAY5+D,KAAZ,EAAmB;AAAA;;AAAA,oHACXA,KADW;;AAEjB,UAAKG,KAAL,GAAa;AACX0+D,kBAAY,EADD;AAEXvJ,iBAAW,EAFA;AAGXC,iBAAW;AAHA,KAAb;;AAMA,UAAKK,WAAL,GAAmB,MAAKA,WAAL,CAAiB11D,IAAjB,OAAnB;AACA,UAAK21D,QAAL,GAAgB,MAAKA,QAAL,CAAc31D,IAAd,OAAhB;AACA,UAAK41D,SAAL,GAAiB,MAAKA,SAAL,CAAe51D,IAAf,OAAjB;AACA,UAAK4+D,YAAL,GAAoB,MAAKA,YAAL,CAAkB5+D,IAAlB,OAApB;AACA,UAAK61D,cAAL,GAAsB,MAAKA,cAAL,CAAoB71D,IAApB,OAAtB;;AAEA;AACAyC,YAAQ/C,OAAOgD,WAAP,OAAR;;AAEA,UAAK4F,gBAAL,CAAsB,UAAtB,EAAkC,MAAKs2D,YAAvC;AACAn8D,UAAMrC,aAAN,CAAoB,iBAApB,EAAuC,MAAKy1D,cAA5C;AAlBiB;AAmBlB,G,CAAC;;AAEF;AACA;;;;;kCACc;AACZ,WAAK5c,OAAL,CAAa,YAAb,EAA2B,EAA3B;AACD;;;+BACU;AACT,WAAKA,OAAL,CAAa,SAAb,EAAwB,EAAxB;AACD;;;gCACW;AACV,WAAKA,OAAL,CAAa,UAAb,EAAyB,EAAzB;AACD;;;mCACc;AAAA;;AACb;AACA,UAAM7sC,WAAW,KAAKoc,QAAL,CAAc,UAAd,CAAjB;AACA,UAAM4sC,YAAYhpD,SAASktB,QAAT,CAAkBrmB,IAAlB,CAAuBR,OAAzC;AACA,UAAM4iD,YAAYjpD,SAAS0tB,QAAT,CAAkB7mB,IAAlB,CAAuBR,OAAzC;AACA,WAAKpS,QAAL,CAAc,EAAE+0D,oBAAF,EAAaC,oBAAb,EAAd,EAAwC,YAAM;AAC5C,eAAKU,WAAL,GAD4C,CACxB;AACrB,OAFD;AAGD;;AAED;AACA;;;;qCACiB;AACf;AACA,UAAMM,WAAWx0D,SAASqS,cAAT,CAAwB,UAAxB,CAAjB;AACA,UAAImiD,QAAJ,EAAcA,SAASC,MAAT;AACd;;AAEA;AACA,UAAM30B,KAAK//B,SAASi9D,WAAT,CAAqB,IAArB,CAAX;AACA,UAAMzyD,WAAW,KAAKoc,QAAL,CAAc,UAAd,CAAjB;AACA,UAAI,KAAKvoB,KAAL,CAAW0+D,UAAX,IAAyB,KAAK1+D,KAAL,CAAW0+D,UAAX,CAAsBpI,UAAnD,EAA+D;AAC7D;AACA,aAAKt2D,KAAL,CAAW0+D,UAAX,CAAsBpI,UAAtB;AACD;AACD,UAAMoI,aAAa,IAAIF,UAAJ,CAAe98B,EAAf,EAAmBv1B,SAASktB,QAA5B,CAAnB;AACA,UAAM87B,YAAYhpD,SAASktB,QAAT,CAAkBrmB,IAAlB,CAAuBR,OAAzC;AACA,UAAM4iD,YAAYjpD,SAAS0tB,QAAT,CAAkB7mB,IAAlB,CAAuBR,OAAzC;AACA,WAAKpS,QAAL,CAAc,EAAEs+D,sBAAF,EAAcvJ,oBAAd,EAAyBC,oBAAzB,EAAd;AACA,WAAKU,WAAL,GAjBe,CAiBK;AACrB;;AAED;AACA;;;;wCACoB;AAClB,WAAKF,cAAL;AACD;AACD;;;;2CACuB;AACrB,WAAKltC,iBAAL,CAAuB,UAAvB,EAAmC,KAAKi2C,YAAxC;AACAn8D,YAAMqc,eAAN,CAAsB,iBAAtB,EAAyC,KAAK+2C,cAA9C;AACD;AACD;;;;4CACwB;AACtB;AACA;AACA;AACA;AACA,aAAO,KAAP;AACD;AACD;;;;6BACS;AAAA,mBAC0B,KAAK51D,KAD/B;AAAA,UACCm1D,SADD,UACCA,SADD;AAAA,UACYC,SADZ,UACYA,SADZ;;AAEP,aACE;AAAA;AAAA,UAAK,OAAO,EAAEl0D,QAAQ,MAAV,EAAZ;AACE;AAAA;AAAA,YAAK,OAAO,EAAE8wB,QAAQ,eAAV,EAAZ;AACE;AAAA;AAAA,cAAK,WAAU,eAAf;AACE;AAAA;AAAA,gBAAM,OAAO,EAAEV,UAAU,KAAZ,EAAb;AACE;AAAA;AAAA,kBAAK,WAAU,OAAf;AAAA;AAAA,eADF;AAAA;AAEgB,mBAAK/I,QAAL,CAAc,UAAd,EAA0B1U;AAF1C,aADF;AAKE;AAAA;AAAA,gBAAM,OAAO,EAAEyd,UAAU,MAAZ,EAAb,EAAmC,WAAU,aAA7C;AACG,mBAAK/I,QAAL,CAAc,UAAd,EAA0B0P;AAD7B;AALF;AADF,SADF;AAYE;AAAA;AAAA;AACE,mBAAO,EAAE9F,UAAU,UAAZ,EAAwBC,OAAO,MAA/B,EAAuCnxB,OAAO,MAA9C,EAAsDgxB,QAAQ,IAA9D;AADT;AAGE;AAAC,kBAAD;AAAA;AACE,2BADF;AAEE,uBAAS,KAAKyjC,QAFhB;AAGE,qBAAO,EAAEz0D,OAAO,MAAT,EAAiBE,iBAAiB,MAAlC,EAA0CwhD,SAAS,KAAnD;AAHT;AAAA;AAAA,WAHF;AAAA;AAWE;AAAC,kBAAD;AAAA;AACE,2BADF;AAEE,uBAAS,KAAK8S,WAFhB;AAGE,qBAAO,EAAEx0D,OAAO,MAAT,EAAiBE,iBAAiB,MAAlC,EAA0CwhD,SAAS,KAAnD;AAHT;AAAA;AAAA,WAXF;AAAA;AAmBE;AAAC,kBAAD;AAAA;AACE,2BADF;AAEE,uBAAS,KAAKgT,SAFhB;AAGE,qBAAO,EAAE10D,OAAO,MAAT,EAAiBE,iBAAiB,MAAlC,EAA0CwhD,SAAS,KAAnD;AAHT;AAAA;AAAA;AAnBF,SAZF;AAuCE;AAAA;AAAA;AACE,mBAAO;AACLxwB,wBAAU,UADL;AAEL4c,sBAAQ,MAFH;AAGLujB,0BAAY,MAHP;AAILxgC,4BAAc,MAJT;AAKLR,wBAAU;AALL;AADT;AASE;AAAA;AAAA,cAAK,OAAO,EAAEvwB,SAAS,cAAX,EAA2Bi9C,cAAc,KAAzC,EAAZ;AAAA;AAAA,WATF;AAUE,yCAVF;AAWE;AAAA;AAAA,cAAK,OAAO,EAAEj9C,SAAS,cAAX,EAA2Bi9C,cAAc,KAAzC,EAAZ;AACG,eADH;AAAA;AAAA,WAXF;AAeGmX,oBAAUhjD,GAAV,CAAc,UAACa,IAAD,EAAO7N,CAAP;AAAA,mBACb;AAAA;AAAA,gBAAK,KAAKA,CAAV,EAAa,WAAU,eAAvB;AACE;AAAA;AAAA;AACE,yBAAO;AACLpE,6BAAS,cADJ;AAELi9C,kCAAc,KAFT;AAGLwY,gCAAY;AAHP;AADT;AAOE;AACE,yBAAO;AACLz1D,6BAAS,cADJ;AAELE,2BAAO,MAFF;AAGLC,4BAAQ,KAHH;AAILC,qCAAiB6R,KAAK0e;AAJjB;AADT,kBAPF;AAAA;AAeS1e,qBAAK2D,KAAL,KAAe,EAAf,GAAoB,kBAApB,GAAyC3D,KAAK2D;AAfvD,eADF;AAkBE;AAAA;AAAA,kBAAM,WAAU,kBAAhB;AACG3D,qBAAK2D,KAAL,KAAe,EAAf,GAAoB,kBAApB,GAAyC3D,KAAKymB,IAAL,IAAazmB,KAAK2D;AAD9D;AAlBF,aADa;AAAA,WAAd,CAfH;AAuCE,yCAvCF;AAwCE;AAAA;AAAA,cAAK,OAAO,EAAE5V,SAAS,cAAX,EAA2Bi9C,cAAc,KAAzC,EAAZ;AACG,eADH;AAAA;AAAA,WAxCF;AA4CGoX,oBAAUjjD,GAAV,CAAc,UAACa,IAAD,EAAO7N,CAAP;AAAA,mBACb;AAAA;AAAA,gBAAK,KAAKA,CAAV,EAAa,WAAU,eAAvB;AACE;AAAA;AAAA;AACE,yBAAO;AACLpE,6BAAS,cADJ;AAELi9C,kCAAc,KAFT;AAGLwY,gCAAY;AAHP;AADT;AAOE;AACE,yBAAO;AACLz1D,6BAAS,cADJ;AAELE,2BAAO,MAFF;AAGLC,4BAAQ,KAHH;AAILC,qCAAiB6R,KAAK0e;AAJjB;AADT,kBAPF;AAAA;AAeS1e,qBAAK2D,KAAL,KAAe,EAAf,GAAoB,kBAApB,GAAyC3D,KAAK2D;AAfvD,eADF;AAkBE;AAAA;AAAA,kBAAM,WAAU,kBAAhB;AACG3D,qBAAK2D,KAAL,KAAe,EAAf,GAAoB,kBAApB,GAAyC3D,KAAKymB,IAAL,IAAazmB,KAAK2D;AAD9D;AAlBF,aADa;AAAA,WAAd;AA5CH;AAvCF,OADF;AA+GD;;;;EArMoBlX,OAAO4B,S,GAsM5B;;AAEF;AACA;;;AACA5C,OAAOC,OAAP,GAAiB+/D,QAAjB;;;;;;;;;;;;;;AC9PA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAM7/D,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQmkD,K,GAAoBzyB,U,CAApByyB,K;IAAOpJ,Q,GAAarpB,U,CAAbqpB,Q;;AACf,IAAMn6C,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAI6C,MAAM,KAAV;;AAEA;AACA;AACA;;IACMm4C,U;;;AACJ,sBAAYh6C,KAAZ,EAAmB;AAAA;;AAAA,wHACXA,KADW;;AAEjB,UAAKG,KAAL,GAAa;AACX2W,aAAO1S,SADI;AAEX+O,YAAM,EAFK;AAGXqN,YAAM,EAHK;AAIXwb,aAAO;AAJI,KAAb;AAMA,UAAKmf,eAAL,GAAuB,MAAKA,eAAL,CAAqBj7C,IAArB,OAAvB;;AAEA;AACA;AACA,UAAKsI,gBAAL,CAAsB,WAAtB,EAAmC,uBAAe;AAChD,YAAK2yC,eAAL,CAAqBhhC,YAAY6kD,WAAjC;AACD,KAFD;AAZiB;AAelB,G,CAAC;;AAEF;AACA;;;;;oCACgBA,W,EAAa;AAC3B,UAAI/hC,OAAO+hC,eAAe,EAA1B;AACA/hC,WAAKokB,UAAL,GAAkBpkB,KAAKokB,UAAL,IAAmB,EAArC,CAF2B,CAEc;AACzC,WAAK9gD,QAAL,CAAc;AACZuW,eAAOmmB,KAAKnmB,KADA;AAEZ3D,cAAM8pB,KAAK9pB,IAFC;AAGZqN,cAAMyc,KAAKzc,IAHC;AAIZwb,eAAOiB,KAAKjB;AAJA,OAAd;AAMD,K,CAAC;;AAEF;AACA;;;;6BACS;AACP,aACE;AAAA;AAAA;AACE,qBAAW,KAAK77B,KAAL,CAAW2W,KAAX,KAAqB1S,SAArB,GAAiC,QAAjC,GAA4C,EADzD;AAEE,iBAAO;AACL05C,uBAAW,OADN;AAELmhB,sBAAU,OAFL;AAGL39D,6BAAiB,SAHZ;AAILC,qBAAS,KAJJ;AAKL0wB,0BAAc;AALT;AAFT;AAUE;AAAC,kBAAD;AAAA;AAAA;AAAA,SAVF;AAWE;AAAC,eAAD;AAAA,YAAO,gBAAP,EAAkB,aAAlB,EAA0B,MAAK,IAA/B;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,eADF;AAEE;AAAA;AAAA;AAAK,qBAAK9xB,KAAL,CAAW2W;AAAhB;AAFF,aADF;AAKE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,eADF;AAEE;AAAA;AAAA;AAAK,qBAAK3W,KAAL,CAAWgT;AAAhB;AAFF,aALF;AASE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,eADF;AAEE;AAAA;AAAA;AAAK,qBAAKhT,KAAL,CAAW67B;AAAhB;AAFF,aATF;AAaE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,eADF;AAEE;AAAA;AAAA;AAAK,qBAAK77B,KAAL,CAAWqgB;AAAhB;AAFF;AAbF;AADF;AAXF,OADF;AAkCD;;;;EApEsB5gB,OAAO4B,S,GAqE9B;;AAEF;AACA;;;AACA5C,OAAOC,OAAP,GAAiBm7C,UAAjB;;;;;;;;;;;;;;AC7GA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA,IAAMH,UAAU76C,QAAQ,mBAAR,CAAhB;AACA,IAAM86C,UAAU96C,QAAQ,mBAAR,CAAhB;AACA,IAAMD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQ6xB,M,GACNH,U,CADMG,M;IAAQC,G,GACdJ,U,CADcI,G;IAAKE,I,GACnBN,U,CADmBM,I;IAAMC,S,GACzBP,U,CADyBO,S;IAAWC,Y,GACpCR,U,CADoCQ,Y;IAAc6oB,Q,GAClDrpB,U,CADkDqpB,Q;IAAU3oB,K,GAC5DV,U,CAD4DU,K;IAAOD,K,GACnET,U,CADmES,K;;AAErE,IAAM0mB,eAAe74C,QAAQ,gBAAR,CAArB;AACA,IAAMg7C,aAAah7C,QAAQ,cAAR,CAAnB;AACA,IAAMi7C,aAAaj7C,QAAQ,cAAR,CAAnB;;AAEA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;AACA,IAAMowC,YAAYpwC,QAAQ,kBAAR,CAAlB;AACA,IAAMa,WAAWb,QAAQ,UAAR,CAAjB;;eACuBA,QAAQ,kBAAR,C;IAAfqN,U,YAAAA,U;;AAER;AACA;;;AACA,IAAMxK,MAAM,KAAZ;AACA,IAAM8F,KAAK,cAAX;AACA;AACA,IAAMu3D,iBAAiB,cAAvB,C,CAAuC;AACvC,IAAM/oB,UAAUt2C,SAASwH,OAAT,EAAhB;AACA;AACA,IAAI1E,QAAQ,IAAZ;;AAEA;AACA;AACA;;IACMw8D,Y;;;AACJ,wBAAYn/D,KAAZ,EAAmB;AAAA;;AAAA,4HACXA,KADW;;AAEjB,QAAMsM,WAAW,MAAKoc,QAAL,CAAc,UAAd,CAAjB;AACA,UAAKvoB,KAAL,GAAa;AACXq5B,gBAAUltB,SAASktB,QADR;AAEXF,gBAAUhtB,SAASgtB,QAFR;AAGXX,wBAAkBrsB,SAASqsB,gBAHhB;AAIXC,2BAAqBtsB,SAASssB,mBAJnB;AAKXshB,uBAAiB,EALN;AAMX3hB,4BAAsBjsB,SAASisB,oBANpB;AAOX4hB,gBAAU;AACRrjC,eAAO,EADC;AAER3D,cAAM,EAFE;AAGRqN,cAAM,EAHE;AAIRib,oBAAY,EAJJ;AAKRC,kBAAU,EALF;AAMRM,eAAO,EANC;AAOR2gC,iBAAS,CAPD;AAQR/6D,YAAI,EARI,EAQA;AACRw9D,mBAAW;AATH,OAPC;AAkBX7iC,aAAO,EAlBI;AAmBXyC,gBAAU,IAnBC;AAoBXub,oBAAc,KApBH;AAqBX8kB,sBAAgB,KArBL;AAsBX7kB,kBAAY,KAtBD;AAuBXC,mBAAa,KAvBF;AAwBXxF,qBAAe,KAxBJ;AAyBXvsC,eAAS,KAzBE;AA0BX42D,4BAAsB,KA1BX;AA2BXC,uBAAiB,EA3BN;AA4BXp/B,yBAAmB,EA5BR;AA6BXq/B,gCAA0B,IA7Bf;AA8BXzkB,iBAAW;AA9BA,KAAb;AAgCA;AACA,UAAKoC,SAAL,GAAiB,MAAKA,SAAL,CAAej9C,IAAf,OAAjB;AACA,UAAK86C,WAAL,GAAmB,MAAKA,WAAL,CAAiB96C,IAAjB,OAAnB;AACA,UAAK+6C,eAAL,GAAuB,MAAKA,eAAL,CAAqB/6C,IAArB,OAAvB;AACA,UAAKg7C,YAAL,GAAoB,MAAKA,YAAL,CAAkBh7C,IAAlB,OAApB;AACA,UAAKu/D,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBv/D,IAAvB,OAAzB;AACA,UAAKw/D,YAAL,GAAoB,MAAKA,YAAL,CAAkBx/D,IAAlB,OAApB;AACA,UAAKi7C,eAAL,GAAuB,MAAKA,eAAL,CAAqBj7C,IAArB,OAAvB;AACA,UAAK63C,oBAAL,GAA4B,MAAKA,oBAAL,CAA0B73C,IAA1B,OAA5B;AACA,UAAKytC,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BztC,IAA3B,OAA7B;AACA,UAAKy/D,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBz/D,IAAtB,OAAxB;AACA,UAAK0/D,YAAL,GAAoB,MAAKA,YAAL,CAAkB1/D,IAAlB,OAApB;AACA,UAAK2/D,aAAL,GAAqB,MAAKA,aAAL,CAAmB3/D,IAAnB,OAArB;AACA,UAAK4/D,YAAL,GAAoB,MAAKA,YAAL,CAAkB5/D,IAAlB,OAApB;AACA,UAAKg8C,aAAL,GAAqB,MAAKA,aAAL,CAAmBh8C,IAAnB,OAArB;AACA,UAAKi8C,YAAL,GAAoB,MAAKA,YAAL,CAAkBj8C,IAAlB,OAApB;AACA,UAAKm8C,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBn8C,IAAxB,OAA1B;AACA,UAAKo8C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBp8C,IAAtB,OAAxB;AACA,UAAK6/D,yBAAL,GAAiC,MAAKA,yBAAL,CAA+B7/D,IAA/B,OAAjC;AACA,UAAK8/D,oBAAL,GAA4B,MAAKA,oBAAL,CAA0B9/D,IAA1B,OAA5B;AACA,UAAKs7C,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBt7C,IAAzB,OAA3B;AACA,UAAKu7C,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBv7C,IAAvB,OAAzB;AACA,UAAKw7C,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBx7C,IAAvB,OAAzB;AACA,UAAKy7C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBz7C,IAAtB,OAAxB;AACA,UAAK07C,aAAL,GAAqB,MAAKA,aAAL,CAAmB17C,IAAnB,OAArB;AACA,UAAK+/D,eAAL,GAAuB,MAAKA,eAAL,CAAqB//D,IAArB,OAAvB;AACA,UAAKggE,QAAL,GAAgB,MAAKA,QAAL,CAAchgE,IAAd,OAAhB;AACA,UAAKigE,uBAAL,GAA+B,MAAKA,uBAAL,CAA6BjgE,IAA7B,OAA/B;AACA,UAAKkgE,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBlgE,IAAzB,OAA3B;AACA,UAAKmgE,cAAL,GAAsB,MAAKA,cAAL,CAAoBngE,IAApB,OAAtB;AACA,UAAKogE,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BpgE,IAA5B,OAA9B;AACA,UAAK0yB,QAAL,GAAgB,MAAKA,QAAL,CAAc1yB,IAAd,OAAhB;AACA,UAAKu8C,WAAL,GAAmB,MAAKA,WAAL,CAAiBv8C,IAAjB,OAAnB;AACA,UAAKw8C,QAAL,GAAgB,MAAKA,QAAL,CAAcx8C,IAAd,OAAhB;AACA,UAAKqgE,aAAL,GAAqB,MAAKA,aAAL,CAAmBrgE,IAAnB,OAArB;;AAEA;AACA;;AAEA;AACAyC,YAAQ/C,OAAOgD,WAAP,OAAR;;AAEA;AACA;;;AAGA,UAAK4F,gBAAL,CAAsB,SAAtB,EAAiC,MAAKmlC,qBAAtC;AACA;AACA,UAAKnlC,gBAAL,CAAsB,WAAtB,EAAmC,MAAK2yC,eAAxC;AACA;AACA,UAAK3yC,gBAAL,CAAsB,QAAtB,EAAgC,MAAKuvC,oBAArC;AACA;AACA;AACA,UAAKvvC,gBAAL,CAAsB,UAAtB,EAAkC,MAAKwyC,WAAvC;AACAr4C,UAAMrC,aAAN,CAAoB,yBAApB,EAA+C,MAAK46C,YAApD;;AAEA;AACA;;;;;;AAMAv4C,UAAMrC,aAAN,CAAoB,eAApB,EAAqC,gBAAQ;AAC3C,UAAIkgE,cAAc,KAAlB;AACA,UAAIC,gBAAgB,MAAKtgE,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAAxC;AACA,UAAI8+D,gBAAgBlgE,KAAKy8B,IAAL,CAAUr7B,EAA9B;AACA,UAAI6+D,kBAAkBC,aAAtB,EAAqCF,cAAc,IAAd;AACrC,YAAKrgE,KAAL,CAAWo8B,KAAX,CAAiBxoB,OAAjB,CAAyB,gBAAQ;AAC/B,YAAIqpB,KAAKvB,MAAL,KAAgB6kC,aAAhB,IAAiCtjC,KAAKzyB,MAAL,KAAgB+1D,aAArD,EACEF,cAAc,IAAd;AACH,OAHD;AAIA,UAAIA,WAAJ,EAAiB;AACf,YAAI3+D,GAAJ,EACEH,QAAQC,GAAR,CACE,0DADF,EAEE8+D,aAFF;AAIF99D,cAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAAC42D,aAAD,CAAX,EAAjC;AACD;AACF,KAjBD;AAkBA;AACA;;;;AAIA99D,UAAMrC,aAAN,CAAoB,WAApB,EAAiC,gBAAQ;AAAA,wBACH,MAAKH,KADF;AAAA,UAC/B80C,aAD+B,eAC/BA,aAD+B;AAAA,UAChBjW,QADgB,eAChBA,QADgB;;AAEvC,UACEx+B,KAAKkJ,MAAL,KAAgBtF,SAAhB,IACA,OAAO5D,KAAKkJ,MAAZ,KAAuB,QADvB,IAEA,CAACurC,aAFD,IAGA,CAACjW,QAJH,EAKE;AACA,cAAKihC,eAAL,CAAqBz/D,KAAKkJ,MAA1B;AACD,OAPD,MAOO;AACL,YAAI,OAAOlJ,KAAKkJ,MAAZ,KAAuB,QAA3B,EACEhI,QAAQwB,IAAR,CACE,qDADF,EAEE1C,KAAKkJ,MAFP;AAIF,YAAIurC,aAAJ,EACEvzC,QAAQwB,IAAR,CACE,qDADF,EAEE+xC,aAFF;AAIF,YAAIjW,QAAJ,EACEt9B,QAAQwB,IAAR,CAAa,gDAAb,EAA+D87B,QAA/D;AACH;AACF,KAvBD;AAwBA;AACA;;;;;;AAMAr8B,UAAMrC,aAAN,CAAoB,aAApB,EAAmC,gBAAQ;AACzC,UAAIuB,GAAJ,EACEH,QAAQC,GAAR,CACE,mDADF,EAEE,MAAKxB,KAAL,CAAWk/D,cAFb,EAGE7+D,IAHF;AAKF,UAAIigE,gBAAgB,MAAKtgE,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAAxC;AACA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,UAAI++D,WACF,OAAOngE,KAAK48B,IAAL,CAAUvB,MAAjB,KAA4B,QAA5B,GAAuCr7B,KAAK48B,IAAL,CAAUvB,MAAjD,GAA0Dr7B,KAAK48B,IAAL,CAAUvB,MAAV,CAAiBj6B,EAD7E;AAEA,UAAIg/D,WACF,OAAOpgE,KAAK48B,IAAL,CAAUzyB,MAAjB,KAA4B,QAA5B,GAAuCnK,KAAK48B,IAAL,CAAUzyB,MAAjD,GAA0DnK,KAAK48B,IAAL,CAAUzyB,MAAV,CAAiB/I,EAD7E;AAEA,UAAIi/D,iBAAiB,CAACF,QAAD,EAAWC,QAAX,CAArB;AACA,UAAIC,eAAe3tD,QAAf,CAAwButD,aAAxB,KAA0C,CAAC,MAAKtgE,KAAL,CAAWk/D,cAA1D,EAA0E;AACxE,YAAIx9D,GAAJ,EAASH,QAAQC,GAAR,CAAY,mDAAZ;AACTgB,cAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAAC42D,aAAD,CAAX,EAAjC;AACD;AACF,KAxCD;AAyCA;AACA;;;;;;;;;;;;;;;;;;AAmBA99D,UAAMrC,aAAN,CAAoB,iBAApB,EAAuC,gBAAQ;AAC7C,UAAIE,KAAKkJ,MAAL,KAAgB,MAAKvJ,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAAxC,EAA4C;AAC1C,cAAKrB,QAAL,CAAc,EAAE8+D,gBAAgB,KAAlB,EAAd,EAAyC,YAAM;AAC7C;AACA;AACA18D,gBAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAAC,MAAK1J,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAArB,CAAX,EAAjC;AACD,SAJD;AAKD,OAND,MAMO;AACL;AACA;AACA,cAAKrB,QAAL,CAAc,EAAE8+D,gBAAgB,KAAlB,EAAd,EAAyC,YAAM;AAC7C;AACA;AACA18D,gBAAME,SAAN,CAAgB,eAAhB,EAH6C,CAGX;AACnC,SAJD;AAKD;AACF,KAhBD;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAF,UAAMrC,aAAN,CAAoB,eAApB,EAAqC,gBAAQ;AAC3C,YAAKC,QAAL,CAAc,EAAE8+D,gBAAgB,IAAlB,EAAd;AACD,KAFD;AAGA18D,UAAMrC,aAAN,CAAoB,iBAApB,EAAuC,gBAAQ;AAC7C,YAAKC,QAAL,CAAc,EAAE8+D,gBAAgB,KAAlB,EAAd;AACD,KAFD;;AAIA;AACA;;;AAGA,UAAK3xB,YAAL,CAAkB,YAAM;AACtBhsC,cAAQC,GAAR,CAAY,6BAAZ;AACA,YAAKpB,QAAL,CAAc,EAAEy+B,UAAU,IAAZ,EAAd;AACD,KAHD;AA5PiB;AAgQlB,G,CAAC;;AAEF;AACA;AACA;;;;;;gCAEsB;AAAA,UAAZloB,KAAY,uEAAJ,EAAI;;AACpB,WAAK2oD,iBAAL;AACA,WAAKl/D,QAAL,CAAc;AACZ45C,kBAAU;AACRrjC,sBADQ;AAER3D,gBAAM,EAFE;AAGRqN,gBAAM,EAHE;AAIRib,sBAAY,EAJJ;AAKRC,oBAAU,EALF;AAMRM,iBAAO,EANC;AAOR2gC,mBAAS,CAPD;AAQR/6D,cAAI,EARI,EAQA;AACRw9D,qBAAW;AATH,SADE;AAYZ7iC,eAAO,EAZK;AAaZie,oBAAY,KAbA;AAcZvF,uBAAe,KAdH;AAeZvsC,iBAAS,KAfG;AAgBZ42D,8BAAsB,KAhBV;AAiBZC,yBAAiB,EAjBL;AAkBZp/B,2BAAmB,EAlBP;AAmBZq/B,kCAA0B,IAnBd;AAoBZzkB,mBAAW;AApBC,OAAd;AAsBD,K,CAAC;;AAEF;;;;gCACYv6C,I,EAAM;AAChB,WAAKD,QAAL,CAAc,EAAEi5B,UAAUh5B,KAAKg5B,QAAjB,EAAd;AACD;AACD;AACA;;;;;sCAEkB;AAAA;;AAChB;AACA,WAAKnwB,OAAL,CAAa,qBAAb,EAAoCJ,IAApC,CAAyC,gBAAQ;AAC/C,eAAKiyC,YAAL,CAAkB16C,IAAlB;AACD,OAFD;AAGD;;;iCACYA,I,EAAM;AACjB,UAAMi6C,cAAcj6C,KAAK8iC,mBAAL,IAA4B9iC,KAAK+iC,YAArD;AACA,UAAMj3B,WAAW,KAAKoc,QAAL,CAAc,UAAd,CAAjB;AACA,UAAIwxB,kBAAkB,EAAtB;AACA,UAAI15C,KAAK8iC,mBAAT,EAA8B4W,kBAAkB5tC,SAAS0sB,uBAA3B;AAC9B,UAAIx4B,KAAK+iC,YAAT,EAAuB2W,kBAAkB5tC,SAASuuB,qBAA3B;AACvB,WAAKt6B,QAAL,CAAc,EAAEk6C,wBAAF,EAAeP,gCAAf,EAAd;AACD;AACD;AACA;;;;;;wCAGoB;AAClB;AACA;AACA,UAAI,KAAK/5C,KAAL,CAAW80C,aAAf,EACE,KAAK5rC,OAAL,CAAa,uBAAb,EAAsC,EAAE06B,QAAQ13B,WAAWG,IAArB,EAAtC;AACH;AACD;AACA;;;;;;;mCAIkB;AAChB,YAAM,IAAIzH,KAAJ,CAAU,yDAAV,CAAN;AACA;;;;;;;;;;AAUD,K,CAAC;AACF;AACA;;;;;mCAEe;AACb,YAAM,IAAIA,KAAJ,CAAU,yDAAV,CAAN;AACA;;;;;;;;;;AAUD,K,CAAC;AACF;AACA;;;;;oCAEgBvE,I,EAAM;AACpB,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAY,mCAAZ,EAAiDnB,IAAjD;;AAET;AACA;;AAJoB,sBAKW,KAAKkoB,QAAL,CAAc,oBAAd,CALX;AAAA,UAKdkwB,oBALc,aAKdA,oBALc;;AAMpB,UAAIA,yBAAyBsmB,cAAzB,IAA2CtmB,yBAAyB,QAAxE,EACE;;AAEF,UAAI,CAAC,KAAKz4C,KAAL,CAAW80C,aAAZ,IAA6B,CAAC,KAAK90C,KAAL,CAAWk/D,cAA7C,EAA6D;AAC3D,YAAI7+D,KAAK47B,KAAL,IAAc57B,KAAK47B,KAAL,CAAWz3B,MAAX,GAAoB,CAAtC,EAAyC;AACvC;AACA;AACA,cAAI9C,GAAJ,EAASH,QAAQC,GAAR,CAAY,kCAAZ,EAAgDnB,KAAK47B,KAAL,CAAW,CAAX,CAAhD;AACT;AACA,cAAIa,OAAOz8B,KAAK47B,KAAL,CAAW,CAAX,CAAX;AACA,eAAKujC,gBAAL,CAAsB1iC,IAAtB;;AAEA;AACA,cAAI6jC,SAAS,KAAK3gE,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAAjC;AACA;AACApB,eAAK+7B,KAAL,CAAW0kB,IAAX,CAAgB,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AACxB;AACA,gBAAID,EAAEiuC,WAAF,KAAkBhuC,EAAEguC,WAAxB,EAAqC;AACnC,kBAAIjuC,EAAE48C,WAAF,GAAgB38C,EAAE28C,WAAtB,EAAmC;AACjC,uBAAO,CAAC,CAAR;AACD;AACD,kBAAI58C,EAAE48C,WAAF,GAAgB38C,EAAE28C,WAAtB,EAAmC;AACjC,uBAAO,CAAP;AACD;AACF;AACD;AACA,gBAAI58C,EAAE23B,MAAF,KAAailC,MAAjB,EAAyB;AACvB,qBAAO,CAAC,CAAR;AACD;AACD,gBAAI38D,EAAE03B,MAAF,KAAailC,MAAjB,EAAyB;AACvB,qBAAO,CAAP;AACD;AACD;AACA,gBAAI58D,EAAEiuC,WAAF,GAAgBhuC,EAAEguC,WAAtB,EAAmC;AACjC,qBAAO,CAAC,CAAR;AACD;AACD,gBAAIjuC,EAAEiuC,WAAF,GAAgBhuC,EAAEguC,WAAtB,EAAmC;AACjC,qBAAO,CAAP;AACD;;AAED,mBAAO,CAAP;AACD,WA1BD;AA2BA,eAAK5xC,QAAL,CAAc;AACZg8B,mBAAO/7B,KAAK+7B;AADA,WAAd;AAGA;AACA;AACA;AACA;AACD,SA7CD,MA6CO;AACL,cAAI16B,GAAJ,EAASH,QAAQC,GAAR,CAAY,+CAAZ;AACT,eAAKw7C,SAAL;AACD;AACF,OAlDD,MAkDO;AACL;AACA;AACA;AACA;AACA;AACA,YAAIt7C,GAAJ,EAASH,QAAQC,GAAR,CAAY,mDAAZ;AACV;;AAED,WAAKi+D,YAAL;AACD,K,CAAC;AACF;AACA;;;;;;;;;0CAMsB3vC,O,EAAS;AAC7B,UAAIwN,SAAS,EAAEuB,UAAU,CAAC/O,QAAQvnB,OAArB,EAAb;AACA,WAAKnI,QAAL,CAAck9B,MAAd;AACD;;AAED;AACA;;;;;;;;;;yCAOqBj9B,I,EAAM;AACzB;AACA;AAFyB,uBAGM,KAAKkoB,QAAL,CAAc,oBAAd,CAHN;AAAA,UAGnBkwB,oBAHmB,cAGnBA,oBAHmB;;AAIzB,UAAIA,yBAAyBsmB,cAA7B,EAA6C;AAC7C,UAAI/kB,WAAW,KAAKh6C,KAAL,CAAWg6C,QAA1B;AACAA,eAASrjC,KAAT,GAAiBtW,KAAKq4C,WAAtB;;AAEA;AACA;AACA;AACA,UAAIymB,uBAAuB,KAA3B;AACA,UAAIC,kBAAkB,KAAK,CAA3B;AACA,UACEplB,SAASrjC,KAAT,KAAmB,EAAnB,IACA,KAAK4R,QAAL,CAAc,QAAd,EAAwB0T,KAAxB,CAA8B+C,IAA9B,CAAmC,UAAUlC,IAAV,EAAgB;AACjD,YAAIA,KAAKr7B,EAAL,KAAYu4C,SAASv4C,EAAzB,EAA6B;AAC3B,cAAIq7B,KAAKnmB,KAAT,EAAgB;AACd,gBACEmmB,KAAKnmB,KAAL,CAAWsqC,aAAX,CAAyBjH,SAASrjC,KAAlC,EAAyC,IAAzC,EAA+C;AAC7CiqD,qBAAO,QADsC;AAE7CC,2BAAa;AAFgC,aAA/C,MAGO,CAJT,EAKE;AACAzB,gCAAkBtiC,KAAKr7B,EAAvB;AACA,qBAAO,IAAP;AACD;AACD,mBAAO,KAAP;AACD,WAXD,MAWO;AACLF,oBAAQC,GAAR,CAAY,4BAA4Bs7B,KAAKr7B,EAAjC,GAAsC,mBAAlD;AACA,mBAAO,KAAP;AACD;AACF;AACF,OAlBD,CAFF,EAqBE;AACA09D,+BAAuB,IAAvB;AACD;;AAED,WAAK/+D,QAAL,CAAc;AACZ45C,0BADY;AAEZmlB,kDAFY;AAGZC;AAHY,OAAd;;AAMA,WAAKK,YAAL;AACD;AACD;AACA;;;;;qCAEiB79B,O,EAAS;AACxB,UAAIlgC,GAAJ,EAASH,QAAQC,GAAR,CAAY,+BAAZ,EAA6CogC,OAA7C;AACT,UAAIA,YAAY39B,SAAhB,EAA2B;AACzB,cAAM,8DAAN;AACD;AACD;AACA;AACA,UAAI64B,OAAO,EAAEokB,YAAY,EAAd,EAAX;AACA,UAAItf,QAAQsf,UAAR,KAAuBj9C,SAA3B,EAAsC;AACpC29B,gBAAQsf,UAAR,GAAqB,EAArB;AACD;AACD;AACA,UAAIpiB,MAAM8C,QAAQngC,EAAd,CAAJ,EAAuB;AACrBmgC,gBAAQngC,EAAR,GAAa4L,SAASu0B,QAAQngC,EAAjB,CAAb;AACD;AACD;AACAq7B,WAAKnmB,KAAL,GAAairB,QAAQjrB,KAAR,IAAiB,EAA9B;AACAmmB,WAAKr7B,EAAL,GAAUmgC,QAAQngC,EAAR,IAAc,EAAxB;AACAq7B,WAAK9pB,IAAL,GAAY4uB,QAAQ5uB,IAApB;AACA8pB,WAAKzc,IAAL,GAAYuhB,QAAQvhB,IAApB;AACAyc,WAAKxB,UAAL,GAAkBsG,QAAQtG,UAA1B;AACAwB,WAAKvB,QAAL,GAAgBqG,QAAQrG,QAAxB;AACAuB,WAAKjB,KAAL,GAAa+F,QAAQ/F,KAArB;AACAiB,WAAK0/B,OAAL,GAAe56B,QAAQ46B,OAAvB;;AAEA;AACA,WAAK8C,iBAAL;AACA,WAAKl/D,QAAL,CAAc;AACZ45C,kBAAU;AACRrjC,iBAAOmmB,KAAKnmB,KADJ;AAER3D,gBAAM8pB,KAAK9pB,IAFH;AAGRqN,gBAAMyc,KAAKzc,IAHH;AAIRib,sBAAYwB,KAAKxB,UAJT;AAKRC,oBAAUuB,KAAKvB,QALP;AAMRM,iBAAOiB,KAAKjB,KANJ;AAOR2gC,mBAAS1/B,KAAK0/B,OAPN;AAQR/6D,cAAIq7B,KAAKr7B,EARD;AASRw9D,qBAAW;AATH,SADE;AAYZ5kB,oBAAY,KAZA;AAaZvF,uBAAe,KAbH;AAcZqqB,8BAAsB,KAdV;AAeZvkB,mBAAW;AAfC,OAAd;;AAkBA,WAAK6kB,YAAL;AACD,K,CAAC;;AAEF;AACA;;;;;mCAEe;AACb,UAAIl3D,UAAU,KAAd;AACA,UAAIyxC,WAAW,KAAKh6C,KAAL,CAAWg6C,QAA1B;;AAEA,UAAIA,SAASrjC,KAAT,KAAmB,EAAnB,IAAyBqjC,SAASrjC,KAAT,KAAmB1S,SAAhD,EAA2DsE,UAAU,IAAV;AAC3D,UAAI7G,GAAJ,EACEH,QAAQC,GAAR,CACE,uCADF,EAEE+G,OAFF,EAGE,kBAHF,EAIEyxC,SAASrjC,KAJX,EAKE,GALF;AAOF,WAAKvW,QAAL,CAAc;AACZmI,iBAASA;AADG,OAAd;AAGD;;AAED;AACA;AACA;AACA;AACA;AACA;;;;;kCAEcoO,K,EAAO;AACnB;AACA;AACA,UAAImmB,OAAO,KAAK98B,KAAL,CAAWg6C,QAAtB;AACAld,WAAKnmB,KAAL,GAAaA,KAAb;AACA,WAAKvW,QAAL,CAAc,EAAE45C,UAAUld,IAAZ,EAAd;AACA,WAAK2iC,YAAL;AACD,K,CAAC;AACF;AACA;;;;;iCAEal9D,K,EAAO;AAClB,UAAIu6B,OAAO,KAAK98B,KAAL,CAAWg6C,QAAtB;AACAld,WAAK9pB,IAAL,GAAYzQ,MAAMiI,MAAN,CAAanF,KAAzB;AACA,WAAKjF,QAAL,CAAc,EAAE45C,UAAUld,IAAZ,EAAd;AACD,K,CAAC;AACF;AACA;;;;;kCAEcv6B,K,EAAO;AACnB,UAAIu6B,OAAO,KAAK98B,KAAL,CAAWg6C,QAAtB;AACAld,WAAKjB,KAAL,GAAat5B,MAAMiI,MAAN,CAAanF,KAA1B;AACA,WAAKjF,QAAL,CAAc,EAAE45C,UAAUld,IAAZ,EAAd;AACD,K,CAAC;AACF;AACA;;;;;iCAEav6B,K,EAAO;AAClB,UAAIu6B,OAAO,KAAK98B,KAAL,CAAWg6C,QAAtB;AACAld,WAAKzc,IAAL,GAAY9d,MAAMiI,MAAN,CAAanF,KAAzB;AACA,WAAKjF,QAAL,CAAc,EAAE45C,UAAUld,IAAZ,EAAd;AACD,K,CAAC;AACF;AACA;;;;;uCAEmBv6B,K,EAAO;AACxB,UAAIu6B,OAAO,KAAK98B,KAAL,CAAWg6C,QAAtB;AACAld,WAAKxB,UAAL,GAAkB/4B,MAAMiI,MAAN,CAAanF,KAA/B;AACA,WAAKjF,QAAL,CAAc,EAAE45C,UAAUld,IAAZ,EAAd;AACD,K,CAAC;AACF;AACA;;;;;qCAEiBv6B,K,EAAO;AACtB,UAAIu6B,OAAO,KAAK98B,KAAL,CAAWg6C,QAAtB;AACAld,WAAKvB,QAAL,GAAgBh5B,MAAMiI,MAAN,CAAanF,KAA7B;AACA,WAAKjF,QAAL,CAAc,EAAE45C,UAAUld,IAAZ,EAAd;AACD,K,CAAC;AACF;AACA;;;;;8CAE0Bv6B,K,EAAO;AAC/B,UAAIy9B,oBAAoB3yB,SAAS9K,MAAMiI,MAAN,CAAanF,KAAtB,CAAxB;AACA,UAAIkD,UAAU,KAAd;AACA;AACA,UACEhG,MAAMiI,MAAN,CAAanF,KAAb,KAAuB,EAAvB,IACA,KAAKkjB,QAAL,CAAc,QAAd,EAAwB0T,KAAxB,CAA8B+C,IAA9B,CAAmC,gBAAQ;AACzC,eAAOlC,KAAKr7B,EAAL,KAAYu+B,iBAAnB;AACD,OAFD,CAFF,EAKE;AACAz3B,kBAAU,IAAV;AACD;AACD,WAAKnI,QAAL,CAAc;AACZ4/B,2BAAmBA,iBADP;AAEZq/B,kCAA0B92D;AAFd,OAAd;AAID,K,CAAC;AACF;AACA;;;;;yCAEqBhG,K,EAAO;AAAA;;AAC1BA,YAAM4wB,cAAN;;AAEA;AACA,UAAIxc,QAAQ,KAAK4R,QAAL,CAAc,QAAd,EAAwBmwB,WAApC;;AAEA;AACA;AACA,WAAKM,OAAL,CAAa,qBAAb,EAAoC,EAAEv3C,IAAIs9D,cAAN,EAApC,EAA4Dj2D,IAA5D,CAAiE,YAAM;AACrE,eAAKkwC,OAAL,CAAa,eAAb,EAA8B,EAAEC,cAActiC,KAAhB,EAA9B;AACD,OAFD;;AAIA;AACA,UAAMgmC,UAAU,KAAKp0B,QAAL,CAAc,SAAd,CAAhB;AACA,UAAM+K,YAAY,IAAI3vB,IAAJ,GAAW6N,kBAAX,CAA8B,OAA9B,CAAlB;AACA,UAAMorC,+BAA6BD,QAAQl0C,KAArC,YAAiD6qB,SAAvD;;AAEA;AACA;AACA2b,gBAAU3lC,gBAAV,GAA6BR,IAA7B,CAAkC,qBAAa;AAC7C,eAAK1I,QAAL,CAAc;AACZ45C,oBAAU;AACRrjC,mBAAOA,KADC;AAER3D,kBAAM,EAFE;AAGRqN,kBAAM,EAHE;AAIRib,wBAAYshB,cAJJ;AAKRrhB,sBAAU,EALF;AAMRM,mBAAO,EANC;AAOR2gC,qBAAS,CAPD;AAQR/6D,gBAAIq/D,SARI;AASR7B,uBAAW;AATH,WADE;AAYZ7iC,iBAAO,EAZK;AAaZ0Y,yBAAe,IAbH;AAcZvsC,mBAAS;AAdG,SAAd;;AAiBA,eAAKk3D,YAAL;AACD,OAnBD;AAoBD,K,CAAC;AACF;AACA;;;;;0CAEsB;AACpB;AACA,UAAIl2D,SAAS,KAAKvJ,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAAjC;;AAEA;AACA;AACA,UAAIu+B,oBACF,KAAKhgC,KAAL,CAAWggC,iBAAX,KAAiC,EAAjC,GACI,CAAC,CADL,GAEI3yB,SAAS,KAAKrN,KAAL,CAAWggC,iBAApB,CAHN,CANoB,CAS0B;;AAE9C,WAAKgd,SAAL;AACA,WAAKhE,OAAL,CAAa,WAAb,EAA0B;AACxBzvC,gBAAQA,MADgB;AAExBy2B,2BAAmBA;AAFK,OAA1B;AAID;;AAED;AACA;;AAEA;;;;oCACgB;AAAA;;AACd;AACA,UAAIz2B,SAAS,KAAKvJ,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAAjC;;AAEA,WAAKyH,OAAL,CAAa,kBAAb,EAAiC,EAAEK,QAAQ,KAAKvJ,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAA9B,EAAjC,EAAqEqH,IAArE,CACE,gBAAQ;AACN,YAAIzI,KAAK4+B,GAAT,EAAc;AACZ,cAAIv9B,GAAJ,EAASH,QAAQC,GAAR,mBAA4BnB,KAAK4+B,GAAjC,SAAwC5+B,KAAK6+B,IAA7C;AACV,SAFD,MAEO,IAAI7+B,KAAKs+B,QAAT,EAAmB;AACxB,cAAIj9B,GAAJ,EACEH,QAAQC,GAAR,0DACyDnB,KAAKkJ,MAD9D;AAGF,iBAAKnJ,QAAL,CAAc,EAAEi6C,YAAY,KAAd,EAAd;AACD;AACF,OAXH;AAaD;;AAED;AACA;;;;;sCAEkB93C,K,EAAO;AACvBA,YAAM4wB,cAAN;;AAEA;AACA,WAAK/yB,QAAL,CAAc,EAAEw6C,WAAW,IAAb,EAAd;;AAEA;AACA,UAAIrxC,SAAS,KAAKvJ,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAAjC;AACA,WAAKq+D,eAAL,CAAqBv2D,MAArB;AACD,K,CAAC;AACF;AACA;;;;;sCAEkBhH,K,EAAO;AACvBA,YAAM4wB,cAAN;;AAEA,WAAK/yB,QAAL,CAAc,EAAEw6C,WAAW,KAAb,EAAd;AACD,K,CAAC;;;;qCAEer4C,K,EAAO;AACtBA,YAAM4wB,cAAN;;AAEA,WAAK/yB,QAAL,CAAc,EAAEw6C,WAAW,IAAb,EAAd;AACD,K,CAAC;;;;oCAEc;AACd,UAAIqC,QAAQ,IAAIt5C,IAAJ,EAAZ;AACA,UAAIyJ,OAAO,KAAK6vC,MAAMpW,WAAN,EAAhB;AACA,UAAIt1B,OAAO0rC,MAAMzW,QAAN,KAAmB,CAAnB,GAAuB,GAAvB,GAA6ByW,MAAMvW,OAAN,EAA7B,GAA+C,GAA/C,GAAqDt5B,KAAK2H,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAhE;AACA,UAAI44B,OAAOsP,MAAME,YAAN,GAAqBpoC,MAArB,CAA4B,CAA5B,EAA+B,CAA/B,CAAX;AACA,UAAIqoC,WAAWzP,OAAO,MAAP,GAAgBp8B,IAA/B;AACA,aAAO6rC,QAAP;AACD;;AAED;AACA;;;;;oCAEgB7zC,M,EAAQ;AAAA;;AACtB,WAAKL,OAAL,CAAa,gBAAb,EAA+B,EAAEK,QAAQA,MAAV,EAA/B,EAAmDT,IAAnD,CAAwD,gBAAQ;AAC9D,YAAIzI,KAAK4+B,GAAT,EAAc;AACZ19B,kBAAQC,GAAR,mBAA4BnB,KAAK4+B,GAAjC,SAAwC5+B,KAAK6+B,IAA7C;AACA,iBAAK9+B,QAAL,CAAc,EAAEi6C,YAAY,IAAd,EAAd;AACD,SAHD,MAGO,IAAIh6C,KAAKo+B,MAAT,EAAiB;AACtBl9B,kBAAQC,GAAR,mDAA4DnB,KAAKkJ,MAAjE;AACAhI,kBAAQC,GAAR;AACA,iBAAKpB,QAAL,CAAc,EAAEi6C,YAAY,KAAd,EAAd;AACA,iBAAK0lB,QAAL;AACD;AACF,OAVD;AAWD;AACD;AACA;;;;;+BAEW;AAAA;;AACT;AACA,UAAI/lB,WAAW,KAAKh6C,KAAL,CAAWg6C,QAA1B;AACA,UAAIA,SAASv4C,EAAT,KAAgB,EAApB,EAAwB;AACtB,cAAMmD,MACJ,0FADI,CAAN;AAGD;AACD,WAAKo0C,OAAL,CAAa,qBAAb,EAAoC,EAAEv3C,IAAIs9D,cAAN,EAApC,EAA4Dj2D,IAA5D,CAAiE,YAAM;AACrE;AACA;AACA;AACD,OAJD;AAKA,WAAK1I,QAAL,CAAc;AACZ45C,0BADY;AAEZlF,uBAAe;AAFH,OAAd;AAIA,WAAK2qB,YAAL;;AAEA;AACA,WAAKv2D,OAAL,CAAa,mBAAb,EAAkC,EAAE06B,QAAQ13B,WAAWG,IAArB,EAAlC,EAA+DvD,IAA/D,CAAoE,gBAAQ;AAC1E,YAAMwxC,cAAcj6C,KAAKy0C,aAAzB;AACA,eAAK10C,QAAL,CAAc,EAAEk6C,wBAAF,EAAd;AACD,OAHD;AAID,K,CAAC;AACF;AACA;;;;;4CAEwB/3C,K,EAAO;AAAA;;AAC7BA,YAAM4wB,cAAN;AACA;;;;;;;AAOA;AACA;AACA8b,gBAAUplC,gBAAV,GAA6Bf,IAA7B,CAAkC,qBAAa;AAC7C;AACA,YAAIm0B,OAAO;AACTx7B,cAAIs/D,SADK;AAETrlC,kBAAQz3B,SAFC;AAGTuG,kBAAQvG,SAHC;AAITi9C,sBAAY;AAJH,SAAX;AAMA,YAAI9kB,QAAQ,OAAKp8B,KAAL,CAAWo8B,KAAvB;AACAA,cAAM77B,IAAN,CAAW08B,IAAX;AACA,eAAK78B,QAAL,CAAc,EAAEg8B,OAAOA,KAAT,EAAd;AACD,OAXD;AAYD,K,CAAC;AACF;AACA;;;;;0CAEsB;AAAA;;AACpB;AACA,UAAI,KAAKp8B,KAAL,CAAW80C,aAAf,EAA8B;AAC5B,YAAIksB,eAAe,KAAKz4C,QAAL,CAAc,QAAd,EAAwB0T,KAAxB,CAA8Brb,MAA9B,CAAqC,gBAAQ;AAC9D,iBAAOkc,KAAKr7B,EAAL,KAAY,OAAKzB,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAAvC;AACD,SAFkB,EAEhB,CAFgB,CAAnB;AAGA,YAAIu/D,iBAAiB/8D,SAArB,EAAgC;AAC9B;AACA,eAAK+4C,SAAL;AACD,SAHD,MAGO;AACL;AACA,eAAKwiB,gBAAL,CAAsBwB,YAAtB;AACA,eAAK1B,iBAAL;AACA,eAAKl/D,QAAL,CAAc,EAAE00C,eAAe,KAAjB,EAAd;AACA;AACA,eAAK5rC,OAAL,CAAa,kBAAb,EAAiC,EAAEK,QAAQ,KAAKvJ,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAA9B,EAAjC,EAAqEqH,IAArE,CACE,gBAAQ;AACN,gBAAIzI,KAAK4+B,GAAT,EAAc;AACZ19B,sBAAQC,GAAR,mBAA4BnB,KAAK4+B,GAAjC,SAAwC5+B,KAAK6+B,IAA7C;AACD,aAFD,MAEO,IAAI7+B,KAAKs+B,QAAT,EAAmB;AACxBp9B,sBAAQC,GAAR,0DACyDnB,KAAKkJ,MAD9D;AAGA,qBAAKnJ,QAAL,CAAc,EAAEi6C,YAAY,KAAd,EAAd;AACD;AACF,WAVH;AAYD;AACD,aAAKrB,OAAL,CAAa,qBAAb,EAAoC,EAAEv3C,IAAI,QAAN,EAApC;AACA,aAAKyH,OAAL,CAAa,uBAAb,EAAsC,EAAE06B,QAAQ13B,WAAWG,IAArB,EAAtC;AACD;AACF,K,CAAC;AACF;AACA;;;;;mCAEe9J,K,EAAO;AACpBA,YAAM4wB,cAAN;AACA,UAAIisC,kBAAkB/xD,SAAS,KAAKrN,KAAL,CAAWo/D,eAApB,CAAtB;AACA,WAAKpiB,SAAL;AACA,WAAKsiB,iBAAL;AACA,WAAKl/D,QAAL,CACE;AACE00C,uBAAe,KADjB;AAEEqqB,8BAAsB;AAFxB,OADF,EAKE,YAAM;AACJ;AACA,YAAIz9D,GAAJ,EACEH,QAAQC,GAAR,CACE,2DADF,EAEE49D,eAFF;AAIF58D,cAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAAC01D,eAAD,CAAX,EAAjC;AACD,OAbH;AAeA,WAAKpmB,OAAL,CAAa,qBAAb,EAAoC,EAAEv3C,IAAI,QAAN,EAApC;AACD;AACD;AACA;;;;;6CAEyB;AACvB,WAAKrB,QAAL,CAAc,EAAE++D,sBAAsB,KAAxB,EAAd;AACD;AACD;AACA;;;;;6BAES58D,K,EAAO;AAAA;;AACdA,YAAM4wB,cAAN;AACA;AACA,UAAI6mB,WAAW,KAAKh6C,KAAL,CAAWg6C,QAA1B;AACA,UAAIld,OAAO;AACTnmB,eAAOqjC,SAASrjC,KAAT,GAAiBqjC,SAASrjC,KAA1B,GAAkC,EADhC;AAETlV,YAAIu4C,SAASv4C,EAFJ;AAGTuR,cAAMgnC,SAAShnC,IAHN;AAITqN,cAAM25B,SAAS35B,IAJN;AAKTib,oBAAY0e,SAAS1e,UALZ;AAMTC,kBAAUye,SAASze,QANV;AAOTM,eAAOme,SAASne,KAPP;AAQT2gC,iBAASxiB,SAASwiB;AART,OAAX;AAUA,WAAK8C,iBAAL;AACA,WAAKl/D,QAAL,CAAc,EAAE00C,eAAe,KAAjB,EAAd;AACA;AACA,WAAKkE,OAAL,CAAa,qBAAb,EAAoC,EAAEv3C,IAAI,QAAN,EAApC,EAAsDqH,IAAtD,CAA2D,YAAM;AAC/D;AACA,eAAKkwC,OAAL,CAAa,eAAb,EAA8B,EAAEC,cAAcnc,KAAKnmB,KAArB,EAA9B;AACD,OAHD;AAIA;AACA;AACA;AACA,WAAKqiC,OAAL,CAAa,WAAb,EAA0B,EAAElc,UAAF,EAA1B,EAAoCh0B,IAApC,CAAyC,YAAM;AAC7C,eAAKI,OAAL,CAAa,kBAAb,EAAiC,EAAEK,QAAQywC,SAASv4C,EAAnB,EAAjC,EAA0DqH,IAA1D,CAA+D,gBAAQ;AACrE,cAAIzI,KAAK4+B,GAAT,EAAc;AACZ19B,oBAAQC,GAAR,mBAA4BnB,KAAK4+B,GAAjC,SAAwC5+B,KAAK6+B,IAA7C;AACD,WAFD,MAEO,IAAI7+B,KAAKs+B,QAAT,EAAmB;AACxBp9B,oBAAQC,GAAR,0DACyDnB,KAAKkJ,MAD9D;AAGA,mBAAKnJ,QAAL,CAAc,EAAEi6C,YAAY,KAAd,EAAd;AACD;AACF,SATD;AAUD,OAXD;AAYA;AACA,WAAKnxC,OAAL,CAAa,uBAAb,EAAsC,EAAE06B,QAAQ13B,WAAWG,IAArB,EAAtC;AACD,K,CAAC;;AAEF;AACA;;;;;6BAES;AAAA,mBAYH,KAAKrM,KAZF;AAAA,UAELq5B,QAFK,UAELA,QAFK;AAAA,UAGLb,gBAHK,UAGLA,gBAHK;AAAA,UAILC,mBAJK,UAILA,mBAJK;AAAA,UAKLshB,eALK,UAKLA,eALK;AAAA,UAML3hB,oBANK,UAMLA,oBANK;AAAA,UAOL4hB,QAPK,UAOLA,QAPK;AAAA,UAQLnb,QARK,UAQLA,QARK;AAAA,UASLub,YATK,UASLA,YATK;AAAA,UAULE,WAVK,UAULA,WAVK;AAAA,UAWLxF,aAXK,UAWLA,aAXK;AAAA,UAaD3b,QAbC,GAaY,KAAKn5B,KAbjB,CAaDm5B,QAbC;;AAcP,UAAIA,YAAYl1B,SAAhB,EAA2B;AACzBk1B,mBAAW,EAAX;AACAA,iBAASb,MAAT,GAAkB,IAAlB;AACD;AACD,aACE;AAAA;AAAA;AACE;AAAC,mBAAD;AAAA;AACE,uBAAU,YADZ;AAEE,mBAAO,EAAE3G,WAAW,MAAb,EAAqBqsB,cAAc,KAAnC;AAFT;AAIE;AAAC,kBAAD;AAAA;AACE,2BADF;AAEE,oBAAK,IAFP;AAGE,wBAAU1D,WAHZ;AAIE,sBAAQzb,YAAYiW,aAJtB;AAKE,uBAAS,KAAK+qB;AALhB;AAOG;AAPH;AAJF,SADF;AAeE;AAAC,cAAD;AAAA;AACE,uBAAU,WADZ;AAEE,mBAAO;AACLliB,yBAAW,OADN;AAELx8C,+BAAiB,SAFZ;AAGLC,uBAAS,KAHJ;AAIL0wB,4BAAc;AAJT,aAFT;AAQE,sBAAU,KAAKW;AARjB;AAUE;AAAC,oBAAD;AAAA;AACE;AAAA;AAAA;AAAA;AAASunB,uBAASv4C,EAAT,IAAe;AAAxB;AADF,WAVF;AAaE;AAAC,qBAAD;AAAA,cAAW,SAAX;AACE;AAAC,iBAAD;AAAA,gBAAK,IAAI,CAAT,EAAY,OAAO,EAAEm8C,SAAS,MAAX,EAAnB,EAAwC,WAAU,MAAlD;AACE;AAAC,qBAAD;AAAA,kBAAO,OAAI,WAAX,EAAuB,WAAU,gCAAjC;AACGvkB,yBAAS1iB,KAAT,CAAe4iB,YADlB;AAEE;AAAA;AAAA,oBAAM,WAAU,aAAhB;AAA+B,uBAAKskB,QAAL,CAAcxkB,SAAS1iB,KAAvB;AAA/B;AAFF;AADF,aADF;AAOE;AAAC,iBAAD;AAAA,gBAAK,IAAI,CAAT;AACE,kCAAC,YAAD;AACE,4BAAYooD,cADd;AAEE,+BAAe/kB,SAASrjC,KAF1B;AAGE,8BAAc,UAHhB;AAIE,uCAAuBm+B;AAJzB;AADF,aAPF;AAeE;AAAA;AAAA;AACE,wBAAQ,CAAC,KAAK90C,KAAL,CAAWm/D,oBADtB;AAEE,uBAAO;AACLl+D,yBAAO,OADF;AAELC,0BAAQ,OAFH;AAGLC,mCAAiB,SAHZ;AAILgxB,4BAAU,OAJL;AAKL2c,wBAAM,OALD;AAML7c,0BAAQ,MANH;AAOL7wB,2BAAS;AAPJ;AAFT;AAYE;AAAA;AAAA,kBAAG,WAAU,mBAAb;AAAkCo3B;AAAlC,eAZF;AAaE;AAAC,sBAAD;AAAA,kBAAQ,MAAK,IAAb,EAAkB,SAAS,KAAK0nC,cAAhC;AAAA;AAAA,eAbF;AAgBE;AAAC,sBAAD;AAAA,kBAAQ,aAAR,EAAgB,MAAK,IAArB,EAA0B,SAAS,KAAKC,sBAAxC;AAAA;AAAA;AAhBF;AAfF,WAbF;AAiDE;AAAA;AAAA,cAAK,OAAO,EAAEhuC,UAAU,UAAZ,EAAwB2c,MAAM,OAA9B,EAAuCT,UAAU,OAAjD,EAAZ;AACE,gCAAC,UAAD;AADF,WAjDF;AAoDE;AAAC,qBAAD;AAAA,cAAW,SAAX,EAAe,QAAQhV,SAASrmB,IAAT,CAAcslB,MAArC;AACE;AAAC,iBAAD;AAAA,gBAAK,IAAI,CAAT,EAAY,OAAO,EAAEslB,SAAS,MAAX,EAAnB,EAAwC,WAAU,MAAlD;AACE;AAAC,qBAAD;AAAA,kBAAO,OAAI,MAAX,EAAkB,WAAU,gCAA5B;AACGvkB,yBAASrmB,IAAT,CAAcumB,YADjB;AAEE;AAAA;AAAA,oBAAM,WAAU,aAAhB;AAA+B,uBAAKskB,QAAL,CAAcxkB,SAASrmB,IAAvB;AAA/B;AAFF;AADF,aADF;AAOE;AAAC,iBAAD;AAAA,gBAAK,IAAI,CAAT;AACE;AAAC,qBAAD;AAAA;AACE,wBAAK,QADP;AAEE,wBAAK,MAFP;AAGE,sBAAG,YAHL;AAIE,yBAAOgnC,SAAShnC,IAAT,IAAiB,EAJ1B;AAKE,4BAAU,KAAK2sD,YALjB;AAME,4BAAU,CAAC7qB;AANb;AAQGzb,yBAASrmB,IAAT,CAAcR,OAAd,CAAsBL,GAAtB,CAA0B;AAAA,yBACzB;AAAA;AAAA,sBAAQ,KAAK2rC,OAAOnnC,KAApB;AAA4BmnC,2BAAOnnC;AAAnC,mBADyB;AAAA,iBAA1B;AARH;AADF;AAPF,WApDF;AA0EE;AAAC,qBAAD;AAAA,cAAW,SAAX,EAAe,QAAQ0iB,SAASwC,KAAT,CAAevD,MAAtC;AACE;AAAC,iBAAD;AAAA,gBAAK,IAAI,CAAT,EAAY,OAAO,EAAEslB,SAAS,MAAX,EAAnB,EAAwC,WAAU,MAAlD;AACE;AAAC,qBAAD;AAAA,kBAAO,OAAI,OAAX,EAAmB,WAAU,gCAA7B;AACGvkB,yBAASwC,KAAT,CAAetC,YADlB;AAEE;AAAA;AAAA,oBAAM,WAAU,aAAhB;AAA+B,uBAAKskB,QAAL,CAAcxkB,SAASwC,KAAvB;AAA/B;AAFF;AADF,aADF;AAOE;AAAC,iBAAD;AAAA,gBAAK,IAAI,CAAT;AACE,kCAAC,KAAD;AACE,sBAAK,UADP;AAEE,sBAAK,MAFP;AAGE,oBAAG,WAHL;AAIE,uBAAO,EAAE96B,SAAS+zC,gBAAgB,OAAhB,GAA0B,MAArC,EAJT;AAKE,uBAAOkF,SAASne,KAAT,IAAkB,EAL3B;AAME,0BAAU,KAAKkgB,aANjB;AAOE,0BAAU,CAACjH;AAPb,gBADF;AAUG,mBAAKiJ,eAAL,CAAqB/D,SAASne,KAAT,IAAkB,EAAvC;AAVH;AAPF,WA1EF;AA8FE;AAAC,qBAAD;AAAA,cAAW,SAAX,EAAe,QAAQxC,SAAShZ,IAAT,CAAciY,MAArC;AACE;AAAC,iBAAD;AAAA,gBAAK,IAAI,CAAT,EAAY,OAAO,EAAEslB,SAAS,MAAX,EAAnB,EAAwC,WAAU,MAAlD;AACE;AAAC,qBAAD;AAAA,kBAAO,OAAI,MAAX,EAAkB,WAAU,gCAA5B;AACGvkB,yBAAShZ,IAAT,CAAckZ,YADjB;AAEE;AAAA;AAAA,oBAAM,WAAU,aAAhB;AAA+B,uBAAKskB,QAAL,CAAcxkB,SAAShZ,IAAvB;AAA/B;AAFF;AADF,aADF;AAOE;AAAC,iBAAD;AAAA,gBAAK,IAAI,CAAT;AACE,kCAAC,KAAD;AACE,sBAAK,MADP;AAEE,sBAAK,MAFP;AAGE,oBAAG,MAHL;AAIE,uBAAO25B,SAAS35B,IAAT,IAAiB,EAJ1B;AAKE,0BAAU,KAAK27B,YALjB;AAME,0BAAU,CAAClH;AANb;AADF;AAPF,WA9FF;AAgHE;AAAC,qBAAD;AAAA,cAAW,SAAX,EAAe,QAAQzb,SAASiC,UAAT,CAAoBhD,MAA3C;AACE;AAAC,iBAAD;AAAA,gBAAK,IAAI,CAAT,EAAY,OAAO,EAAEslB,SAAS,MAAX,EAAnB,EAAwC,WAAU,MAAlD;AACE;AAAC,qBAAD;AAAA,kBAAO,OAAI,YAAX,EAAwB,WAAU,gCAAlC;AACGvkB,yBAASiC,UAAT,CAAoB/B,YADvB;AAEE;AAAA;AAAA,oBAAM,WAAU,aAAhB;AACG,uBAAKskB,QAAL,CAAcxkB,SAASiC,UAAvB;AADH;AAFF;AADF,aADF;AASE;AAAC,iBAAD;AAAA,gBAAK,IAAI,CAAT;AACE,kCAAC,KAAD;AACE,sBAAK,UADP;AAEE,sBAAK,YAFP;AAGE,oBAAG,YAHL;AAIE,uBAAO0e,SAAS1e,UAAT,IAAuB,EAJhC;AAKE,0BAAU,KAAK4gB,kBALjB;AAME,0BAAU,CAACpH;AANb;AADF;AATF,WAhHF;AAoIE;AAAC,qBAAD;AAAA,cAAW,SAAX,EAAe,QAAQzb,SAASkC,QAAT,CAAkBjD,MAAzC;AACE;AAAC,iBAAD;AAAA,gBAAK,IAAI,CAAT,EAAY,OAAO,EAAEslB,SAAS,MAAX,EAAnB,EAAwC,WAAU,MAAlD;AACE;AAAC,qBAAD;AAAA,kBAAO,OAAI,UAAX,EAAsB,WAAU,gCAAhC;AACGvkB,yBAASkC,QAAT,CAAkBhC,YADrB;AAEE;AAAA;AAAA,oBAAM,WAAU,aAAhB;AACG,uBAAKskB,QAAL,CAAcxkB,SAASkC,QAAvB;AADH;AAFF;AADF,aADF;AASE;AAAC,iBAAD;AAAA,gBAAK,IAAI,CAAT;AACE,kCAAC,KAAD;AACE,sBAAK,UADP;AAEE,sBAAK,UAFP;AAGE,oBAAG,UAHL;AAIE,2BAAU,UAJZ;AAKE,uBAAOye,SAASze,QAAT,IAAqB,EAL9B;AAME,0BAAU,KAAK4gB,gBANjB;AAOE,0BAAU,CAACrH,aAPb;AAQE,0BAAU,CAACA;AARb;AADF;AATF,WApIF;AA2JE;AAAA;AAAA;AACE,kBAAG,gBADL;AAEE,sBAAQ,KAAK90C,KAAL,CAAW46C,SAFrB;AAGE,yBAAU;AAHZ;AAKE;AAAA;AAAA,gBAAM,WAAU,OAAhB,EAAwB,SAAS,KAAKY,gBAAtC;AAAA;AAAA,aALF;AAQE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,eADF;AAEE,6CAFF;AAGE,6CAHF;AAAA;AAIa,mBAAKjzB,QAAL,CAAc,UAAd,EAA0B1U,IAJvC;AAAA;AAI4D,iBAJ5D;AAKGmmC,uBAASrjC,KALZ;AAAA;AAKwBqjC,uBAASv4C,EALjC;AAAA;AAKwC03B,uBAAStmB,IALjD;AAAA;AAKyE,iBALzE;AAMG,mBAAK4oC,aAAL,EANH;AAAA;AAAA;AARF,WA3JF;AA4KE,yCA5KF;AA8KE;AAAC,qBAAD;AAAA,cAAW,WAAU,YAArB,EAAkC,OAAO,EAAEuC,cAAc,KAAhB,EAAzC;AACE;AAAC,oBAAD;AAAA;AACE,6BADF;AAEE,sBAAK,IAFP;AAGE,wBAAQ7kB,SAASb,MAAT,IAAmB0hB,SAASv4C,EAAT,KAAgB,EAH7C;AAIE,yBAAS,KAAK85C;AAJhB;AAAA;AAAA,aADF;AAAA;AAUE;AAAA;AAAA;AACE,wBAAQ1c,YAAYub,YAAZ,IAA4BtF,aAA5B,IAA6CkF,SAASv4C,EAAT,KAAgB,EADvE;AAEE,uBAAO,EAAEV,SAAS,QAAX;AAFT;AAIE;AAAC,sBAAD;AAAA;AACE,+BADF;AAEE,wBAAK,IAFP;AAGE,4BAAUu5C,WAHZ;AAIE,2BAAS,KAAKgB;AAJhB;AAAA;AAAA,eAJF;AAYE;AAAA;AAAA;AACE,0BAAQ,CAAC,KAAKt7C,KAAL,CAAWq6C,UADtB;AAEE,6BAAU;AAFZ;AAIG5hB,mCAJH;AAKE;AAAA;AAAA,oBAAM,QAAQ,CAACud,OAAf;AAAA;AACQ;AAAA;AAAA;AAAA;AAAA,mBADR;AAAA;AAGE,iDAHF;AAIE;AAAC,0BAAD;AAAA;AACE,iCAAU,qCADZ;AAEE,4BAAK,IAFP;AAGE,+BAAS,KAAKoqB;AAHhB;AAAA;AAAA;AAJF;AALF,eAZF;AA8BE;AAAA;AAAA,kBAAG,QAAQ,CAAC9lB,WAAZ,EAAyB,WAAU,2BAAnC;AACGP;AADH;AA9BF;AAVF,WA9KF;AA2NE;AAAC,qBAAD;AAAA,cAAW,WAAU,YAArB,EAAkC,OAAO,EAAEiE,cAAc,KAAhB,EAAzC;AACE;AAAC,oBAAD;AAAA;AACE,6BADF;AAEE,sBAAK,IAFP;AAGE,wBAAQ,CAAClJ,aAHX;AAIE,yBAAS,KAAKmrB;AAJhB;AAMGnrB,8BAAgB,QAAhB,GAA2B;AAN9B,aADF;AAAA;AAUE;AAAC,oBAAD;AAAA;AACE,uBAAM,SADR;AAEE,sBAAK,IAFP;AAGE,0BAAU,CAAC,KAAK90C,KAAL,CAAWuI,OAHxB;AAIE,wBAAQ,CAACusC;AAJX;AAAA;AAAA;AAVF,WA3NF;AA8OE;AAAC,qBAAD;AAAA;AACE,uBADF;AAEE,yBAAU,WAFZ;AAGE,qBAAO;AACL1zC,yBAAS,UADJ;AAEL4wB,wBAAQ,QAFH;AAGL7wB,iCAAiB;AAHZ,eAHT;AAQE,sBACE,CAAC60C,OAAD,IAAYnX,QAAZ,IAAwBmb,SAASv4C,EAAT,KAAgB,EAAxC,IAA8C22B;AATlD;AAYE;AAAC,iBAAD;AAAA,gBAAK,IAAI,CAAT;AACE;AAAC,wBAAD;AAAA;AAAA;AAAA;AADF,aAZF;AAiBE;AAAC,iBAAD;AAAA,gBAAK,IAAI,CAAT;AACE,kCAAC,KAAD;AACE,sBAAK,MADP;AAEE,sBAAK,mBAFP;AAGE,oBAAG,mBAHL;AAIE,uBAAO,KAAKp4B,KAAL,CAAWggC,iBAAX,IAAgC,EAJzC;AAKE,0BAAU,KAAK4/B,yBALjB;AAME,2BAAU,EANZ;AAOE,uBAAO,EAAE3+D,YAAF,EAPT;AAQE,wBAAO,IART;AASE,yBAAS,CAAC,KAAKjB,KAAL,CAAWq/D;AATvB,gBADF;AAYE;AAAC,4BAAD;AAAA;AAAA;AAAA,eAZF;AAaE;AAAC,sBAAD;AAAA;AACE,6BAAU,6BADZ;AAEE,wBAAK,IAFP;AAGE,2BAAS,KAAKhkB;AAHhB;AAAA;AAAA;AAbF;AAjBF;AA9OF,SAfF;AAqSE;AAAA;AAAA;AACE,mBAAO,EAAEl6C,iBAAiB,SAAnB,EAA8BC,SAAS,KAAvC,EAA8C0wB,cAAc,MAA5D;AADT;AAGE;AAAC,oBAAD;AAAA;AAAA;AAAA,WAHF;AAOG,eAAK9xB,KAAL,CAAWo8B,KAAX,CAAiBjqB,GAAjB,CAAqB,UAAC8qB,IAAD,EAAO93B,CAAP;AAAA,mBACpB,oBAAC,UAAD;AACE,sBAAQ83B,KAAKx7B,EADf;AAEE,mBAAKw7B,KAAKx7B,EAFZ;AAGE,+BAAiBu4C,SAASrjC,KAH5B;AAIE,kCAAoBkoB;AAJtB,cADoB;AAAA,WAArB,CAPH;AAeE;AAAC,qBAAD;AAAA,cAAW,WAAU,YAArB;AACE;AAAC,oBAAD;AAAA;AACE,6BADF;AAEE,sBAAK,IAFP;AAGE,0BAAUyb,WAHZ;AAIE,wBAAQzb,YAAYmb,SAASv4C,EAAT,KAAgB,EAA5B,IAAkCqzC,aAJ5C;AAKE,yBAAS,KAAKkrB;AALhB;AAAA;AAAA;AADF;AAfF;AArSF,OADF;AAmUD;;AAED;AACA;;;;;6BAESnqD,G,EAAK;AACZ,UAAI,CAACA,GAAL,EAAU;AACV,UAAIhD,OAAO,EAAX;;AAEA,UAAIgD,IAAI4jB,IAAJ,IAAYx1B,SAAZ,IAAyB4R,IAAI4jB,IAAJ,IAAY,EAAzC,EAA6C5mB,OAAOgD,IAAIc,KAAX,CAA7C,KACK9D,OAAOgD,IAAI4jB,IAAX;AACL,aAAO5mB,IAAP;AACD;;AAED;AACA;;;;;oCAEgBA,I,EAAM;AACpB,UAAI,CAAC,KAAK7S,KAAL,CAAW80C,aAAhB,EACE,OAAO4E,QAAQ;AACbwE,mBAAW,KAAKC,eADH;AAEbC,yBAAiB,EAAEC,aAAa,IAAf,EAAqBC,SAAS,IAA9B,EAFJ;AAGbC,iBAAS,CAAC5E,OAAD;AAHI,OAAR,EAIJ9mC,IAJI,CAAP;AAKH;;;oCAEe2rC,G,EAAK3+C,K,EAAO4+C,Q,EAAUC,K,EAAO;AAC3C,UAAIF,QAAQ,GAAZ,EAAiB;AACf3+C,cAAM2K,MAAN,GAAe,QAAf;AACD;;AAED,aAAO;AAAC,WAAD;AAAS3K,aAAT;AAAiB4+C;AAAjB,OAAP;AACD;;AAED;;AAEA;AACA;;;;wCACwB;AACtB,WAAKjR,qBAAL,CAA2B,KAAKjlB,QAAL,CAAc,SAAd,CAA3B;AACA,WAAKk3C,YAAL;AACA,WAAK3kB,eAAL;AACA,WAAK16C,QAAL,CAAc;AACZ;AACAg6C,sBAAc36C,OAAOmJ,gBAAP;AAFF,OAAd;AAIAjK,aAAOkD,gBAAP,CAAwB,cAAxB,EAAwC,KAAKy6C,WAA7C;AACA39C,aAAOkD,gBAAP,CAAwB,QAAxB,EAAkC,KAAK06C,QAAvC;AACD;;;gCAEWl5C,C,EAAG;AACbA,QAAE8vB,cAAF;AACA,UAAI,KAAKnzB,KAAL,CAAW80C,aAAf,EAA8B;AAC5B,SAACzxC,KAAK1E,OAAO4D,KAAb,EAAoB07C,WAApB,GAAkC,IAAlC;AACD,OAFD,MAEO;AACLlnC,gBAAQmX,cAAR,CAAuB7qB,CAAvB,EAA0B,aAA1B;AACD;AACD,aAAOA,CAAP;AACD;;;6BAEQA,C,EAAG;AACV,UAAI,KAAKrD,KAAL,CAAW80C,aAAf,EAA8B;AAC5B,aAAK5rC,OAAL,CAAa,kBAAb,EAAiC,EAAEK,QAAQ,KAAKvJ,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAA9B,EAAjC;AACA,aAAKyH,OAAL,CAAa,uBAAb,EAAsC,EAAE06B,QAAQ13B,WAAWG,IAArB,EAAtC;AACD;AACF;AACD;AACA;;;;2CAC2B;AAAA;;AACzB,UAAI3K,GAAJ,EAASH,QAAQC,GAAR,CAAY,kCAAZ;AACT,UAAI,KAAKxB,KAAL,CAAW80C,aAAf,EAA8B;AAC5B,aAAK5rC,OAAL,CAAa,kBAAb,EAAiC,EAAEK,QAAQ,KAAKvJ,KAAL,CAAWg6C,QAAX,CAAoBv4C,EAA9B,EAAjC,EAAqEqH,IAArE,CACE,gBAAQ;AACN,cAAIzI,KAAK4+B,GAAT,EAAc;AACZ,gBAAIv9B,GAAJ,EAASH,QAAQC,GAAR,mBAA4BnB,KAAK4+B,GAAjC,SAAwC5+B,KAAK6+B,IAA7C;AACV,WAFD,MAEO,IAAI7+B,KAAKs+B,QAAT,EAAmB;AACxB,gBAAIj9B,GAAJ,EACEH,QAAQC,GAAR,0DACyDnB,KAAKkJ,MAD9D;AAGF,oBAAKnJ,QAAL,CAAc,EAAEi6C,YAAY,KAAd,EAAd;AACD;AACF,SAXH;AAaA,aAAKnxC,OAAL,CAAa,uBAAb,EAAsC,EAAE06B,QAAQ13B,WAAWG,IAArB,EAAtC;AACD;AACD;AACA;AACA,WAAKqc,iBAAL,CAAuB,SAAvB,EAAkC,KAAK8kB,qBAAvC;AACA,WAAK9kB,iBAAL,CAAuB,WAAvB,EAAoC,KAAKsyB,eAAzC;AACA,WAAKtyB,iBAAL,CAAuB,QAAvB,EAAiC,KAAKkvB,oBAAtC;AACA,WAAKlvB,iBAAL,CAAuB,UAAvB,EAAmC,KAAKmyB,WAAxC;AACAr4C,YAAMqc,eAAN,CAAsB,yBAAtB,EAAiD,KAAKk8B,YAAtD;AACAp8C,aAAO+oB,mBAAP,CAA2B,cAA3B,EAA2C,KAAK40B,WAAhD;AACA39C,aAAO+oB,mBAAP,CAA2B,QAA3B,EAAqC,KAAK60B,QAA1C;AACD;;;;EAv2CwB98C,OAAO4B,S,GAw2ChC;;AAEF;AACA;;;AACA5C,OAAOC,OAAP,GAAiBsgE,YAAjB;;;;;;;;ACx9CA;;;;AACA;;;;;;;;;;;;AAtCA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,IAAMpgE,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;AACA,IAAMqwC,OAAOrwC,QAAQ,UAAR,CAAb;AACA,IAAMutC,SAASvtC,QAAQ,gBAAR,CAAf;AACA,IAAMa,WAAWb,QAAQ,UAAR,CAAjB;AACA,IAAM01B,SAAS11B,QAAQ,sBAAR,CAAf;;eACgCA,QAAQ,kBAAR,C;IAAxB2N,mB,YAAAA,mB;;gBAC2B3N,QAAQ,sBAAR,C;IAA3BkN,W,aAAAA,W;IAAaC,S,aAAAA,S;;IACb0kB,M,GAAWH,U,CAAXG,M;;AACR,IAAMjxB,SAASZ,QAAQ,eAAR,CAAf;;;AAIA;AACA;AACA,IAAI6C,MAAM,KAAV;AACA;AACA,IAAMb,cACJnB,SAASyG,OAAT,CAAiB,QAAjB,EAA2BM,EAA3B,KAAkC,WAAlC,IACAhG,SAASC,IAAT,CAAcqS,QAAd,CAAuB,YAAvB,CAFF;AAGA;AACA,IAAIvQ,QAAQ,IAAZ;;AAEA;AACA;AACA;;IACMy+D,S;;;AACJ,qBAAYphE,KAAZ,EAAmB;AAAA;;AAAA,sHACXA,KADW;;AAGjB,QAAMsM,WAAW,MAAKoc,QAAL,CAAc,UAAd,CAAjB;AACA,UAAKvoB,KAAL,GAAa;AACXq5B,gBAAUltB,SAASktB,QADR;AAEX4C,aAAO,EAFI;AAGXohC,sBAAgBp5D,SAHL;AAIXq5D,qBAAer5D,SAJJ;AAKXs5D,yBAAmBpxD,SAAS+sB,WALjB;AAMXskC,wBAAkBrxD,SAAS8sB,WANhB;AAOXwkC,qBAAe,EAPJ;AAQXnjB,mBAAa,KARF;AASXzb,gBAAU,KATC;AAUX0b,kBAAY,IAVD;AAWXwE,eAAS;AAXE,KAAb;;AAcA,UAAKvR,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BztC,IAA3B,OAA7B;AACA,UAAK83C,uBAAL,GAA+B,MAAKA,uBAAL,CAA6B93C,IAA7B,OAA/B;AACA,UAAK29D,oBAAL,GAA4B,MAAKA,oBAAL,CAA0B39D,IAA1B,OAA5B;AACA,UAAK49D,cAAL,GAAsB,MAAKA,cAAL,CAAoB59D,IAApB,OAAtB;AACA,UAAK69D,qBAAL,GAA6B,MAAKA,qBAAL,CAA2B79D,IAA3B,OAA7B;AACA,UAAK+6C,eAAL,GAAuB,MAAKA,eAAL,CAAqB/6C,IAArB,OAAvB;AACA,UAAKm/C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBn/C,IAAtB,OAAxB;AACA,UAAKo/C,sBAAL,GAA8B,MAAKA,sBAAL,CAA4Bp/C,IAA5B,OAA9B;AACA,UAAKq/C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBr/C,IAAtB,OAAxB;AACA,UAAKs/C,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBt/C,IAAvB,OAAzB;AACA,UAAKu7C,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBv7C,IAAvB,OAAzB;AACA,UAAKu/C,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBv/C,IAAtB,OAAxB;AACA,UAAK89D,cAAL,GAAsB,MAAKA,cAAL,CAAoB99D,IAApB,OAAtB;AACA,UAAK4/C,UAAL,GAAkB,MAAKA,UAAL,CAAgB5/C,IAAhB,OAAlB;AACA,UAAK6/C,UAAL,GAAkB,MAAKA,UAAL,CAAgB7/C,IAAhB,OAAlB;;AAEA,UAAK+/C,aAAL,GAAqB,CAArB,CAlCiB,CAkCO;;AAExB;AACAt9C,YAAQ/C,OAAOgD,WAAP,OAAR;;AAEAD,UAAMrC,aAAN,CAAoB,yBAApB,EAA+C,MAAK26C,eAApD;;AAEA;AACA;AACA,UAAKzyC,gBAAL,CAAsB,SAAtB,EAAiC,MAAKmlC,qBAAtC;;AAEA;AACA;AACA,UAAKnlC,gBAAL,CAAsB,QAAtB,EAAgC,MAAK62C,gBAArC;;AAEA;AACA,UAAK72C,gBAAL,CAAsB,gBAAtB,EAAwC,MAAK82C,sBAA7C;;AAEA;AACA,UAAK92C,gBAAL,CAAsB,UAAtB,EAAkC,MAAK+2C,gBAAvC;;AAEA,UAAK/2C,gBAAL,CAAsB,WAAtB,EAAmC,MAAKwvC,uBAAxC;AACA,UAAKxvC,gBAAL,CAAsB,QAAtB,EAAgC,MAAKq1D,oBAArC;AAxDiB;AAyDlB,G,CAAC;;AAEF;AACA;;;;;;wCAEoB;AAAA;;AAClB,UAAIh8D,GAAJ,EAASH,QAAQiX,KAAR,CAAc,8BAAd;;AAET,WAAKg1B,qBAAL,CAA2B,KAAKjlB,QAAL,CAAc,SAAd,CAA3B;;AAEA;AACA;AACA;AACA,UAAMw3B,iBAAiBv9C,MAAM+lB,QAAN,CAAe,gBAAf,CAAvB;AACA,WAAKnoB,QAAL,CAAc,EAAEq9D,eAAe1d,eAAe9jB,KAAhC,EAAd,EAAuD,YAAM;AAC3D,YAAIn0B,SAAS,OAAKygB,QAAL,CAAc,QAAd,CAAb;AACA,eAAK22B,gBAAL,CAAsBp3C,MAAtB;AACD,OAHD;;AAKA;AACA;AACA,WAAKgzC,eAAL;AACD;;;2CAEsB;AACrBt4C,YAAMqc,eAAN,CAAsB,yBAAtB,EAAiD,KAAKi8B,eAAtD;AACA,WAAKpyB,iBAAL,CAAuB,SAAvB,EAAkC,KAAK8kB,qBAAvC;AACA,WAAK9kB,iBAAL,CAAuB,QAAvB,EAAiC,KAAKw2B,gBAAtC;AACA,WAAKx2B,iBAAL,CAAuB,gBAAvB,EAAyC,KAAKy2B,sBAA9C;AACA,WAAKz2B,iBAAL,CAAuB,UAAvB,EAAmC,KAAK02B,gBAAxC;AACA,WAAK12B,iBAAL,CAAuB,WAAvB,EAAoC,KAAKmvB,uBAAzC;AACA,WAAKnvB,iBAAL,CAAuB,QAAvB,EAAiC,KAAKg1C,oBAAtC;AACD;;AAED;;;;4CACwBr9D,I,EAAM;AAC5B,WAAKD,QAAL,CAAc;AACZi9D,wBAAgBh9D,KAAK47B,KAAL,CAAWz3B,MAAX,GAAoB,CAApB,GAAwBnE,KAAK47B,KAAL,CAAW,CAAX,EAAcx6B,EAAtC,GAA2CwC;AAD/C,OAAd;AAGD;;;yCAEoB5D,I,EAAM;AAAA,UACjBy9D,mBADiB,GACgCz9D,IADhC,CACjBy9D,mBADiB;AAAA,UACIC,uBADJ,GACgC19D,IADhC,CACI09D,uBADJ,EACsC;;AAC/D,UAAIT,sBAAJ;AACA,UAAIS,4BAA4B95D,SAAhC,EACEq5D,gBAAgBS,uBAAhB;AACF,UAAID,wBAAwB75D,SAA5B,EAAuCq5D,gBAAgBQ,mBAAhB;AACvC,WAAK19D,QAAL,CAAc,EAAEk9D,4BAAF,EAAd;AACD;;AAED;;;;;;;;;0CAMsBxtC,O,EAAS;AAC7B,WAAK1vB,QAAL,CAAc,EAAEy+B,UAAU,CAAC/O,QAAQvnB,OAArB,EAAd;AACD;;AAED;;;;mCACey3C,Q,EAAU;AACvB;;AAEA;AACAz+C,cAAQiX,KAAR,CAAc,gCAAd,EAAgDwnC,QAAhD;AACA,UAAI,CAACA,SAASnnC,IAAd,EAAoB;AAClB,eAAO,EAAP;AACD;AACD,UAAIsP,IAAI,IAAIxkB,IAAJ,CACNq8C,SAASnnC,IAAT,CAAconC,QAAd,GAAyB,CAAzB,GAA6BD,SAASnnC,IAAT,CAAc8gB,OAA3C,GAAqDqmB,SAASnnC,IAAT,CAAc+gB,OAD7D,CAAR;;AAIA,UAAIxsB,OAAO8vC,OAAO/0B,EAAE0e,WAAF,EAAP,CAAX;AACA,UAAIt1B,OAAO4W,EAAEqe,QAAF,KAAe,CAAf,GAAmB,GAAnB,GAAyBre,EAAEue,OAAF,EAAzB,GAAuC,GAAvC,GAA6Ct5B,KAAK2H,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAxD;AACA,UAAI44B,OAAOxlB,EAAEg1B,YAAF,GAAiBpoC,MAAjB,CAAwB,CAAxB,EAA2B,CAA3B,CAAX;AACA,UAAIqoC,WAAW7rC,OAAO,MAAP,GAAgBo8B,IAA/B;AACA,UAAIuS,cAAc,MAAMF,SAASnnC,IAAT,CAAconC,QAAtC;AACA,UAAID,SAASve,KAAb,EACEye,eAAe,SAASF,SAASve,KAAT,CAAeue,SAASve,KAAT,CAAej9B,MAAf,GAAwB,CAAvC,CAAxB;AACF,UAAI27C,MAAM;AAAA;AAAA,UAAM,OAAOD,WAAb;AAAA;AAA4B9C,gBAA5B;AAAA;AAAA,OAAV;;AAEA,aAAO+C,GAAP;AACD;;AAED;AACA;;;;0CACsBlkB,K,EAAOwhC,a,EAAe;AAC1C;AACA,UAAIA,cAAcj5D,MAAd,GAAuB,CAA3B,EAA8B;AAC5B;AACA;AACA,YAAM47C,aAAa59C,MAAM+lB,QAAN,CAAe,YAAf,CAAnB;AACA,YACE63B,WAAWC,YAAX,KAA4B9rB,OAAO+rB,MAAP,CAAcC,MAA1C,IACAH,WAAWC,YAAX,KAA4B9rB,OAAO+rB,MAAP,CAAcE,KAF5C,EAGE;AACAvkB,kBAAQA,MAAMrb,MAAN,CAAa,gBAAQ;AAC3B,gBAAMo9C,eAAeP,cAAcz+B,IAAd,CAAmB;AAAA,qBAAKjC,EAAEt7B,EAAF,KAASq7B,KAAKr7B,EAAnB;AAAA,aAAnB,CAArB;AACA,mBAAOu8D,YAAP,CAF2B,CAEN;AACtB,WAHO,CAAR;AAID,SARD,MAQO;AACL/hC,kBAAQA,MAAM9pB,GAAN,CAAU,gBAAQ;AACxB,gBAAM6rD,eAAeP,cAAcz+B,IAAd,CAAmB;AAAA,qBAAKjC,EAAEt7B,EAAF,KAASq7B,KAAKr7B,EAAnB;AAAA,aAAnB,CAArB;AACAq7B,iBAAK4jB,UAAL,GAAkB,CAACsd,YAAnB,CAFwB,CAES;AACjC,mBAAOlhC,IAAP;AACD,WAJO,CAAR;AAKD;AACF;AACD,WAAK18B,QAAL,CAAc,EAAE67B,YAAF,EAASwhC,4BAAT,EAAd;AACD;;AAED;;;;sCACkB;AAAA;;AAChB;AACA,UAAInjB,cAAc,KAAlB;AACA93C,YAAM0G,OAAN,CAAc,qBAAd,EAAqCJ,IAArC,CAA0C,gBAAQ;AAChD;AACAwxC,sBACEj6C,KAAK8iC,mBAAL,IACA9iC,KAAK+iC,YADL,IAEA/iC,KAAKgjC,qBAFL,IAGAhjC,KAAKijC,sBAJP,CAFgD,CAMjB;AAC/B,eAAKljC,QAAL,CAAc,EAAEk6C,wBAAF,EAAd;AACD,OARD;AASD;;AAED;AACA;;;;;qCAEiBj6C,I,EAAM;AACrB,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAY,oBAAZ;AACT,UAAInB,KAAK47B,KAAT,EAAgB;AACd,YAAMA,QAAQ,KAAK2kB,SAAL,CAAe,KAAK5gD,KAAL,CAAW++C,OAA1B,EAAmC1+C,KAAK47B,KAAxC,CAAd;AADc,YAENwhC,aAFM,GAEY,KAAKz9D,KAFjB,CAENy9D,aAFM;;AAGd,aAAKG,qBAAL,CAA2B3hC,KAA3B,EAAkCwhC,aAAlC;AACD;AACF;;AAED;;;;2CACuBp9D,I,EAAM;AAAA;;AAC3B,UAAIA,KAAK47B,KAAT,EAAgB;AACd,YAAMwhC,gBAAgBp9D,KAAK47B,KAA3B;AACA;AACA;AACA;AACA,YAAMmkB,aAAa59C,MAAM+lB,QAAN,CAAe,YAAf,CAAnB;AACA,YAAI63B,WAAWC,YAAX,KAA4B9rB,OAAO+rB,MAAP,CAAcO,IAA9C,EAAoD;AAClD,cAAM/4C,SAAStF,MAAM+lB,QAAN,CAAe,QAAf,CAAf;AACA,eAAKnoB,QAAL,CACE;AACE67B,mBAAOn0B,OAAOm0B,KADhB;AAEEwhC;AAFF,WADF,EAKE,YAAM;AACJ,gBAAMxhC,QAAQ,OAAK2kB,SAAL,CAAe,OAAK5gD,KAAL,CAAW++C,OAA1B,EAAmCj3C,OAAOm0B,KAA1C,CAAd;AACA,mBAAK2hC,qBAAL,CAA2B3hC,KAA3B,EAAkCwhC,aAAlC;AACD,WARH;AAUD,SAZD,MAYO;AACL,eAAKr9D,QAAL,CACE;AACE67B,mBAAOwhC,aADT;AAEEA;AAFF,WADF,EAKE,YAAM;AACJ,gBAAMxhC,QAAQ,OAAK2kB,SAAL,CAAe,OAAK5gD,KAAL,CAAW++C,OAA1B,EAAmC0e,aAAnC,CAAd;AACA,mBAAKG,qBAAL,CAA2B3hC,KAA3B,EAAkCwhC,aAAlC;AACD,WARH;AAUD;AACF;AACF;;AAED;;;;qCACiBp9D,I,EAAM;AACrB,WAAKD,QAAL,CAAc;AACZi5B,kBAAUh5B,KAAKg5B,QADH;AAEZkkC,2BAAmBl9D,KAAK64B,WAFZ;AAGZskC,0BAAkBn9D,KAAK44B;AAHX,OAAd;AAKD;;AAED;AACA;AACA;;;;;6BAESgD,K,EAAO;AAAA;;AACd,UAAIA,KAAJ,EAAW;AACT,eAAOA,MAAM6kB,IAAN,CAAW,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC1B,cAAI+8C,OAAOh9C,EAAEtC,EAAb;AAAA,cACEu/C,OAAOh9C,EAAEvC,EADX;AAEA,cAAIs/C,OAAOC,IAAX,EAAiB,OAAO,CAAC,CAAD,GAAKvxB,OAAO,OAAKqwB,aAAZ,CAAZ;AACjB,cAAIiB,OAAOC,IAAX,EAAiB,OAAO,IAAIvxB,OAAO,OAAKqwB,aAAZ,CAAX;AACjB,iBAAO,CAAP;AACD,SANM,CAAP;AAOD;AACD,aAAO,CAAP;AACD;AACD;AACA;;;;;oCAEgB7jB,K,EAAO;AAAA;;AACrB,UAAIA,KAAJ,EAAW;AACT,eAAOA,MAAM6kB,IAAN,CAAW,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC1B,cAAI+8C,OAAOh9C,EAAEy4D,OAAF,IAAa,CAAxB;AAAA,cACExb,OAAOh9C,EAAEw4D,OAAF,IAAa,CADtB;AAEA;AACA,cAAIzb,OAAOC,IAAX,EAAiB,OAAO,IAAIvxB,OAAO,OAAKqwB,aAAZ,CAAX;AACjB,cAAIiB,OAAOC,IAAX,EAAiB,OAAO,CAAC,CAAD,GAAKvxB,OAAO,OAAKqwB,aAAZ,CAAZ;AACjB,iBAAO,CAAP;AACD,SAPM,CAAP;AAQD;AACD,aAAO,CAAP;AACD;AACD;AACA;;;;;gCAEY7jB,K,EAAO;AAAA;;AACjB,UAAIA,KAAJ,EAAW;AACT,eAAOA,MAAM6kB,IAAN,CAAW,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC1B,cAAI+8C,OAAOh9C,EAAE4S,KAAF,GAAU5S,EAAE4S,KAAZ,GAAoB,EAA/B;AAAA,cACEqqC,OAAOh9C,EAAE2S,KAAF,GAAU3S,EAAE2S,KAAZ,GAAoB,EAD7B;AAEA,iBAAOoqC,KAAKE,aAAL,CAAmBD,IAAnB,IAA2B,OAAKlB,aAAvC;AACD,SAJM,CAAP;AAKD;AACD,aAAO,CAAP;AACD;AACD;AACA;;;;;oCAEgB7jB,K,EAAOl3B,G,EAAK;AAAA;;AAC1B,UAAIk3B,KAAJ,EAAW;AACT,eAAOA,MAAM6kB,IAAN,CAAW,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC1B,cAAI+8C,OAAOh9C,EAAEm9C,UAAF,CAAan8C,GAAb,CAAX;AAAA,cACEi8C,OAAOh9C,EAAEk9C,UAAF,CAAan8C,GAAb,CADT;AAEA,cAAIg8C,OAAOC,IAAX,EAAiB,OAAO,CAAC,CAAD,GAAKvxB,OAAO,OAAKqwB,aAAZ,CAAZ;AACjB,cAAIiB,OAAOC,IAAX,EAAiB,OAAO,IAAIvxB,OAAO,OAAKqwB,aAAZ,CAAX;AACjB,iBAAO,CAAP;AACD,SANM,CAAP;AAOD;AACD,aAAO,CAAP;AACD;AACD;AACA;;;;;8BAEU7jB,K,EAAOl3B,G,EAAKiO,I,EAAM;AAAA;;AAC1B,UAAIipB,KAAJ,EAAW;AACT,eAAOA,MAAM6kB,IAAN,CAAW,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC1B,cAAI+8C,aAAJ;AAAA,cAAUC,aAAV;AACA,cAAIhuC,SAASuhB,OAAO8sB,KAAP,CAAaC,MAA1B,EAAkC;AAChCP,mBAAOh9C,EAAEgB,GAAF,KAAU,EAAjB,CADgC,CACX;AACrB;AACA;AACAi8C,mBAAOh9C,EAAEe,GAAF,KAAU,EAAjB;AACD,WALD,MAKO,IAAIiO,SAASuhB,OAAO8sB,KAAP,CAAaE,MAA1B,EAAkC;AACvCR,mBAAOtxB,OAAO1rB,EAAEgB,GAAF,KAAU,EAAjB,CAAP,CADuC,CACV;AAC7Bi8C,mBAAOvxB,OAAOzrB,EAAEe,GAAF,KAAU,EAAjB,CAAP;AACD,WAHM,MAGA,IAAIiO,SAASuhB,OAAO8sB,KAAP,CAAa10C,KAA1B,EAAiC;AACtC,gBAAI,CAAC5I,EAAEgB,GAAF,CAAD,IAAW,CAACf,EAAEe,GAAF,CAAhB,EAAwB,OAAO,CAAP;AACxBg8C,mBAAOp0C,gBAAMgF,KAAN,CAAY5N,EAAEgB,GAAF,EAAOM,KAAnB,CAAP,CAFsC,CAEJ;AAClC27C,mBAAOr0C,gBAAMgF,KAAN,CAAY3N,EAAEe,GAAF,EAAOM,KAAnB,CAAP;AACA,gBAAI07C,KAAKv8C,MAAL,GAAc,CAAd,IAAmBw8C,KAAKx8C,MAAL,GAAc,CAArC,EAAwC,OAAO,EAAP;AACxC,gBAAMg9C,KAAKT,KAAK,CAAL,EAAQ/uC,KAAR,CAAcD,WAAzB;AACA,gBAAMuwB,KAAK0e,KAAK,CAAL,EAAQhvC,KAAR,CAAcD,WAAzB;AACA,gBAAI0vC,cAAJ;AACA,gBAAID,GAAGp0C,IAAH,KAAYk1B,GAAGl1B,IAAnB,EAAyB;AACvBq0C,sBAAQD,GAAGp0C,IAAH,GAAUk1B,GAAGl1B,IAArB;AACD,aAFD,MAEO,IAAIo0C,GAAG/vC,KAAH,KAAa6wB,GAAG7wB,KAApB,EAA2B;AAChCgwC,sBAAQD,GAAG/vC,KAAH,GAAW6wB,GAAG7wB,KAAtB;AACD,aAFM,MAEA,IAAI+vC,GAAGtuC,GAAH,KAAWovB,GAAGpvB,GAAlB,EAAuB;AAC5BuuC,sBAAQD,GAAGtuC,GAAH,GAASovB,GAAGpvB,GAApB;AACD,aAFM,MAEA,IAAIsuC,GAAGE,IAAH,KAAYpf,GAAGof,IAAnB,EAAyB;AAC9BD,sBAAQD,GAAGE,IAAH,GAAUpf,GAAGof,IAArB;AACD,aAFM,MAEA,IAAIF,GAAGG,MAAH,KAAcrf,GAAGqf,MAArB,EAA6B;AAClCF,sBAAQD,GAAGG,MAAH,GAAYrf,GAAGqf,MAAvB;AACD,aAFM,MAEA,IAAIH,GAAGI,MAAH,KAActf,GAAGsf,MAArB,EAA6B;AAClCH,sBAAQD,GAAGI,MAAH,GAAYtf,GAAGsf,MAAvB;AACD;AACD,mBAAOH,QAAQhyB,OAAO,OAAKqwB,aAAZ,CAAf;AACD,WAtBM,MAsBA;AACL;AACAiB,mBAAOh9C,EAAEgB,GAAF,CAAP;AACAi8C,mBAAOh9C,EAAEe,GAAF,CAAP;AACD;AACD,cAAIg8C,OAAOC,IAAX,EAAiB,OAAO,CAAC,CAAD,GAAKvxB,OAAO,OAAKqwB,aAAZ,CAAZ;AACjB,cAAIiB,OAAOC,IAAX,EAAiB,OAAO,IAAIvxB,OAAO,OAAKqwB,aAAZ,CAAX;AACjB,iBAAO,CAAP;AACD,SAxCM,CAAP;AAyCD;AACD,aAAO,CAAP;AACD;AACD;AACA;;;;;kCAEc7jB,K,EAAO;AAAA;;AACnB,UAAIA,KAAJ,EAAW;AACT,eAAOA,MAAM6kB,IAAN,CAAW,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC1B,cAAI+8C,OAAOh9C,EAAE8U,IAAF,CAAOonC,QAAP,GAAkB,CAAlB,GAAsBl8C,EAAE8U,IAAF,CAAO8gB,OAA7B,GAAuC51B,EAAE8U,IAAF,CAAO+gB,OAAzD;AAAA,cACEonB,OAAOh9C,EAAE6U,IAAF,CAAOonC,QAAP,GAAkB,CAAlB,GAAsBj8C,EAAE6U,IAAF,CAAO8gB,OAA7B,GAAuC31B,EAAE6U,IAAF,CAAO+gB,OADvD;AAEA,cAAImnB,OAAOC,IAAX,EAAiB,OAAO,CAAC,CAAD,GAAKvxB,OAAO,QAAKqwB,aAAZ,CAAZ;AACjB,cAAIiB,OAAOC,IAAX,EAAiB,OAAO,IAAIvxB,OAAO,QAAKqwB,aAAZ,CAAX;AACjB,iBAAO,CAAP;AACD,SANM,CAAP;AAOD;AACD,aAAO77C,SAAP;AACD;AACD;AACA;;;;;kCAEcg4B,K,EAAO;AAAA;;AACnB;AACA,UAAMne,MAAMsuB,OAAO6E,gBAAP,EAAZ;AACA,UAAMiwB,eAAejlC,MAAM9pB,GAAN,CAAU,aAAK;AAClC,YAAMw/B,OAAOvF,OAAOgF,WAAP,CAAmBrU,EAAEt7B,EAArB,CAAb;AACAs7B,UAAE+kB,YAAF,GAAiB1V,OAAO6I,2BAAP,CAAmCtD,IAAnC,EAAyC7zB,GAAzC,CAAjB;AACA,eAAOif,CAAP;AACD,OAJoB,CAArB;AAKA,UAAImkC,YAAJ,EAAkB;AAChB,eAAOA,aAAapgB,IAAb,CAAkB,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AACjC,cAAI+8C,OAAOh9C,EAAE+9C,YAAF,IAAkB,CAA7B;AAAA,cACEd,OAAOh9C,EAAE89C,YAAF,IAAkB,CAD3B;AAEA;AACA,cAAIf,OAAOC,IAAX,EAAiB,OAAO,IAAIvxB,OAAO,QAAKqwB,aAAZ,CAAX;AACjB,cAAIiB,OAAOC,IAAX,EAAiB,OAAO,CAAC,CAAD,GAAKvxB,OAAO,QAAKqwB,aAAZ,CAAZ;AACjB,iBAAO,CAAP;AACD,SAPM,CAAP;AAQD;AACD,aAAO,CAAP;AACD;AACD;AACA;;;;;;;gCAIqD;AAAA,UAA3Cf,OAA2C,uEAAjC,KAAK/+C,KAAL,CAAW++C,OAAsB;AAAA,UAAb9iB,KAAa;AAAA,UAANjpB,IAAM;;AACnD,cAAQ+rC,OAAR;AACE,aAAK,IAAL;AACE,iBAAO,KAAKgD,QAAL,CAAc9lB,KAAd,CAAP;AACF,aAAK,WAAL;AACE,iBAAO,KAAKklC,eAAL,CAAqBllC,KAArB,CAAP;AACF;AACA;AACA,aAAK,OAAL;AACE,iBAAO,KAAKmlC,WAAL,CAAiBnlC,KAAjB,CAAP;AACF,aAAK,YAAL;AACE,iBAAO,KAAKimB,aAAL,CAAmBjmB,KAAnB,CAAP;AACF;AACE,iBAAO,KAAKkmB,SAAL,CAAelmB,KAAf,EAAsB8iB,OAAtB,EAA+B/rC,IAA/B,CAAP;AAZJ;AAcD;;;+BAEUjO,G,EAAK;AACd,UAAIA,QAAQ,KAAK/E,KAAL,CAAW++C,OAAvB,EACE,OAAO,EAAP,CADF,CACa;AADb,WAEK,OAAO,KAAKe,aAAL,KAAuB,CAAvB,GAA2B,GAA3B,GAAiC,GAAxC,CAHS,CAGoC;AACnD;;AAED;AACA;AACA;;;;;sCAEkBv9C,K,EAAO8uC,M,EAAQ;AAC/B9uC,YAAM4wB,cAAN;AACA5wB,YAAM6/C,eAAN;AACA,UAAI74C,SAAS8D,SAASgkC,MAAT,CAAb;AACA7uC,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAACH,MAAD,CAAX,EAAjC;AACD;AACD;;;;;sCAEkBhH,K,EAAO8uC,M,EAAQ;AAC/B9uC,YAAM4wB,cAAN;AACA5wB,YAAM6/C,eAAN;AACA,UAAI74C,SAAS8D,SAASgkC,MAAT,CAAb;AACA7uC,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAACH,MAAD,CAAX,EAAjC,EAAwDT,IAAxD,CAA6D,YAAM;AACjE,YAAIpH,GAAJ,EAASH,QAAQiX,KAAR,CAAc,8BAAd,EAA8CjP,MAA9C;AACT/G,cAAME,SAAN,CAAgB,WAAhB,EAA6B,EAAE6G,QAAQA,MAAV,EAA7B;AACD,OAHD;AAID;AACD;AACA;;;;;qCAEiBhH,K,EAAO;AACtB,WAAKnC,QAAL,CAAc;AACZm6C,oBAAY,CAAC,KAAKv6C,KAAL,CAAWu6C;AADZ,OAAd;AAGD;AACD;AACA;;;;;mCAEelJ,M,EAAQ;AACrB7uC,YAAME,SAAN,CAAgB,mBAAhB,EAAqC,EAAE2uC,cAAF,EAArC;AACD;AACD;AACA;;;;;+BAEWtsC,G,EAAKiO,I,EAAM;AACpB,UAAIjO,QAAQ,KAAK/E,KAAL,CAAW++C,OAAvB,EAAgC,KAAKe,aAAL,GAAqB,CAAC,CAAD,GAAK,KAAKA,aAA/B;AAChC;AADA,WAEK,KAAKA,aAAL,GAAqB,CAArB;;AAEL,UAAM7jB,QAAQ,KAAK2kB,SAAL,CAAe77C,GAAf,EAAoB,KAAK/E,KAAL,CAAWi8B,KAA/B,EAAsCjpB,IAAtC,CAAd;AACA,WAAK5S,QAAL,CAAc,EAAE2+C,SAASh6C,GAAX,EAAgBk3B,YAAhB,EAAd;AACAx8B,aAAO6C,GAAP,CAAW,iBAAX,EAA8ByC,GAA9B,EAAmC,KAAK+6C,aAAxC;AACD;AACD;AACA;;;;;+BAEWr+C,E,EAAIc,K,EAAO;AACpBA,YAAM4wB,cAAN;;AAEA;AACA;AACA;AACA;AACA3wB,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAAC2D,SAAS5L,EAAT,CAAD,CAAX,EAAjC;AACD;;AAED;AACA;AACA;;;;;AAKA;AACA;;;;;6BAES;AAAA;;AACP,UAAI,KAAKzB,KAAL,CAAWi8B,KAAX,KAAqBh4B,SAAzB,EAAoC,OAAO,EAAP;AAD7B,mBAUH,KAAKjE,KAVF;AAAA,UAGLq5B,QAHK,UAGLA,QAHK;AAAA,UAILgkC,cAJK,UAILA,cAJK;AAAA,UAKLC,aALK,UAKLA,aALK;AAAA,UAMLC,iBANK,UAMLA,iBANK;AAAA,UAOLC,gBAPK,UAOLA,gBAPK;AAAA,UAQLljB,WARK,UAQLA,WARK;AAAA,UASLzb,QATK,UASLA,QATK;AAAA,UAWC0jB,WAXD,GAWiB,KAAK1iD,KAXtB,CAWC0iD,WAXD;;AAYP,UAAMC,6lBAAN;AAeA,UAAMtB,aAAav2C,OAAOuH,IAAP,CAAYmnB,QAAZ,EAAsBzY,MAAtB,CACjB;AAAA,eAAK,CAACpU,oBAAoBuG,QAApB,CAA6BX,CAA7B,CAAN;AAAA,OADiB,CAAnB;AAGA,aACE;AAAA;AAAA;AACE,wBAAc;AAAA,mBAAM,QAAKyrD,cAAL,CAAoB55D,SAApB,CAAN;AAAA,WADhB;AAEE,iBAAO;AACLkqC,sBAAU,MADL;AAELhc,sBAAU,UAFL;AAGLpxB,qBAAS,OAHJ;AAIL+tC,kBAAM,KAJD;AAKL1c,mBAAO,MALF;AAMLlxB,oBAAQqhD,WANH;AAOLphD,6BAAiB;AAPZ;AAFT;AAYE;AAAA;AAAA;AAAQqhD;AAAR,SAZF;AAaE;AAAA;AAAA;AACE,oBAAQ,CAAC,KAAKxiD,KAAL,CAAWu6C;AACpB;AACA;AACA;AAJF,cAKE,WAAU;AALZ;AAOE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA,kBAAI,OAAM,IAAV;AACE;AAAA;AAAA,oBAAK,OAAO,EAAE7oB,OAAO,SAAT,EAAZ;AAAA;AAAA;AADF,eADF;AAIE;AAAA;AAAA,kBAAI,OAAM,IAAV,EAAe,QAAQ,CAAChwB,GAAxB;AACE;AAAC,wBAAD;AAAA;AACE,0BAAK,IADP;AAEE,6BAAS;AAAA,6BAAM,QAAKi+C,UAAL,CAAgB,IAAhB,EAAsBtmB,SAAS53B,EAAT,CAAYuR,IAAlC,CAAN;AAAA;AAFX;AAAA;AAAA;AADF,eAJF;AAYE;AAAA;AAAA,kBAAI,OAAM,IAAV;AACE;AAAC,wBAAD;AAAA;AACE,0BAAK,IADP;AAEE,6BAAS;AAAA,6BAAM,QAAK2sC,UAAL,CAAgB,WAAhB,EAA6BtmB,SAASmjC,OAAT,CAAiBxpD,IAA9C,CAAN;AAAA;AAFX;AAIGqmB,2BAASmjC,OAAT,CAAiBjjC,YAJpB;AAAA;AAImC,uBAAKqmB,UAAL,CAAgB,WAAhB;AAJnC;AADF,eAZF;AAoBE;AAAA;AAAA,kBAAI,OAAM,KAAV;AACE;AAAC,wBAAD;AAAA;AACE,0BAAK,IADP;AAEE,6BAAS;AAAA,6BAAM,QAAKD,UAAL,CAAgB,OAAhB,EAAyBtmB,SAAS1iB,KAAT,CAAe3D,IAAxC,CAAN;AAAA;AAFX;AAIGqmB,2BAAS1iB,KAAT,CAAe4iB,YAJlB;AAAA;AAIiC,uBAAKqmB,UAAL,CAAgB,OAAhB;AAJjC;AADF,eApBF;AA4BGsB,yBAAW/uC,GAAX,CAAe;AAAA,uBACd;AAAA;AAAA,oBAAI,QAAQknB,SAASt1B,CAAT,EAAYu0B,MAAxB,EAAgC,KAAKv0B,CAArC;AACE;AAAC,0BAAD;AAAA;AACE,4BAAK,IADP;AAEE,+BAAS;AAAA,+BAAM,QAAK47C,UAAL,CAAgB57C,CAAhB,EAAmBs1B,SAASt1B,CAAT,EAAYiP,IAA/B,CAAN;AAAA;AAFX;AAIGqmB,6BAASt1B,CAAT,EAAYw1B,YAJf;AAAA;AAI8B,4BAAKqmB,UAAL,CAAgB77C,CAAhB;AAJ9B;AADF,iBADc;AAAA,eAAf,CA5BH;AAsCE;AAAA;AAAA,kBAAI,OAAO,EAAEkuB,QAAQ,CAAV,EAAX;AACE;AAAA;AAAA;AACE,+BAAU,qCADZ;AAEE,6BAAS;AAAA,6BAAM,QAAK0tB,UAAL,CAAgB,YAAhB,CAAN;AAAA;AAFX;AAIGvT,yBAAOwD,WAJV;AAKG,uBAAKgQ,UAAL,CAAgB,YAAhB;AALH;AADF;AAtCF;AADF,WAPF;AAmEE;AAAA;AAAA,cAAO,OAAO,EAAE8C,WAAWH,WAAb,EAA0BjxB,UAAU,MAApC,EAAd;AACG,iBAAKtxB,KAAL,CAAWi8B,KAAX,CAAiB9pB,GAAjB,CAAqB,UAAC2qB,IAAD,EAAO33B,CAAP;AAAA,qBACpB;AAAA;AAAA;AACE,uBAAKA,CADP;AAEE,yBAAO;AACLusB,2BAAOoL,KAAK4jB,UAAL,GAAkB,KAAlB,GAA0B,OAD5B;AAELiC,6BAAS7lB,KAAK8lB,oBAFT;AAGLzxB,4BACE,CAACmsC,kBAAkBxgC,KAAKr7B,EAAvB,kBACgB+7D,gBADhB,GAEG,KAFJ,MAGCH,mBAAmBvgC,KAAKr7B,EAAxB,kBACgB87D,iBADhB,GAEG,MALJ;AAJG,mBAFT;AAaE,+BAAa;AAAA,2BAAM,QAAKM,cAAL,CAAoB/gC,KAAKr7B,EAAzB,CAAN;AAAA;AAbf;AAeE;AAAA;AAAA;AACG,mBAAC64C,WAAD,IACC;AAAA;AAAA;AACE,iCAAU,eADZ;AAEE,+BAAS;AAAA,+BAAS,QAAK+E,iBAAL,CAAuB98C,KAAvB,EAA8Bu6B,KAAKr7B,EAAnC,CAAT;AAAA;AAFX;AAIGuK;AAJH,mBAFJ;AASG,mBAACsuC,WAAD,IAAgB,CAACzb,QAAjB,IACC;AAAA;AAAA;AACE,iCAAU,eADZ;AAEE,+BAAS;AAAA,+BAAS,QAAKyc,iBAAL,CAAuB/4C,KAAvB,EAA8Bu6B,KAAKr7B,EAAnC,CAAT;AAAA;AAFX;AAIGsK;AAJH;AAVJ,iBAfF;AAiCE;AAAA;AAAA,oBAAI,QAAQ,CAACrK,GAAb;AAAmBo7B,uBAAKr7B;AAAxB,iBAjCF;AAkCE;AAAA;AAAA;AAAKq7B,uBAAK0/B;AAAV,iBAlCF;AAmCE;AAAA;AAAA;AACG,mBAACliB,WAAD,GACC;AAAA;AAAA,sBAAG,MAAK,GAAR,EAAY,SAAS;AAAA,+BAAK,QAAKd,UAAL,CAAgB1c,KAAKr7B,EAArB,EAAyB4B,CAAzB,CAAL;AAAA,uBAArB;AACGy5B,yBAAKnmB;AADR,mBADD,GAKCmmB,KAAKnmB;AANT,iBAnCF;AA4CGuqC,2BAAW/uC,GAAX,CAAe;AAAA,yBACd;AAAA;AAAA,sBAAI,QAAQknB,SAASt1B,CAAT,EAAYu0B,MAAxB,EAAgC,UAAQwE,KAAKr7B,EAAb,GAAkBsC,CAAlD;AACGs1B,6BAASt1B,CAAT,EAAYiP,IAAZ,KAAqB,UAArB,GACGk8B,KAAK4T,WAAL,CAAiBhmB,KAAK/4B,CAAL,CAAjB,CADH,GAEGs1B,SAASt1B,CAAT,EAAYiP,IAAZ,KAAqB,OAArB,GACC8pB,KAAK/4B,CAAL,KAAW+4B,KAAK/4B,CAAL,EAAQg/C,mBAApB,IAA4C,EAD5C,GAEAjmB,KAAK/4B,CAAL;AALN,mBADc;AAAA,iBAAf,CA5CH;AAqDE;AAAA;AAAA;AACE,sCAAC,sBAAD;AACE,0BAAMqoC,OAAOgF,WAAP,CAAmBtU,KAAKr7B,EAAxB,CADR;AAEE,2BAAO;AAFT;AADF;AArDF,eADoB;AAAA,aAArB;AADH;AAnEF;AAbF,OADF;AA+JD;;;;EAnqBqBhC,OAAO4B,S,GAoqB7B;;AAEF;AACA;;;AACA5C,OAAOC,OAAP,GAAiBuiE,SAAjB;;;;;;;;;;;;;;AC7tBA;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAMxhE,SAASZ,QAAQ,eAAR,CAAf;AACA,IAAMD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQinD,U,GAAiEv1B,U,CAAjEu1B,U;IAAYC,O,GAAqDx1B,U,CAArDw1B,O;IAAS7mD,G,GAA4CqxB,U,CAA5CrxB,G;IAAKC,O,GAAuCoxB,U,CAAvCpxB,O;IAASC,O,GAA8BmxB,U,CAA9BnxB,O;IAASwxB,G,GAAqBL,U,CAArBK,G;IAAKD,G,GAAgBJ,U,CAAhBI,G;IAAKD,M,GAAWH,U,CAAXG,M;;AAC9D,IAAMs1B,aAAannD,QAAQ,YAAR,CAAnB;AACA,IAAMokD,OAAOpkD,QAAQ,QAAR,CAAb;AACA,IAAMoiE,YAAYpiE,QAAQ,aAAR,CAAlB;AACA,IAAM8/C,YAAY9/C,QAAQ,aAAR,CAAlB;;AAEA;AACA;AACA,IAAI6C,MAAM,IAAV;AACA;AACA,IAAIc,QAAQ,IAAZ;;AAEA;AACA;AACA;;IACM6+D,iB;;;AACJ,6BAAYxhE,KAAZ,EAAmB;AAAA;;AAAA,sIACXA,KADW;;AAGjB,UAAKG,KAAL,GAAa;AACXq5B,gBAAU,MAAK9Q,QAAL,CAAc,UAAd,EAA0B8Q;AADzB,KAAb;;AAIA,UAAKioC,UAAL,GAAkB,MAAKA,UAAL,CAAgBvhE,IAAhB,OAAlB;AACA,UAAKwhE,YAAL,GAAoB,MAAKA,YAAL,CAAkBxhE,IAAlB,OAApB;;AAEA;AACAyC,YAAQ/C,OAAOgD,WAAP,OAAR;AAXiB;AAYlB,G,CAAC;;AAEF;AACA;AACA;;;;;;+BAEWF,K,EAAO;AAChBA,YAAM4wB,cAAN;AACA,UAAI5pB,SAAS8D,SAAS9K,MAAMiI,MAAN,CAAanF,KAAtB,CAAb;AACA7C,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAACH,MAAD,CAAX,EAAjC;AACD;;;mCAEc;AACbhH,YAAM4wB,cAAN;AACD;;AAED;AACA;AACA;;;;;wCAEoB;AAClB,UAAIg1B,WAAWvmD,SAASqS,cAAT,CAAwB,UAAxB,CAAf;AACA,WAAK7T,QAAL,CAAc;AACZumD,qBAAawB,SAASJ;AADV,OAAd;AAGD;AACD;AACA;;;;;6BAES;AAAA,UACD1uB,QADC,GACY,KAAKr5B,KADjB,CACDq5B,QADC;;AAEP,UAAMmoC,QAAQ,SAARA,KAAQ,QAAS,CAAE,CAAzB;AACA,UAAMC,YAAY,SAAZA,SAAY,QAAS,CAAE,CAA7B;AACA,aACE;AAAC,aAAD;AAAA;AACE;AAAC,mBAAD;AAAA;AACG;AADH;AADF,OADF;AAOD;;;;EArD6BhiE,OAAO4B,S,GAsDrC;;AAEF;AACA;;;AACA5C,OAAOC,OAAP,GAAiB2iE,iBAAjB;;;;;;;;;;;;;;AClGA;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAMziE,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQ8xB,G,GAA0BJ,U,CAA1BI,G;IAAKG,S,GAAqBP,U,CAArBO,S;IAAWG,K,GAAUV,U,CAAVU,K;;AACxB,IAAMymB,eAAe74C,QAAQ,gBAAR,CAArB;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAI6C,MAAM,KAAV;AACA;AACA,IAAMq9D,iBAAiB,QAAvB,C,CAAiC;;AAEjC;AACA;AACA;;IACM2C,M;;;AACJ,kBAAY7hE,KAAZ,EAAmB;AAAA;;AAAA,gHACXA,KADW;;AAEjB,UAAKG,KAAL,GAAa;AACXi5C,oBAAc;AADH,KAAb;AAGA,UAAK7L,OAAL,CAAa,YAAM;AACjB;AACA;AACA,UAAI1rC,GAAJ,EACEH,QAAQC,GAAR,CACE,mDADF,EAEEu9D,cAFF;AAIF,YAAK/lB,OAAL,CAAa,qBAAb,EAAoC;AAClCv3C,YAAIs9D,cAD8B;AAElC15D,eAAO,MAAKrF,KAAL,CAAWi5C;AAFgB,OAApC;AAID,KAZD;AALiB;AAkBlB,G,CAAC;;AAEF;AACA;;AAEA;AACA;AACA;;;;;;yCAEqB,CAAE;AACvB;;;;;6BAES;AACP,aACE;AAAC,iBAAD;AAAA,UAAW,SAAX;AACE;AAAC,aAAD;AAAA;AACE,8BAAC,YAAD;AACE,wBAAY8lB,cADd;AAEE,2BAAe,KAAK/+D,KAAL,CAAWi5C,YAF5B;AAGE,0BAAc;AAHhB,YADF;AAME;AAAC,iBAAD;AAAA,cAAO,WAAU,kBAAjB;AAAA;AAAA;AANF;AADF,OADF;AAYD;;;;EA5CkBx5C,OAAO4B,S,GA6C1B;;AAEF;AACA;;;AACA5C,OAAOC,OAAP,GAAiBgjE,MAAjB;;;;;;;;ACrDA;;;;;;;;AAjCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,IAAM9iE,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQ6xB,M,GAAWH,U,CAAXG,M;;AAER,IAAMjxB,SAASZ,QAAQ,eAAR,CAAf;;eACuBA,QAAQ,kBAAR,C;IAAfqN,U,YAAAA,U;;AACR,IAAMy1D,eAAe9iE,QAAQ,uBAAR,CAArB;AACA,IAAMi5B,SAASj5B,QAAQ,oBAAR,CAAf;AACA,IAAMowC,YAAYpwC,QAAQ,kBAAR,CAAlB;;AAEA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA;AACA,IAAIc,QAAQ,IAAZ;AACA,IAAIo/D,eAAJ,C,CAAY;AACZ,IAAIC,oBAAJ;;AAEA;AACA;;IACMlZ,Q;;;AACJ,oBAAY9oD,KAAZ,EAAmB;AAAA;;AAAA,oHACXA,KADW;;AAEjB,UAAKG,KAAL,GAAa;AACXs6C,mBAAa,KADF;AAEXxF,qBAAe,KAFJ;AAGXgtB,iBAAW79D,SAHA,EAGW;AACtB;AACA;AACA;AACA89D,gBAAU99D,SAPC;AAQX+9D,sBAAgB,EARL;AASXC,sBAAgBh+D,SATL;AAUXi+D,oBAAc;AAVH,KAAb;AAYA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBpiE,IAAhB,OAAlB;AACA,UAAK+6C,eAAL,GAAuB,MAAKA,eAAL,CAAqB/6C,IAArB,OAAvB;AACA,UAAKqiE,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BriE,IAA5B,OAA9B;AACA,UAAKu/D,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBv/D,IAAvB,OAAzB;AACA,UAAKsiE,aAAL,GAAqB,MAAKA,aAAL,CAAmBtiE,IAAnB,OAArB;AACA,UAAKuiE,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BviE,IAA3B,OAA7B;AACA,UAAKwiE,eAAL,GAAuB,MAAKA,eAAL,CAAqBxiE,IAArB,OAAvB;AACA,UAAKyiE,eAAL,GAAuB,MAAKA,eAAL,CAAqBziE,IAArB,OAAvB;AACA,UAAK0iE,gBAAL,GAAwB,MAAKA,gBAAL,CAAsB1iE,IAAtB,OAAxB;AACA,UAAK2iE,kBAAL,GAA0B,MAAKA,kBAAL,CAAwB3iE,IAAxB,OAA1B;AACA,UAAK4iE,aAAL,GAAqB,MAAKA,aAAL,CAAmB5iE,IAAnB,OAArB;AACA,UAAK6iE,YAAL,GAAoB,MAAKA,YAAL,CAAkB7iE,IAAlB,OAApB;;AAEAyC,YAAQ/C,OAAOgD,WAAP,OAAR;AACAD,UAAMrC,aAAN,CAAoB,yBAApB,EAA+C,MAAK26C,eAApD;AA5BiB;AA6BlB,G,CAAC;;;;wCAEkB;AAAA;;AAClB,WAAKA,eAAL;AACA7L,gBAAU3jC,uBAAV,GAAoCxC,IAApC,CAAyC,kBAAU;AACjD,eAAK1I,QAAL,CAAc,EAAE8hE,cAAc18D,OAAOk9B,QAAvB,EAAd;AACD,OAFD;AAGD;;;2CAEsB;AACrB,UAAIk/B,MAAJ,EAAYA,OAAOiB,OAAP;AACZ,WAAKvD,iBAAL;AACA98D,YAAMqc,eAAN,CAAsB,yBAAtB,EAAiD,KAAKi8B,eAAtD;AACD;;AAED;AACA;AACA;;;;;;;;;;;+BAQWpF,K,EAAOC,E,EAAI;AAAA;;AACpBnzC,YAAM0G,OAAN,CAAc,mBAAd,EAAmC,EAAE06B,QAAQ13B,WAAWC,QAArB,EAAnC,EAAoErD,IAApE,CAAyE,gBAAQ;AAC/E,YAAM44B,KAAK9/B,SAASqS,cAAT,CAAwB,QAAxB,CAAX;AACA,YAAM6uD,SAAUptB,SAASA,MAAMotB,MAAhB,IAA2BhrC,OAAO3rB,QAAjD;AACA,YAAM42D,WAAWrtB,SAASA,MAAMqtB,QAAhC;;AAEA,YAAMvwD,UAAU;AACdwwD,iBAAO,YADO,EACO;AACrBC,6BAAmB,IAFL,EAEW;AACzBC,8BAAoB,KAHN,EAGa;AAC3BC,yBAAe,OAJD,EAIU;AACxBC,oCAA0B,IALZ,EAKkB;AAChCN;AACA;AAPc,SAAhB;AASA,YAAIC,QAAJ,EAAcvwD,QAAQuwD,QAAR,GAAmBA,QAAnB,CAdiE,CAcpC;AAC3C,YAAInB,MAAJ,EAAYA,OAAOiB,OAAP,GAfmE,CAejD;AAC9BjB,iBAAS,IAAIyB,sBAAJ,CAAe3hC,EAAf,EAAmBlvB,OAAnB,CAAT;;AAEA,eAAKpS,QAAL,CAAc,EAAE00C,eAAe,IAAjB,EAAd;;AAEA,YAAIa,OAAO1xC,SAAP,IAAoB,OAAO0xC,EAAP,KAAc,UAAtC,EAAkD;AAClDA;AACD,OAtBD;AAuBD;;AAED;AACA;;;;sCACkB;AAAA;;AAChB;AACA,UAAI2E,cAAc,KAAlB;AACA93C,YAAM0G,OAAN,CAAc,qBAAd,EAAqCJ,IAArC,CAA0C,gBAAQ;AAChD;AACAwxC,sBACEj6C,KAAK8iC,mBAAL,IAA4B9iC,KAAK+iC,YAAjC,IAAiD/iC,KAAKgjC,qBADxD;AAEA,eAAKjjC,QAAL,CAAc,EAAEk6C,wBAAF,EAAd;AACD,OALD;AAMD;;AAED;AACA;AACA;;;;6CACyB;AACvB,UAAMgpB,kBAAkB1hE,SAAS2hE,sBAAT,CAAgC,eAAhC,CAAxB;AACA;AACA;AACA;AAJuB;AAAA;AAAA;;AAAA;AAKvB,6BAAgBD,eAAhB;AAAA,cAAW7vD,CAAX;AAAiC;AAAA,mBAAKA,EAAE+vD,YAAF,CAAe,UAAf,EAA2B,UAA3B,CAAL;AAAA;AAAjC;AALuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMxB;;;wCAEmB;AAClBhhE,YAAM0G,OAAN,CAAc,uBAAd,EAAuC,EAAE06B,QAAQ13B,WAAWC,QAArB,EAAvC;AACD;;;oCAEe;AACd,WAAK/L,QAAL,CAAc,EAAE0hE,WAAW,MAAb,EAAqBhtB,eAAe,IAApC,EAAd;AACA,WAAKqtB,UAAL,GAFc,CAEK;AACpB;;;0CAEqB9+D,C,EAAG;AAAA;;AACvBb,YAAME,SAAN,CAAgB,uBAAhB,EAAyC;AAAzC,OACGoG,IADH,CACQ,kBAAU;AACd,eAAK1I,QAAL,CAAc,EAAE0hE,WAAW,MAAb,EAAqBhtB,eAAe,IAApC,EAAd;AACA,eAAKqtB,UAAL,CAAgB,EAAEY,UAAUv9D,OAAO6F,QAAnB,EAAhB;AACD,OAJH;AAKD;;;sCAEiB;AAAA;;AAChB7I,YAAME,SAAN,CAAgB,uBAAhB,EAAyC;AAAzC,OACGoG,IADH,CACQ,kBAAU;AACd,YAAM26D,wBAAwB3rC,OAAO4rC,eAArC;AACA;AACA,YAAMC,uBACJ7rC,OAAO8rC,mBAAP,CAA2BH,qBAA3B,CADF;AAEA,YAAMV,WAAW,EAAEvwD,SAAShN,OAAO6F,QAAP,CAAgBguB,QAAhB,CAAyBrmB,IAAzB,CAA8BR,OAAzC,EAAjB;AACA,eAAKpS,QAAL,CAAc,EAAE0hE,WAAW,iBAAb,EAAgChtB,eAAe,IAA/C,EAAd;AACA,eAAKqtB,UAAL,CACE;AACEW,kBAAQa,oBADV;AAEEZ;AAFF,SADF,EAKE,YAAM;AACJ,iBAAKX,sBAAL;AACA;AACA;AACAR,iBAAO54B,EAAP,CAAU,QAAV,EAAoB,kBAAU;AAC5B,mBAAKo5B,sBAAL;AACD,WAFD;AAGD,SAZH;AAcD,OAtBH;AAuBD;;;sCAEiB;AAAA;;AAChB5/D,YAAME,SAAN,CAAgB,uBAAhB,EAAyC;AAAzC,OACGoG,IADH,CACQ,kBAAU;AACd,YAAM+6D,wBAAwB/rC,OAAOgsC,eAArC;AACA;AACA,YAAMC,uBACJjsC,OAAO8rC,mBAAP,CAA2BC,qBAA3B,CADF;AAEA,YAAMd,WAAW,EAAEvwD,SAAShN,OAAO6F,QAAP,CAAgBwuB,QAAhB,CAAyB7mB,IAAzB,CAA8BR,OAAzC,EAAjB;AACA,eAAKpS,QAAL,CAAc,EAAE0hE,WAAW,iBAAb,EAAgChtB,eAAe,IAA/C,EAAd;AACA,eAAKqtB,UAAL,CACE;AACEW,kBAAQiB,oBADV;AAEEhB;AAFF,SADF,EAKE,YAAM;AACJ,iBAAKX,sBAAL;AACA;AACA;AACAR,iBAAO54B,EAAP,CAAU,QAAV,EAAoB,kBAAU;AAC5B,mBAAKo5B,sBAAL;AACD,WAFD;AAGD,SAZH;AAcD,OAtBH;AAuBD;;;qCAEgB/+D,C,EAAG;AAAA;;AAClB;AACA,UAAM0+D,WAAW1+D,EAAEmH,MAAF,CAASw6C,KAAT,CAAe,CAAf,CAAjB;AACA2c,mBAAaqC,gBAAb,CAA8B,EAAEjC,kBAAF,EAA9B,EAA4Cj5D,IAA5C,CAAiD,kBAAU;AACzD,YAAItD,OAAO+C,OAAX,EAAoB;AAClB,iBAAKnI,QAAL,CAAc;AACZ0hE,uBAAW;AADC,WAAd;AAGA,iBAAKK,UAAL,CAAgB;AACdW,oBAAQhrC,OAAO3rB,QADD;AAEd42D,sBAAUv9D,OAAOy+D;AAFH,WAAhB;AAID,SARD,MAQO;AACL,cAAMC,WAAW1+D,OAAOgT,KAAxB;AACA,iBAAKpY,QAAL,CAAc;AACZ2hE,sBAAU99D,SADE;AAEZ+9D,4BAAgB,0BAFJ;AAGZC,4BAAgBiC;AAHJ,WAAd;AAKD;AACF,OAjBD;AAkBD;;;yCAEoB;AACnBvC,mBAAawC,gBAAb;AACD;;;oCAEe;AAAA;;AACd,UAAMF,eAAerC,OAAOwC,QAAP,EAArB,CADc,CAC0B;AAD1B,UAENtC,SAFM,GAEQ,KAAK9hE,KAFb,CAEN8hE,SAFM;;AAGd,UAAMz2D,WAAWs2D,aAAa0C,cAAb,CAA4BJ,YAA5B,EAA0CnC,SAA1C,CAAjB;AACAH,mBAAa2C,kBAAb,CAAgCj5D,QAAhC,EAA0CvC,IAA1C,CAA+C,kBAAU;AACvD,YAAI,CAACtD,OAAOwD,EAAZ,EAAgB;AACd1F,gBAAMkC,OAAO6a,IAAb;AACD,SAFD,MAEO;AACL,iBAAKjgB,QAAL,CAAc,EAAE00C,eAAe,KAAjB,EAAd;AACD;AACF,OAND;AAOA,WAAKwqB,iBAAL;AACD;;;mCAEc;AACb,WAAKl/D,QAAL,CAAc,EAAE00C,eAAe,KAAjB,EAAd;AACA,WAAKwqB,iBAAL;AACD;;AAED;AACA;;;;6BACS;AAAA,mBAQH,KAAKt/D,KARF;AAAA,UAELs6C,WAFK,UAELA,WAFK;AAAA,UAGLxF,aAHK,UAGLA,aAHK;AAAA,UAILitB,QAJK,UAILA,QAJK;AAAA,UAKLC,cALK,UAKLA,cALK;AAAA,UAMLC,cANK,UAMLA,cANK;AAAA,UAOLC,YAPK,UAOLA,YAPK;;AASP,UAAIqC,kBAAJ;;AAEA,UAAIjqB,eAAe,CAACxF,aAApB,EAAmC;AACjC;AACAyvB,oBACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AADF,WADF;AAOE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AADF;AAPF,SADF;AAaD,OAfD,MAeO;AACL;AACAA,oBACE;AAAA;AAAA,YAAK,QAAQzvB,aAAb;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,aADF;AAAA;AAEqE,eAFrE;AAGE;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA;AAAA,WADF;AAME;AAAA;AAAA;AACE,qBAAO;AACL/zC,yBAAS,MADJ;AAELyjE,qCAAqB,gBAFhB;AAGLC,2BAAW,MAHN;AAILC,wBAAQ;AAJH;AADT;AAQE;AAAA;AAAA,gBAAG,WAAU,kBAAb;AAAA;AAAA,aARF;AASE,2CATF;AAUE;AAAC,oBAAD;AAAA,gBAAQ,MAAK,IAAb,EAAkB,SAAS,KAAKnC,eAAhC;AAAA;AAAA,aAVF;AAaE;AAAC,oBAAD;AAAA,gBAAQ,MAAK,IAAb,EAAkB,SAAS,KAAKC,eAAhC;AAAA;AAAA,aAbF;AAgBE,0CAhBF;AAiBE,0CAjBF;AAkBE,2CAlBF;AAmBE,2CAnBF;AAoBE;AAAA;AAAA;AAAA;AAAA,aApBF;AAqBE,0CArBF;AAsBE;AAAA;AAAA,gBAAG,WAAU,kBAAb;AAAA;AAAA,aAtBF;AAuBE,2CAvBF;AAwBE;AAAC,oBAAD;AAAA,gBAAQ,MAAK,IAAb,EAAkB,SAAS,KAAKF,qBAAhC;AAAA;AAAA,aAxBF;AA2BE;AAAC,oBAAD;AAAA,gBAAQ,aAAR,EAAgB,MAAK,IAArB,EAA0B,SAAS,KAAKI,kBAAxC;AAAA;AAAA,aA3BF;AA8BE,0CA9BF;AA+BE,0CA/BF;AAgCE;AAAA;AAAA,gBAAG,WAAU,kBAAb;AAAA;AAAA,aAhCF;AAiCE,2CAjCF;AAkCE;AAAC,oBAAD;AAAA,gBAAQ,MAAK,IAAb,EAAkB,SAAS,KAAKL,aAAhC;AAAA;AAAA,aAlCF;AAqCE;AAAA;AAAA;AACE;AAAA;AAAA,kBAAG,WAAU,kBAAb;AAAA;AAAA,eADF;AAIE,6CAJF;AAKE;AAAA;AAAA;AACE;AACE,wBAAK,MADP;AAEE,0BAAO,WAFT;AAGE,sBAAG,eAHL;AAIE,4BAAU,KAAKI;AAJjB,kBADF;AAAA;AAOQ;AAAA;AAAA;AAAIT;AAAJ,iBAPR;AAQE,+CARF;AASGC,kCACC;AAAA;AAAA,oBAAM,OAAO,EAAEvwC,OAAO,KAAT,EAAb;AAAgCuwC;AAAhC;AAVJ,eALF;AAkBE;AAlBF;AArCF,WANF;AAgEE;AAhEF,SADF;AAoED;AACD,aACE;AAAA;AAAA;AACE,iBAAO;AACL9gE,6BAAiB,wBADZ;AAELC,qBAAS;AAFJ;AADT;AAME;AAAA;AAAA;AAAA;AAAA,SANF;AAOE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAAA;AAC6C;AAAA;AAAA;AAAO8gE;AAAP;AAD7C,SAPF;AAUGqC,iBAVH;AAWE;AAAA;AAAA,YAAK,QAAQ,CAACzvB,aAAd;AACE;AAAC,kBAAD;AAAA,cAAQ,SAAS,KAAK8tB,YAAtB,EAAoC,MAAK,IAAzC,EAA8C,aAA9C;AAAA;AAAA,WADF;AAAA;AAKE;AAAC,kBAAD;AAAA,cAAQ,SAAS,KAAKD,aAAtB,EAAqC,MAAK,IAA1C,EAA+C,OAAM,SAArD;AAAA;AAAA,WALF;AAQE;AARF,SAXF;AAqBE,qCAAK,IAAG,QAAR,EAAiB,QAAQ,CAAC7tB,aAA1B;AArBF,OADF;AAyBD;;;;EAxVoBr1C,OAAO4B,S,GAyV5B;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AACA5C,OAAOC,OAAP,GAAiBiqD,QAAjB;;;;;;;;;;;;ypBC3bA;;;;;;;;;;;;;;;;AAgBA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA;AACA;AACA;AACA,IAAMgc,aAAa,EAAE9wD,MAAM,WAAR,EAAnB;AACA,IAAMrR,QAAQ/C,iBAAOgD,WAAP,CAAmBkiE,UAAnB,CAAd;AACA;AACA,IAAMjjE,MAAM,KAAZ;AACA,IAAM8F,KAAK,WAAX;;AAEA;AACA;AACA;;;;;;;AAOA,SAASo9D,SAAT,OAAuC;AAAA,MAAlBjzB,IAAkB,QAAlBA,IAAkB;AAAA,MAAZQ,GAAY,QAAZA,GAAY;AAAA,MAAPr0B,GAAO,QAAPA,GAAO;;AAAA,kBACP,qBAAS,IAAT,CADO;AAAA;AAAA,MAC9B+mD,OAD8B;AAAA,MACrBC,UADqB;;AAAA,mBAEX,qBAAS;AACjCC,eAAW,EADsB;AAEjCC,uBAAmB,EAFc;AAGjCC,uBAAmB,EAHc;AAIjCC,2BAAuB,EAJU;AAKjCl0B,oBAAgB,CAAC,KAAD,CALiB;AAMjCm0B,mBAAe,EANkB;AAOjC/V,eAAWhjB,qBAAO+E,QAAP,CAAgBke,IAPM;AAQjC+V,iBAAa,KARoB;AASjCC,oBAAgB,KATiB;AAUjCC,iBAAa,KAVoB;AAWjCC,iBAAa,KAXoB;AAYjCC,iBAAa;AAZoB,GAAT,CAFW;AAAA;AAAA,MAE9BxlE,KAF8B;AAAA,MAEvBI,QAFuB;;AAiBrC;;;AACA,wBACE;AAAA,WAAMqlE,mBAAN;AAAA,GADF,EAEE,EAFF,CAEK;AAFL;;AAKA;AACA,wBAAU,YAAM;AACd,QAAIZ,OAAJ,EAAaA,QAAQxyB,cAAR,CAAuB,EAAEC,UAAU,QAAZ,EAAvB;AACd,GAFD,EAEG,CAACuyB,OAAD,CAFH;;AAIA;AACA,wBAAU,YAAM;AACd;AACA,QAAMa,0BAA0B,SAA1BA,uBAA0B,OAAQ;AACtC,UAAM74B,aAAanlC,gCAAWimB,aAAX,EAAnB;AACAvtB,eAAS;AAAA,4BACJulE,SADI;AAEPJ,uBAAallE,KAAKijC,sBAAL,IAA+B,CAACuJ;AAFtC;AAAA,OAAT;AAID,KAND;AAOA,QAAM+4B,6BAA6B,SAA7BA,0BAA6B;AAAA,aAAMH,mBAAN;AAAA,KAAnC;;AAEA;AACAjjE,UAAM6F,gBAAN,CAAuB,cAAvB,EAAuCu9D,0BAAvC;AACApjE,UAAMrC,aAAN,CAAoB,4BAApB,EAAkDulE,uBAAlD;;AAEA;AACA,WAAO,YAAM;AACX,UAAI1lE,MAAMqlE,cAAV,EAA0Bj5B,qBAAO6K,aAAP,CAAqB9E,GAArB;AAC1B3vC,YAAMkmB,iBAAN,CAAwB,cAAxB,EAAwCk9C,0BAAxC;AACApjE,YAAMqc,eAAN,CAAsB,4BAAtB,EAAoD6mD,uBAApD;AACD,KAJD;AAKD,GArBD,EAqBG,CAAC1lE,MAAMqlE,cAAP,CArBH,EA7BqC,CAkDT;;AAE5B;AACA;AACA;;AAEA,WAASI,iBAAT,GAA6B;AAC3B,QAAMzwB,QAAQ5I,qBAAO8I,cAAP,CAAsBvD,IAAtB,EAA4BQ,GAA5B,CAAd;AACA,QAAMhV,UAAUiP,qBAAO+I,UAAP,CAAkBhD,GAAlB,CAAhB;;AAEA;AACA;AACA,QAAI,CAAC6C,KAAD,IAAU,CAAC7X,OAAf,EAAwB;AACtB57B,cAAQiX,KAAR,CAAc,gDAAd;AACA;AACD;;AAED;;AAX2B,gCAYsBqtD,sBAC/C1oC,QAAQwT,YADuC,CAZtB;AAAA,QAYnBw0B,aAZmB,yBAYnBA,aAZmB;AAAA,QAYJD,qBAZI,yBAYJA,qBAZI;;AAgB3B;;;AACA9kE,aAAS;AACP;AACAqwC,yBAAmBtT,QAAQsT,iBAFpB;AAGPs0B,iBAAW34B,qBAAOoG,WAAP,CAAmBrV,QAAQ4T,YAA3B,CAHJ;AAIPm0B,kDAJO;AAKPl0B,mDAAoB7T,QAAQ6T,cAA5B,EALO;AAMPg0B,yBAAmBhwB,MAAMgwB,iBANlB;AAOPC,yBAAmBjwB,MAAMiwB,iBAPlB;AAQP;AACAE,kCATO;AAUP;AACA/V,iBAAWpa,MAAMF,aAAN,GAAsB1I,qBAAO+E,QAAP,CAAgBif,IAAtC,GAA6ChkB,qBAAO+E,QAAP,CAAgBke,IAXjE;AAYP+V,mBAAapwB,MAAM8wB,UAZZ;AAaPT,sBAAgBrwB,MAAMF,aAbf;AAcPwwB,mBAAatwB,MAAM+wB,UAdZ;AAePP,mBAAaxwB,MAAMgxB;AAfZ,KAAT;;AAkBA;AACA,QAAIhxB,MAAMF,aAAV,EAAyB1I,qBAAO4K,WAAP,CAAmB7Z,QAAQjzB,UAA3B;AAC1B;AACD;AACA;;;AAGA,WAAS27D,qBAAT,CAA+BX,qBAA/B,EAAsD;AACpD,QAAIC,gBAAgB,EAApB;AACA,QAAI,CAAC/4B,qBAAOsG,cAAP,CAAsBwyB,qBAAtB,CAAL,EAAmD;AACjD,UAAMe,2BAA2B75B,qBAAOwG,qBAAP,EAAjC;AACAuyB,yCAAiCD,qBAAjC,+CAAgGe,yBAAyBtvD,KAAzH;AACApV,cAAQwB,IAAR,CAAaoiE,aAAb;AACAD,8BAAwBe,yBAAyBtzB,IAAjD;AACD;AACD;AACA,WAAO,EAAEwyB,4BAAF,EAAiBD,4CAAjB,EAAP;AACD;AACD;AACA;AACA;AACA,WAASgB,WAAT,GAAuB;AACrB,QAAM9W,YACJpvD,MAAMovD,SAAN,KAAoBhjB,qBAAO+E,QAAP,CAAgBif,IAApC,GACIhkB,qBAAO+E,QAAP,CAAgBke,IADpB,GAEIjjB,qBAAO+E,QAAP,CAAgBif,IAHtB;AAIAhwD,aAAS;AAAA,0BACJulE,SADI;AAEPvW;AAFO;AAAA,KAAT;;AAKAhjB,yBAAO4K,WAAP,CAAmB7E,GAAnB;AACD;AACD;AACA;;AAEA,WAASg0B,WAAT,GAAuB;AAAA,QACbjB,qBADa,GAC6BllE,KAD7B,CACbklE,qBADa;AAAA,QACUl0B,cADV,GAC6BhxC,KAD7B,CACUgxC,cADV;;AAErB,QAAM7T,UAAUiP,qBAAO+I,UAAP,CAAkBhD,GAAlB,CAAhB;AACAhV,YAAQwT,YAAR,GAAuBu0B,qBAAvB;AACA/nC,YAAQ6T,cAAR,gCAA6BA,cAA7B,GAJqB,CAIyB;AAC9C7T,YAAQ4T,YAAR,GAAuBjzB,GAAvB;AACAsuB,yBAAO8E,aAAP,CAAqB/T,OAArB;AACAiP,yBAAO6K,aAAP,CAAqB9E,GAArB;AACA/xC,aAAS;AAAA,0BACJulE,SADI;AAEPvW,mBAAWhjB,qBAAO+E,QAAP,CAAgBke;AAFpB;AAAA,KAAT;AAID;AACD;AACA;;AAEA,WAAS+W,YAAT,GAAwB;AAAA,QACd31B,iBADc,GACQzwC,KADR,CACdywC,iBADc;;AAEtB,QAAIA,sBAAsB,EAA1B,EAA8B;AAC5B;AACArE,2BAAOkJ,UAAP,CAAkB;AAChB3D,kBADgB;AAEhBlB,2BAAmB0B,GAFH;AAGhBzB,6BAAqB,EAHL;AAIhBK,sBAAcjzB;AAJE,OAAlB;AAMD,KARD,MAQO;AACL;AACAsuB,2BAAOkJ,UAAP,CAAkB;AAChB3D,kBADgB;AAEhBlB,4CAFgB;AAGhBC,6BAAqByB,GAHL;AAIhBpB,sBAAcjzB;AAJE,OAAlB;AAMD;AACF;AACD;AACA;;AAEA,WAASuoD,aAAT,GAAyB;AACvBj6B,yBAAOqJ,aAAP,CAAqB;AACnBnU,sBAAgBqQ,IADG;AAEnBznC,kBAAYioC,GAFO;AAGnBr0B;AAHmB,KAArB;AAKD;AACD;AACA;;AAEA,WAASwoD,aAAT,GAAyB;AAAA,QACft1B,cADe,GACIhxC,KADJ,CACfgxC,cADe;;AAEvB,QAAIu1B,sBAAsB,IAA1B;AACAv1B,mBAAep9B,OAAf,CAAuB,aAAK;AAC1B,UAAI4yD,MAAM,EAAV,EAAcD,sBAAsB,KAAtB;AACf,KAFD;;AAIA,QAAM5wB,KAAK,SAALA,EAAK;AAAA,aAAMvJ,qBAAO6K,aAAP,CAAqB9E,GAArB,CAAN;AAAA,KAAX;;AAEA,QAAIo0B,mBAAJ,EAAyB;AACvB;AACA;AACA;AACA;AACAn6B,2BAAOqJ,aAAP,CACE;AACEnU,wBAAgBqQ,IADlB;AAEEznC,oBAAYioC,GAFd;AAGEr0B,gBAHF;AAIEi4B,0BAAkB;AAJpB,OADF,EAOEJ,EAPF;AASD,KAdD,MAcO;AACL;AACA,UAAMxY,WAAUiP,qBAAO+I,UAAP,CAAkBhD,GAAlB,CAAhB;AACA/xC,eAAS;AAAA,4BACJulE,SADI;AAEP30B,uDAAoB7T,SAAQ6T,cAA5B,EAFO,EAEsC;AAC7Coe,qBAAWhjB,qBAAO+E,QAAP,CAAgBke;AAHpB;AAAA,OAAT;;AAMA1Z;AACD;AACF;AACD;AACA;;AAEA,WAAS8wB,gBAAT,CAA0BlkE,KAA1B,EAAiC;AAC/B,QAAMmkE,YAAYnkE,MAAMiI,MAAN,CAAanF,KAA/B;AACA;;AAF+B,iCAGkBwgE,sBAAsBa,SAAtB,CAHlB;AAAA,QAGvBvB,aAHuB,0BAGvBA,aAHuB;AAAA,QAGRD,qBAHQ,0BAGRA,qBAHQ;;AAI/B9kE,aAAS;AAAA,0BACJulE,SADI;AAEPR,oCAFO;AAGPD;AAHO;AAAA,KAAT;AAKD;AACD;AACA;;AAEA,WAASyB,eAAT,CAAyBC,KAAzB,EAAgCrkE,KAAhC,EAAuC;AAAA,QAC7ByuC,cAD6B,GACVhxC,KADU,CAC7BgxC,cAD6B;;AAErCA,mBAAe41B,KAAf,IAAwBrkE,MAAMiI,MAAN,CAAanF,KAArC;AACAjF,aAAS;AAAA,0BACJulE,SADI;AAEP30B,qDAAoBA,cAApB;AAFO;AAAA,KAAT;AAID;;AAED;AACA;AACA;;;;;;;;;AA9OqC,MAwPnC+zB,SAxPmC,GAiQjC/kE,KAjQiC,CAwPnC+kE,SAxPmC;AAAA,MAyPnCG,qBAzPmC,GAiQjCllE,KAjQiC,CAyPnCklE,qBAzPmC;AAAA,MA0PnCl0B,cA1PmC,GAiQjChxC,KAjQiC,CA0PnCgxC,cA1PmC;AAAA,MA2PnCg0B,iBA3PmC,GAiQjChlE,KAjQiC,CA2PnCglE,iBA3PmC;AAAA,MA4PnCC,iBA5PmC,GAiQjCjlE,KAjQiC,CA4PnCilE,iBA5PmC;AAAA,MA6PnCE,aA7PmC,GAiQjCnlE,KAjQiC,CA6PnCmlE,aA7PmC;AAAA,MA8PnC/V,SA9PmC,GAiQjCpvD,KAjQiC,CA8PnCovD,SA9PmC;AAAA,MA+PnCmW,WA/PmC,GAiQjCvlE,KAjQiC,CA+PnCulE,WA/PmC;AAAA,MAgQnCC,WAhQmC,GAiQjCxlE,KAjQiC,CAgQnCwlE,WAhQmC;;;AAmQrC,MAAMxvB,UAAU5J,qBAAOllC,OAAP,EAAhB;AACA,MAAMi2B,UAAUiP,qBAAO+I,UAAP,CAAkBhD,GAAlB,CAAhB;AACA,MAAM00B,eAAez6B,qBAAOqG,eAAP,EAArB;;AAEA,MAAI,CAACtV,OAAL,EAAc;AACZ,QAAIz7B,GAAJ,EACEH,QAAQC,GAAR,kDAA2D2wC,GAA3D;AACF,WAAO,EAAP;AACD;AACD,MAAI,CAAC4yB,SAAL,EAAgB,OAAO,IAAP,CA5QqB,CA4QR;;AAE7B;AACA,MAAM+B,4BAA4BhpD,QAAQqf,QAAQ4T,YAAlD;;AAEA;AACA,MAAMg2B,UACJ;AAAA;AAAA,MAAQ,WAAU,eAAlB,EAAkC,SAASb,WAA3C;AAAA;AAAA,GADF;AAKA,MAAMc,YACJ;AAAA;AAAA,MAAQ,WAAU,sBAAlB,EAAyC,SAASX,aAAlD;AAAA;AAAA,GADF;AAKA,MAAMY,UAAU;AAAA;AAAA,MAAQ,SAASd,WAAjB;AAAA;AAAA,GAAhB;AACA,MAAMe,WAAW1B,cACf;AAAA;AAAA,MAAQ,SAASY,YAAjB;AAAA;AAAA,GADe,GAGf,0CAHe,CAGH;AAHd;AAKA,MAAMtb,YACJ;AAAA;AAAA,MAAQ,WAAU,WAAlB,EAA8B,SAASwb,aAAvC;AAAA;AAAA,GADF;AAKA,MAAMa,eACJ;AAAA;AAAA,MAAQ,OAAOjC,qBAAf,EAAsC,UAAUuB,gBAAhD;AACG,iCAAII,aAAa7tD,OAAb,EAAJ,GAA4B7G,GAA5B,CAAgC;AAAA,aAC/B;AAAA;AAAA,UAAQ,KAAKa,KAAK,CAAL,CAAb,EAAsB,OAAOA,KAAK,CAAL,CAA7B;AACGA,aAAK,CAAL,EAAQ2D;AADX,OAD+B;AAAA,KAAhC;AADH,GADF;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMq+B,QAAQ5I,qBAAO8I,cAAP,CAAsBvD,IAAtB,EAA4BQ,GAA5B,CAAd;;AAEA,MAAIi1B,yBAAJ;AACA,MAAIhY,cAAchjB,qBAAO+E,QAAP,CAAgBif,IAAlC,EAAwC;AACtC;AACAgX,uBACE;AAAA;AAAA;AACE,YAAIj1B,GADN;AAEE,aAAK2yB,UAFP;AAGE,iCAAsB3nC,QAAQ2T,uBAAR,IAAmC,SAAzD,CAHF;AAIE,qBAAa;AAAA,iBAAKztC,EAAE++C,eAAF,EAAL;AAAA;AAJf;AAME;AAAA;AAAA;AACE;AAAA;AAAA,YAAK,WAAU,WAAf;AAA4B2iB;AAA5B,SADF;AAEE;AAAA;AAAA,YAAK,WAAU,MAAf;AAAuBE,+BAAqBD;AAA5C;AAFF,OANF;AAUE;AAAA;AAAA;AACE;AAAA;AAAA,YAAK,WAAU,WAAf;AAAA;AAA6B7yB;AAA7B,SADF;AAEE;AAAA;AAAA;AAAMg1B;AAAN,SAFF;AAGE,sCAAC,yBAAD;AACE,gBAAMx1B,IADR;AAEE,uBAAauzB,qBAFf;AAGE,yBAAel0B,cAHjB;AAIE,2BAAiB7T,QAAQ2T,uBAJ3B;AAKE,wBAAckE,MAAMqyB,YALtB;AAME,oBAAUj7B,qBAAO+E,QAAP,CAAgBif,IAN5B;AAOE,oBAAUuW,eAPZ;AAQE,wBAAcxB;AARhB,UAHF;AAaE;AAAA;AAAA,YAAK,WAAU,SAAf;AACGra,mBADH;AAEGmc;AAFH;AAbF;AAVF,KADF;AA+BD,GAjCD,MAiCO;AACL;AACAG,uBACE;AAAA;AAAA;AACE,YAAIj1B,GADN;AAEE,aAAK2yB,UAFP;AAGE,iCAAsB3nC,QAAQ2T,uBAAR,GAAkC,SAAlC,GAA8C,EAApE;AAHF;AAKE;AAAA;AAAA;AACE;AAAA;AAAA,YAAK,WAAU,WAAf;AAA4Bi0B;AAA5B,SADF;AAEE;AAAA;AAAA,YAAK,WAAU,MAAf;AAAuBE,+BAAqBD;AAA5C;AAFF,OALF;AASE;AAAA;AAAA;AACE;AAAA;AAAA,YAAK,WAAU,WAAf;AAAA;AAA6B7yB;AAA7B,SADF;AAEE,sCAAC,yBAAD;AACE,gBAAMR,IADR;AAEE,uBAAauzB,qBAFf;AAGE,yBAAel0B,cAHjB;AAIE,2BAAiB7T,QAAQ2T,uBAJ3B;AAKE,wBAAckE,MAAMqyB,YALtB;AAME,oBAAUj7B,qBAAO+E,QAAP,CAAgBke,IAN5B;AAOE,oBAAUsX,eAPZ;AAQE,wBAAcxB;AARhB,UAFF;AAYGrnD,eACC;AAAA;AAAA,YAAK,WAAU,YAAf;AACG,WAACynD,WAAD,IAAgB,CAACpoC,QAAQ2T,uBAAzB,IAAoDo2B,QADvD;AAEI,WAAC3B,WAAD,IACAuB,yBADA,IAEA,CAAC3pC,QAAQ2T,uBAFT,IAGAi2B,OAHD,IAGa,0CALhB;AAMI,WAAE,CAACxB,WAAD,IACFuB,yBADE,IAEF,CAAC3pC,QAAQ2T,uBAFR,IAGDkF,OAHA,KAIAgxB,SAJD,IAIe;AAVlB;AAbJ;AATF,KADF;AAuCD;AACD;AACA,SAAOhyB,MAAM0J,KAAN,GAAc,CAAd,GACL;AAAA;AAAA,MAAK,WAAU,iBAAf;AAAkC0oB;AAAlC,GADK,GAGLA,gBAHF;AAKD;;AAED;AACA;kBACexC,S;;;;;;;;;;ypBCrcf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA;AACA;AACA,IAAMD,aAAa,EAAE9wD,MAAM,iBAAR,EAAnB;AACA,IAAMrR,QAAQ/C,iBAAOgD,WAAP,CAAmBkiE,UAAnB,CAAd;AACA;AACA,IAAMjjE,MAAM,KAAZ;AACA,IAAM8F,KAAK,cAAX;;AAEA;AACA;AACA;;;;;;AAMA,SAAS8/D,YAAT,OAAuC;AAAA,MAAf31B,IAAe,QAAfA,IAAe;AAAA,MAAT41B,KAAS,QAATA,KAAS;;AACrC,MAAMzpD,MAAMsuB,qBAAO6E,gBAAP,EAAZ;AACA,MAAMu2B,QAAQC,gBAAgB91B,IAAhB,EAAsB41B,KAAtB,CAAd;;AAFqC,kBAGS,qBAC5CG,0BAA0BF,KAA1B,CAD4C,CAHT;AAAA;AAAA,MAG9BzzB,eAH8B;AAAA,MAGb4zB,kBAHa;;AAAA,mBAMK,qBAAS,KAAT,CANL;AAAA;AAAA,MAM9BC,aAN8B;AAAA,MAMfC,gBANe;;AAAA,mBAOmB,qBAAS,KAAT,CAPnB;AAAA;AAAA,MAO9BC,oBAP8B;AAAA,MAORC,uBAPQ;;AAAA,mBAQD,qBAAS,KAAT,CARC;AAAA;AAAA,MAQ9BC,UAR8B;AAAA,MAQlBC,aARkB;;AAAA,mBASL,qBAAS,EAAE3zB,GAAG,OAAL,EAAcC,GAAG,OAAjB,EAAT,CATK;AAAA;AAAA,MAS9BpiB,QAT8B;AAAA,MASpB+1C,WAToB;;AAAA,oBAUX,qBAAS,CAAT,CAVW;AAAA;AAAA,MAU9B9U,KAV8B;AAAA,MAUvB+U,QAVuB,mBAUE;;AAEvC;;;AACA,wBAAU,YAAM;AACd3lE,UAAM6F,gBAAN,CAAuB,mBAAvB,EAA4C+/D,+BAA5C;AACA5lE,UAAM6F,gBAAN,CAAuB,cAAvB,EAAuCu9D,0BAAvC;AACApjE,UAAMrC,aAAN,CAAoB,4BAApB,EAAkDulE,uBAAlD;AACAljE,UAAMrC,aAAN,CAAoB,gBAApB,EAAsCkoE,oBAAtC;AACA1pE,WAAOkD,gBAAP,CAAwB,QAAxB,EAAkCymE,YAAlC;;AAEAJ,gBAAYK,4BAAZ;;AAEA,WAAO,YAAM;AACX/lE,YAAMkmB,iBAAN,CAAwB,mBAAxB,EAA6C0/C,+BAA7C;AACA5lE,YAAMkmB,iBAAN,CAAwB,cAAxB,EAAwCk9C,0BAAxC;AACApjE,YAAMqc,eAAN,CAAsB,4BAAtB,EAAoD6mD,uBAApD;AACAljE,YAAMqc,eAAN,CAAsB,gBAAtB,EAAwCwpD,oBAAxC;AACA1pE,aAAO+oB,mBAAP,CAA2B,QAA3B,EAAqC4gD,YAArC;AACD,KAND;AAOD,GAhBD,EAgBG,EAhBH;;AAkBA;AACA;AACA,WAASF,+BAAT,CAAyCl4B,iBAAzC,EAA4D;AAC1D,QAAMs4B,UAAUp8B,qBAAOsI,iBAAP,CAAyBX,eAAzB,CAAhB;AACA,QAAMP,aAAapH,qBAAOqH,eAAP,CAAuB9B,IAAvB,CAAnB;AACA,QAAI6B,eAAeO,eAAnB,EAAoC;AAClC;AACA8zB,uBAAiB,IAAjB;AACAE,8BAAwB,IAAxB;AACD,KAJD,MAIO,IAAIv0B,eAAevvC,SAAnB,EAA8B;AACnC;AACA4jE,uBAAiB,KAAjB;AACAE,8BAAwB,IAAxB;AACD,KAJM,MAIA;AACL;AACAF,uBAAiB,KAAjB;AACAE,8BAAwB,KAAxB;AACD;AACF;AACD;AACA,WAASnC,0BAAT,GAAsC;AACpC;AACA;AACAuC,aAAS;AAAA,aAAS/U,QAAQ,CAAjB;AAAA,KAAT,EAHoC,CAGN;AAC/B;AACD;AACA,WAASsS,uBAAT,CAAiCrlE,IAAjC,EAAuC;AACrC4nE,kBAAc5nE,KAAKijC,sBAAnB;AACD;AACD;AACA,WAAS+kC,oBAAT,CAA8BhoE,IAA9B,EAAoC;AAClC,QAAIA,KAAKsxC,IAAL,KAAcA,IAAlB,EAAwB82B,cAAc,IAAd;AACzB;;AAED;AACA;AACA,WAAShB,eAAT,CAAyB91B,IAAzB,EAA+B41B,KAA/B,EAAsC;AACpC,gBAAU51B,IAAV,IAAiB41B,QAAQA,KAAR,GAAgB,EAAjC;AACD;AACD,WAASG,yBAAT,CAAmCF,KAAnC,EAA0C;AACxC,+BAAyBA,KAAzB;AACD;AACD;AACA,WAASiB,aAAT,CAAuBxoE,MAAvB,EAA+B;AAC7B,QAAMkyB,WAAWo2C,4BAAjB;AACAV,qBAAiB5nE,MAAjB;AACAioE,gBAAY/1C,QAAZ;AACAia,yBAAOmH,uBAAP,CAA+BQ,eAA/B,EAAgDpC,IAAhD,EAAsDxf,QAAtD;AACD;AACD;AACA,WAASo2C,0BAAT,GAAsC;AACpC,QAAMz0B,MAAMlyC,SAASqS,cAAT,CAAwB8/B,eAAxB,CAAZ;AACA,QAAMC,UAAUF,IAAIG,qBAAJ,GAA4BnF,IAA5C;AACA,QAAMoF,cAAc/gC,KAAKghC,GAAL,CAASC,OAAOnzC,KAAhB,EAAuBtC,OAAO01C,UAA9B,CAApB;AACA,QAAIC,UAAJ;AACA,QAAIJ,cAAcF,OAAd,GAAwB,GAA5B,EAAiC;AAC/BM,UAAIN,UAAU,GAAd;AACD,KAFD,MAEO;AACLM,UAAIN,UAAU,EAAd;AACD;AACD,QAAMO,IAAIT,IAAIG,qBAAJ,GAA4BO,GAA5B,GAAkC71C,OAAO81C,OAAnD;AACA,WAAO,EAAEH,IAAF,EAAKC,IAAL,EAAP;AACD;;AAED;AACA;AACA;AACA,WAASm0B,WAAT,CAAqBnmE,KAArB,EAA4B;AAC1BA,UAAM6/C,eAAN;AACA,QAAI,CAAC4lB,UAAL,EAAiB;AACf,UAAMW,gBAAgB,CAACf,aAAvB;AACAa,oBAAcE,aAAd;AACD;AACF;AACD;AACA;;;AAGA,WAASL,YAAT,GAAwB;AACtB,QAAMn2C,WAAWo2C,4BAAjB;AACAL,gBAAY/1C,QAAZ;AACD;;AAED;AACA;AACA;;;;;AAKA,MAAM1oB,QAAQ2iC,qBAAO6I,2BAAP,CAAmCtD,IAAnC,EAAyC7zB,GAAzC,CAAd;AACA,MAAMg3C,OAAO1oB,qBAAO+G,oBAAP,CAA4BxB,IAA5B,KAAqC,EAAlD;;AAEA,MAAIi3B,MAAM,aAAV;AACA,MAAI9T,KAAKd,iBAAT,EAA4B4U,OAAO,oBAAP,CAA5B,KACK,IAAI9T,KAAK+T,eAAT,EAA0BD,OAAO,kBAAP;AAC/BA,SAAOd,uBAAuB,SAAvB,GAAmC,EAA1C;;AAEA;;AAEA,MAAMnxD,QAAQlN,QAAQ,CAAR,GAAYA,KAAZ,GAAoB,EAAlC;;AAEA,SACE;AAAA;AAAA,MAAK,IAAIsqC,eAAT;AACE;AAAA;AAAA,QAAK,WAAW60B,GAAhB,EAAqB,SAASF,WAA9B;AACGt8B,2BAAOwD,WADV;AAEE;AAAA;AAAA,UAAK,WAAU,eAAf;AAAgCj5B;AAAhC;AAFF,KADF;AAKGixD,qBACC,8BAAC,yBAAD;AACE,aAAO7zB,eADT;AAEE,YAAMpC,IAFR;AAGE,WAAK7zB,GAHP;AAIE,SAAGqU,SAASmiB,CAJd;AAKE,SAAGniB,SAASoiB;AALd;AANJ,GADF;AAiBD;;AAED;AACA;kBACe+yB,Y;;;;;;;;;;AC1Lf;;;;AACA;;;;;;AAEA;AACA;AACA;AA5DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA,IAAM5lE,MAAM,KAAZ;AACA,IAAM8F,KAAK,iBAAX;AACA;AACA,IAAMshE,qBAAqB,IAA3B;;AAEA;AACA;AACA,SAASC,eAAT,OASG;AAAA,MARDp3B,IAQC,QARDA,IAQC;AAAA,MAPDq3B,WAOC,QAPDA,WAOC;AAAA,MANDC,aAMC,QANDA,aAMC;AAAA,MALDC,eAKC,QALDA,eAKC;AAAA,MAJD7B,YAIC,QAJDA,YAIC;AAAA,MAHD8B,QAGC,QAHDA,QAGC;AAAA,MAFD7vB,SAEC,QAFDA,QAEC;AAAA,MADD8vB,YACC,QADDA,YACC;;AACD,MAAMvC,eAAez6B,qBAAOqG,eAAP,EAArB;;AAEA;;;AAGA,wBAAU,YAAM;AACd,QAAI02B,aAAa/8B,qBAAO+E,QAAP,CAAgBif,IAAjC,EAAuC;AACrC;AACA,UAAIiZ,aAAa,CAAC,CAAlB;AACAxC,mBAAatmD,GAAb,CAAiByoD,WAAjB,EAA8BM,OAA9B,CAAsCtqC,IAAtC,CAA2C,UAAC3pB,MAAD,EAASk0D,WAAT,EAAyB;AAClE,YAAIl0D,OAAOpC,MAAP,KAAkB,MAAlB,IAA4B,CAACg2D,cAAcM,WAAd,CAAjC,EAA6D;AAC3DF,uBAAaE,WAAb;AACA,iBAAO,IAAP;AACD;AACF,OALD;AAMA;AACA,UAAMC,gBAAgB5nE,SAASqS,cAAT,CAAwBw1D,aAAa93B,IAAb,EAAmB03B,UAAnB,CAAxB,CAAtB;AACA,UAAIG,aAAJ,EAAmBA,cAAcE,KAAd;AACpB;AACF,GAdD,EAcG,CAACP,QAAD,EAAWH,WAAX,CAdH;;AAgBA;AACA;AACA;;;;AAIA,WAASW,SAAT,CAAmBC,gBAAnB,EAAqC;AACnC,WACEA,qBAAqB3lE,SAArB,IACA2lE,qBAAqB,IADrB,IAEAA,qBAAqB,EAHvB;AAKD;AACD;AACA;AACA,WAASH,YAAT,CAAsB93B,IAAtB,EAA4Bi1B,KAA5B,EAAmC;AACjC,uBAAiBj1B,IAAjB,SAAyBi1B,KAAzB;AACD;AACD;AACA;;;;;AAKA,WAASiD,0BAAT,CAAoCD,gBAApC,EAAsD;AACpD,QAAI,CAACA,gBAAL,EAAuB,OAAO,EAAP;AACvB,WAAOA,iBAAiBtlE,KAAjB,CAAuBwkE,kBAAvB,CAAP;AACD;AACD;AACA;;;;;;;;AAQA,WAASgB,2BAAT,CAAqClD,KAArC,EAA4Cp0D,OAA5C,EAAqD;AACnD,WAAOA,QAAQL,GAAR,CAAY,UAAC4G,CAAD,EAAI5T,CAAJ;AAAA,aAAWA,KAAKyhE,KAAL,GAAa7tD,CAAb,GAAiB,EAA5B;AAAA,KAAZ,EAA6C0D,IAA7C,CAAkD,EAAlD,CAAP;AACD;;AAED;AACA;AACA;;;;;;;;;;AAUA,WAASstD,WAAT,CAAqBR,WAArB,EAAkCS,WAAlC,EAA+Cx3D,OAA/C,EAAwDjQ,KAAxD,EAA+D;AAC7D;AACA,QAAM0nE,qBAAqBJ,2BAA2BZ,cAAcM,WAAd,CAA3B,CAA3B;AACA,QAAIl+C,QAAQ,EAAZ;AACA7Y,YAAQoB,OAAR,CAAgB,UAACmF,CAAD,EAAI6tD,KAAJ,EAAc;AAC5B,UAAIoD,gBAAgBpD,KAApB,EAA2B;AACzB;AACA,YAAIrkE,MAAMiI,MAAN,CAAa0/D,OAAjB,EAA0B7+C,MAAMu7C,KAAN,IAAe7tD,CAAf,CAA1B,KACKsS,MAAMu7C,KAAN,IAAe,EAAf;AACN,OAJD,MAIO;AACL;AACA,YAAIqD,mBAAmBl3D,QAAnB,CAA4BgG,CAA5B,CAAJ,EAAoCsS,MAAMu7C,KAAN,IAAe7tD,CAAf,CAApC,KACKsS,MAAMu7C,KAAN,IAAe,EAAf;AACN;AACF,KAVD;AAWArkE,UAAMiI,MAAN,CAAanF,KAAb,GAAqBgmB,MAAM5O,IAAN,CAAW,IAAX,CAArB;AACA68B,cAASiwB,WAAT,EAAsBhnE,KAAtB;AACD;;AAED;AACA;AACA;;;AAGA,MAAM4nE,iBAAiB,SAAjBA,cAAiB,GAAM;AAC3B,WAAOtD,aAAatmD,GAAb,CAAiByoD,WAAjB,EAA8BM,OAA9B,CAAsCn3D,GAAtC,CAA0C,UAACkD,MAAD,EAASk0D,WAAT,EAAyB;AACxE,UAAIa,iBAAJ;AACA,cAAQ/0D,OAAOpC,MAAf;AACE,aAAK,MAAL;AACEm3D,qBACE;AACE,gBAAIX,aAAa93B,IAAb,EAAmB43B,WAAnB,CADN;AAEE,2BAFF;AAGE,sBAAU;AAAA,qBAASjwB,UAASiwB,WAAT,EAAsBhnE,KAAtB,CAAT;AAAA,aAHZ;AAIE,mBAAO0mE,cAAcM,WAAd,KAA8B;AAJvC,YADF;AAQA;AACF,aAAK,UAAL;AACEa,qBACE;AAAA;AAAA;AACE,qBAAOnB,cAAcM,WAAd,KAA8B,EADvC;AAEE,wBAAU;AAAA,uBAASjwB,UAASiwB,WAAT,EAAsBhnE,KAAtB,CAAT;AAAA;AAFZ;AAIG8S,mBAAO7C,OAAP,CAAeL,GAAf,CAAmB,UAAC2rC,MAAD,EAAS8oB,KAAT;AAAA,qBAClB;AAAA;AAAA,kBAAQ,KAAKA,KAAb,EAAoB,OAAO9oB,MAA3B;AACGA;AADH,eADkB;AAAA,aAAnB;AAJH,WADF;AAYA;AACF,aAAK,UAAL;AAAiB;AACf;AACA,gBAAMmsB,qBAAqBJ,2BACzBZ,cAAcM,WAAd,CADyB,CAA3B;AAGAa,uBACE;AAAA;AAAA,gBAAK,WAAU,QAAf;AACG/0D,qBAAO7C,OAAP,CAAeL,GAAf,CAAmB,UAAC2rC,MAAD,EAASksB,WAAT;AAAA,uBAClB;AAAA;AAAA,oBAAO,KAAKA,WAAZ;AACE;AACE,0BAAK,UADP;AAEE,2BAAOlsB,MAFT;AAGE,8BAAU;AAAA,6BACRisB,YAAYR,WAAZ,EAAyBS,WAAzB,EAAsC30D,OAAO7C,OAA7C,EAAsDjQ,KAAtD,CADQ;AAAA,qBAHZ;AAME,6BAAS0nE,mBAAmBl3D,QAAnB,CAA4B+qC,MAA5B;AANX,oBADF;AASGA;AATH,iBADkB;AAAA,eAAnB;AADH,aADF;AAiBA;AACD;AACD,aAAK,OAAL;AACEssB,qBACE;AAAA;AAAA;AACG/0D,mBAAO7C,OAAP,CAAeL,GAAf,CAAmB,UAAC2rC,MAAD,EAAS8oB,KAAT;AAAA,qBAClB;AAAA;AAAA,kBAAO,KAAKA,KAAZ;AACE;AACE,wBAAK,OADP;AAEE,yBAAO9oB,MAFT;AAGE,4BAAU;AAAA,2BAASxE,UAASiwB,WAAT,EAAsBhnE,KAAtB,CAAT;AAAA,mBAHZ;AAIE,2BAAS0mE,cAAcM,WAAd,MAA+BzrB;AAJ1C,kBADF;AAOGA;AAPH,eADkB;AAAA,aAAnB;AADH,WADF;AAeA;AACF,aAAK,QAAL;AACEssB,qBACE;AAAA;AAAA,cAAK,WAAU,QAAf;AACG/0D,mBAAO7C,OAAP,CAAeL,GAAf,CAAmB,UAAC2rC,MAAD,EAASksB,WAAT;AAAA,qBAClB;AAAA;AAAA;AACE,uBAAKA,WADP;AAEE,yBAAOlsB,MAFT;AAGE,6BACEmrB,cAAcM,WAAd,MAA+BzrB,MAA/B,GAAwC,UAAxC,GAAqD,aAJzD;AAME,2BAAS;AAAA,2BAASxE,UAASiwB,WAAT,EAAsBhnE,KAAtB,CAAT;AAAA;AANX;AAQGu7C;AARH,eADkB;AAAA,aAAnB;AADH,WADF;AAgBA;AACF,aAAK,iBAAL;AACEssB,qBACE;AAAA;AAAA,cAAK,WAAU,QAAf;AACG/0D,mBAAO7C,OAAP,CAAeL,GAAf,CAAmB,UAAC2rC,MAAD,EAAS8oB,KAAT;AAAA,qBAClB;AAAA;AAAA;AACE,uBAAKA,KADP;AAEE,yBAAO,CAACA,KAAD,EAAQkD,4BAA4BlD,KAA5B,EAAmCvxD,OAAO7C,OAA1C,CAAR,CAFT;AAGE,6BACE0qC,OAAO0pB,KAAP,KAAiBqC,cAAcM,WAAd,CAAjB,GACI,UADJ,GAEI,aANR;AAQE,2BAAS;AAAA,2BAASjwB,UAASiwB,WAAT,EAAsBhnE,KAAtB,CAAT;AAAA;AARX;AAUGu7C;AAVH,eADkB;AAAA,aAAnB;AADH,WADF;AAkBA;AACF;AACE;AAzGJ;AA2GA,aACE;AAAA;AAAA,UAAK,KAAKyrB,WAAV;AACE;AAAA;AAAA,YAAK,WAAU,OAAf;AAAwBl0D,iBAAOA;AAA/B,SADF;AAEE;AAAA;AAAA,YAAK,WAAU,MAAf;AAAuBA,iBAAOokB;AAA9B,SAFF;AAGG2wC,gBAHH;AAIE;AAAA;AAAA,YAAK,WAAU,UAAf;AAA2B/0D,iBAAOg1D;AAAlC,SAJF;AAKE;AAAA;AAAA,YAAK,WAAU,OAAf;AAAwBjB;AAAxB,SALF;AAME;AANF,OADF;AAUD,KAvHM,CAAP;AAwHD,GAzHD;;AA2HA;AACA,MAAMkB,iBAAiB,SAAjBA,cAAiB,GAAM;AAC3B,QAAMC,mBAAmB;AAAA;AAAA,QAAM,WAAU,MAAhB;AAAA;AAAA,KAAzB;;AAEA,WAAO1D,aAAatmD,GAAb,CAAiByoD,WAAjB,EAA8BM,OAA9B,CAAsCn3D,GAAtC,CAA0C,UAACkD,MAAD,EAASk0D,WAAT,EAAyB;AACxE,UAAIiB,mBAAJ;AACA,cAAQn1D,OAAOpC,MAAf;AACE,aAAK,MAAL;AACA,aAAK,UAAL;AACA,aAAK,OAAL;AACEu3D,uBACE;AAAA;AAAA,cAAK,WAAU,aAAf;AACG,aAACtB,eAAD,IAAoBD,cAAcM,WAAd,CADvB;AAEGI,sBAAUV,cAAcM,WAAd,CAAV,KAAyCgB;AAF5C,WADF;AAMA;AACF,aAAK,UAAL;AAAiB;AACf,gBAAMN,qBAAqBJ,2BACzBZ,cAAcM,WAAd,CADyB,CAA3B;AAGAiB,yBACE;AAAA;AAAA,gBAAK,WAAU,QAAf;AACGn1D,qBAAO7C,OAAP,CAAeL,GAAf,CAAmB,UAAC2rC,MAAD,EAASksB,WAAT;AAAA,uBAClB;AAAA;AAAA,oBAAO,KAAKA,WAAZ;AACE;AACE,0BAAK,UADP;AAEE,2BAAOlsB,MAFT;AAGE,6BAASmsB,mBAAmBl3D,QAAnB,CAA4B+qC,MAA5B,CAHX;AAIE,kCAJF,CAIW;AAJX,sBAKE,WAAW,UALb,CAKyB;AACvB;AACA;AAPF,oBADF;AAUGA;AAVH,iBADkB;AAAA,eAAnB;AADH,aADF;AAkBA;AACD;AACD,aAAK,QAAL;AACE0sB,uBACE;AAAA;AAAA,cAAK,WAAU,QAAf;AACGn1D,mBAAO7C,OAAP,CAAeL,GAAf,CAAmB,UAAC2rC,MAAD,EAAS8oB,KAAT;AAAA,qBAClB;AAAA;AAAA;AACE,uBAAKA,KADP;AAEE,yBAAO9oB,MAFT;AAGE,6BACEmrB,cAAcM,WAAd,MAA+BzrB,MAA/B,GAAwC,UAAxC,GAAqD,aAJzD;AAME;AANF;AAQGA;AARH,eADkB;AAAA,aAAnB;AADH,WADF;AAgBA;AACF,aAAK,iBAAL;AACE0sB,uBACE;AAAA;AAAA,cAAK,WAAU,QAAf;AACGn1D,mBAAO7C,OAAP,CAAeL,GAAf,CAAmB,UAAC2rC,MAAD,EAAS8oB,KAAT;AAAA,qBAClB;AAAA;AAAA;AACE,uBAAKA,KADP;AAEE,yBAAO9oB,MAFT;AAGE,6BACEZ,OAAO0pB,KAAP,KAAiBqC,cAAcM,WAAd,CAAjB,GACI,UADJ,GAEI,aANR;AAQE;AARF;AAUGzrB;AAVH,eADkB;AAAA,aAAnB;AADH,WADF;AAkBA;AACF;AACE;AA1EJ;;AA6EA,aACE;AAAA;AAAA,UAAK,KAAKyrB,WAAV,EAAuB,WAAU,cAAjC;AACE;AAAA;AAAA,YAAK,WAAU,OAAf;AACE;AAAA;AAAA,cAAK,WAAU,qBAAf;AACG,aAAClC,YAAD,IAAiB,CAAC6B,eAAlB,IAAqC98B,qBAAOwD;AAD/C,WADF;AAIGv6B,iBAAOA;AAJV,SADF;AAQGm1D,kBARH;AAUE;AAAA;AAAA,YAAK,WAAU,OAAf;AAAwBpB;AAAxB,SAVF;AAWE;AAXF,OADF;AAeD,KA9FM,CAAP;AA+FD,GAlGD;AAmGA;AACA,SAAOD,aAAa/8B,qBAAO+E,QAAP,CAAgBif,IAA7B,GAAoC+Z,gBAApC,GAAuDG,gBAA9D;AACD;;kBAEcvB,e;;;;;;;;;;ypBCnZf;;;;;;;;;;;;;;;;;;;AAmBA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA;AACA;AACA;AACA,IAAMpE,aAAa,EAAE9wD,MAAM,iBAAR,EAAnB;AACA,IAAMrR,QAAQ/C,iBAAOgD,WAAP,CAAmBkiE,UAAnB,CAAd;AACA;AACA,IAAMjjE,MAAM,KAAZ;AACA,IAAM8F,KAAK,iBAAX;AACA;AACA,IAAIijE,oBAAJ;AACA,IAAIC,uBAAJ;AACA,IAAIC,mBAAJ;;AAEA;AACA;AACA;;;;AAIA,SAASC,eAAT,CAAyB/qE,KAAzB,EAAgC;AAAA,kBACA,qBAAS,EAAT,CADA;AAAA;AAAA,MACvBwmB,OADuB;AAAA,MACdwkD,UADc;;AAAA,mBAEE,qBAAS,EAAT,CAFF;AAAA;AAAA,MAEvBrgD,QAFuB;AAAA,MAEbsgD,WAFa;;AAAA,mBAGI,qBAAS,EAAT,CAHJ;AAAA;AAAA,MAGvBC,SAHuB;AAAA,MAGZC,YAHY;;AAAA,mBAIU,qBAAS,KAAT,CAJV;AAAA;AAAA,MAIvBC,YAJuB;AAAA,MAITC,eAJS;;AAAA,mBAKJ,qBAAS,CAAT,CALI;AAAA;AAAA,MAKvB9X,KALuB;AAAA,MAKhB+U,QALgB,mBAKS;;AAEvC;;;AACA,wBAAU,YAAM;AACd3lE,UAAM6F,gBAAN,CAAuB,mBAAvB,EAA4C8iE,2BAA5C,EADc,CAC4D;AAC1E3oE,UAAMrC,aAAN,CAAoB,iBAApB,EAAuCgrE,2BAAvC;AACA3oE,UAAMrC,aAAN,CAAoB,gBAApB,EAAsCirE,oBAAtC;;AAEA,WAAO,YAAM;AACX5oE,YAAMkmB,iBAAN,CAAwB,mBAAxB,EAA6CyiD,2BAA7C,EADW,CACgE;AAC3E3oE,YAAMqc,eAAN,CAAsB,iBAAtB,EAAyCssD,2BAAzC;AACA3oE,YAAMqc,eAAN,CAAsB,gBAAtB,EAAwCusD,oBAAxC;AACD,KAJD;AAKD,GAVD,EAUG,EAVH;;AAYA;AACA;AACA;AACA,WAASD,2BAAT,GAAuC;AACrC;AACA;AACAhD,aAAS;AAAA,aAAS/U,QAAQ,CAAjB;AAAA,KAAT,EAHqC,CAGP;AAC/B;AACD;AACA;AACA,WAASgY,oBAAT,CAA8B/qE,IAA9B,EAAoC;AAAA,QAC1B88B,OAD0B,GACP98B,IADO,CAC1B88B,OAD0B;AAAA,QACjB1Y,KADiB,GACPpkB,IADO,CACjBokB,KADiB;;;AAGlC,QAAMye,WAAWzjC,iBAAOonB,WAAP,EAAjB;AACA,QAAMwkD,UAAUnoC,aAAaze,KAA7B;;AAEA,QAAI0Y,WAAWA,QAAQ6T,cAAR,CAAuBxsC,MAAvB,GAAgC,CAA/C,EAAkD;AAChD,UAAIk3B,eAAJ;AACA,UAAIyB,QAAQsT,iBAAZ,EAA+B;AAC7B/U,iBAAYyB,QAAQ4T,YAApB;AACD,OAFD,MAEO;AACLrV,iBAAYyB,QAAQ4T,YAApB;AACD;AACD5T,cAAQ4T,YAAR,GAAuBrV,MAAvB;AACA,UAAMrV,WAAUilD,oBAAoBnuC,OAApB,CAAhB;AACA2tC,kBAAY;AAAA,4CAAoBS,YAApB,IAAkCllD,QAAlC;AAAA,OAAZ;;AAEA;AACA,UAAIglD,OAAJ,EAAa;AACXvlE,qBAAa2kE,WAAb;AACA3kE,qBAAa4kE,cAAb;AACA5kE,qBAAa6kE,UAAb;AACA;AACAE,mBAAWxkD,QAAX;AACA2kD,qBAAa,EAAb;AACAP,sBAAc1kE,WAAW,YAAM;AAC7BilE,uBAAa,QAAb;AACD,SAFa,EAEX,GAFW,CAAd;AAGAN,yBAAiB3kE,WAAW,YAAM;AAChCilE,uBAAa,WAAb;AACD,SAFgB,EAEd,IAFc,CAAjB;AAGAL,qBAAa5kE,WAAW,YAAM;AAC5B8kE,qBAAW,EAAX;AACAG,uBAAa,EAAb;AACD,SAHY,EAGV,KAHU,CAAb,CAbW,CAgBA;AACZ,OAjBD,MAiBO;AACL7C,iBAAS;AAAA,iBAAS/U,QAAQ,CAAjB;AAAA,SAAT,EADK,CACyB;AAC/B;AACF;AACF;;AAED;AACA;AACA,WAASoY,eAAT,GAA2B;AACzB1lE,iBAAa4kE,cAAb;AACA5kE,iBAAa6kE,UAAb;AACAK,iBAAa,QAAb;AACAE,oBAAgB,IAAhB;AACD;AACD;AACA,WAASO,SAAT,GAAqB;AACnBZ,eAAW,EAAX;AACAG,iBAAa,EAAb;AACAE,oBAAgB,KAAhB;AACD;AACD;AACA,WAASQ,eAAT,GAA2B;AACzBt/B,yBAAOyG,WAAP;AACD;AACD;AACA,WAAS84B,gBAAT,CAA0BppE,KAA1B,EAAiCovC,IAAjC,EAAuC;AACrCpvC,UAAM4wB,cAAN;AACA5wB,UAAM6/C,eAAN;AACAhW,yBAAO6F,YAAP,CAAoBN,IAApB;AACD;AACD;AACA,WAASi6B,eAAT,CAAyBrpE,KAAzB,EAAgCovC,IAAhC,EAAsCQ,GAAtC,EAA2C;AACzC5vC,UAAM4wB,cAAN;AACA5wB,UAAM6/C,eAAN;AACAhW,yBAAO8F,WAAP,CAAmBP,IAAnB,EAAyBQ,GAAzB;AACD;;AAED;AACA;AACA;;;;AAIA,WAASm5B,mBAAT,CAA6BnuC,OAA7B,EAAsC;AACpC,QAAIA,QAAQ2T,uBAAZ,EAAqC,OAAO,EAAP,CADD,CACY;AAChD,QAAMa,OAAOxU,UAAUA,QAAQmE,cAAlB,GAAmC,EAAhD;;AAFoC,gCAGD8K,qBAAOwF,kBAAP,CAA0BD,IAA1B,CAHC;AAAA,QAG5BE,SAH4B,yBAG5BA,SAH4B;AAAA,QAGjBG,WAHiB,yBAGjBA,WAHiB;;AAIpC,QAAIA,gBAAgB/tC,SAApB,EAA+B,OAAO,EAAP,CAJK,CAIM;AAC1C,WACE;AAAA;AAAA,QAAK,WAAU,cAAf,EAA8B,KAAKk5B,QAAQjzB,UAA3C;AACE;AAAA;AAAA,UAAK,WAAU,oBAAf;AAAqC2nC,iBAArC;AAAA;AAAA,OADF;AAEE;AAAA;AAAA;AACE,gBAAK,GADP;AAEE,qBAAU,qBAFZ;AAGE,mBAAS;AAAA,mBAAS85B,iBAAiBppE,KAAjB,EAAwBovC,IAAxB,CAAT;AAAA;AAHX;AAKGK;AALH,OAFF;AASE;AAAA;AAAA,UAAK,WAAU,WAAf;AAAA;AAA8B7U,gBAAQ4T,YAAtC;AAAA;AAAA,OATF;AAUE;AAAA;AAAA;AACE,gBAAK,GADP;AAEE,mBAAS;AAAA,mBAAS66B,gBAAgBrpE,KAAhB,EAAuBovC,IAAvB,EAA6BxU,QAAQjzB,UAArC,CAAT;AAAA;AAFX;AAAA,cAGMizB,QAAQjzB;AAHd,OAVF;AAAA;AAeE;AAAA;AAAA,UAAK,WAAU,cAAf;AACGgzC,eAAO/f,QAAQ6T,cAAR,CAAuBv0B,IAAvB,CAA4B,GAA5B,CAAP,EAAyCovD,IAAzC;AADH,OAfF;AAAA;AAAA,KADF;AAsBD;;AAED;AACA;AACA,MAAMh/B,aAAanlC,gCAAWimB,aAAX,EAAnB;;AA3I8B,8BA6IYye,qBAAOwH,eAAP,EA7IZ;AAAA,MA6ItBk4B,gBA7IsB,yBA6ItBA,gBA7IsB;AAAA,MA6IJC,WA7II,yBA6IJA,WA7II;;AA8I9B,MAAMC,oBAAoB5/B,qBAAOgJ,oBAAP,EAA1B;AACA,MAAM62B,yBAAyBD,kBAAkB75D,GAAlB,CAAsB;AAAA,WACnDm5D,oBAAoBnuC,OAApB,CADmD;AAAA,GAAtB,CAA/B;AAGA,MAAM+uC,iBAAiB9/B,qBAAOiJ,iBAAP,EAAvB;AACA,MAAM82B,qBAAqBD,eAAe/5D,GAAf,CAAmB;AAAA,WAC5Cm5D,oBAAoBnuC,OAApB,CAD4C;AAAA,GAAnB,CAA3B;;AAIA,MAAMivC,6BACJ;AAAA;AAAA;AACE;AAAA;AAAA;AACE,oCACEN,mBAAmB,gBAAnB,GAAsC,iBADxC,CADF;AAIE,iBAASN;AAJX;AAMGp/B,2BAAOwD,WANV;AAOE;AAAA;AAAA,UAAK,WAAU,eAAf;AAAgCk8B;AAAhC;AAPF,KADF;AAUE;AAAA;AAAA;AAAA;AAAA;AAVF,GADF;AAcA,MAAMO,kBACJ;AAAA;AAAA;AACE;AAAA;AAAA;AACE,oCACEN,cAAc,mBAAd,GAAoC,iBADtC,CADF;AAIE,iBAASP;AAJX;AAMGp/B,2BAAOwD,WANV;AAOE;AAAA;AAAA,UAAK,WAAU,eAAf;AAAgCm8B;AAAhC;AAPF,KADF;AAUE;AAAA;AAAA;AAAA;AAAA;AAVF,GADF;;AAeA,SACE;AAAA;AAAA;AACE,kCAAC,4BAAD,OADF;AAEE;AAAA;AAAA,QAAK,IAAG,aAAR;AACE;AAAA;AAAA;AACE,cAAG,eADL;AAEE,qBAAchB,SAAd,UAA2BE,eAAe,WAAf,GAA6B,EAAxD;AAFF;AAIG,SAACA,YAAD,IAAiB;AAAA;AAAA,YAAK,WAAU,qBAAf;AAAsC5kD;AAAtC;AAJpB,OADF;AAOE;AAAA;AAAA;AACE;AAAA;AAAA;AACE,gBAAG,iBADL;AAEE,6BAAc4kD,eAAe,WAAf,GAA6B,EAA3C,CAFF;AAGE,qBAASO;AAHX;AAKGY,oCALH;AAAA;AAK2CC;AAL3C,SADF;AAQE;AAAA;AAAA;AACE,gBAAG,eADL;AAEE,6BAAcpB,eAAe,WAAf,GAA6B,EAA3C,CAFF;AAGE,qBAASQ;AAHX;AAKE;AAAA;AAAA,cAAK,WAAU,iBAAf;AACGW,sCADH;AAEE;AAAA;AAAA,gBAAK,WAAU,qBAAf;AAAsCH;AAAtC,aAFF;AAGGI,2BAHH;AAIE;AAAA;AAAA,gBAAK,WAAU,qBAAf;AAAsCF;AAAtC,aAJF;AAKE;AAAA;AAAA,gBAAK,WAAU,YAAf;AACE;AAAA;AAAA,kBAAQ,WAAU,OAAlB,EAA0B,SAASV,SAAnC;AAAA;AAAA,eADF;AAIE;AAAA;AAAA,kBAAQ,WAAU,OAAlB,EAA0B,SAASC,eAAnC;AAAA;AAAA;AAJF;AALF;AALF;AARF;AAPF;AAFF,GADF;AA0CD;;AAED;AACA;kBACed,e;;;;;;;;;;ypBC9Qf;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA;AACA;AACA,IAAMjG,aAAa,EAAE9wD,MAAM,iBAAR,EAAnB;AACA,IAAMrR,QAAQ/C,iBAAOgD,WAAP,CAAmBkiE,UAAnB,CAAd;AACA;AACA,IAAMjjE,MAAM,KAAZ;AACA,IAAM8F,KAAK,iBAAX;;AAEA;AACA;AACA;;;;AAIA,SAAS8kE,eAAT,OAAqD;AAAA,MAA1Bl5B,KAA0B,QAA1BA,KAA0B;AAAA,MAAnBzB,IAAmB,QAAnBA,IAAmB;AAAA,MAAb7zB,GAAa,QAAbA,GAAa;AAAA,MAARw2B,CAAQ,QAARA,CAAQ;AAAA,MAALC,CAAK,QAALA,CAAK;;AAAA,kBACf,qBAAS,KAAT,CADe;AAAA;AAAA,MAC5CyzB,UAD4C;AAAA,MAChCC,aADgC;;AAGnD;;;AACA,wBAAU,YAAM;AACd,aAASvC,uBAAT,CAAiCrlE,IAAjC,EAAuC;AACrC4nE,oBAAc5nE,KAAKijC,sBAAnB;AACD;;AAED9gC,UAAMrC,aAAN,CAAoB,4BAApB,EAAkDulE,uBAAlD;;AAEA,WAAO,YAAM;AACXljE,YAAMqc,eAAN,CAAsB,4BAAtB,EAAoD6mD,uBAApD;AACD,KAFD;AAGD,GAVD,EAUG,EAVH;;AAYA;AACA;AACA;;;AAGA,WAAS6G,gBAAT,GAA4B;AAC1B,QAAMC,eAAepgC,qBAAOyI,sBAAP,CAA8BlD,IAA9B,EAAoC7zB,GAApC,CAArB;AACA,QAAM2uD,cAAcD,aAAahoE,MAAjC;AACA,QAAIioE,cAAc,CAAlB,EAAqB;AACnB;AACArgC,2BAAOkJ,UAAP,CAAkB;AAChB3D,kBADgB;AAEhBlB,2BAAmB,EAFH;AAGhBC,6BAAqB,EAHL;AAIhBK,sBAAcjzB;AAJE,OAAlB;AAMD,KARD,MAQO;AACL;AACA,UAAM4uD,cAAcF,aAAaG,OAAb,GAAuB3tC,IAAvB,CAA4B;AAAA,eAASgW,MAAM0J,KAAN,KAAgB,CAAzB;AAAA,OAA5B,CAApB;AACAtS,2BAAOkJ,UAAP,CAAkB;AAChB3D,kBADgB;AAEhBlB,2BAAmB,EAFH;AAGhBC,6BAAqBg8B,YAAYxiE,UAHjB;AAIhB6mC,sBAAcjzB;AAJE,OAAlB;AAMD;AACF;AACD;AACA;AACA,WAAS8uD,WAAT,GAAuB;AACrBxgC,yBAAOsH,sBAAP,CAA8BN,KAA9B,EAAqCzB,IAArC,EAA2C7zB,GAA3C;AACD;AACD;AACA;;;;AAIA,WAAS+uD,mBAAT,CAA6BtqE,KAA7B,EAAoCovC,IAApC,EAA0C;AACxCpvC,UAAM4wB,cAAN;AACA5wB,UAAM6/C,eAAN;AACAhW,yBAAO6F,YAAP,CAAoBN,IAApB;AACD;;AAED;AACA;AACA,MAAM66B,eAAepgC,qBAAOyI,sBAAP,CAA8BlD,IAA9B,EAAoC7zB,GAApC,CAArB;;AAEA;AACA,MAAMgvD,WACJ;AAAA;AAAA,MAAQ,SAASF,WAAjB,EAA8B,UAAU5E,UAAxC;AAAA;AAAA,GADF;;AAMA;AACA,MAAM+E,eAAe55D,KAAKghC,GAAL,CAASC,OAAOlzC,MAAhB,EAAwBvC,OAAOquE,WAA/B,CAArB;AACA,MAAMC,mBAAsBF,eAAex4B,CAAf,GAAmB,GAAzC,OAAN;;AAxEmD,8BA0EhBnI,qBAAOwF,kBAAP,CAA0BD,IAA1B,CA1EgB;AAAA,MA0E3CE,SA1E2C,yBA0E3CA,SA1E2C;AAAA,MA0EhCG,WA1EgC,yBA0EhCA,WA1EgC;;AA4EnD,SACE;AAAC,4BAAD;AAAA;AACE;AAAA;AAAA;AACE,mBAAU,eADZ;AAEE,eAAO,EAAElD,MAASwF,CAAT,OAAF,EAAkBE,KAAQD,CAAR,OAAlB,EAAiCmO,WAAWuqB,gBAA5C,EAFT;AAGE,iBAAS;AAAA,iBAAK5pE,EAAE++C,eAAF,EAAL;AAAA;AAHX;AAKE;AAAA;AAAA,UAAK,WAAU,QAAf;AACE;AAAA;AAAA,YAAK,WAAU,cAAf;AAAA;AACevQ,mBADf;AAC0B,aAD1B;AAEE;AAAA;AAAA,cAAG,MAAK,GAAR,EAAY,SAAS;AAAA,uBAASg7B,oBAAoBtqE,KAApB,EAA2BovC,IAA3B,CAAT;AAAA,eAArB;AACGK;AADH;AAFF,SADF;AAOG,SAACg2B,UAAD,IACC;AAAA;AAAA,YAAK,WAAU,UAAf,EAA0B,SAAS4E,WAAnC;AAAA;AAAA;AARJ,OALF;AAkBE;AAAA;AAAA,UAAK,WAAU,iBAAf;AACGJ,qBAAar6D,GAAb,CAAiB;AAAA,iBAChB,8BAAC,mBAAD;AACE,kBAAMw/B,IADR;AAEE,iBAAKqD,MAAM9qC,UAFb;AAGE,iBAAK4T,GAHP;AAIE,iBAAKk3B,MAAM9qC;AAJb,YADgB;AAAA,SAAjB,CADH;AASG,SAAC89D,UAAD,IAAelqD,GAAf,IACC;AACE,qBAAU,KADZ;AAEE,uBAAY,2BAFd;AAGE,wBAHF;AAIE,mBAASyuD;AAJX,UAVJ;AAiBG,SAACzuD,GAAD,IAAQ0uD,aAAahoE,MAAb,GAAsB,CAA9B,IACC;AAAA;AAAA,YAAK,WAAU,OAAf,EAAuB,OAAO,EAAE+sB,WAAW,QAAb,EAA9B;AAAA;AAAA;AAlBJ,OAlBF;AAyCE;AAAA;AAAA,UAAK,WAAU,YAAf;AAA6Bu7C;AAA7B;AAzCF;AADF,GADF;AA+CD;;AAED;AACA;kBACeR,e;;;;;;;;;;ypBC9Kf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;AAEA;AACA;AACA;AACA,IAAM3H,aAAa,EAAE9wD,MAAM,oBAAR,EAAnB;AACA,IAAMrR,QAAQ/C,iBAAOgD,WAAP,CAAmBkiE,UAAnB,CAAd;AACA;AACA,IAAMjjE,MAAM,IAAZ;AACA,IAAM8F,KAAK,oBAAX;;AAEA;AACA;AACA,SAAS0lE,kBAAT,GAA8B;AAC5B,MAAMpvD,MAAMsuB,qBAAO6E,gBAAP,EAAZ;;AAD4B,kBAEE,qBAAS,EAAT,CAFF;AAAA;AAAA,MAErBk8B,OAFqB;AAAA,MAEZC,UAFY,kBAEgB;;;AAFhB,mBAGF,qBAAS,GAAT,CAHE;AAAA;AAAA,MAGrBha,KAHqB;AAAA,MAGd+U,QAHc;;AAK5B;;;AACA,wBAAU,YAAM;AACd3lE,UAAM6F,gBAAN,CAAuB,cAAvB,EAAuCu9D,0BAAvC;AACApjE,UAAMrC,aAAN,CAAoB,0BAApB,EAAgDktE,iBAAhD;AACA7qE,UAAMrC,aAAN,CAAoB,0BAApB,EAAgDmtE,kBAAhD;AACA9qE,UAAMrC,aAAN,CAAoB,8BAApB,EAAoDotE,sBAApD;;AAEA,WAAO,YAAM;AACX/qE,YAAMkmB,iBAAN,CAAwB,cAAxB,EAAwCk9C,0BAAxC;AACApjE,YAAMqc,eAAN,CAAsB,0BAAtB,EAAkDwuD,iBAAlD;AACA7qE,YAAMqc,eAAN,CAAsB,0BAAtB,EAAkDyuD,kBAAlD;AACA9qE,YAAMqc,eAAN,CAAsB,8BAAtB,EAAsD0uD,sBAAtD;AACD,KALD;AAMD,GAZD,EAYG,EAZH;;AAcA;AACA;;AAEA;AACA;AACA,WAAS3H,0BAAT,CAAoCvlE,IAApC,EAA0C;AACxC;AACA;AACA;AACA8nE,aAAS;AAAA,aAAS/U,QAAQ,CAAjB;AAAA,KAAT,EAJwC,CAIV;AAC/B;AACD;AACA;;;;;;;;;AASA,WAASia,iBAAT,CAA2BhtE,IAA3B,EAAiC;AAC/B,QAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,mBAAhB,EAAqCnH,IAArC;AACT;AACA,QAAIA,KAAK+yC,KAAL,KAAenvC,SAAnB,EACE,MAAM,IAAIW,KAAJ,2DACoDwE,KAAKC,SAAL,CAAehJ,IAAf,CADpD,CAAN;AAGF,QACEA,KAAK8xB,QAAL,KAAkBluB,SAAlB,IACA5D,KAAK8xB,QAAL,CAAcmiB,CAAd,KAAoBrwC,SADpB,IAEA5D,KAAK8xB,QAAL,CAAcoiB,CAAd,KAAoBtwC,SAHtB,EAKE,MAAM,IAAIW,KAAJ,mEAC4DwE,KAAKC,SAAL,CAC9DhJ,IAD8D,CAD5D,CAAN;AAKF;AACA+sE,eAAW;AAAA,0CAAgBI,QAAhB,IAA0BntE,IAA1B;AAAA,KAAX;AACA;AACA;AACA+rC,yBAAOkH,oBAAP,CAA4BjzC,KAAK+yC,KAAjC,EAAwC,EAAEzB,MAAMtxC,KAAKsxC,IAAb,EAAmB1xC,QAAQ,IAA3B,EAAxC;AACD;AACD;AACA,WAASqtE,kBAAT,CAA4BjtE,IAA5B,EAAkC;AAChC,QAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAY,oBAAZ,EAAkCnB,IAAlC;AACT+sE,eAAW;AAAA,aAAYI,SAAS5sD,MAAT,CAAgB;AAAA,eAAOkzB,IAAInC,IAAJ,KAAatxC,KAAKsxC,IAAzB;AAAA,OAAhB,CAAZ;AAAA,KAAX;AACD;AACD;AACA,WAAS47B,sBAAT,CAAgCltE,IAAhC,EAAsC;AACpC,QAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAY,wBAAZ,EAAsCnB,IAAtC;AACT+sE,eAAW,EAAX;AACD;;AAED;AACA;;AAEA,SACE;AAAA;AAAA,MAAK,WAAU,oBAAf;AACGD,YAAQh7D,GAAR,CAAY;AAAA,aACX,8BAAC,yBAAD;AACE,aAAK2hC,IAAInC,IADX;AAEE,eAAOmC,IAAIV,KAFb;AAGE,cAAMU,IAAInC,IAHZ;AAIE,aAAK7zB,GAJP;AAKE,WAAGg2B,IAAI3hB,QAAJ,CAAamiB,CALlB;AAME,WAAGR,IAAI3hB,QAAJ,CAAaoiB;AANlB,QADW;AAAA,KAAZ;AADH,GADF;AAcD;;AAED;AACA;kBACe24B,kB;;;;;;;;;;ACtJf;;;;AACA;;;;;;AAEA;AACA;;AAEA;AACA;AAxBA;;;;;;;;;;;;;;;;;AAyBA,SAASO,aAAT,OAA0E;AAAA,MAAjDr6B,KAAiD,QAAjDA,KAAiD;AAAA,MAA1C3pC,KAA0C,QAA1CA,KAA0C;AAAA,MAAnCuqD,iBAAmC,QAAnCA,iBAAmC;AAAA,MAAhBd,QAAgB,QAAhBA,QAAgB;AAAA,MAANvd,EAAM,QAANA,EAAM;;AACxE,MAAI+3B,aAAJ;AACA,MAAIxa,QAAJ,EAAc;AACZ,QAAIc,iBAAJ,EAAuB0Z,OAAOthC,qBAAO0D,2BAAd,CAAvB,KACK,IAAIrmC,UAAU,CAAd,EAAiBikE,OAAOthC,qBAAO0D,2BAAd,CAAjB,KACA49B,OAAOthC,qBAAO4D,yBAAd;AACN,GAJD,MAIO;AACL;AACA,QAAIgkB,iBAAJ,EAAuB0Z,OAAOthC,qBAAOyD,kBAAd,CAAvB,KACK,IAAIpmC,UAAU,CAAd,EAAiBikE,OAAOthC,qBAAOyD,kBAAd,CAAjB,KACA69B,OAAOthC,qBAAO2D,gBAAd;AACN;;AAED,SACE;AAAA;AAAA,MAAQ,IAAIqD,KAAZ,EAAmB,SAASuC,EAA5B,EAAgC,WAAU,eAA1C;AACG+3B,QADH;AAEE;AAAA;AAAA,QAAK,uBAAoB1Z,oBAAoB,QAApB,GAA+B,EAAnD,CAAL;AACGvqD,gBAAU,CAAV,GAAc,EAAd,GAAmBA;AADtB;AAFF,GADF;AAQD;;AAED;AACA;kBACegkE,a;;;;;;;;;;;;;;ypBClDf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;;;;AACA;;;;AACA;;;;;;AAEA;AACA;AACA;AACA,IAAM9I,aAAa,EAAE9wD,MAAM,aAAR,EAAnB;AACA,IAAMrR,QAAQ/C,iBAAOgD,WAAP,CAAmBkiE,UAAnB,CAAd;AACA,IAAMjjE,MAAM,KAAZ;AACA,IAAM8F,KAAK,aAAX;;AAEA;AACA;AACA,SAASmmE,WAAT,OAUG;AAAA,MATDlsE,EASC,QATDA,EASC;AAAA,wBARD4D,KAQC;AAAA,MARDA,KAQC,8BARO,EAQP;AAAA,6BAPDiN,UAOC;AAAA,MAPDA,UAOC,mCAPY,YAOZ;AAAA,mCANDC,oBAMC;AAAA,MANDA,oBAMC,yCANsB,KAMtB;AAAA,MALDq7D,QAKC,QALDA,QAKC;AAAA,MAJDt0B,QAIC,QAJDA,QAIC;AAAA,MAHDuE,QAGC,QAHDA,QAGC;AAAA,2BAFDgwB,QAEC;AAAA,MAFDA,QAEC,iCAFU,KAEV;AAAA,2BADD/a,QACC;AAAA,MADDA,QACC,iCADU,KACV;;AACD;AACA;AACA,MAAMgb,WAAW,mBAAO,IAAP,CAAjB;AACA,MAAMC,YAAY,mBAAO,CAAP,CAAlB;;AAJC,kBAMyB,qBAAS;AACjC1oE,WAAO,QAAOA,KAAP,yCAAOA,KAAP,OAAiB,QAAjB,GAA4BA,MAAMA,KAAlC,GAA0CA,KADhB;AAEjC4N,YAAQV,uBAAuBlN,MAAM4N,MAAN,IAAgBX,UAAvC,GAAoDA,UAF3B;AAGjCywC,yBAAqB19C,MAAM09C,mBAAN,IAA6B;AAHjB,GAAT,CANzB;AAAA;AAAA,MAMMirB,KANN;AAAA,MAMaC,QANb;;AAAA,mBAW6C,sBAX7C;AAAA;AAAA,MAWMh8D,iBAXN;AAAA,MAWyBi8D,gBAXzB,kBAWyD;;;AAXzD,mBAYiD,qBAAS,CACzD,EAAE7oE,OAAO,YAAT,EAAuBoN,SAAS,YAAhC,EADyD,CAAT,CAZjD;AAAA;AAAA,MAYM07D,iBAZN;AAAA,MAYyBC,oBAZzB;;AAgBD;AACA;;;AACA,wBAAU,YAAM;AACd;AACA,QAAM5oE,sBAAcwoE,KAAd,CAAN;AACAxoE,WAAOH,KAAP,GAAe,QAAOA,KAAP,yCAAOA,KAAP,OAAiB,QAAjB,GAA4BA,MAAMA,KAAlC,GAA0CA,KAAzD;AACAG,WAAOyN,MAAP,GAAgBV,uBAAuBlN,MAAM4N,MAAN,IAAgBX,UAAvC,GAAoDA,UAApE;;AAEA;AACA,QAAM+7D,gBAAgB1hE,gBAAMgF,KAAN,CAAYnM,OAAOH,KAAnB,CAAtB;AACA,QAAM0M,cACJs8D,cAAc7pE,MAAd,GAAuB,CAAvB,GAA2B6pE,cAAc,CAAd,EAAiBr8D,KAAjB,CAAuBD,WAAlD,GAAgE,EADlE;AAEAvM,WAAOu9C,mBAAP,GAA6Bp2C,gBAAMmG,aAAN,CAC3BtN,OAAOH,KADoB,EAE3B0M,WAF2B,EAG3BvM,OAAOyN,MAHoB,CAA7B;;AAMA;AACA,QAAMq7D,wBAAwB3hE,gBAAMkF,qBAAN,CAA4Bw8D,aAA5B,CAA9B;AACAH,qBAAiBI,wBAAwBA,sBAAsB7xD,IAAtB,CAA2B,GAA3B,CAAxB,GAA0D,EAA3E;AACA2xD,yBACEzhE,gBAAM0F,mBAAN,CAA0Bg8D,aAA1B,EAAyC7oE,OAAOyN,MAAhD,EAAwDV,oBAAxD,CADF;;AAIA;AACA07D,aAASzoE,MAAT;;AAEA;AACA,QAAI8zC,YAAY00B,MAAMjrB,mBAAN,KAA8Bv9C,OAAOu9C,mBAArD,EACEwrB,eAAe/oE,MAAf;AACH,GA7BD,EA6BG,CAACH,KAAD,EAAQiN,UAAR,CA7BH;AA8BA;AACA;AACA,wBAAU,YAAM;AACd,QAAIw7D,SAASU,OAAb,EAAsB;AACpBV,eAASU,OAAT,CAAiB1kB,cAAjB,GAAkCikB,UAAUS,OAA5C;AACAV,eAASU,OAAT,CAAiBxkB,YAAjB,GAAgC+jB,UAAUS,OAA1C;AACD;AACF,GALD,EAKG,CAACR,MAAM3oE,KAAP,CALH;;AAOA;AACA;AACA,WAASkpE,cAAT,CAAwB/oE,MAAxB,EAAgC;AAC9B;AACA,QAAM6oE,gBAAgB1hE,gBAAMgF,KAAN,CAAYnM,OAAOH,KAAnB,CAAtB;AACA,QAAM0M,cACJs8D,cAAc7pE,MAAd,GAAuB,CAAvB,GAA2B6pE,cAAc,CAAd,EAAiBr8D,KAAjB,CAAuBD,WAAlD,GAAgE,EADlE;AAEAvM,WAAOu9C,mBAAP,GAA6Bp2C,gBAAMmG,aAAN,CAC3BtN,OAAOH,KADoB,EAE3B0M,WAF2B,EAG3BvM,OAAOyN,MAHoB,CAA7B;;AAMA;AACA,QAAMw7D,kBAAkB,EAAEjkE,QAAQ,EAAV,EAAxB;AACAikE,oBAAgBjkE,MAAhB,CAAuB/I,EAAvB,GAA4BA,EAA5B;AACAgtE,oBAAgBjkE,MAAhB,CAAuBnF,KAAvB,GAA+BG,MAA/B;AACA8zC,aAASm1B,eAAT;AACD;;AAED;;;AAGA,WAASC,iBAAT,CAA2BnsE,KAA3B,EAAkC;AAChC;AACA,QAAMiD,sBAAcwoE,KAAd,CAAN;AACAxoE,WAAOH,KAAP,GAAe9C,MAAMiI,MAAN,CAAanF,KAA5B;AACA0oE,cAAUS,OAAV,GAAoBjsE,MAAMiI,MAAN,CAAas/C,cAAjC;AACAykB,mBAAe/oE,MAAf;AACD;AACD;AACA;;;AAGA,WAASmpE,kBAAT,CAA4BpsE,KAA5B,EAAmC;AACjC;AACA,QAAMiD,sBAAcwoE,KAAd,CAAN;AACAxoE,WAAOyN,MAAP,GAAgB1Q,MAAMiI,MAAN,CAAanF,KAA7B;AACAkpE,mBAAe/oE,MAAf;AACD;;AAED;AACA;AACA,MAAMopE,WAAW;AAAA;AAAA;AAAMZ,UAAMjrB;AAAZ,GAAjB;;AAEA,MAAMxuB,SACJ;AAAA;AAAA,MAAK,WAAU,QAAf;AACE;AAAA;AAAA,QAAK,WAAU,QAAf;AACE;AACE,aAAKu5C,QADP;AAEE,YAAIrsE,EAFN;AAGE,mBAAWwQ,sBAAsB,EAAtB,GAA2B,eAA3B,GAA6C,EAH1D;AAIE,kBAAUy8D,iBAJZ;AAKE,eAAOV,MAAM3oE,KALf;AAME,qBAAY,KANd;AAOE,kBAAUytD;AAPZ,QADF;AAUE;AAAA;AAAA,UAAK,WAAU,WAAf;AAA4B7gD;AAA5B;AAVF;AADF,GADF;;AAiBA,MAAM48D,SACJ;AAAA;AAAA,MAAK,WAAU,QAAf;AACE;AAAA;AAAA,QAAK,WAAU,MAAf;AAAuBhxB;AAAvB,KADF;AAEE;AAAA;AAAA,QAAK,WAAU,MAAf;AAAA;AAAA,KAFF;AAGE;AACE,WAAKiwB,QADP;AAEE,UAAIrsE,EAFN;AAGE,iBAAWwQ,sBAAsB,EAAtB,GAA2B,eAA3B,GAA6C,EAH1D;AAIE,gBAAUy8D,iBAJZ;AAKE,aAAOV,MAAM3oE,KALf;AAME,gBAAUytD;AANZ,MAHF;AAWE;AAAA;AAAA,QAAK,WAAU,WAAf;AAA4B7gD;AAA5B,KAXF;AAYE;AAAA;AAAA,QAAK,WAAU,MAAf;AAAA;AAAA,KAZF;AAaGM,2BACC;AAAA;AAAA;AACE,kBAAUo8D,kBADZ;AAEE,eAAOX,MAAM/6D,MAFf;AAGE,kBAAU,CAACV;AAHb;AAKG47D,wBAAkBh8D,GAAlB,CAAsB;AAAA,eACrB;AAAA;AAAA,YAAQ,KAAK2rC,OAAOz4C,KAApB,EAA2B,OAAOy4C,OAAOz4C,KAAzC;AACGy4C,iBAAOrrC;AADV,SADqB;AAAA,OAAtB;AALH,KADD,GAaC;AAAA;AAAA;AAAMu7D,YAAMjrB;AAAZ;AA1BJ,GADF;;AAgCA,MAAI6qB,QAAJ,EAAc,OAAOgB,QAAP;AACd,MAAIf,QAAJ,EAAc,OAAOt5C,MAAP;AACd,SAAOs6C,MAAP;AACD;;AAED;AACA;kBACelB,W;;;;;;;;;;ypBC/Of;;;;;;;;;;AAUA;AACA;;;AACA;;;;AACA;;;;;;;;AAEA;AACA;AACA,IAAMjsE,MAAM,KAAZ;;AAEA;AACA;AACA,SAASotE,OAAT,OAA4C;AAAA,MAAzB7uE,MAAyB,QAAzBA,MAAyB;AAAA,MAAjBI,IAAiB,QAAjBA,IAAiB;AAAA,MAAX0uE,OAAW,QAAXA,OAAW;;AAAA,kBACR,qBAAS,EAAT,CADQ;AAAA;AAAA,MACnCC,SADmC;AAAA,MACxBC,YADwB;;AAAA,mBAEN,qBAAS,EAAT,CAFM;AAAA;AAAA,MAEnCC,UAFmC;AAAA,MAEvBC,aAFuB;;AAAA,mBAGF,qBAAS,EAAT,CAHE;AAAA;AAAA,MAGnCC,YAHmC;AAAA,MAGrBC,eAHqB;;AAAA,mBAIA,qBAAS,CAAT,CAJA;AAAA;AAAA,MAInCC,aAJmC;AAAA,MAIpBC,gBAJoB;;AAAA,mBAKR,qBAAS,CAAT,CALQ;AAAA;AAAA,MAKnCC,SALmC;AAAA,MAKxBC,YALwB;;AAO1C,MAAMC,WAAW,mBAAO,IAAP,CAAjB;AACA,MAAMC,YAAY,mBAAO,IAAP,CAAlB;;AAEA;AACA;AACA;AACA,wBAAU,YAAM;AACdV,iBAAa5uE,IAAb;AACD,GAFD,EAEG,EAFH;AAGA;AACA;AACA,wBAAU,YAAM;AACd;AACA,QAAIJ,MAAJ,EAAY;AACV;AACA2vE;AACD;AACF,GAND,EAMG,CAAC3vE,MAAD,CANH;AAOA;AACA;AACA,wBAAU,YAAM;AACd;AACA;AACAkvE,kBAAcJ,OAAd;AACAa;AACD,GALD,EAKG,CAACb,OAAD,CALH;AAMA;AACA;AACA,wBAAU,YAAM;AACdc,oBAAgBxvE,IAAhB;AACD,GAFD,EAEG,CAACA,IAAD,CAFH;AAGA;AACA,wBAAU,YAAM;AACd;AACAwvE,oBAAgBxvE,IAAhB;AACD,GAHD,EAGG,CAACivE,aAAD,EAAgBE,SAAhB,CAHH;;AAKA;AACA;AACA,MAAMI,0BAA0B,SAA1BA,uBAA0B,GAAM;;AAEpC;AACA,QAAIF,SAASlB,OAAT,CAAiB/V,WAAjB,GAA+B,CAAnC,EAAsC;;AAEtC;AACA,QAAI2W,aAAa5qE,MAAb,GAAsB,CAAtB,IAA2BkrE,SAASlB,OAAT,CAAiB/V,WAAjB,GAA+B,CAA9D,EAAiE;AAC/D;AACD;;AAED,QAAMqX,mBAAmBf,QAAQnuD,MAAR,CAAe;AAAA,aAAOmvD,IAAI9uE,KAAX;AAAA,KAAf,EAAiCkR,GAAjC,CAAqC;AAAA,aAAO49D,IAAI9uE,KAAX;AAAA,KAArC,CAAzB;AACA,QAAM+uE,qBAAqBF,iBAAiBvoC,MAAjB,CAAwB,UAACxjC,CAAD,EAAIC,CAAJ;AAAA,aAAUD,IAAIC,CAAd;AAAA,KAAxB,EAAyC,CAAzC,CAA3B;AACA,QAAMisE,iBAAiBP,SAASlB,OAAT,CAAiB/V,WAAjB,GAA+BuX,kBAAtD;AACA,QAAME,YAAYnB,QAAQ58D,GAAR,CAChB;AAAA,aAAO49D,IAAI9uE,KAAJ,IAAagvE,kBAAkBlB,QAAQvqE,MAAR,GAAiBsrE,iBAAiBtrE,MAApD,CAApB;AAAA,KADgB,CAAlB;AAGA6qE,oBAAgBa,SAAhB;AACD,GAjBD;;AAmBA;AACA;AACA,MAAMC,eAAe,SAAfA,YAAe,CAAC5tE,KAAD,EAAQqkE,KAAR,EAAkB;AACrCrkE,UAAM4wB,cAAN;AACA5wB,UAAM6/C,eAAN;AACAutB,cAAUnB,OAAV,GAAoB;AAClB5H,kBADkB;AAElBwJ,cAAQ7tE,MAAM8tE,OAFI;AAGlBC,kBAAYlB,aAAaxI,KAAb,CAHM;AAIlB2J,sBAAgBnB,aAAaxI,QAAQ,CAArB,CAJE;AAKlB4J,wBAAkBpB,aAAaxI,KAAb,IAAsBwI,aAAaxI,QAAQ,CAArB,CAAtB,GAAgD;AALhD,KAApB;AAOD,GAVD;AAWA,MAAM6J,eAAe,SAAfA,YAAe,QAAS;AAC5B,QAAId,UAAUnB,OAAV,KAAsB,IAA1B,EAAgC;AAAA,+BAE5BmB,UAAUnB,OAFkB;AAAA,UACtB5H,KADsB,sBACtBA,KADsB;AAAA,UACfwJ,MADe,sBACfA,MADe;AAAA,UACPE,UADO,sBACPA,UADO;AAAA,UACKC,cADL,sBACKA,cADL;AAAA,UACqBC,gBADrB,sBACqBA,gBADrB;;AAG9B,UAAME,QAAQnuE,MAAM8tE,OAAN,GAAgBD,MAA9B;AACA,UAAMO,yCAAgBvB,YAAhB,EAAN;AACAuB,gBAAU/J,KAAV,IAAmBzzD,KAAKghC,GAAL,CAAShhC,KAAKqjB,GAAL,CAAS,EAAT,EAAa85C,aAAaI,KAA1B,CAAT,EAA2CF,gBAA3C,CAAnB,CAL8B,CAKmD;AACjFG,gBAAU/J,QAAQ,CAAlB,IAAuBzzD,KAAKghC,GAAL,CACrBhhC,KAAKqjB,GAAL,CAAS,EAAT,EAAa+5C,iBAAiBG,KAA9B,CADqB,EAErBF,gBAFqB,CAAvB;AAIAnB,sBAAgBsB,SAAhB;AACD;AACF,GAbD;AAcA,MAAMC,aAAa,SAAbA,UAAa,GAAM;AACvBjB,cAAUnB,OAAV,GAAoB,IAApB,CADuB,CACG;AAC3B,GAFD;;AAIA;AACA;AACA,WAASqC,cAAT,CAAwBtuE,KAAxB,EAA+BqkE,KAA/B,EAAsC;AACpCrkE,UAAM4wB,cAAN;AACA5wB,UAAM6/C,eAAN;AACAmtB,qBAAiB3I,KAAjB;AACA6I,iBAAaD,YAAY,CAAC,CAA1B;AACD;;AAED;AACA;AACA,WAASsB,YAAT,CAAsB/rE,GAAtB,EAA2BmvD,KAA3B,EAAkCzS,KAAlC,EAAyC;AACvC,QAAM0S,aAAa,6BAAID,KAAJ,GAAWpT,IAAX,CAAgB,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC3C,UAAItC,GAAJ,EAASH,QAAQC,GAAR,CAAY,cAAZ,EAA4BuC,EAAEgB,GAAF,CAA5B,EAAoCf,EAAEe,GAAF,CAApC;AACT,UAAI,CAAChB,EAAEgB,GAAF,CAAD,IAAW,CAACf,EAAEe,GAAF,CAAhB,EAAwB,OAAO,CAAP;AACxB,UAAI,CAAChB,EAAEgB,GAAF,CAAL,EAAa,OAAO,CAAP,CAH8B,CAGpB;AACvB,UAAI,CAACf,EAAEe,GAAF,CAAL,EAAa,OAAO,CAAC,CAAR,CAJ8B,CAInB;AACxB,UAAIhB,EAAEgB,GAAF,IAASf,EAAEe,GAAF,CAAb,EAAqB,OAAO08C,KAAP;AACrB,UAAI19C,EAAEgB,GAAF,IAASf,EAAEe,GAAF,CAAb,EAAqB,OAAO08C,QAAQ,CAAC,CAAhB;AACrB,aAAO,CAAP;AACD,KARkB,CAAnB;AASA,WAAO0S,UAAP;AACD;AACD;AACA,WAAS4c,gBAAT,CAA0BhsE,GAA1B,EAA+BmvD,KAA/B,EAAsCzS,KAAtC,EAA6C;AAC3C,QAAM0S,aAAa,6BAAID,KAAJ,GAAWpT,IAAX,CAAgB,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC3C;AACA;AACA;AACA,UAAID,EAAEgB,GAAF,EAAO8vD,GAAP,GAAa7wD,EAAEe,GAAF,EAAO8vD,GAAxB,EAA6B,OAAOpT,KAAP;AAC7B,UAAI19C,EAAEgB,GAAF,EAAO8vD,GAAP,GAAa7wD,EAAEe,GAAF,EAAO8vD,GAAxB,EAA6B,OAAOpT,QAAQ,CAAC,CAAhB;AAC7B,aAAO,CAAP;AACD,KAPkB,CAAnB;AAQA,WAAO0S,UAAP;AACD;AACD;AACA,WAAS6c,cAAT,CAAwBjsE,GAAxB,EAA6BmvD,KAA7B,EAAoCzS,KAApC,EAA2C;AACzC,QAAM0S,aAAa,6BAAID,KAAJ,GAAWpT,IAAX,CAAgB,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC3C,UAAM+8C,OAAOtxB,OAAO1rB,EAAEgB,GAAF,CAAP,CAAb;AACA,UAAMi8C,OAAOvxB,OAAOzrB,EAAEe,GAAF,CAAP,CAAb;AACA,UAAI+5B,MAAMiiB,IAAN,KAAejiB,MAAMkiB,IAAN,CAAnB,EAAgC,OAAO,CAAP;AAChC,UAAIliB,MAAMiiB,IAAN,CAAJ,EAAiB,OAAO,CAAP,CAJ0B,CAIhB;AAC3B,UAAIjiB,MAAMkiB,IAAN,CAAJ,EAAiB,OAAO,CAAC,CAAR,CAL0B,CAKf;AAC5B,UAAID,OAAOC,IAAX,EAAiB,OAAOS,KAAP;AACjB,UAAIV,OAAOC,IAAX,EAAiB,OAAOS,QAAQ,CAAC,CAAhB;AACjB,aAAO,CAAP;AACD,KATkB,CAAnB;AAUA,WAAO0S,UAAP;AACD;AACD;AACA,WAAS8c,aAAT,CAAuBlsE,GAAvB,EAA4BmvD,KAA5B,EAAmCzS,KAAnC,EAA0C;AACxC,QAAM0S,aAAa,6BAAID,KAAJ,GAAWpT,IAAX,CAAgB,UAAC/8C,CAAD,EAAIC,CAAJ,EAAU;AAC3C,UAAM+8C,OAAOp0C,gBAAMgF,KAAN,CAAY5N,EAAEgB,GAAF,CAAZ,CAAb,CAD2C,CACT;AAClC,UAAMi8C,OAAOr0C,gBAAMgF,KAAN,CAAY3N,EAAEe,GAAF,CAAZ,CAAb;AACA;AACA,UAAIg8C,KAAKv8C,MAAL,GAAc,CAAd,IAAmBw8C,KAAKx8C,MAAL,GAAc,CAArC,EAAwC,OAAOi9C,KAAP;AACxC,UAAIV,KAAKv8C,MAAL,GAAc,CAAd,IAAmBw8C,KAAKx8C,MAAL,GAAc,CAArC,EAAwC,OAAOi9C,QAAQ,CAAC,CAAhB;AACxC,UAAIV,KAAKv8C,MAAL,GAAc,CAAd,IAAmBw8C,KAAKx8C,MAAL,GAAc,CAArC,EAAwC,OAAO,CAAP;AACxC;AACA,UAAMg9C,KAAKT,KAAK,CAAL,EAAQ/uC,KAAR,CAAcD,WAAzB;AACA,UAAMuwB,KAAK0e,KAAK,CAAL,EAAQhvC,KAAR,CAAcD,WAAzB;AACA,UAAIm/D,kBAAJ;AACA,UAAI1vB,GAAGp0C,IAAH,KAAYk1B,GAAGl1B,IAAnB,EAAyB;AACvB8jE,oBAAY1vB,GAAGp0C,IAAH,GAAUk1B,GAAGl1B,IAAzB;AACD,OAFD,MAEO,IAAIo0C,GAAG/vC,KAAH,KAAa6wB,GAAG7wB,KAApB,EAA2B;AAChCy/D,oBAAY1vB,GAAG/vC,KAAH,GAAW6wB,GAAG7wB,KAA1B;AACD,OAFM,MAEA,IAAI+vC,GAAGtuC,GAAH,KAAWovB,GAAGpvB,GAAlB,EAAuB;AAC5Bg+D,oBAAY1vB,GAAGtuC,GAAH,GAASovB,GAAGpvB,GAAxB;AACD,OAFM,MAEA,IAAIsuC,GAAGE,IAAH,KAAYpf,GAAGof,IAAnB,EAAyB;AAC9BwvB,oBAAY1vB,GAAGE,IAAH,GAAUpf,GAAGof,IAAzB;AACD,OAFM,MAEA,IAAIF,GAAGG,MAAH,KAAcrf,GAAGqf,MAArB,EAA6B;AAClCuvB,oBAAY1vB,GAAGG,MAAH,GAAYrf,GAAGqf,MAA3B;AACD,OAFM,MAEA,IAAIH,GAAGI,MAAH,KAActf,GAAGsf,MAArB,EAA6B;AAClCsvB,oBAAY1vB,GAAGI,MAAH,GAAYtf,GAAGsf,MAA3B;AACD;AACD,aAAOsvB,YAAYzvB,KAAnB;AACD,KAzBkB,CAAnB;AA0BA,WAAO0S,UAAP;AACD;AACD;AACA;AACA;;;;;;;AAOA,WAASgd,iBAAT,CAA2B9rE,KAA3B,EAAkC0qE,GAAlC,EAAuCqB,GAAvC,EAA4C;AAC1C,QAAMC,iBAAiBtB,IAAIxb,QAA3B;AACA,QAAI8c,cAAJ,EAAoB;AAClB,UAAI,OAAOA,cAAP,KAA0B,UAA9B,EACE,MAAM,IAAIzsE,KAAJ,CAAU,sBAAV,EAAkCmrE,GAAlC,CAAN;AACF,aAAOsB,eAAehsE,KAAf,CAAP;AACD,KAJD,MAIO;AACL;AACA,cAAQ0qE,IAAI/8D,IAAZ;AACE,aAAK,UAAL;AACE,iBAAO3N,MAAMuvD,IAAb;AACF,aAAK,OAAL;AACA,aAAK,QAAL;AACA,aAAK,MAAL;AACA;AACE,iBAAOvvD,KAAP;AAPJ;AASD;AACF;AACD;AACA;AACA,WAASwqE,eAAT,CAAyB3b,KAAzB,EAAgC;AAC9B,QAAIgb,WAAW1qE,MAAX,GAAoB,CAAxB,EAA2B,OAAO,EAAP;;AAE3B,QAAM8sE,eAAepC,WAAWI,aAAX,EAA0B9a,MAA/C;AACA,QAAMzvD,MAAMmqE,WAAWI,aAAX,EAA0BjvE,IAAtC;AACA,QAAI8zD,aAAa,EAAjB;AACA,QAAImd,YAAJ,EAAkB;AAChB,UAAI,OAAOA,YAAP,KAAwB,UAA5B,EAAwC,MAAM,IAAI1sE,KAAJ,CAAU,gBAAV,CAAN;AACxCuvD,mBAAamd,aAAavsE,GAAb,EAAkBmvD,KAAlB,EAAyBsb,SAAzB,CAAb;AACD,KAHD,MAGO;AACL;AACA,cAAQN,WAAWI,aAAX,EAA0Bt8D,IAAlC;AACE,aAAK,OAAL;AACEmhD,uBAAa8c,cAAclsE,GAAd,EAAmBmvD,KAAnB,EAA0Bsb,SAA1B,CAAb;AACA;AACF,aAAK,UAAL;AACErb,uBAAa4c,iBAAiBhsE,GAAjB,EAAsBmvD,KAAtB,EAA6Bsb,SAA7B,CAAb;AACA;AACF,aAAK,MAAL;AACA,aAAK,QAAL;AACErb,uBAAa6c,eAAejsE,GAAf,EAAoBmvD,KAApB,EAA2Bsb,SAA3B,CAAb;AACA;AACF,aAAK,MAAL;AACA;AACErb,uBAAa2c,aAAa/rE,GAAb,EAAkBmvD,KAAlB,EAAyBsb,SAAzB,CAAb;AAbJ;AAeD;AACDP,iBAAa9a,UAAb;AACD;AACD;AACA;AACA,SACE;AAAA;AAAA;AACE,iBAAU,SADZ;AAEE,WAAKub,QAFP;AAGE,mBAAae,YAHf;AAIE,iBAAWG;AAJb;AAME;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AACG1B,qBAAW/8D,GAAX,CAAe,UAAC49D,GAAD,EAAMqB,GAAN;AAAA,mBACd;AAAA;AAAA;AACE,qBAAKA,GADP;AAEE,2BAAW9B,kBAAkB8B,GAAlB,GAAwB,UAAxB,GAAqC,EAFlD;AAGE,4BAAUhC,aAAagC,GAAb;AAHZ;AAKE;AAAA;AAAA,kBAAK,SAAS;AAAA,2BAAKP,eAAextE,CAAf,EAAkB+tE,GAAlB,CAAL;AAAA,mBAAd;AAA4CrB,oBAAIzb;AAAhD,eALF;AAME;AACE,2BAAU,eADZ;AAEE,6BAAa;AAAA,yBAAK6b,aAAa9sE,CAAb,EAAgB+tE,GAAhB,CAAL;AAAA,iBAFf;AAGE,wBAAQA,QAAQlC,WAAW1qE,MAAX,GAAoB,CAHtC,CAGyC;AAHzC;AANF,aADc;AAAA,WAAf;AADH;AADF,OADF;AAmBE;AAAA;AAAA;AACGwqE,kBAAU78D,GAAV,CAAc,UAAC+hD,KAAD,EAAQkd,GAAR;AAAA,iBACb;AAAA;AAAA,cAAI,KAAKA,GAAT,EAAc,OAAO,EAAEzuB,SAASuR,MAAMr7C,IAAN,CAAW+pC,oBAAtB,EAArB;AACGssB,uBAAW/8D,GAAX,CAAe,UAAC49D,GAAD,EAAMqB,GAAN;AAAA,qBACd;AAAA;AAAA,kBAAI,KAAKA,GAAT;AAAeD,kCAAkBjd,MAAM6b,IAAI1vE,IAAV,CAAlB,EAAmC0vE,GAAnC,EAAwCqB,GAAxC;AAAf,eADc;AAAA,aAAf;AADH,WADa;AAAA,SAAd;AADH;AAnBF;AANF,GADF;AAsCD;;AAED;AACA;kBACetC,O;;;;;;;;;;;;;;AC3Sf;AACA;;;;;;;;AAQA,IAAMlwE,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQ6xB,M,GAAkBH,U,CAAlBG,M;IAAQsyB,K,GAAUzyB,U,CAAVyyB,K;;AAChB,IAAMvjD,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAI6C,MAAM,KAAV;;AAEA;AACA;AACA;;IACMgnD,U;;;AACJ,sBAAY7oD,KAAZ,EAAmB;AAAA;;AAAA,wHACXA,KADW;;AAEjB,UAAKG,KAAL,GAAa,EAAEu6C,YAAY,IAAd,EAAb;AAFiB;AAGlB,G,CAAC;;;;6BAEO;AAAA,UACDgI,WADC,GACe,KAAK1iD,KADpB,CACD0iD,WADC;;;AAGP,aACE;AAAA;AAAA;AACE,iBAAO;AACLphD,6BAAiB,wBADZ;AAELC,qBAAS;AAFJ;AADT;AAME;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEE;AAAA;AAAA;AAAA;AAAA,WAFF;AAIE;AAAA;AAAA;AAAA;AAAA,WAJF;AAKE;AAAA;AAAA;AAAA;AAC4D,eAD5D;AAEE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,eADF;AAAA;AAAA;AAFF,WALF;AAYE;AAAA;AAAA;AAAA;AAAA,WAZF;AAaE;AAAA;AAAA;AAAA;AACe;AAAA;AAAA;AAAA;AAAA,aADf;AAAA;AAKoC,eALpC;AAME;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,eADF;AAAA;AAAA;AANF,WAbF;AAuBE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,eADF;AAEE;AAAA;AAAA;AAAA;AAE8B;AAF9B;AAFF;AADF,WAvBF;AAiCE;AAAA;AAAA;AAAA;AAAA,WAjCF;AAkCE;AAAA;AAAA;AAAA;AAM2C,eAN3C;AAOE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,eADF;AAAA;AAAA;AAPF,WAlCF;AA8CE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,eADF;AAEE;AAAA;AAAA;AAAA;AAIkB,mBAJlB;AAKE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,mBADF;AAAA;AAAA;AALF,eAFF;AAYE;AAAA;AAAA;AAAA;AAAA,eAZF;AAaE;AAAA;AAAA;AAAA;AAOqD,mBAPrD;AAQE;AAAA;AAAA;AAAA;AAAA;AARF;AAbF;AADF,WA9CF;AA6EE;AAAA;AAAA;AAAA;AAAA,WA7EF;AA8EE;AAAA;AAAA;AAAA;AAIwC;AAJxC,WA9EF;AAqFE;AAAA;AAAA;AAAA;AAAA,WArFF;AAsFE;AAAA;AAAA;AAAA;AAGkE;AAHlE,WAtFF;AA2FE;AAAA;AAAA;AACG,eADH;AAEE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,eADF;AAEE;AAAA;AAAA;AAAA;AAAA,eAFF;AAUE;AAAA;AAAA;AAAA;AAAA,eAVF;AAWE;AAAA;AAAA;AAAA;AAAA,eAXF;AAwBE;AAAA;AAAA;AAAA;AAAA,eAxBF;AAyBE;AAAA;AAAA;AAAA;AAAA;AAzBF;AAFF,WA3FF;AAiIE;AAAA;AAAA;AAAA;AAAA,WAjIF;AAkIE;AAAA;AAAA;AAAA;AAAA;AAlIF;AANF,OADF;AAqJD;;;;EA9JsB3B,OAAO4B,S,GA+J9B;;AAEF;AACA;;;AACA5C,OAAOC,OAAP,GAAiBgqD,UAAjB;;;;;;;;;;ACxLA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,IAAM+N,KAAK53D,QAAQ,IAAR,CAAX;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA,IAAM8F,KAAK,mBAAX;AACA;AACA,IAAIhF,QAAQ,IAAZ;;AAEA;AACA;AACA,IAAIk0D,UAAU,GAAd;AACA,IAAIC,WAAW,GAAf;AACA,IAAI4a,kBAAkB,CAAC,CAAvB,C,CAA0B;AAC1B;AACA,IAAM3a,oBAAoB;AACxB;AACAC,UAAQ;AACNviB,OAAG,GADG;AAENC,OAAG;AAFG,GAFgB;AAMxBuiB,UAAQ;AACN;AACAC,aAAS,IAFH;AAGN;AACAC,cAAU,CAAC,GAJL,EAIU;AAChB;AACAC,iBAAa,CANP,EAMU;AAChBC,iBAAa,GAPP,CAOW;AACjB;AARM,GANgB;AAgBxBC,WAAS;AACP;AACA;AACAJ,aAAS,IAHF;AAIPC,cAAU,IAJH,EAIS;AAChB;AACA;AACAI,gBAAY,CAPL,EAOQ;AACf;AACAC,YAAQ,CATD,CASG;AATH,GAhBe;AA2BxBC,UAAQ;AACN;AACA;AACA;AACA;AACA;AACAP,aAAS,IANH;AAONC,cAAU,IAPJ,EAOU;AAChB1iB,OAAG;AARG,GA3BgB;AAqCxBijB,UAAQ;AACN;AACA;AACA;AACA;AACA;AACAR,aAAS,IANH;AAONC,cAAU,IAPJ,EAOU;AAChBziB,OAAG;AARG,GArCgB;AA+CxBijB,QAAM;AACJT,aAAS,IADL;AAEJU,cAAU,EAFN,EAEU;AACd;AACA;AACA;AACA;AACAL,gBAAY,CAPR,CAOU;AAPV;AA/CkB,CAA1B,C,CAwDG;;AAEH;AACA;;IACMoH,U;AACJ,sBAAY9G,WAAZ,EAAyBr+B,QAAzB,EAAmC;AAAA;;AAAA;;AACjC,SAAKq+B,WAAL,GAAmBA,WAAnB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKz3D,IAAL,GAAY,EAAE47B,OAAO,EAAT,EAAaG,OAAO,EAApB,EAAZ;;AAEA,SAAK27B,OAAL,GAAe,EAAf;;AAEA,SAAK98B,eAAL,GAAuB,CAAvB,CAViC,CAUP;AAC1B,SAAKC,WAAL,GAAmB,EAAnB,CAXiC,CAWV;AACvB,SAAKC,eAAL,GAAuB,KAAvB,CAZiC,CAYH;AAC9B,SAAKC,WAAL,GAAmB,EAAnB,CAbiC,CAaV;;AAEvB;AACA,SAAK/B,QAAL,GAAgBA,QAAhB;;AAEA;AACA72B,YAAQ/C,OAAOgD,WAAP,CAAmB,IAAnB,CAAR;;AAEA;AACA;AACA;;AAEA,SAAK+uE,iBAAL;;AAEA;AACA,SAAK5Z,IAAL,GAAYnB,GAAGmB,IAAH,GAAU5uB,EAAV,CAAa,MAAb,EAAqB,KAAKyoC,WAA1B,CAAZ;;AAEA;;;;AAIA,SAAK9Z,KAAL,GAAalB,GACV7M,MADU,CACH8N,WADG,EAEVO,MAFU,CAEH,KAFG,EAGVC,IAHU,CAGL,IAHK,EAGC,UAHD,EAIVA,IAJU,CAIL,OAJK,EAII,MAJJ,EAIY;AAJZ,KAKVA,IALU,CAKL,QALK,EAKK,MALL,EAKa;AALb,KAMVlvB,EANU,CAMP,OANO,EAME,UAAC3lC,CAAD,EAAId,KAAJ,EAAc;AACzB;AACAC,YAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEy1D,YAAY,EAAd,EAAjC;AACD,KATU,EAUVnvB,EAVU,CAUP,WAVO,EAUM,aAAK;AACpB;AACAuoC,wBAAkB,CAAC,CAAnB;AACA9a,SAAG2B,SAAH,CAAa,OAAb,EACGC,UADH,GAEGC,QAFH,CAEY,IAFZ,EAGGC,KAHH,CAGS,cAHT,EAGyB,MAAKmZ,sBAH9B;AAIAjb,SAAGl0D,KAAH,CAAS6/C,eAAT;AACD,KAlBU,EAmBV1qC,IAnBU,CAmBL,KAAKkgD,IAnBA,CAAb;;AAqBA,SAAKC,WAAL,GAAmB,KAAKF,KAAL,CAAWM,MAAX,CAAkB,GAAlB,EAAuBC,IAAvB,CAA4B,OAA5B,EAAqC,QAArC,CAAnB;;AAEA;AACA,QAAIM,MAAM52D,SAASqS,cAAT,CAAwB,UAAxB,CAAV;AACAyiD,cAAU8B,IAAIC,WAAd;AACA9B,eAAW6B,IAAIE,YAAf;;AAEA,SAAKZ,UAAL,GAAkBrB,GAAGkC,eAAH,EAAlB;;AAEA;AACA;;AAEA;AACA;AACA,SAAKgZ,mBAAL,GAA2B,KAAKA,mBAAL,CAAyB5xE,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAK6xE,qBAAL,GAA6B,KAAKA,qBAAL,CAA2B7xE,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAK8xE,SAAL,GAAiB,KAAKA,SAAL,CAAe9xE,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKyxE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBzxE,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAK+xE,QAAL,GAAgB,KAAKA,QAAL,CAAc/xE,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKgyE,WAAL,GAAmB,KAAKA,WAAL,CAAiBhyE,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKiyE,YAAL,GAAoB,KAAKA,YAAL,CAAkBjyE,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKkyE,cAAL,GAAsB,KAAKA,cAAL,CAAoBlyE,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAK49D,cAAL,GAAsB,KAAKA,cAAL,CAAoB59D,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKmyE,aAAL,GAAqB,KAAKA,aAAL,CAAmBnyE,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKoyE,KAAL,GAAa,KAAKA,KAAL,CAAWpyE,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAK2xE,sBAAL,GAA8B,KAAKA,sBAAL,CAA4B3xE,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKqyE,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BryE,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKsyE,SAAL,GAAiB,KAAKA,SAAL,CAAetyE,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKuyE,UAAL,GAAkB,KAAKA,UAAL,CAAgBvyE,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKwyE,OAAL,GAAe,KAAKA,OAAL,CAAaxyE,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKyyE,QAAL,GAAgB,KAAKA,QAAL,CAAczyE,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAK0yE,aAAL,GAAqB,KAAKA,aAAL,CAAmB1yE,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAK0xE,WAAL,GAAmB,KAAKA,WAAL,CAAiB1xE,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAK2yE,WAAL,GAAmB,KAAKA,WAAL,CAAiB3yE,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAK4yE,YAAL,GAAoB,KAAKA,YAAL,CAAkB5yE,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK6yE,QAAL,GAAgB,KAAKA,QAAL,CAAc7yE,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAK8yE,UAAL,GAAkB,KAAKA,UAAL,CAAgB9yE,IAAhB,CAAqB,IAArB,CAAlB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEAyC,UAAM6F,gBAAN,CAAuB,mBAAvB,EAA4C,KAAKspE,mBAAjD;AACAnvE,UAAM6F,gBAAN,CAAuB,UAAvB,EAAmC,KAAKupE,qBAAxC;AACApvE,UAAM6F,gBAAN,CAAuB,UAAvB,EAAmC,KAAKgqE,SAAxC;AACA7vE,UAAMrC,aAAN,CAAoB,YAApB,EAAkC,KAAKmyE,UAAvC;AACA9vE,UAAMrC,aAAN,CAAoB,SAApB,EAA+B,KAAKoyE,OAApC;AACA/vE,UAAMrC,aAAN,CAAoB,UAApB,EAAgC,KAAKqyE,QAArC;AACAhwE,UAAMrC,aAAN,CAAoB,gBAApB,EAAsC,KAAKsyE,aAA3C;AACA;AACA;AACA;AACD;;AAED;AACA;;;;;iCACa;AACX,UAAI/wE,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,+BAAhB;AACThF,YAAMkmB,iBAAN,CAAwB,mBAAxB,EAA6C,KAAKipD,mBAAlD;AACAnvE,YAAMkmB,iBAAN,CAAwB,UAAxB,EAAoC,KAAK2pD,SAAzC;AACA7vE,YAAMqc,eAAN,CAAsB,YAAtB,EAAoC,KAAKyzD,UAAzC;AACA9vE,YAAMqc,eAAN,CAAsB,SAAtB,EAAiC,KAAK0zD,OAAtC;AACA/vE,YAAMqc,eAAN,CAAsB,UAAtB,EAAkC,KAAK2zD,QAAvC;AACAhwE,YAAMqc,eAAN,CAAsB,gBAAtB,EAAwC,KAAK4zD,aAA7C;AACD;;AAED;AACA;AACA;;;;;;;;;wCAMoBpyE,I,EAAM;AACxB,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,kBAAhB,EAAoCnH,IAApC;AACT,WAAKyxE,QAAL,CAAczxE,IAAd;AACD;;AAED;;;;;0CAEsBA,I,EAAM;AAC1B,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,oBAAhB,EAAsCnH,IAAtC;AACT,WAAKmxE,iBAAL;AACD;;AAED;;;;;;;;gCAKY;AACV,WAAK3Z,WAAL,CAAiBO,SAAjB,CAA2B,OAA3B,EAAoC/B,MAApC;AACA,WAAKwB,WAAL,CAAiBO,SAAjB,CAA2B,OAA3B,EAAoC/B,MAApC;AACD;;AAED;;;;;wCAEoB;AAClB,UAAMlqD,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,WAAK0S,eAAL,GAAuB9uB,SAAS8uB,eAAhC;AACA,WAAKC,WAAL,GAAmB/uB,SAAS+uB,WAA5B;AACA,WAAKC,eAAL,GAAuBhvB,SAASgvB,eAAhC;AACA,WAAKC,WAAL,GAAmBjvB,SAASivB,WAA5B;AACD;;AAED;;;;;;6BAGSi+B,O,EAAS;AAChB,UAAIA,OAAJ,EAAa;AACX;AACA;AACA;AACA;AACA,YAAMC,WAAW,KAAKzB,WAAL,CAAiBO,SAAjB,CAA2B,OAA3B,CAAjB;AACA,YAAMmB,WAAW,IAAIj8C,GAAJ,CAAQg8C,SAASj5D,IAAT,GAAgB8R,GAAhB,CAAoB;AAAA,iBAAK,CAACgW,EAAE1mB,EAAH,EAAO0mB,CAAP,CAAL;AAAA,SAApB,CAAR,CAAjB;;AAEA,aAAK9nB,IAAL,CAAU47B,KAAV,GAAkBo9B,QAAQp9B,KAAR,CAAc9pB,GAAd,CAAkB;AAAA,iBAClCxH,OAAOC,MAAP,CAAc2uD,SAASh5C,GAAT,CAAa4H,EAAE1mB,EAAf,KAAsB,EAApC,EAAwC0mB,CAAxC,CADkC;AAAA,SAAlB,CAAlB;AAGA,aAAK9nB,IAAL,CAAU+7B,KAAV,GAAkBi9B,QAAQj9B,KAAR,CAAcjqB,GAAd,CAAkB;AAAA,iBAAKxH,OAAOC,MAAP,CAAc,EAAd,EAAkBud,CAAlB,CAAL;AAAA,SAAlB,CAAlB;;AAEA,aAAK4pD,WAAL;AACA,aAAKG,aAAL;AACA,aAAKF,YAAL;;AAEA;AACA;AACA,aAAKla,UAAL,CAAgB0B,KAAhB,CAAsB,GAAtB,EAA2BC,OAA3B,GAnBW,CAmB2B;AACvC;AACF;;AAED;;;;kCACkB;AAChB;AACA;AACA;AACA,WAAK3B,UAAL,CACG4B,KADH,CACS,MADT,EACiBjD,GAAGkD,SAAH,EADjB,EAEGD,KAFH,CAES,QAFT,EAEmBjD,GAAGmD,aAAH,EAFnB,EAGGF,KAHH,CAGS,SAHT,EAGoBjD,GAAGoD,YAAH,EAHpB,EAIGH,KAJH,CAIS,QAJT,EAImBjD,GAAGqD,WAAH,EAJnB,EAKGJ,KALH,CAKS,QALT,EAKmBjD,GAAGa,MAAH,EALnB,EAMGoC,KANH,CAMS,QANT,EAMmBjD,GAAGc,MAAH,EANnB,EAQGvuB,EARH,CAQM,MARN,EAQc,KAAKmpC,KARnB;AASD;AACD;AACA;;;;;;;;;;;;;;;;;;mCAmBiB;AAAA;;AACf,UAAMlhB,WAAWzuD,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAIwxC,eAAe,KAAKlC,WAAL,CAChBO,SADgB,CACN,OADM,EAEhB/3D,IAFgB,CAEX,KAAKA,IAAL,CAAU47B,KAFC,EAEM,aAAK;AAC1B,eAAO9T,EAAE1mB,EAAT;AACD,OAJgB,CAAnB,CATe,CAaT;;AAEN;AACA,UAAIu4D,eAAe,KAAKnC,WAAL,CAChBO,SADgB,CACN,OADM,EAEhB/3D,IAFgB,CAEX,KAAKA,IAAL,CAAU+7B,KAFC,EAEM,aAAK;AAC1B,eAAOjU,EAAE1mB,EAAT;AACD,OAJgB,CAAnB,CAhBe,CAoBT;;AAEN;AACA;AACA;AACA,UAAIw4D,WAAWF,aAAaG,KAAb,GAAqBjC,MAArB,CAA4B,GAA5B,EAAiCkC,OAAjC,CAAyC,MAAzC,EAAiD,IAAjD,CAAf;;AAEA;AACAF,eACGviD,IADH,CAEI++C,GACG2D,IADH,GAEGpxB,EAFH,CAEM,OAFN,EAEe,aAAK;AAChB,eAAK2pC,YAAL,CAAkBxqD,CAAlB,EAAqB,MAArB;AACD,OAJH,EAKG6gB,EALH,CAKM,MALN,EAKc,KAAK4pC,QALnB,EAMG5pC,EANH,CAMM,KANN,EAMa,aAAK;AACd,eAAK6pC,UAAL,CAAgB1qD,CAAhB,EAAmB,MAAnB;AACD,OARH,CAFJ,EAYG6gB,EAZH,CAYM,OAZN,EAYe,aAAK;AAChB,YAAItnC,GAAJ,EAASH,QAAQC,GAAR,CAAY,YAAZ,EAA0B2mB,EAAExR,KAA5B,EAAmCwR,EAAE1mB,EAArC;AACTe,cAAME,SAAN,CAAgB,eAAhB,EAAiC,EAAEgH,SAAS,CAACye,EAAE1mB,EAAH,CAAX,EAAjC;AACAg1D,WAAGl0D,KAAH,CAAS6/C,eAAT;AACD,OAhBH,EAiBGpZ,EAjBH,CAiBM,WAjBN,EAiBmB,aAAK;AACpBuoC,0BAAkBppD,EAAE1mB,EAApB;AACAg1D,WAAG2B,SAAH,CAAa,OAAb,EACGC,UADH,GAEGC,QAFH,CAEY,GAFZ,EAGGC,KAHH,CAGS,cAHT,EAGyB,OAAKmZ,sBAH9B;AAIAjb,WAAGl0D,KAAH,CAAS6/C,eAAT;AACD,OAxBH;;AA0BA;AACA6X,eACGhC,MADH,CACU,QADV;AAEE;AAFF,OAGGC,IAHH,CAGQ,GAHR,EAGa,aAAK;AACd,eAAO/kD,KAAKghC,GAAL,CAAS,OAAKlZ,eAAL,GAAuB9S,EAAEq0C,OAAlC,EAA2C,OAAKthC,WAAhD,CAAP;AACD,OALH;AAME;AANF,OAOGg9B,IAPH,CAOQ,MAPR,EAOgB,aAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAOjH,SAASE,YAAT,CAAsBhpC,EAAEnV,IAAxB,CAAP;AACD,OAhBH,EAiBGulD,KAjBH,CAiBS,SAjBT,EAiBoB,aAAK;AACrB,eAAOpwC,EAAEy6B,oBAAT;AACD,OAnBH;;AAqBA;AACAqX,eACGhC,MADH,CACU,MADV,EAEGkC,OAFH,CAEW,UAFX,EAEuB,IAFvB,EAGGjC,IAHH,CAGQ,WAHR,EAGqB,EAHrB,EAIGA,IAJH,CAIQ,IAJR,EAIc,aAAK;AACf,eAAO,OAAKj9B,eAAL,GAAuB,CAA9B;AACD,OANH,EAMK;AANL,OAOGi9B,IAPH,CAOQ,IAPR,EAOc,QAPd,EAOwB;AAPxB,OAQGrlD,IARH,CAQQ,aAAK;AACT,eAAOsV,EAAExR,KAAT;AACD,OAVH,EAWG4hD,KAXH,CAWS,SAXT,EAWoB,aAAK;AACrB,eAAOpwC,EAAEy6B,oBAAT;AACD,OAbH;;AAeA;AACA;AACAqX,eACGhC,MADH,CACU,OADV,EACmB;AADnB,OAEGplD,IAFH,CAEQ,aAAK;AACT,eAAO,OAAKo/D,cAAL,CAAoB9pD,CAApB,CAAP;AACD,OAJH;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA4xC,mBACGtwC,KADH,CACSswC,YADT,EAEG3B,SAFH,CAEa,QAFb,EAGGF,IAHH,CAGQ,QAHR,EAGkB,aAAK;AACnB,YAAI/vC,EAAE+qC,QAAN,EAAgB,OAAO/qC,EAAE+qC,QAAT;AAChB,YAAI/qC,EAAEkyC,WAAN,EAAmB,OAAOlyC,EAAEkyC,WAAT;AACnB,eAAOp2D,SAAP,CAHmB,CAGD;AACnB,OAPH,EAQGi0D,IARH,CAQQ,cARR,EAQwB,aAAK;AACzB,YAAI/vC,EAAE+qC,QAAF,IAAc/qC,EAAEkyC,WAApB,EAAiC,OAAO,KAAP;AACjC,eAAOp2D,SAAP,CAFyB,CAEP;AACnB,OAXH,EAYGi0D,IAZH,CAYQ,MAZR,EAYgB,aAAK;AACjB,eAAOjH,SAASE,YAAT,CAAsBhpC,EAAEnV,IAAxB,CAAP;AACD,OAdH,EAeGklD,IAfH,CAeQ,GAfR,EAea,aAAK;AACd;AACA,eAAO/kD,KAAKghC,GAAL,CAAS,OAAKlZ,eAAL,GAAuB9S,EAAEq0C,OAAlC,EAA2C,OAAKthC,WAAhD,CAAP;AACD,OAlBH,EAmBGm9B,UAnBH,GAoBGC,QApBH,CAoBY,GApBZ,EAqBGC,KArBH,CAqBS,SArBT,EAqBoB,aAAK;AACrB;AACA,eAAOpwC,EAAEy6B,oBAAT;AACD,OAxBH;;AA0BA;AACA;AACA;AACA;AACAmX,mBACGtwC,KADH,CACSswC,YADT,EAEG3B,SAFH,CAEa,MAFb,EAGGF,IAHH,CAGQ,OAHR,EAGiB,aAAK;AAClB,YAAI/vC,EAAE+qC,QAAN,EAAgB,OAAO/qC,EAAE+qC,QAAT;AAChB,eAAOjvD,SAAP,CAFkB,CAEA;AACnB,OANH,EAOGi0D,IAPH,CAOQ,aAPR,EAOuB,aAAK;AACxB,YAAI/vC,EAAE+qC,QAAN,EAAgB,OAAO,MAAP;AAChB,eAAOjvD,SAAP,CAFwB,CAEN;AACnB,OAVH,EAWG4O,IAXH,CAWQ,aAAK;AACT,eAAOsV,EAAExR,KAAT;AACD,OAbH,EAaK;AAbL,OAcG0hD,UAdH,GAeGC,QAfH,CAeY,GAfZ,EAgBGC,KAhBH,CAgBS,SAhBT,EAgBoB,aAAK;AACrB,eAAOpwC,EAAEy6B,oBAAT;AACD,OAlBH;;AAoBAmX,mBACGtwC,KADH,CACSswC,YADT,EAEG3B,SAFH,CAEa,OAFb,EAEsB;AAFtB,OAGGvlD,IAHH,CAGQ,aAAK;AACT,eAAO,OAAKo/D,cAAL,CAAoB9pD,CAApB,CAAP;AACD,OALH;AAMA;AACA4xC,mBAAaS,IAAb,GAAoBnE,MAApB;;AAEA;AACA;AACA;AACA2D,mBACGE,KADH,GAEGv9B,MAFH,CAEU,MAFV,EAEkB,OAFlB,EAGGw9B,OAHH,CAGW,MAHX,EAGmB,IAHnB,EAIG5B,KAJH,CAIS,QAJT,EAImB,KAAK6Z,sBAJxB;AAKE;AALF,OAMG7Z,KANH,CAMS,cANT,EAMyB,KAAKmZ,sBAN9B;AAOE;AACA;AACA;AACA;AACA;AACA;AACA;AAbF,OAcGnZ,KAdH,CAcS,SAdT,EAcoB,aAAK;AACrB,eAAOpwC,EAAEy6B,oBAAT;AACD,OAhBH;;AAkBA;AACAoX,mBACGvwC,KADH,CACSuwC,YADT,EAEGG,OAFH,CAEW,UAFX,EAEuB,aAAK;AACxB,eAAOhyC,EAAE+qC,QAAT;AACD,OAJH,EAKGqF,KALH,CAKS,QALT,EAKmB,KAAK6Z,sBALxB,EAMG7Z,KANH,CAMS,cANT,EAMyB,KAAKmZ,sBAN9B,EAOGrZ,UAPH,GAQGC,QARH,CAQY,GARZ,EASGC,KATH,CASS,SATT,EASoB,aAAK;AACrB,eAAOpwC,EAAEy6B,oBAAT;AACD,OAXH;;AAaAoX,mBAAaQ,IAAb,GAAoBnE,MAApB;;AAEA;AACA;AACA,WAAKyB,UAAL,CAAgB77B,KAAhB,CAAsB,KAAK57B,IAAL,CAAU47B,KAAhC;AACA,UAAI,KAAK57B,IAAL,CAAU+7B,KAAd,EAAqB;AACnB,aAAK07B,UAAL,CAAgB4B,KAAhB,CAAsB,MAAtB,EAA8Be,KAA9B,CAAoC,KAAKp6D,IAAL,CAAU+7B,KAA9C;AACD;AACF;;AAED;;;;mCACejU,C,EAAG;AAChB,UAAI2qD,YAAY,EAAhB;AACA,UAAI,KAAKz5C,QAAL,CAAc1iB,KAAd,CAAoB+iB,qBAApB,KAA8Cz1B,SAAlD,EAA6D;AAC3D;AACA,YAAI,KAAKo1B,QAAL,CAAc1iB,KAAd,CAAoB+iB,qBAAxB,EACEo5C,aAAa,KAAKz5C,QAAL,CAAc1iB,KAAd,CAAoB4iB,YAApB,GAAmC,IAAnC,GAA0CpR,EAAExR,KAA5C,GAAoD,IAAjE;AACF;AACA,YAAI,KAAK0iB,QAAL,CAAcrmB,IAAd,CAAmB0mB,qBAAvB,EACEo5C,aAAa,KAAKz5C,QAAL,CAAcrmB,IAAd,CAAmBumB,YAAnB,GAAkC,IAAlC,GAAyCpR,EAAEnV,IAA3C,GAAkD,IAA/D;AACF;AACA,YAAI,KAAKqmB,QAAL,CAAcmjC,OAAd,CAAsB9iC,qBAA1B,EACEo5C,aAAa,KAAKz5C,QAAL,CAAcmjC,OAAd,CAAsBjjC,YAAtB,GAAqC,IAArC,GAA4CpR,EAAEq0C,OAA9C,GAAwD,IAArE;AACF;AACA,YAAI,KAAKnjC,QAAL,CAAcwC,KAAd,CAAoBnC,qBAAxB,EACEo5C,aAAa,KAAKz5C,QAAL,CAAcwC,KAAd,CAAoBtC,YAApB,GAAmC,IAAnC,GAA0CpR,EAAE0T,KAA5C,GAAoD,IAAjE;AACF;AACA,YAAI,KAAKxC,QAAL,CAAchZ,IAAd,CAAmBqZ,qBAAvB,EACEo5C,aAAa,KAAKz5C,QAAL,CAAchZ,IAAd,CAAmBkZ,YAAnB,GAAkC,IAAlC,GAAyCpR,EAAE9H,IAA3C,GAAkD,IAA/D;AACF;AACA,YAAI,KAAKgZ,QAAL,CAAcM,OAAd,CAAsBD,qBAA1B,EACEo5C,aACE,KAAKz5C,QAAL,CAAcM,OAAd,CAAsBJ,YAAtB,GAAqC,IAArC,GAA4C,KAAKokC,cAAL,CAAoBx1C,CAApB,CAD9C;AAEH,OApBD,MAoBO;AACL;AACA2qD,qBAAa,KAAKz5C,QAAL,CAAcE,YAAd,CAA2B5iB,KAA3B,GAAmC,IAAnC,GAA0CwR,EAAExR,KAA5C,GAAoD,IAAjE;AACD;AACD,aAAOm8D,SAAP;AACD;;;mCAEc9yB,Q,EAAU;AACvB,UAAM73B,IAAI,IAAIxkB,IAAJ,CACRq8C,SAASnnC,IAAT,CAAconC,QAAd,GAAyB,CAAzB,GAA6BD,SAASnnC,IAAT,CAAc8gB,OAA3C,GAAqDqmB,SAASnnC,IAAT,CAAc+gB,OAD3D,CAAV;AAGA,UAAMxsB,OAAO8vC,OAAO/0B,EAAE0e,WAAF,EAAP,CAAb;AACA,UAAMt1B,OAAO4W,EAAEqe,QAAF,KAAe,CAAf,GAAmB,GAAnB,GAAyBre,EAAEue,OAAF,EAAzB,GAAuC,GAAvC,GAA6Ct5B,KAAK2H,MAAL,CAAY,CAAZ,EAAe,CAAf,CAA1D;AACA,UAAM44B,OAAOxlB,EAAEg1B,YAAF,GAAiBpoC,MAAjB,CAAwB,CAAxB,EAA2B,CAA3B,CAAb;AACA,UAAMg+D,SAAS/yB,SAASve,KAAT,GACXue,SAASve,KAAT,CAAeue,SAASve,KAAT,CAAej9B,MAAf,GAAwB,CAAvC,CADW,GAEX,SAFJ;AAGA,UAAM44C,WAAW7rC,OAAO,MAAP,GAAgBo8B,IAAhB,GAAuB,MAAvB,GAAgColC,MAAjD;AACA,aAAO31B,QAAP;AACD;;AAED;AACA;;;;;oCAEkB;AAAA;;AAChB,WAAK0a,UAAL,CACG4B,KADH,CAEI,MAFJ,EAGIjD,GACGkD,SADH,GAEGl4D,EAFH,CAEM;AAAA,eAAK0mB,EAAE1mB,EAAP;AAAA,OAFN,EAEiB;AACf;AAHF,OAIGg2D,QAJH,CAIYb,kBAAkBY,IAAlB,CAAuBC,QAJnC,EAKGL,UALH,CAKcR,kBAAkBY,IAAlB,CAAuBJ,UALrC,CAHJ,EAUGsC,KAVH,CAWI,QAXJ,EAYIjD,GACGmD,aADH;AAEE;AAFF,OAGG5C,QAHH,CAII;AAAA,eACE,CAAC,OAAK/7B,eAAL,GAAuB9S,EAAEq0C,OAA1B,IACA5F,kBAAkBE,MAAlB,CAAyBE,QADzB,GAEAJ,kBAAkBE,MAAlB,CAAyBC,OAH3B;AAAA,OAJJ,EASGE,WATH,CASeL,kBAAkBE,MAAlB,CAAyBG,WATxC,EAUGC,WAVH,CAUeN,kBAAkBE,MAAlB,CAAyBI,WAVxC,CAZJ,EAwBGwC,KAxBH,CAyBI,SAzBJ,EA0BIjD,GACGoD,YADH,GAEG7C,QAFH,CAGIJ,kBAAkBO,OAAlB,CAA0BH,QAA1B,GAAqCJ,kBAAkBO,OAAlB,CAA0BJ,OAHnE;AAKE;AACA;AANF,OAOGM,MAPH,CAQI;AAAA,eAAK,OAAKp8B,eAAL,GAAuB9S,EAAEq0C,OAAzB,GAAmC5F,kBAAkBO,OAAlB,CAA0BE,MAAlE;AAAA,OARJ,EAUGD,UAVH,CAUcR,kBAAkBO,OAAlB,CAA0BC,UAVxC,CA1BJ,EAsCGsC,KAtCH,CAuCI,QAvCJ,EAwCIjD,GACGqD,WADH,GAEGxlB,CAFH,CAEKoiB,UAAUE,kBAAkBC,MAAlB,CAAyBviB,CAFxC,EAGGC,CAHH,CAGKoiB,WAAWC,kBAAkBC,MAAlB,CAAyBtiB,CAHzC,CAxCJ,EA6CGmlB,KA7CH,CA8CI,QA9CJ,EA+CIjD,GACGa,MADH,GAEGN,QAFH,CAGIJ,kBAAkBU,MAAlB,CAAyBN,QAAzB,GAAoCJ,kBAAkBU,MAAlB,CAAyBP,OAHjE,EAKGziB,CALH,CAKKoiB,UAAUE,kBAAkBU,MAAlB,CAAyBhjB,CALxC,CA/CJ,EAsDGolB,KAtDH,CAuDI,QAvDJ,EAwDIjD,GACGc,MADH,GAEGP,QAFH,CAGIJ,kBAAkBW,MAAlB,CAAyBP,QAAzB,GAAoCJ,kBAAkBW,MAAlB,CAAyBR,OAHjE,EAKGxiB,CALH,CAKKoiB,WAAWC,kBAAkBW,MAAlB,CAAyBhjB,CALzC,CAxDJ;AA+DD;AACD;AACA;;;;;;;;;;4BASQ;AACN;AACA;AACA,WAAKsjB,WAAL,CAAiBO,SAAjB,CAA2B,OAA3B,EAAoCF,IAApC,CAAyC,WAAzC,EAAsD,aAAK;AACzD,eAAO,eAAe/vC,EAAEmsB,CAAjB,GAAqB,GAArB,GAA2BnsB,EAAEosB,CAA7B,GAAiC,GAAxC;AACD,OAFD;;AAIA;AACA;AACA,WAAKsjB,WAAL,CACGO,SADH,CACa,OADb,EAEGF,IAFH,CAEQ,IAFR,EAEc,aAAK;AACf,eAAO/vC,EAAEuT,MAAF,CAAS4Y,CAAhB;AACD,OAJH,EAKG4jB,IALH,CAKQ,IALR,EAKc,aAAK;AACf,eAAO/vC,EAAEuT,MAAF,CAAS6Y,CAAhB;AACD,OAPH,EAQG2jB,IARH,CAQQ,IARR,EAQc,aAAK;AACf,eAAO/vC,EAAE3d,MAAF,CAAS8pC,CAAhB;AACD,OAVH,EAWG4jB,IAXH,CAWQ,IAXR,EAWc,aAAK;AACf,eAAO/vC,EAAE3d,MAAF,CAAS+pC,CAAhB;AACD,OAbH;AAcD;;AAED;AACA;;;;;;;2CAIuBtX,I,EAAM;AAC3B,UAAIv7B,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,wBAAhB,EAA0Cy1B,IAA1C;AACT,UAAMgd,WAAW,OAAOhd,KAAKvB,MAAZ,KAAuB,QAAvB,GAAkCuB,KAAKvB,MAAvC,GAAgDuB,KAAKvB,MAAL,CAAYj6B,EAA7E;AACA,UAAMy4C,WAAW,OAAOjd,KAAKzyB,MAAZ,KAAuB,QAAvB,GAAkCyyB,KAAKzyB,MAAvC,GAAgDyyB,KAAKzyB,MAAL,CAAY/I,EAA7E;AACA,UACEw7B,KAAKi2B,QAAL,IACAqe,oBAAoB,CAAC,CADrB,IAEAt3B,aAAas3B,eAFb,IAGAr3B,aAAaq3B,eAJf,EAKE;AACA;AACA,eAAOt0C,KAAK4lB,IAAZ;AACA;AACA;AACD,OAVD,MAUO;AACL,eAAO,KAAK1nB,eAAZ,CADK,CACwB;AAC9B;AACF;;AAED;;;;2CACuB8B,I,EAAM;AAC3B,aAAOA,KAAKvL,KAAZ;AACD;;AAED;AACA;AACA;AACA;AACA;;;;8BACUrxB,I,EAAM;AACd,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,oBAAhB,EAAsCnH,IAAtC;AACT,WAAK2xE,YAAL;AACD;;;+BAEU3xE,I,EAAM;AACf,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,6BAAhB,EAA+CnH,IAA/C;AACT;AACA,WAAKs3D,KAAL,CAAWU,UAAX,GAAwBC,QAAxB,CAAiC,GAAjC,EAAsC5gD,IAAtC,CAA2C,KAAKkgD,IAAL,CAAU+C,OAArD,EAA8D,CAA9D;AACD;;;4BAEOt6D,I,EAAM;AACZ,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,0BAAhB,EAA4CnH,IAA5C;AACT,WAAKqyE,WAAL,CAAiB,GAAjB;AACD;;;6BAEQryE,I,EAAM;AACb,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,2BAAhB,EAA6CnH,IAA7C;AACT,WAAKqyE,WAAL,CAAiB,GAAjB;AACD;;AAED;AACA;;;;kCACcryE,I,EAAM;AAClB,UAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,iCAAhB,EAAmDnH,IAAnD;AACT,UAAMu6D,YAAYnE,GAAGoE,YAAH,CAAgBC,SAAhB,CAA0B,CAA1B,EAA6B,CAA7B,EAAgCC,KAAhC,CAAsC,CAAtC,CAAlB;AACA,WAAKpD,KAAL,CAAWjgD,IAAX,CAAgB,KAAKkgD,IAAL,CAAUgD,SAA1B,EAAqCA,SAArC;AACD;;AAED;;;;;kCAEc;AACZ,UAAIl5D,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,aAAhB;AACTivD,SAAG7M,MAAH,CAAU,SAAV,EAAqBsO,IAArB,CAA0B,WAA1B,EAAuCzB,GAAGl0D,KAAH,CAASq4D,SAAhD;AACD;AACD;;;;;gCAEYI,S,EAAW;AACrB,UAAIt5D,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,aAAhB;AACT,WAAKmwD,KAAL,CACGU,UADH;AAEE;AAFF,OAGGC,QAHH,CAGY,GAHZ,EAIG5gD,IAJH,CAIQ,KAAKkgD,IAAL,CAAUqD,OAJlB,EAI2BD,SAJ3B;AAKD;;AAED;AACA;;;;iCACiB7yC,C,EAAG+yC,I,EAAM;AACxB,UAAIx5D,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,cAAhB,EAAgC2gB,EAAEmsB,CAAlC,EAAqCnsB,EAAEosB,CAAvC;AACT,UAAI,CAACkiB,GAAGl0D,KAAH,CAAS6lD,MAAd,EAAsB8S,KAAKpD,UAAL,CAAgBqD,WAAhB,CAA4B,GAA5B,EAAiC1B,OAAjC;AACtBtxC,QAAEizC,EAAF,GAAOjzC,EAAEmsB,CAAT;AACAnsB,QAAEkzC,EAAF,GAAOlzC,EAAEosB,CAAT;AACD;AACD;AACA;;;;6BACapsB,C,EAAG;AACd,UAAIzmB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,UAAhB;AACT2gB,QAAEizC,EAAF,GAAO3E,GAAGl0D,KAAH,CAAS+xC,CAAhB;AACAnsB,QAAEkzC,EAAF,GAAO5E,GAAGl0D,KAAH,CAASgyC,CAAhB;AACD;AACD;AACA;;;;+BACepsB,C,EAAG+yC,I,EAAM;AACtB,UAAIx5D,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,YAAhB;AACT,UAAI,CAACivD,GAAGl0D,KAAH,CAAS6lD,MAAd,EAAsB8S,KAAKpD,UAAL,CAAgBqD,WAAhB,CAA4B,MAA5B;AACtBhzC,QAAEizC,EAAF,GAAO,IAAP;AACAjzC,QAAEkzC,EAAF,GAAO,IAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;;;KACA;;AAEF;AACA;;;AACA58D,OAAOC,OAAP,GAAiB8/D,UAAjB;;;;;;AC11BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA,IAAMjqC,SAAS,EAAf;AACA;AACAA,OAAOsa,WAAP,GAAqB,OAArB;AACA;AACA;AACAta,OAAO+rB,MAAP,GAAgB,EAAhB;AACA/rB,OAAO+rB,MAAP,CAAcO,IAAd,GAAqB,MAArB;AACAtsB,OAAO+rB,MAAP,CAAc/rB,MAAd,GAAuB,WAAvB,C,CAAoC;AACpCA,OAAO+rB,MAAP,CAAcC,MAAd,GAAuB,QAAvB;AACAhsB,OAAO+rB,MAAP,CAAcE,KAAd,GAAsB,OAAtB;AACA;AACAjsB,OAAO8sB,KAAP,GAAe,EAAf;AACA9sB,OAAO8sB,KAAP,CAAaC,MAAb,GAAsB,QAAtB;AACA/sB,OAAO8sB,KAAP,CAAaE,MAAb,GAAsB,QAAtB;AACAhtB,OAAO8sB,KAAP,CAAa2xB,MAAb,GAAsB,QAAtB;AACAz+C,OAAO8sB,KAAP,CAAah1C,IAAb,GAAoB,MAApB,C,CAA4B;AAC5BkoB,OAAO8sB,KAAP,CAAa39C,IAAb,GAAoB,MAApB;AACA6wB,OAAO8sB,KAAP,CAAa10C,KAAb,GAAqB,OAArB,C,CAA8B;AAC9B4nB,OAAO8sB,KAAP,CAAa4xB,QAAb,GAAwB,UAAxB;AACA1+C,OAAO8sB,KAAP,CAAa6xB,MAAb,GAAsB,QAAtB;AACA;AACA;AACA3+C,OAAO4+C,GAAP,GAAa,EAAb;AACA5+C,OAAO4+C,GAAP,CAAWC,MAAX,GAAoB,QAApB;AACA7+C,OAAO4+C,GAAP,CAAWE,MAAX,GAAoB,QAApB;AACA;AACA;AACA9+C,OAAO++C,SAAP,GAAmB,EAAnB;AACA/+C,OAAO++C,SAAP,CAAiBC,KAAjB,GAAyB,EAAExuE,KAAK,OAAP,EAAgB4R,OAAO,IAAvB,EAAzB;AACA4d,OAAO++C,SAAP,CAAiBE,QAAjB,GAA4B,EAAEzuE,KAAK,UAAP,EAAmB4R,OAAO,UAA1B,EAA5B;AACA4d,OAAO++C,SAAP,CAAiBG,YAAjB,GAAgC,EAAE1uE,KAAK,cAAP,EAAuB4R,OAAO,kBAA9B,EAAhC;AACA4d,OAAO++C,SAAP,CAAiBI,QAAjB,GAA4B,EAAE3uE,KAAK,UAAP,EAAmB4R,OAAO,UAA1B,EAA5B;AACA4d,OAAO++C,SAAP,CAAiBK,YAAjB,GAAgC,EAAE5uE,KAAK,cAAP,EAAuB4R,OAAO,cAA9B,EAAhC;AACA4d,OAAO++C,SAAP,CAAiBM,EAAjB,GAAsB,EAAE7uE,KAAK,IAAP,EAAa4R,OAAO,GAApB,EAAtB;AACA4d,OAAO++C,SAAP,CAAiBO,MAAjB,GAA0B,EAAE9uE,KAAK,QAAP,EAAiB4R,eAAjB,EAA1B;AACA4d,OAAO++C,SAAP,CAAiBQ,EAAjB,GAAsB,EAAE/uE,KAAK,IAAP,EAAa4R,OAAO,GAApB,EAAtB;AACA4d,OAAO++C,SAAP,CAAiBS,KAAjB,GAAyB,EAAEhvE,KAAK,OAAP,EAAgB4R,OAAO,IAAvB,EAAzB;AACA4d,OAAO++C,SAAP,CAAiBU,EAAjB,GAAsB,EAAEjvE,KAAK,IAAP,EAAa4R,OAAO,GAApB,EAAtB;AACA4d,OAAO++C,SAAP,CAAiBW,KAAjB,GAAyB,EAAElvE,KAAK,OAAP,EAAgB4R,OAAO,IAAvB,EAAzB;;AAEA;AACA;AACAlY,OAAOC,OAAP,GAAiB61B,MAAjB;;;;;;ACxEA;;;;;;AAMA,IAAMA,SAAS11B,QAAQ,eAAR,CAAf;AACA,IAAMq1E,wBAAwBr1E,QAAQ,yBAAR,CAA9B;AACA,IAAMs1E,eAAet1E,QAAQ,gBAAR,CAArB;AACA,IAAMD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMu1E,eAAev1E,QAAQ,gBAAR,CAArB;AACA,IAAMw1E,eAAex1E,QAAQ,gBAAR,CAArB;AACA,IAAMy1E,cAAcz1E,QAAQ,eAAR,CAApB;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQmyB,K,GAAiBT,U,CAAjBS,K;IAAOC,K,GAAUV,U,CAAVU,K;;AAEf;AACA;;AACA,SAASsjD,WAAT,OAA4E;AAAA,MAArDh4D,KAAqD,QAArDA,KAAqD;AAAA,MAA9C5F,KAA8C,QAA9CA,KAA8C;AAAA,MAAvC69D,OAAuC,QAAvCA,OAAuC;AAAA,MAA9Bn0B,YAA8B,QAA9BA,YAA8B;AAAA,MAAhBo0B,YAAgB,QAAhBA,YAAgB;;AAC1E,SACE;AAAA;AAAA;AACE,iBAAU,cADZ;AAEE,aAAO;AACLziD,gBAAQ,eADH;AAEL5wB,iBAAS,MAFJ;AAGLD,yBAAiB;AAHZ;AAFT;AAQE;AAAA;AAAA;AACE,mBAAU,kBADZ;AAEE,eAAO;AACLkwB,sBAAY,MADP;AAELG,yBAAe,WAFV;AAGLM,wBAAc;AAHT;AAFT;AAQGnb;AARH,KARF;AAkBG69D,YAAQriE,GAAR,CAAY,kBAAU;AACrB,cAAQyO,OAAO5N,IAAf;AACE,aAAKuhB,OAAO8sB,KAAP,CAAa4xB,QAAlB;AACA,aAAK1+C,OAAO8sB,KAAP,CAAah1C,IAAlB;AACA,aAAKkoB,OAAO8sB,KAAP,CAAa39C,IAAlB,CAHF,CAG0B;AACxB,aAAK6wB,OAAO8sB,KAAP,CAAaC,MAAlB;AACE,iBACE,oBAAC,YAAD;AACE,iBAAK1gC,OAAOnf,EADd;AAEE,mBAAO8a,KAFT;AAGE,oBAAQqE,MAHV;AAIE,0BAAcy/B;AAJhB,YADF;AAQF,aAAK9rB,OAAO8sB,KAAP,CAAaE,MAAlB;AACE,iBACE,oBAAC,YAAD;AACE,iBAAK3gC,OAAOnf,EADd;AAEE,mBAAO8a,KAFT;AAGE,oBAAQqE,MAHV;AAIE,0BAAcy/B;AAJhB,YADF;AAQF,aAAK9rB,OAAO8sB,KAAP,CAAa2xB,MAAlB;AACE,iBACE,oBAAC,YAAD;AACE,iBAAKpyD,OAAOnf,EADd;AAEE,mBAAO8a,KAFT;AAGE,oBAAQqE,MAHV;AAIE,0BAAcy/B;AAJhB,YADF;AAQF,aAAK9rB,OAAO8sB,KAAP,CAAa10C,KAAlB;AACE,iBACE,oBAAC,WAAD;AACE,iBAAKiU,OAAOnf,EADd;AAEE,mBAAO8a,KAFT;AAGE,oBAAQqE,MAHV;AAIE,0BAAcy/B;AAJhB,YADF;AAQF;AACE9+C,kBAAQiX,KAAR,yCACwCoI,OAAO5N,IAD/C,kBAEE4N,MAFF;AAIA;AA7CJ;AA+CA,aAAO,EAAP;AACD,KAjDA,CAlBH;AAoEE,wBAAC,qBAAD,IAAuB,OAAOrE,KAA9B,EAAqC,cAAck4D,YAAnD,GApEF;AAqEE;AArEF,GADF;AAyED;;AAED;AACA;AACAh2E,OAAOC,OAAP,GAAiB61E,WAAjB;;;;;;;;;;;;;;AChGA;;;;;;AAMA,IAAMhgD,SAAS11B,QAAQ,eAAR,CAAf;AACA,IAAMD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQgyB,I,GAAkCN,U,CAAlCM,I;IAAMC,S,GAA4BP,U,CAA5BO,S;IAAWE,K,GAAiBT,U,CAAjBS,K;IAAOC,K,GAAUV,U,CAAVU,K;;AAChC,IAAMxxB,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAI2D,QAAQ,IAAZ;;AAEA;AACA;;IACM0xE,qB;;;AACJ;AACA;AACA;;AAEA,uCAAqC;AAAA,QAAvB33D,KAAuB,QAAvBA,KAAuB;AAAA,QAAhBk4D,YAAgB,QAAhBA,YAAgB;;AAAA;;AAAA;;AAEnC,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmB30E,IAAnB,OAArB;AACA,UAAK40E,oBAAL,GAA4B,MAAKA,oBAAL,CAA0B50E,IAA1B,OAA5B;AACA,UAAK60E,QAAL,GAAgB,MAAKA,QAAL,CAAc70E,IAAd,OAAhB;;AAEA,UAAKC,KAAL,GAAa;AACXuc,aAAOA,KADI;AAEXk4D,oBAAcA;AAFH,KAAb;;AAKAjyE,YAAQ/C,OAAOgD,WAAP,OAAR;AAXmC;AAYpC;;;;kCAEaY,C,EAAG;AACf,WAAKjD,QAAL,CACE;AACEq0E,sBAAcpxE,EAAEmH,MAAF,CAASnF;AADzB,OADF,EAIE,KAAKsvE,oBAJP;AAMD;;AAED;AACA;;;;2CACuB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAnyE,YAAME,SAAN,CAAgB,eAAhB,EAAiC;AAC/B6Z,eAAO,KAAKvc,KAAL,CAAWuc,KADa;AAE/BvJ,cAAM,cAFyB;AAG/ByhE,sBAAc,KAAKz0E,KAAL,CAAWy0E;AAHM,OAAjC,EAVqB,CAcjB;;AAEJ;AACA;AACD;;;6BAEQpxE,C,EAAG;AACV;AACAA,QAAE8vB,cAAF;AACA9vB,QAAE++C,eAAF;AACD;;;6BAEQ;AAAA,mBACyB,KAAKviD,KAD9B;AAAA,UACC0c,KADD,UACCA,KADD;AAAA,UACQk4D,YADR,UACQA,YADR;;AAEP,aACE;AAAA;AAAA;AACE,uCADF;AAEE;AAAC,cAAD;AAAA,YAAM,YAAN,EAAa,WAAU,aAAvB,EAAqC,KAAKl4D,KAA1C,EAAiD,UAAU,KAAKq4D,QAAhE;AACE;AAAC,qBAAD;AAAA;AACE;AAAC,mBAAD;AAAA,gBAAO,MAAK,IAAZ,EAAiB,WAAU,kBAA3B;AAAA;AAAA,aADF;AAIE,gCAAC,KAAD;AACE,oBAAK,MADP;AAEE,qBAAOH,YAFT;AAGE,qBAAO,EAAEpmC,UAAU,KAAZ,EAAmBntC,QAAQ,OAA3B,EAHT;AAIE,wBAAU,KAAKwzE,aAJjB;AAKE,sBAAO;AALT;AAJF;AADF;AAFF,OADF;AAmBD;;;;EA7EiC91E,MAAMyC,S;;AAgF1C;AACA;;;AACA5C,OAAOC,OAAP,GAAiBw1E,qBAAjB;;;;;;;;;;;;;;ACpGA;;;;;;;;;;;;;;;;AAgBA,IAAM3/C,SAAS11B,QAAQ,eAAR,CAAf;AACA,IAAM01E,cAAc11E,QAAQ,eAAR,CAApB;AACA,IAAMg2E,cAAch2E,QAAQ,eAAR,CAApB;AACA,IAAMD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQ6xB,M,GAAiDH,U,CAAjDG,M;IAAQokD,W,GAAyCvkD,U,CAAzCukD,W;IAAa9jD,K,GAA4BT,U,CAA5BS,K;IAAOC,K,GAAqBV,U,CAArBU,K;IAAOH,S,GAAcP,U,CAAdO,S;;AAC3C,IAAMrxB,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAI2D,QAAQ,IAAZ;;AAEA;AACA;;IACMspC,Y;;;AACJ,8BAA4D;AAAA,QAA9CipC,YAA8C,QAA9CA,YAA8C;AAAA,QAAhCC,eAAgC,QAAhCA,eAAgC;AAAA,QAAfzyB,WAAe,QAAfA,WAAe;;AAAA;;AAAA;;AAG1D,UAAK0yB,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBl1E,IAAtB,OAAxB;AACA,UAAKm1E,oBAAL,GAA4B,MAAKA,oBAAL,CAA0Bn1E,IAA1B,OAA5B;AACA,UAAKo1E,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBp1E,IAAtB,OAAxB;AACA,UAAKsnD,eAAL,GAAuB,MAAKA,eAAL,CAAqBtnD,IAArB,OAAvB;AACA,UAAKq1E,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBr1E,IAAxB,OAA1B;;AAEA;AACAyC,YAAQ/C,OAAOgD,WAAP,OAAR;;AAEA;AACA;AACA;AACA;AACA,QAAM29C,aAAa59C,MAAM+lB,QAAN,CAAe,YAAf,CAAnB;AACA,UAAKvoB,KAAL,GAAa;AACXi8B,aAAOmkB,WAAWnkB,KADP;AAEXG,aAAOgkB,WAAWhkB,KAFP;AAGXikB,oBAAc9rB,OAAO+rB,MAAP,CAAcO,IAHjB;AAIXw0B,wBAAkBpxE,SAJP;AAKXqxE,kBAAYrxE,SALD;AAMXsxE,oBAAc;AANH,KAAb;AAQA/yE,UAAM6F,gBAAN,CAAuB,YAAvB,EAAqC,MAAK4sE,gBAA1C;AACAzyE,UAAM6F,gBAAN,CAAuB,gBAAvB,EAAyC,MAAK6sE,oBAA9C;AA1B0D;AA2B3D,G,CAAC;;;;wCAEkB;AAClB;AACA,UAAMn1B,iBAAiBv9C,MAAM+lB,QAAN,CAAe,gBAAf,CAAvB;AACA,WAAK2sD,oBAAL,CAA0Bn1B,cAA1B;AACD;;;2CAEsB;AACrBv9C,YAAMkmB,iBAAN,CAAwB,YAAxB,EAAsC,KAAKusD,gBAA3C;AACAzyE,YAAMkmB,iBAAN,CAAwB,gBAAxB,EAA0C,KAAKwsD,oBAA/C;AACD;;;qCAEgB70E,I,EAAM;AACrB,WAAKD,QAAL,CAAc,iBAAS;AACrB,eAAO;AACL67B,iBAAO57B,KAAK47B,KADP;AAELG,iBAAO/7B,KAAK+7B,KAFP;AAGLikB,wBAAchgD,KAAKggD,YAAL,IAAqBrgD,MAAMqgD,YAHpC;AAILm1B,4BAAkBn1E,KAAKm1E,gBAAL,IAAyBx1E,MAAMw1E,gBAJ5C;AAKLH,4BACEh1E,KAAKqpE,KAAL,IAAcrpE,KAAKqpE,KAAL,CAAW13B,WAAzB,SACQ3xC,KAAKqpE,KAAL,CAAW13B,WADnB,SAEI,oBARD;AASLsjC,sBAAYj1E,KAAKqpE,KAAL,IAAcrpE,KAAKqpE,KAAL,CAAW+L,KAAzB,GAAiCp1E,KAAKqpE,KAAL,CAAW+L,KAA5C,GAAoDxxE;AAT3D,SAAP;AAWD,OAZD;AAaD;;;2CAE0C;AAAA,UAAtB5D,IAAsB,uEAAf,EAAEq1E,OAAO,EAAT,EAAe;;AACzC,WAAKt1E,QAAL,CAAc,EAAEm1E,cAAcl1E,KAAKq1E,KAAL,CAAWH,YAA3B,EAAd;AACD;;;qCAEgBl1B,Y,EAAc;AAC7B,UAAMl0C,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,UAAI83B,iBAAiB9rB,OAAO+rB,MAAP,CAAcO,IAAnC,EAAyC,OAAO10C,SAAS2uB,cAAhB;AACzC;AACA,UAAIulB,iBAAiB9rB,OAAO+rB,MAAP,CAAcC,MAAnC,EAA2C,OAAOp0C,SAAS4uB,gBAAhB;AAC3C,UAAIslB,iBAAiB9rB,OAAO+rB,MAAP,CAAcE,KAAnC,EAA0C,OAAOr0C,SAAS6uB,eAAhB;AAC1C,aAAO,gBAAP;AACD;;;sCAEiB;AAChBx4B,YAAME,SAAN,CAAgB,cAAhB;AACD;;;uCAEkB29C,Y,EAAc;AAC/B,UAAMl0C,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,WAAKnoB,QAAL,CAAc,EAAEigD,0BAAF,EAAd;AACA79C,YAAME,SAAN,CAAgB,gBAAhB,EAAkC,EAAE29C,0BAAF,EAAlC;AACD;;;6BAEQ;AAAA;;AAAA,UACC/nB,MADD,GACY,KAAKz4B,KADjB,CACCy4B,MADD;AAAA,mBAGL,KAAKt4B,KAHA;AAAA,UAECqgD,YAFD,UAECA,YAFD;AAAA,UAEei1B,UAFf,UAEeA,UAFf;AAAA,UAE2BD,gBAF3B,UAE2BA,gBAF3B;AAAA,UAE6CE,YAF7C,UAE6CA,YAF7C;AAAA,UAE2Dt5C,KAF3D,UAE2DA,KAF3D;AAAA,UAEkEG,KAFlE,UAEkEA,KAFlE;;AAIP,UAAMy1B,OAAO,CAAC51B,KAAD,EAAQG,KAAR,CAAb;;AAEA;AACA,UAAMjwB,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;;AAEA,UAAMotD,YAAYxpE,SAASwuB,UAA3B;AACA,UAAMi7C,cAAczpE,SAASyuB,YAA7B;AACA,UAAMi7C,aAAa1pE,SAAS0uB,WAA5B;;AAEA,UAAM26C,mBAAmB,KAAKL,gBAAL,CAAsB90B,YAAtB,CAAzB;;AAEA,UAAIy1B,2BAAJ;AACA,UAAIz1B,iBAAiB9rB,OAAO+rB,MAAP,CAAcE,KAAnC,EAA0C;AACxCs1B,6BACE,oBAAC,WAAD;AACE,kBAAQ,EAAEzwE,OAAO,CAAT,EADV;AAEE,4BAAkBgwE,gBAFpB;AAGE,sBAAYC;AAHd,UADF;AAOD,OARD,MAQO;AACLQ,6BAAqBjkB,KAAK1/C,GAAL,CAAS;AAAA,iBAC5B,oBAAC,WAAD;AACE,iBAAK4jE,IAAIp/D,KADX;AAEE,mBAAOo/D,IAAIx5D,KAFb;AAGE,mBAAOw5D,IAAIp/D,KAHb;AAIE,qBAASo/D,IAAIvB,OAJf;AAKE,0BAAcn0B,YALhB;AAME,0BAAc01B,IAAItB,YANpB;AAOE,6BAAiB,OAAKuB;AAPxB,YAD4B;AAAA,SAAT,CAArB;AAWD;;AAED,aACE;AAAA;AAAA;AACE,qBAAU,aADZ;AAEE,iBAAO;AACLj1E,qBAASu3B,SAAS,MAAT,GAAkB,MADtB;AAEL6V,sBAAU,QAFL;AAGLnc,oBAAQ,OAHH;AAIL5wB,qBAAS,KAJJ;AAKLotC,2BAAe,QALV;AAMLrtC,6BAAiB,MANZ;AAOL8wB,oBAAQ;AAPH;AAFT;AAYE;AAAC,qBAAD;AAAA;AACE;AAAC,kBAAD;AAAA;AACE,uBAAS;AAAA,uBAAM,OAAKmjD,kBAAL,CAAwB7gD,OAAO+rB,MAAP,CAAcO,IAAtC,CAAN;AAAA,eADX;AAEE,sBAAQR,iBAAiB9rB,OAAO+rB,MAAP,CAAcO,IAFzC;AAGE,uBAASR,iBAAiB9rB,OAAO+rB,MAAP,CAAcO,IAH1C;AAIE,wBAAUR,iBAAiB9rB,OAAO+rB,MAAP,CAAcO,IAJ3C;AAKE,qBAAO;AACLnvB,uBAAO2uB,iBAAiB9rB,OAAO+rB,MAAP,CAAcO,IAA/B,GAAsC,MAAtC,GAA+C,MADjD;AAEL1/C,iCACEk/C,iBAAiB9rB,OAAO+rB,MAAP,CAAcO,IAA/B,GAAsC,aAAtC,GAAsD;AAHnD;AALT;AAWG80B;AAXH,WADF;AAyBE;AAAC,kBAAD;AAAA;AACE,uBAAS;AAAA,uBAAM,OAAKP,kBAAL,CAAwB7gD,OAAO+rB,MAAP,CAAcC,MAAtC,CAAN;AAAA,eADX;AAEE,sBAAQF,iBAAiB9rB,OAAO+rB,MAAP,CAAcC,MAFzC;AAGE,uBAASF,iBAAiB9rB,OAAO+rB,MAAP,CAAcC,MAH1C;AAIE,wBAAUF,iBAAiB9rB,OAAO+rB,MAAP,CAAcC,MAJ3C;AAKE,qBAAO;AACL7uB,uBAAO2uB,iBAAiB9rB,OAAO+rB,MAAP,CAAcC,MAA/B,GAAwC,MAAxC,GAAiD,MADnD;AAELp/C,iCACEk/C,iBAAiB9rB,OAAO+rB,MAAP,CAAcC,MAA/B,GAAwC,aAAxC,GAAwD;AAHrD;AALT;AAWGq1B;AAXH,WAzBF;AAsCE;AAAC,kBAAD;AAAA;AACE,uBAAS;AAAA,uBAAM,OAAKR,kBAAL,CAAwB7gD,OAAO+rB,MAAP,CAAcE,KAAtC,CAAN;AAAA,eADX;AAEE,sBAAQH,iBAAiB9rB,OAAO+rB,MAAP,CAAcE,KAFzC;AAGE,uBAASH,iBAAiB9rB,OAAO+rB,MAAP,CAAcE,KAH1C;AAIE,wBAAUH,iBAAiB9rB,OAAO+rB,MAAP,CAAcE,KAJ3C;AAKE,qBAAO;AACL9uB,uBAAO2uB,iBAAiB9rB,OAAO+rB,MAAP,CAAcE,KAA/B,GAAuC,MAAvC,GAAgD,MADlD;AAELr/C,iCACEk/C,iBAAiB9rB,OAAO+rB,MAAP,CAAcE,KAA/B,GAAuC,aAAvC,GAAuD;AAHpD;AALT;AAWGq1B;AAXH;AAtCF,SAZF;AAgEE;AAAC,eAAD;AAAA;AACE,uBAAU,kBADZ;AAEE,mBAAO,EAAEz0E,SAAS,iBAAX,EAA8B0wB,cAAc,GAA5C;AAFT;AAIG0jD;AAJH,SAhEF;AAsEE;AAAA;AAAA;AACE,mBAAO;AACLz0E,uBAAS,MADJ;AAELytC,6BAAe,QAFV;AAGLN,2BAHK;AAILI,yBAAW;AAJN;AADT;AAQE;AAAA;AAAA;AAAMwnC;AAAN;AARF,SAtEF;AAgFE;AAAA;AAAA;AACE,mBAAO,EAAE/0E,SAAS,MAAX,EAAmB8xD,gBAAgB,cAAnC,EAAmDzxD,SAAS,KAA5D;AADT;AAGE;AAAC,kBAAD;AAAA,cAAQ,MAAK,IAAb,EAAkB,SAAS,KAAKimD,eAAhC;AAAA;AAAA;AAHF,SAhFF;AAuFE;AAAC,eAAD;AAAA;AACE,uBAAU,kBADZ;AAEE,mBAAO;AACL7J,yBAAW,QADN;AAELp8C,uBAAS,iBAFJ;AAGL0wB,4BAAc;AAHT;AAFT;AAQGyjD;AARH;AAvFF,OADF;AAoGD;;;;EA1NwB91E,OAAO4B,S;;AA6NlC;AACA;;;AACA5C,OAAOC,OAAP,GAAiBotC,YAAjB;;;;;;;;;;;;;;AC7PA;;;;;;;;;;;AAWA,IAAMltC,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQgyB,I,GAAkCN,U,CAAlCM,I;IAAMC,S,GAA4BP,U,CAA5BO,S;IAAWE,K,GAAiBT,U,CAAjBS,K;IAAOC,K,GAAUV,U,CAAVU,K;;AAChC,IAAMxxB,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAI2D,QAAQ,IAAZ;;AAEA;AACA;;IACMqyE,W;;;AACJ,6BAA4B;AAAA,QAAdS,UAAc,QAAdA,UAAc;;AAAA;;AAAA;;AAE1B,UAAKZ,aAAL,GAAqB,MAAKA,aAAL,CAAmB30E,IAAnB,OAArB;AACA,UAAK40E,oBAAL,GAA4B,MAAKA,oBAAL,CAA0B50E,IAA1B,OAA5B;AACA,UAAK60E,QAAL,GAAgB,MAAKA,QAAL,CAAc70E,IAAd,OAAhB;;AAEA,UAAKC,KAAL,GAAa;AACXs1E,kBAAYA,UADD,CACY;AADZ,KAAb;;AAIA;AACA9yE,YAAQ/C,OAAOgD,WAAP,OAAR;AAX0B;AAY3B;;;;kCAEaY,C,EAAG;AACf;AACA;AACA;AACA;AACA;AACA,UAAMiyE,aAAajyE,EAAEmH,MAAF,CAASnF,KAAT,GAAiB,CAAjB,GAAqB,EAArB,GAA0BhC,EAAEmH,MAAF,CAASnF,KAAtD;AACA,WAAKjF,QAAL,CAAc,EAAEk1E,sBAAF,EAAd,EAA8B,KAAKX,oBAAnC;AACD;;;2CAEsB;AACrB;AACA;AACA,UAAMW,aAAa,KAAKt1E,KAAL,CAAWs1E,UAAX,GAAwB,CAAxB,GAA4B,CAA5B,GAAgC,KAAKt1E,KAAL,CAAWs1E,UAA9D;AACA,UAAI9yE,KAAJ,EACEA,MAAME,SAAN,CAAgB,eAAhB,EAAiC;AAC/B6Z,eAAO,OADwB;AAE/BqE,gBAAQ;AACNvb,iBAAOiwE;AADD;AAFuB,OAAjC,EALmB,CAUf;AACP;;;6BAEQjyE,C,EAAG;AACV;AACAA,QAAE8vB,cAAF;AACA9vB,QAAE++C,eAAF;AACD;;;6BAEQ;AAAA,UACCizB,gBADD,GACsB,KAAKx1E,KAD3B,CACCw1E,gBADD;AAAA,UAECC,UAFD,GAEgB,KAAKt1E,KAFrB,CAECs1E,UAFD;;AAGP,aACE;AAAA;AAAA;AACE,qBAAU,cADZ;AAEE,iBAAO;AACLtjD,oBAAQ,eADH;AAEL5wB,qBAAS,MAFJ;AAGLD,6BAAiB;AAHZ;AAFT;AAQE;AAAC,cAAD;AAAA,YAAM,YAAN,EAAa,WAAU,aAAvB,EAAqC,UAAU,KAAKyzE,QAApD;AAIE;AAAC,qBAAD;AAAA,cAAW,WAAU,aAArB;AACE;AAAC,mBAAD;AAAA,gBAAO,MAAK,IAAZ,EAAiB,WAAU,kBAA3B;AAAA;AACkBS;AADlB,aADF;AAIE;AAJF,WAJF;AAUE;AAAC,qBAAD;AAAA,cAAW,WAAU,aAArB;AACE;AAAC,mBAAD;AAAA,gBAAO,MAAK,IAAZ,EAAiB,WAAU,kBAA3B;AAAA;AACQ;AAAA;AAAA;AAAA;AAAA,eADR;AAAA;AAAA,aADF;AAIE,gCAAC,KAAD;AACE,oBAAK,QADP;AAEE,mBAAI,GAFN;AAGE,qBAAO,EAAEhnC,UAAU,MAAZ,EAAoBntC,QAAQ,OAA5B,EAAqCE,SAAS,KAA9C,EAHT;AAIE,sBAAO,IAJT;AAKE,wBAAU,KAAKszE,aALjB;AAME,qBAAOY;AANT;AAJF;AAVF;AARF,OADF;AAmCD;;;;EAlFuB12E,MAAMyC,S;;AAqFhC;AACA;;;AACA5C,OAAOC,OAAP,GAAiBm2E,WAAjB;;;;;;;;AC1DA;;;;;;;;;;;;AAnDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,IAAMtgD,SAAS11B,QAAQ,eAAR,CAAf;AACA,IAAMD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQgyB,I,GAAkCN,U,CAAlCM,I;IAAMC,S,GAA4BP,U,CAA5BO,S;IAAWE,K,GAAiBT,U,CAAjBS,K;IAAOC,K,GAAUV,U,CAAVU,K;;AAEhC,IAAMxxB,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAI2D,QAAQ,IAAZ;AACA;AACA,IAAM8wE,YAAY,CAChB/+C,OAAO++C,SAAP,CAAiBC,KADD,EAEhBh/C,OAAO++C,SAAP,CAAiBM,EAFD,EAGhBr/C,OAAO++C,SAAP,CAAiBO,MAHD,EAIhBt/C,OAAO++C,SAAP,CAAiBU,EAJD,EAKhBz/C,OAAO++C,SAAP,CAAiBW,KALD,EAMhB1/C,OAAO++C,SAAP,CAAiBQ,EAND,EAOhBv/C,OAAO++C,SAAP,CAAiBS,KAPD,CAAlB;;AAUA;AACA;;IACMO,W;;;AACJ,6BAIG;AAAA,QAHD/3D,KAGC,QAHDA,KAGC;AAAA,2BAFDqE,MAEC;AAAA,QAFSnf,EAET,eAFSA,EAET;AAAA,QAFauR,IAEb,eAFaA,IAEb;AAAA,QAFmBjO,GAEnB,eAFmBA,GAEnB;AAAA,QAFwBkxE,QAExB,eAFwBA,QAExB;AAAA,QAFkCC,QAElC,eAFkCA,QAElC;AAAA,QAF4C7wE,KAE5C,eAF4CA,KAE5C;AAAA,QADD8wE,eACC,QADDA,eACC;;AAAA;;AAAA;;AAED,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBr2E,IAApB,OAAtB;AACA,UAAKs2E,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBt2E,IAAtB,OAAxB;AACA,UAAK20E,aAAL,GAAqB,MAAKA,aAAL,CAAmB30E,IAAnB,OAArB;AACA,UAAK40E,oBAAL,GAA4B,MAAKA,oBAAL,CAA0B50E,IAA1B,OAA5B;AACA,UAAK60E,QAAL,GAAgB,MAAKA,QAAL,CAAc70E,IAAd,OAAhB;;AAEA,UAAKC,KAAL,GAAa;AACXk2E,gBAAU3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GADtB,EAC2B;AACtCuxE,gBAAU,EAFC,EAEG;AACdjxE,aAAO,EAHI,CAGD;AAHC,KAAb;;AAMA;AACA7C,YAAQ/C,OAAOgD,WAAP,OAAR;AACAD,UAAMrC,aAAN,CAAoB,cAApB,EAAoC,MAAKi2E,cAAzC;AAhBC;AAiBF;;;;2CAEsB;AACrB5zE,YAAMqc,eAAN,CAAsB,cAAtB,EAAsC,KAAKu3D,cAA3C;AACD;;;qCAEgB;AACf,WAAKh2E,QAAL,CAAc,EAAEk2E,UAAU,EAAZ,EAAd;AACD;;;qCAEgBjzE,C,EAAG;AAClB,UAAMkzE,WAAW,EAAEL,UAAU7yE,EAAEmH,MAAF,CAASnF,KAArB,EAAjB;AACA;AACA,UAAIhC,EAAEmH,MAAF,CAASnF,KAAT,KAAmBkvB,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GAA9C,EAAmD;AACjDwxE,iBAASD,QAAT,GAAoB,EAApB;AACAC,iBAASlxE,KAAT,GAAiB,EAAjB;AACD;AACD,WAAKjF,QAAL,CAAcm2E,QAAd,EAAwB,KAAK5B,oBAA7B;AACD;;;kCAEapyE,K,EAAO;AAAA;;AACnB,UAAM8C,QAAQ9C,MAAMiI,MAAN,CAAanF,KAA3B;AACA;AACA;AACA,UAAMmxE,cAAcnxE,MAAMA,KAA1B;AACA;AACA,WAAKjF,QAAL,CAAc,EAAEk2E,UAAUE,WAAZ,EAAd,EAAyC,YAAM;AAC7C;AACA,eAAKp2E,QAAL,CAAc,EAAEiF,OAAOmxE,WAAT,EAAd,EAAsC,OAAK7B,oBAA3C;AACD,OAHD;AAID;;;2CAEsB;AAAA,UACbt0B,YADa,GACI,KAAKxgD,KADT,CACbwgD,YADa;AAAA,0BAEe,KAAKxgD,KAAL,CAAW+gB,MAF1B;AAAA,UAEbnf,EAFa,iBAEbA,EAFa;AAAA,UAETuR,IAFS,iBAETA,IAFS;AAAA,UAEHjO,GAFG,iBAEHA,GAFG;AAAA,UAEEkxE,QAFF,iBAEEA,QAFF;;AAGrB,UAAMr1D,SAAS;AACbnf,cADa;AAEbuR,kBAFa;AAGbjO,gBAHa;AAIbkxE,0BAJa;AAKbC,kBAAU,KAAKl2E,KAAL,CAAWk2E,QALR;AAMb7wE,eAAO,KAAKrF,KAAL,CAAWqF;AANL,OAAf;AAQA,UAAI7C,KAAJ,EACEA,MAAME,SAAN,CAAgB,eAAhB,EAAiC;AAC/B6Z,eAAO,KAAK1c,KAAL,CAAW0c,KADa;AAE/BqE,sBAF+B;AAG/By/B;AAH+B,OAAjC,EAZmB,CAgBf;AACP;;;6BAEQh9C,C,EAAG;AACV;AACAA,QAAE8vB,cAAF;AACA9vB,QAAE++C,eAAF;AACD;;;6BAEQ;AAAA,UACCk0B,QADD,GACc,KAAKt2E,KADnB,CACCs2E,QADD;AAAA,2BAEwC,KAAKz2E,KAAL,CAAW+gB,MAFnD;AAAA,UAECnf,EAFD,kBAECA,EAFD;AAAA,UAEKsD,GAFL,kBAEKA,GAFL;AAAA,UAEUkxE,QAFV,kBAEUA,QAFV;AAAA,UAEoBC,QAFpB,kBAEoBA,QAFpB;AAAA,UAE8B7wE,KAF9B,kBAE8BA,KAF9B;;AAGP,aACE;AAAC,YAAD;AAAA,UAAM,YAAN,EAAa,WAAU,aAAvB,EAAqC,KAAK5D,EAA1C,EAA8C,UAAU,KAAKmzE,QAA7D;AAIE;AAAC,mBAAD;AAAA,YAAW,WAAU,aAArB;AACE;AAAC,iBAAD;AAAA,cAAO,MAAK,IAAZ,EAAiB,WAAU,kBAA3B;AACGqB;AADH,WADF;AAIE;AAAC,iBAAD;AAAA;AACE,oBAAK,QADP;AAEE,qBAAOC,QAFT;AAGE,qBAAO,EAAE7nC,UAAU,MAAZ,EAAoBntC,QAAQ,OAA5B,EAAqCE,SAAS,GAA9C,EAHT;AAIE,wBAAU,KAAKi1E,gBAJjB;AAKE,sBAAO;AALT;AAOG/C,sBAAUnhE,GAAV,CAAc;AAAA,qBACb;AAAA;AAAA,kBAAQ,OAAOkuB,GAAGt7B,GAAlB,EAAuB,UAAQtD,EAAR,GAAa4+B,GAAGt7B,GAAvC,EAA8C,MAAK,IAAnD;AACGs7B,mBAAG1pB;AADN,eADa;AAAA,aAAd;AAPH,WAJF;AAiBE,8BAAC,qBAAD;AACE,gBAAI5R,GADN;AAEE,iBAAQA,GAAR,UAFF;AAGE,mBAAOuxE,QAHT;AAIE,sBAAU,IAJZ;AAKE,sBAAU,KAAK5B,aALjB;AAME,sBAAUwB,aAAa3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE;AANhD;AAjBF;AAJF,OADF;AAiCD;;;;EAnHuBnG,MAAMyC,S;;AAsHhC;AACA;;;AACA5C,OAAOC,OAAP,GAAiB41E,WAAjB;;;;;;;;;;;;;;AC9LA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,IAAM//C,SAAS11B,QAAQ,eAAR,CAAf;AACA,IAAMD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQgyB,I,GAAkCN,U,CAAlCM,I;IAAMC,S,GAA4BP,U,CAA5BO,S;IAAWE,K,GAAiBT,U,CAAjBS,K;IAAOC,K,GAAUV,U,CAAVU,K;;AAChC,IAAMxxB,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAI2D,QAAQ,IAAZ;AACA;AACA,IAAM8wE,YAAY,CAChB/+C,OAAO++C,SAAP,CAAiBC,KADD,EAEhBh/C,OAAO++C,SAAP,CAAiBM,EAFD,EAGhBr/C,OAAO++C,SAAP,CAAiBO,MAHD,EAIhBt/C,OAAO++C,SAAP,CAAiBU,EAJD,EAKhBz/C,OAAO++C,SAAP,CAAiBW,KALD,EAMhB1/C,OAAO++C,SAAP,CAAiBQ,EAND,EAOhBv/C,OAAO++C,SAAP,CAAiBS,KAPD,CAAlB;;AAUA;AACA;;IACMI,Y;;;AACJ,8BAIG;AAAA,QAHD53D,KAGC,QAHDA,KAGC;AAAA,2BAFDqE,MAEC;AAAA,QAFSnf,EAET,eAFSA,EAET;AAAA,QAFauR,IAEb,eAFaA,IAEb;AAAA,QAFmBjO,GAEnB,eAFmBA,GAEnB;AAAA,QAFwBkxE,QAExB,eAFwBA,QAExB;AAAA,QAFkCC,QAElC,eAFkCA,QAElC;AAAA,QAF4C7wE,KAE5C,eAF4CA,KAE5C;AAAA,QADD8wE,eACC,QADDA,eACC;;AAAA;;AAAA;;AAED,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBr2E,IAApB,OAAtB;AACA,UAAKs2E,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBt2E,IAAtB,OAAxB;AACA,UAAK20E,aAAL,GAAqB,MAAKA,aAAL,CAAmB30E,IAAnB,OAArB;AACA,UAAK40E,oBAAL,GAA4B,MAAKA,oBAAL,CAA0B50E,IAA1B,OAA5B;AACA,UAAK60E,QAAL,GAAgB,MAAKA,QAAL,CAAc70E,IAAd,OAAhB;;AAEA,UAAKC,KAAL,GAAa;AACXk2E,gBAAU3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GADtB,EAC2B;AACtCuxE,gBAAU,EAFC,EAEG;AACdjxE,aAAO,EAHI,CAGD;AAHC,KAAb;;AAMA;AACA7C,YAAQ/C,OAAOgD,WAAP,OAAR;AACAD,UAAMrC,aAAN,CAAoB,cAApB,EAAoC,MAAKi2E,cAAzC;AAhBC;AAiBF;;;;2CAEsB;AACrB5zE,YAAMqc,eAAN,CAAsB,cAAtB,EAAsC,KAAKu3D,cAA3C;AACD;;;qCAEgB;AACf,WAAKh2E,QAAL,CAAc,EAAEk2E,UAAU,EAAZ,EAAd;AACD;;;qCAEgBjzE,C,EAAG;AAClB,UAAMkzE,WAAW,EAAEL,UAAU7yE,EAAEmH,MAAF,CAASnF,KAArB,EAAjB;AACA;AACA,UAAIhC,EAAEmH,MAAF,CAASnF,KAAT,KAAmBkvB,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GAA9C,EAAmD;AACjDwxE,iBAASD,QAAT,GAAoB,EAApB;AACAC,iBAASlxE,KAAT,GAAiB,EAAjB;AACD;AACD,WAAKjF,QAAL,CAAcm2E,QAAd,EAAwB,KAAK5B,oBAA7B;AACD;;;kCAEapyE,K,EAAO;AAAA;;AACnB,UAAM8C,QAAQoqB,OAAOltB,MAAMiI,MAAN,CAAanF,KAApB,CAAd;AACA;AACA,WAAKjF,QAAL,CAAc,EAAEk2E,UAAUjxE,KAAZ,EAAd,EAAmC,YAAM;AACvC;AACA,eAAKjF,QAAL,CAAc,EAAEiF,YAAF,EAAd,EAAyB,OAAKsvE,oBAA9B;AACD,OAHD;AAKD;;;2CAEsB;AAAA,UACbt0B,YADa,GACI,KAAKxgD,KADT,CACbwgD,YADa;AAAA,0BAEe,KAAKxgD,KAAL,CAAW+gB,MAF1B;AAAA,UAEbnf,EAFa,iBAEbA,EAFa;AAAA,UAETuR,IAFS,iBAETA,IAFS;AAAA,UAEHjO,GAFG,iBAEHA,GAFG;AAAA,UAEEkxE,QAFF,iBAEEA,QAFF;;AAGrB,UAAMr1D,SAAS;AACbnf,cADa;AAEbuR,kBAFa;AAGbjO,gBAHa;AAIbkxE,0BAJa;AAKbC,kBAAU,KAAKl2E,KAAL,CAAWk2E,QALR;AAMb7wE,eAAO,KAAKrF,KAAL,CAAWqF;AANL,OAAf;AAQA,UAAI7C,KAAJ,EACEA,MAAME,SAAN,CAAgB,eAAhB,EAAiC;AAC/B6Z,eAAO,KAAK1c,KAAL,CAAW0c,KADa;AAE/BqE,sBAF+B;AAG/By/B;AAH+B,OAAjC,EAZmB,CAgBf;AACP;;;6BAEQh9C,C,EAAG;AACV;AACAA,QAAE8vB,cAAF;AACA9vB,QAAE++C,eAAF;AACD;;;6BAEQ;AAAA,UACCk0B,QADD,GACc,KAAKt2E,KADnB,CACCs2E,QADD;AAAA,UAECj2B,YAFD,GAEkB,KAAKxgD,KAFvB,CAECwgD,YAFD;AAAA,2BAGwC,KAAKxgD,KAAL,CAAW+gB,MAHnD;AAAA,UAGCnf,EAHD,kBAGCA,EAHD;AAAA,UAGKsD,GAHL,kBAGKA,GAHL;AAAA,UAGUkxE,QAHV,kBAGUA,QAHV;AAAA,UAGoBC,QAHpB,kBAGoBA,QAHpB;AAAA,UAG8B7wE,KAH9B,kBAG8BA,KAH9B;;AAIP,aACE;AAAC,YAAD;AAAA,UAAM,YAAN,EAAa,WAAU,aAAvB,EAAqC,KAAK5D,EAA1C,EAA8C,UAAU,KAAKmzE,QAA7D;AAIE;AAAC,mBAAD;AAAA,YAAW,WAAU,aAArB;AACE;AAAC,iBAAD;AAAA;AACE,oBAAK,IADP;AAEE,yBAAU;AAFZ;AAIGqB;AAJH,WADF;AAOE;AAAC,iBAAD;AAAA;AACE,oBAAK,QADP;AAEE,qBAAOC,QAFT;AAGE,qBAAO,EAAE7nC,UAAU,MAAZ,EAAoBntC,QAAQ,OAA5B,EAAqCE,SAAS,GAA9C,EAHT;AAIE,wBAAU,KAAKi1E,gBAJjB;AAKE,sBAAO;AALT;AAOG/C,sBAAUnhE,GAAV,CAAc;AAAA,qBACb;AAAA;AAAA,kBAAQ,OAAOkuB,GAAGt7B,GAAlB,EAAuB,UAAQtD,EAAR,GAAa4+B,GAAGt7B,GAAvC,EAA8C,MAAK,IAAnD;AACGs7B,mBAAG1pB;AADN,eADa;AAAA,aAAd;AAPH,WAPF;AAoBE,8BAAC,KAAD;AACE,kBAAK,QADP;AAEE,mBAAO2/D,QAFT;AAGE,yBAAY,KAHd;AAIE,mBAAO,EAAEjoC,UAAU,MAAZ,EAAoBntC,QAAQ,OAA5B,EAJT;AAKE,sBAAU,KAAKwzE,aALjB;AAME,oBAAO,IANT;AAOE,sBAAUwB,aAAa3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE;AAPhD;AApBF;AAJF,OADF;AAqCD;;;;EAtHwBnG,MAAMyC,S;;AAyHjC;AACA;;;AACA5C,OAAOC,OAAP,GAAiBy1E,YAAjB;;;;;;;;;;;;;;AChMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,IAAM5/C,SAAS11B,QAAQ,eAAR,CAAf;AACA,IAAMD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQgyB,I,GAAkCN,U,CAAlCM,I;IAAMC,S,GAA4BP,U,CAA5BO,S;IAAWE,K,GAAiBT,U,CAAjBS,K;IAAOC,K,GAAUV,U,CAAVU,K;;AAChC,IAAMxxB,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAI2D,QAAQ,IAAZ;AACA;AACA,IAAM8wE,YAAY,CAChB/+C,OAAO++C,SAAP,CAAiBC,KADD,EAEhBh/C,OAAO++C,SAAP,CAAiBE,QAFD,EAGhBj/C,OAAO++C,SAAP,CAAiBG,YAHD,CAAlB;;AAMA;AACA;;IACMW,Y;;;AACJ,8BAIG;AAAA,QAHD73D,KAGC,QAHDA,KAGC;AAAA,2BAFDqE,MAEC;AAAA,QAFSnf,EAET,eAFSA,EAET;AAAA,QAFauR,IAEb,eAFaA,IAEb;AAAA,QAFmBjO,GAEnB,eAFmBA,GAEnB;AAAA,QAFwBkxE,QAExB,eAFwBA,QAExB;AAAA,QAFkCC,QAElC,eAFkCA,QAElC;AAAA,QAF4C7wE,KAE5C,eAF4CA,KAE5C;AAAA,QAFmDmN,OAEnD,eAFmDA,OAEnD;AAAA,QADD2jE,eACC,QADDA,eACC;;AAAA;;AAAA;;AAED,UAAKE,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBt2E,IAAtB,OAAxB;AACA,UAAK20E,aAAL,GAAqB,MAAKA,aAAL,CAAmB30E,IAAnB,OAArB;AACA,UAAK40E,oBAAL,GAA4B,MAAKA,oBAAL,CAA0B50E,IAA1B,OAA5B;AACA,UAAK60E,QAAL,GAAgB,MAAKA,QAAL,CAAc70E,IAAd,OAAhB;;AAEA,UAAKC,KAAL,GAAa;AACXk2E,gBAAU3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GADtB,EAC2B;AACtCM,aAAO,EAFI,CAED;AAFC,KAAb;;AAKA;AACA7C,YAAQ/C,OAAOgD,WAAP,OAAR;AAbC;AAcF;;;;qCAEgBY,C,EAAG;AAClB,WAAKjD,QAAL,CACE;AACE81E,kBAAU7yE,EAAEmH,MAAF,CAASnF;AADrB,OADF,EAIE,KAAKsvE,oBAJP;AAMD;;;kCAEatxE,C,EAAG;AACf,WAAKjD,QAAL,CACE;AACEiF,eAAOhC,EAAEmH,MAAF,CAASnF;AADlB,OADF,EAIE,KAAKsvE,oBAJP;AAMD;;;2CAEsB;AAAA,UACbt0B,YADa,GACI,KAAKxgD,KADT,CACbwgD,YADa;AAAA,0BAEwB,KAAKxgD,KAAL,CAAW+gB,MAFnC;AAAA,UAEbnf,EAFa,iBAEbA,EAFa;AAAA,UAETuR,IAFS,iBAETA,IAFS;AAAA,UAEHjO,GAFG,iBAEHA,GAFG;AAAA,UAEEkxE,QAFF,iBAEEA,QAFF;AAAA,UAEYzjE,OAFZ,iBAEYA,OAFZ;;AAGrB,UAAMoO,SAAS;AACbnf,cADa;AAEbuR,kBAFa;AAGbjO,gBAHa;AAIbkxE,0BAJa;AAKbC,kBAAU,KAAKl2E,KAAL,CAAWk2E,QALR;AAMb7wE,eAAO,KAAKrF,KAAL,CAAWk2E,QAAX,KAAwB3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GAA/C,GAAqD,EAArD,GAA0D,KAAK/E,KAAL,CAAWqF,KAN/D;AAObmN;AAPa,OAAf;AASA,UAAIhQ,KAAJ,EACEA,MAAME,SAAN,CAAgB,eAAhB,EAAiC;AAC/B6Z,eAAO,KAAK1c,KAAL,CAAW0c,KADa;AAE/BqE,sBAF+B;AAG/By/B;AAH+B,OAAjC,EAbmB,CAiBf;AACP;;;6BAEQh9C,C,EAAG;AACV;AACAA,QAAE8vB,cAAF;AACA9vB,QAAE++C,eAAF;AACD;;;wCAEmB;AAClB;AACA,WAAKhiD,QAAL,CAAc;AACZiF,eAAO,KAAKxF,KAAL,CAAW+gB,MAAX,CAAkBpO,OAAlB,CAA0B,CAA1B;AADK,OAAd;AAGD;;;6BAEQ;AAAA,UACC6tC,YADD,GACkB,KAAKxgD,KADvB,CACCwgD,YADD;AAAA,2BAEiD,KAAKxgD,KAAL,CAAW+gB,MAF5D;AAAA,UAECnf,EAFD,kBAECA,EAFD;AAAA,UAEKsD,GAFL,kBAEKA,GAFL;AAAA,UAEUkxE,QAFV,kBAEUA,QAFV;AAAA,UAEoBC,QAFpB,kBAEoBA,QAFpB;AAAA,UAE8B7wE,KAF9B,kBAE8BA,KAF9B;AAAA,UAEqCmN,OAFrC,kBAEqCA,OAFrC;;AAGP,aACE;AAAC,YAAD;AAAA,UAAM,YAAN,EAAa,WAAU,aAAvB,EAAqC,KAAK/Q,EAA1C,EAA8C,UAAU,KAAKmzE,QAA7D;AAIE;AAAC,mBAAD;AAAA,YAAW,WAAU,aAArB;AACE;AAAC,iBAAD;AAAA;AACE,oBAAK,IADP;AAEE,yBAAU;AAFZ;AAIGqB;AAJH,WADF;AAOE;AAAC,iBAAD;AAAA;AACE,oBAAK,QADP;AAEE,qBAAOC,QAFT;AAGE,qBAAO,EAAEh1E,QAAQ,OAAV,EAAmBE,SAAS,GAA5B,EAHT;AAIE,wBAAU,KAAKi1E,gBAJjB;AAKE,sBAAO;AALT;AAOG/C,sBAAUnhE,GAAV,CAAc;AAAA,qBACb;AAAA;AAAA,kBAAQ,OAAOkuB,GAAGt7B,GAAlB,EAAuB,UAAQtD,EAAR,GAAa4+B,GAAGt7B,GAAvC,EAA8C,MAAK,IAAnD;AACGs7B,mBAAG1pB;AADN,eADa;AAAA,aAAd;AAPH,WAPF;AAoBE;AAAC,iBAAD;AAAA;AACE,oBAAK,QADP;AAEE,qBAAOtR,KAFT;AAGE,qBAAO,EAAEgpC,UAAU,MAAZ,EAAoBntC,QAAQ,OAA5B,EAAqCE,SAAS,GAA9C,EAHT;AAIE,wBAAU,KAAKszE,aAJjB;AAKE,sBAAO,IALT;AAME,wBAAUwB,aAAa3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE;AANhD;AAQGmxE,yBAAa3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GAApC,GACGyN,QAAQL,GAAR,CAAY;AAAA,qBACZ;AAAA;AAAA,kBAAQ,OAAOkuB,EAAf,EAAmB,UAAQ5+B,EAAR,GAAa4+B,EAAhC,EAAsC,MAAK,IAA3C;AACGA;AADH,eADY;AAAA,aAAZ,CADH,GAMG;AAdN;AApBF;AAJF,OADF;AA4CD;;;;EAvHwBzhC,MAAMyC,S;;AA0HjC;AACA;;;AACA5C,OAAOC,OAAP,GAAiB01E,YAAjB;;;;;;;;;;;;;;ACzLA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,IAAM7/C,SAAS11B,QAAQ,eAAR,CAAf;AACA,IAAMD,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAM0xB,aAAa1xB,QAAQ,YAAR,CAAnB;IACQgyB,I,GAAkCN,U,CAAlCM,I;IAAMC,S,GAA4BP,U,CAA5BO,S;IAAWE,K,GAAiBT,U,CAAjBS,K;IAAOC,K,GAAUV,U,CAAVU,K;;AAChC,IAAMxxB,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAI2D,QAAQ,IAAZ;AACA;AACA,IAAM8wE,YAAY,CAChB/+C,OAAO++C,SAAP,CAAiBC,KADD,EAEhBh/C,OAAO++C,SAAP,CAAiBE,QAFD,EAGhBj/C,OAAO++C,SAAP,CAAiBG,YAHD,EAIhBl/C,OAAO++C,SAAP,CAAiBI,QAJD,EAKhBn/C,OAAO++C,SAAP,CAAiBK,YALD,CAAlB;;AAQA;AACA;;IACMU,Y;;;AACJ,8BAIG;AAAA,QAHD93D,KAGC,QAHDA,KAGC;AAAA,2BAFDqE,MAEC;AAAA,QAFSnf,EAET,eAFSA,EAET;AAAA,QAFauR,IAEb,eAFaA,IAEb;AAAA,QAFmByjE,EAEnB,eAFmBA,EAEnB;AAAA,QAFuBR,QAEvB,eAFuBA,QAEvB;AAAA,QAFiCC,QAEjC,eAFiCA,QAEjC;AAAA,QAF2C7wE,KAE3C,eAF2CA,KAE3C;AAAA,QADD8wE,eACC,QADDA,eACC;;AAAA;;AAAA;;AAED,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBr2E,IAApB,OAAtB;AACA,UAAKs2E,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBt2E,IAAtB,OAAxB;AACA,UAAK20E,aAAL,GAAqB,MAAKA,aAAL,CAAmB30E,IAAnB,OAArB;AACA,UAAK40E,oBAAL,GAA4B,MAAKA,oBAAL,CAA0B50E,IAA1B,OAA5B;AACA,UAAK60E,QAAL,GAAgB,MAAKA,QAAL,CAAc70E,IAAd,OAAhB;;AAEA,UAAKC,KAAL,GAAa;AACXk2E,gBAAU3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GADtB,EAC2B;AACtCuxE,gBAAU,EAFC,EAEG;AACdjxE,aAAO,EAHI,CAGD;AAHC,KAAb;;AAMA;AACA7C,YAAQ/C,OAAOgD,WAAP,OAAR;AACAD,UAAMrC,aAAN,CAAoB,cAApB,EAAoC,MAAKi2E,cAAzC;AAhBC;AAiBF;;;;2CAEsB;AACrB5zE,YAAMqc,eAAN,CAAsB,cAAtB,EAAsC,KAAKu3D,cAA3C;AACD;;;qCAEgB;AACf,WAAKh2E,QAAL,CAAc,EAAEk2E,UAAU,EAAZ,EAAd;AACD;;;qCAEgBjzE,C,EAAG;AAClB,UAAMkzE,WAAW,EAAEL,UAAU7yE,EAAEmH,MAAF,CAASnF,KAArB,EAAjB;AACA;AACA,UAAIhC,EAAEmH,MAAF,CAASnF,KAAT,KAAmBkvB,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GAA9C,EAAmD;AACjDwxE,iBAASD,QAAT,GAAoB,EAApB;AACAC,iBAASlxE,KAAT,GAAiB,EAAjB;AACD;AACD,WAAKjF,QAAL,CAAcm2E,QAAd,EAAwB,KAAK5B,oBAA7B;AACD;;;kCAEapyE,K,EAAO;AAAA;;AACnB,UAAM8C,QAAQ9C,MAAMiI,MAAN,CAAanF,KAA3B;AACA;AACA,WAAKjF,QAAL,CAAc,EAAEk2E,UAAUjxE,KAAZ,EAAd,EAAmC,YAAM;AACvC;AACA,eAAKjF,QAAL,CAAc,EAAEiF,YAAF,EAAd,EAAyB,OAAKsvE,oBAA9B;AACD,OAHD;AAID;;;2CAEsB;AAAA,UACbt0B,YADa,GACI,KAAKxgD,KADT,CACbwgD,YADa;AAAA,0BAEe,KAAKxgD,KAAL,CAAW+gB,MAF1B;AAAA,UAEbnf,EAFa,iBAEbA,EAFa;AAAA,UAETuR,IAFS,iBAETA,IAFS;AAAA,UAEHjO,GAFG,iBAEHA,GAFG;AAAA,UAEEkxE,QAFF,iBAEEA,QAFF;;AAGrB,UAAMr1D,SAAS;AACbnf,cADa;AAEbuR,kBAFa;AAGbjO,gBAHa;AAIbkxE,0BAJa;AAKbC,kBAAU,KAAKl2E,KAAL,CAAWk2E,QALR;AAMb7wE,eAAO,KAAKrF,KAAL,CAAWqF;AANL,OAAf;AAQA,UAAI7C,KAAJ,EACEA,MAAME,SAAN,CAAgB,eAAhB,EAAiC;AAC/B6Z,eAAO,KAAK1c,KAAL,CAAW0c,KADa;AAE/BqE,sBAF+B;AAG/By/B;AAH+B,OAAjC,EAZmB,CAgBf;AACP;;;6BAEQh9C,C,EAAG;AACV;AACAA,QAAE8vB,cAAF;AACA9vB,QAAE++C,eAAF;AACD;;;6BAEQ;AAAA,UACCk0B,QADD,GACc,KAAKt2E,KADnB,CACCs2E,QADD;AAAA,UAECj2B,YAFD,GAEkB,KAAKxgD,KAFvB,CAECwgD,YAFD;AAAA,2BAGwC,KAAKxgD,KAAL,CAAW+gB,MAHnD;AAAA,UAGCnf,EAHD,kBAGCA,EAHD;AAAA,UAGKsD,GAHL,kBAGKA,GAHL;AAAA,UAGUkxE,QAHV,kBAGUA,QAHV;AAAA,UAGoBC,QAHpB,kBAGoBA,QAHpB;AAAA,UAG8B7wE,KAH9B,kBAG8BA,KAH9B;;;AAKP,aACE;AAAC,YAAD;AAAA,UAAM,YAAN,EAAa,WAAU,aAAvB,EAAqC,KAAK5D,EAA1C,EAA8C,UAAU,KAAKmzE,QAA7D;AAIE;AAAC,mBAAD;AAAA,YAAW,WAAU,aAArB;AACE;AAAC,iBAAD;AAAA,cAAO,MAAK,IAAZ,EAAiB,WAAU,kBAA3B;AACGqB;AADH,WADF;AAIE;AAAC,iBAAD;AAAA;AACE,oBAAK,QADP;AAEE,qBAAOC,QAFT;AAGE,qBAAO,EAAE7nC,UAAU,MAAZ,EAAoBntC,QAAQ,OAA5B,EAAqCE,SAAS,GAA9C,EAHT;AAIE,wBAAU,KAAKi1E,gBAJjB;AAKE,sBAAO;AALT;AAOG/C,sBAAUnhE,GAAV,CAAc;AAAA,qBACb;AAAA;AAAA,kBAAQ,OAAOkuB,GAAGt7B,GAAlB,EAAuB,UAAQtD,EAAR,GAAa4+B,GAAGt7B,GAAvC,EAA8C,MAAK,IAAnD;AACGs7B,mBAAG1pB;AADN,eADa;AAAA,aAAd;AAPH,WAJF;AAiBE,8BAAC,KAAD;AACE,kBAAK,MADP;AAEE,mBAAO2/D,QAFT;AAGE,yBAAY,KAHd;AAIE,mBAAO,EAAEjoC,UAAU,MAAZ,EAAoBntC,QAAQ,OAA5B,EAJT;AAKE,sBAAU,KAAKwzE,aALjB;AAME,oBAAO,IANT;AAOE,sBAAUwB,aAAa3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GAPhD;AAQE,oBACEmxE,aAAa3hD,OAAO++C,SAAP,CAAiBI,QAAjB,CAA0B3uE,GAAvC,IACAmxE,aAAa3hD,OAAO++C,SAAP,CAAiBK,YAAjB,CAA8B5uE;AAV/C;AAjBF;AAJF,OADF;AAsCD;;;;EAvHwBnG,MAAMyC,S;;AA0HjC;AACA;;;AACA5C,OAAOC,OAAP,GAAiB21E,YAAjB;;;;;;;;ACzLA;;;;;;;;;;;;;;AAcA,IAAM50E,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAIiF,MAAMrE,OAAOoI,SAAP,CAAiBpJ,OAAOgD,EAAxB,CAAV;AACA,IAAIe,QAAQ/C,OAAOgD,WAAP,CAAmBqB,GAAnB,CAAZ;;AAEA;AACA;AACA;AACAA,IAAIiE,IAAJ,CAAS,YAAT,EAAuB,YAAM;AAC3B;AACAvF,QAAM6F,gBAAN,CAAuB,gBAAvB,EAAyC,gBAAQ;AAC/CquE,kBAAcr2E,IAAd;AACD,GAFD;AAGD,CALD,E,CAKI;;AAEJ;AACA;AACA;;;;;;;AAOAyD,IAAIs5D,eAAJ,GAAsB,UAACngC,IAAD,EAAO9wB,QAAP,EAAoB;AACxC,MAAM6G,OAAOiqB,KAAKjqB,IAAlB;AACA,MAAM2jE,aAAaxqE,SAAS0tB,QAAT,CAAkB7mB,IAAlB,CAAuBR,OAAvB,CAA+BwsB,IAA/B,CAAoC;AAAA,WAAKjmB,EAAEpC,KAAF,KAAY3D,IAAjB;AAAA,GAApC,CAAnB;AACA,SAAO2jE,aAAaA,WAAWjlD,KAAxB,GAAgCvlB,SAAS0tB,QAAT,CAAkB7mB,IAAlB,CAAuBR,OAAvB,CAA+B,CAA/B,EAAkCkf,KAAzE;AACD,CAJD;;AAMA;AACA;AACA;;;;;AAKA,SAASglD,aAAT,CAAuBr2E,IAAvB,EAA6B;AAC3B,MAAMu2E,eAAe,CAArB;AACA,MAAMC,QAAQx2E,IAAd;;AAEA,MAAM8L,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,MAAM6S,cAAcjvB,SAASivB,WAA7B;;AAEA;;;;;;;AAOA;AACA,MAAM07C,mBACJ3qE,SAAS0tB,QAAT,CAAkB7mB,IAAlB,IACA7G,SAAS0tB,QAAT,CAAkB7mB,IAAlB,CAAuBR,OADvB,IAEAmpB,MAAMC,OAAN,CAAczvB,SAAS0tB,QAAT,CAAkB7mB,IAAlB,CAAuBR,OAArC,CAFA,IAGArG,SAAS0tB,QAAT,CAAkB7mB,IAAlB,CAAuBR,OAAvB,CAA+BhO,MAA/B,GAAwC,CAJ1C;;AAMA;AACA,MAAMuyE,UAAU,IAAIz5D,GAAJ,EAAhB,CAtB2B,CAsBA;AAC3B,MAAM05D,qBAAqB,IAAI15D,GAAJ,EAA3B,CAvB2B,CAuBW;AACtCu5D,QAAMz6C,KAAN,CAAYxoB,OAAZ,CAAoB,aAAK;AACvB,QAAMqjE,UAAUC,aAAa7zE,CAAb,CAAhB,CADuB,CACU;AACjC,QAAM8zE,WAAWJ,QAAQx2D,GAAR,CAAY02D,OAAZ,CAAjB;AACA,QAAMG,UAAU3nD,OAAOpsB,EAAEg4B,MAAT,KAAoBu7C,YAApC,CAHuB,CAG2B;;AAElD;AACAvzE,MAAEw/C,IAAF,GAASu0B,WAAWD,WAAWA,SAASt0B,IAApB,GAA2B,CAAtC,CAAT,CANuB,CAM4B;;AAEnD;AACA,QAAIi0B,gBAAJ,EAAsB;AACpB,UAAMO,iBAAiBL,mBAAmBz2D,GAAnB,CAAuB02D,OAAvB,KAAmC,IAAI35D,GAAJ,EAA1D,CADoB,CACiD;AACrE,UAAMoU,QAAQ5tB,IAAIs5D,eAAJ,CAAoB/5D,CAApB,EAAuB8I,QAAvB,CAAd;AACA,UAAMmrE,cAAcD,eAAe92D,GAAf,CAAmBmR,KAAnB,KAA6B,CAAjD,CAHoB,CAGgC;AACpD2lD,qBAAer5D,GAAf,CAAmB0T,KAAnB,EAA0B4lD,cAAcF,OAAxC;AACAJ,yBAAmBh5D,GAAnB,CAAuBi5D,OAAvB,EAAgCI,cAAhC;AACD;;AAED;AACA,QAAIj8C,cAAc,CAAlB,EAAqB/3B,EAAEw/C,IAAF,GAAS1vC,KAAKghC,GAAL,CAAS/Y,WAAT,EAAsB/3B,EAAEw/C,IAAxB,CAAT;;AAErB;AACAk0B,YAAQ/4D,GAAR,CAAYi5D,OAAZ,EAAqB5zE,CAArB;AACD,GAtBD;;AAwBA;AACAwzE,QAAMz6C,KAAN,CAAYxoB,OAAZ,CAAoB,aAAK;AACvBvQ,MAAEquB,KAAF,GAAU6lD,qBAAqBl0E,CAArB,EAAwB2zE,kBAAxB,CAAV;AACD,GAFD;;AAIAH,QAAMz6C,KAAN,gCAAkB26C,QAAQl2D,MAAR,EAAlB;AACAre,QAAMimB,WAAN,CAAkB,OAAlB,EAA2BouD,KAA3B;AACD;;AAED;AACA;;;;;;;AAOA,SAASK,YAAT,CAAsBj6C,IAAtB,EAA4B;AAC1B,MAAIu6C,OAAOv6C,KAAKvB,MAAhB;AACA,MAAI+7C,OAAOx6C,KAAKzyB,MAAhB;AACA,SAAO,CAACgtE,IAAD,EAAOC,IAAP,EAAa32B,IAAb,GAAoB1vC,QAApB,EAAP;AACD;;AAED;AACA;;;;;;AAMA,SAASmmE,oBAAT,CAA8Bt6C,IAA9B,EAAoC+5C,kBAApC,EAAwD;AACtD,MAAMC,UAAUC,aAAaj6C,IAAb,CAAhB;AACA,MAAMo6C,iBAAiBL,mBAAmBz2D,GAAnB,CAAuB02D,OAAvB,CAAvB,CAFsD,CAEE;AACxD,MAAMS,sCAAaL,eAAenlE,IAAf,EAAb,EAAN;AACAwlE,SAAO52B,IAAP,CAAY,UAAC/8C,CAAD,EAAIC,CAAJ;AAAA,WAAUqzE,eAAe92D,GAAf,CAAmBvc,CAAnB,IAAwBqzE,eAAe92D,GAAf,CAAmBxc,CAAnB,CAAlC;AAAA,GAAZ,EAJsD,CAIgB;AACtE,SAAO2zE,OAAO,CAAP,CAAP;AACD;;AAED;AACA;AACAj5E,OAAOC,OAAP,GAAiBoF,GAAjB;;;;;;;;AC3DA;;;;;;;;AAlFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA,IAAMywB,SAAS11B,QAAQ,iCAAR,CAAf;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;AACA,IAAMiO,QAAQjO,QAAQ,MAAR,GAAd;AACA,IAAM84E,QAAQ94E,QAAQ,YAAR,CAAd;AACA,IAAM0I,UAAU1I,QAAQ,qBAAR,CAAhB;AACA,IAAMktC,UAAUltC,QAAQ,YAAR,CAAhB;;;AAGA;AACA;AACA,IAAIiF,MAAMrE,OAAOoI,SAAP,CAAiBpJ,OAAOgD,EAAxB,CAAV;AACA,IAAIe,QAAQ/C,OAAOgD,WAAP,CAAmBqB,GAAnB,CAAZ;;AAEA;AACA;AACA,IAAMpC,MAAM,KAAZ;AACA,IAAM8F,KAAK,cAAX;AACA;AACA,IAAI2E,WAAW,IAAf,C,CAAqB;AACrB,IAAIyrE,kBAAJ,C,CAAwB;AACxB;AACA,IAAIC,kCAAJ;AACA,IAAIC,kCAAJ;AACA;AACA,IAAIC,eAAe,EAAnB,C,CAAuB;AACvB;AACA,IAAMC,UAAUr5E,OAAOP,SAAP,CAAiBC,OAAjB,IAA4B,WAA5C;AACA,IAAM45E,8BAA4BD,OAA5B,UAAN;;AAEA;AACA;AACA;;AAEAl0E,IAAIiE,IAAJ,CAAS,YAAT,EAAuB,YAAM;AAC3BvF,QAAM6F,gBAAN,CAAuB,YAAvB,EAAqC,gBAAQ;AAC3C,QAAI3G,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,KAAK,8BAAjB,EAAiDnH,IAAjD;AACT;AACA63E;AACD,GAJD;;AAMA;AACA;;AAEA11E,QAAMrC,aAAN,CAAoB,eAApB,EAAqC,gBAAQ;AAC3Cg4E,mBAAe93E,IAAf;AACAZ,WAAO6C,GAAP,CAAW,eAAX,EAA4B8G,KAAKC,SAAL,CAAehJ,IAAf,CAA5B;AACD,GAHD;;AAKA;AACA;;AAEAmC,QAAMrC,aAAN,CAAoB,cAApB,EAAoC,YAAM;AACxCi2E;AACA32E,WAAO6C,GAAP,CAAW,eAAX;AACD,GAHD;;AAKA;AACA;;AAEAE,QAAMrC,aAAN,CAAoB,gBAApB,EAAsC,gBAAQ;AAC5C,QAAMigD,aAAa59C,MAAM+lB,QAAN,CAAe,YAAf,CAAnB;AACA63B,eAAWC,YAAX,GAA0BhgD,KAAKggD,YAA/B;AACA;AACA;AACA;AACA,QAAIhgD,KAAKggD,YAAL,KAAsB9rB,OAAO+rB,MAAP,CAAcE,KAAxC,EAA+C;AAC7C,UAAMwyB,SAASxwE,MAAM+lB,QAAN,CAAe,WAAf,CAAf;AACA,UAAMgoC,eAAeyiB,OAAO/2C,KAAP,GAAe+2C,OAAO/2C,KAAP,CAAa,CAAb,CAAf,GAAiCh4B,SAAtD;AACA,UAAIssD,YAAJ,EAAkB;AAChBnQ,mBAAWspB,KAAX,GAAmB;AACjBhuC,kBAAQ60B,aAAa9uD,EADJ;AAEjBuwC,uBAAaue,aAAa55C,KAFT;AAGjB8+D,iBAAOr1B,WAAWspB,KAAX,CAAiB+L;AAHP,SAAnB;AAKD;AACF;AACDjzE,UAAMimB,WAAN,CAAkB,YAAlB,EAAgC23B,UAAhC;AACD,GAlBD;AAmBA;AACA;;AAEA59C,QAAM6F,gBAAN,CAAuB,QAAvB,EAAiC,gBAAQ;AACvC6vE;AACD,GAFD;AAGA;AACA;;AAEA11E,QAAM6F,gBAAN,CAAuB,UAAvB,EAAmC,gBAAQ;AACzC;AACA;AACA+vE;AACD,GAJD;;AAMA;AACA;;;AAGA51E,QAAM6F,gBAAN,CAAuB,WAAvB,EAAoC,gBAAQ;AAC1C;AACA,QAAM+3C,aAAa59C,MAAM+lB,QAAN,CAAe,YAAf,CAAnB;AACA,QAAI63B,WAAWC,YAAX,KAA4B9rB,OAAO+rB,MAAP,CAAcE,KAA9C,EAAqD;AACnD63B,iBAAWh4E,IAAX;AACD;AACF,GAND;AAOD,CAvED,E,CAuEI;;AAEJ;AACA;AACA;;AAEA,SAAS+3E,eAAT,GAA2B;AACzBjsE,aAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAX;AACA,MAAM8Q,WAAWltB,SAASktB,QAA1B;AACA,MAAMQ,WAAW1tB,SAAS0tB,QAA1B;AACAg+C,8BAA4B1rE,SAAS2sB,uBAArC;AACAg/C,8BAA4B3rE,SAAS6sB,uBAArC;;AAEA;;;;;;;AAOAa,WAASmY,WAAT,GAAuB;AACrBzY,kBAAc,QADO;AAErBC,iBAAa,cAFQ;AAGrBC,UAAM,cAHe;AAIrBnB,YAAQ,KAJa;AAKrBtlB,UAAM;AALe,GAAvB;AAOA6mB,WAAS8mB,WAAT,GAAuB;AACrBpnB,kBAAc,QADO;AAErBC,iBAAa,cAFQ;AAGrBC,UAAM,cAHe;AAIrBnB,YAAQ,KAJa;AAKrBtlB,UAAM;AALe,GAAvB;AAOA;;AAEA,MAAIslE,QAAQ;AACVr8C,WAAO;AACL1f,aAAO,OADF,EACW;AAChB5F,aAAO,cAFF;AAGL69D,eAAS+D,gBAAgBl/C,QAAhB,CAHJ;AAILo7C,oBAAc,GAJT,CAIa;AAJb,KADG;AAOVr4C,WAAO;AACL7f,aAAO,OADF,EACW;AAChB5F,aAAO,cAFF;AAGL69D,eAASgE,oCAAoCD,gBAAgB1+C,QAAhB,CAApC,CAHJ;AAIL46C,oBAAc,GAJT,CAIa;AAJb,KAPG;AAaV/K,WAAO;AACLhuC,cAAQz3B,SADH,EACc;AACnB+tC,mBAAa,EAFR;AAGLyjC,aAAO;AAHF;AAbG,GAAZ;;AAoBAjzE,QAAMimB,WAAN,CAAkB,YAAlB,EAAgC6vD,KAAhC;;AAEA;AACAV,uBAAqB9qE,MAAMwrE,KAAN,CAArB;AACD;AACD;AACA,SAASC,eAAT,CAAyBjP,OAAzB,EAAkC;AAChC,MAAIkL,UAAU,EAAd;AACA,MAAIiE,UAAU,CAAd;;AAFgC;AAAA;AAAA;;AAAA;AAIhC,yBAA4B9tE,OAAOqO,OAAP,CAAeswD,OAAf,CAA5B,8HAAqD;AAAA;;AAAA;;AAAA,UAAzCvkE,GAAyC;AAAA,UAApCsQ,MAAoC;;AACnD,UAAI6gE,iBAAJ;AACA,cAAQ7gE,OAAOrC,IAAf;AACE,aAAKuhB,OAAO8sB,KAAP,CAAa4xB,QAAlB;AACA,aAAK1+C,OAAO8sB,KAAP,CAAaC,MAAlB;AACE40B,qBAAW3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GAAlC,CADF,CACyC;AACvC;AACF,aAAKwvB,OAAO8sB,KAAP,CAAaE,MAAlB;AACE20B,qBAAW3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GAAlC,CADF,CACyC;AACvC;AACF,aAAKwvB,OAAO8sB,KAAP,CAAa2xB,MAAlB;AACEkD,qBAAW3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GAAlC,CADF,CACyC;AACvC;AACF,aAAKwvB,OAAO8sB,KAAP,CAAah1C,IAAlB;AACE6pE,qBAAW3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GAAlC,CADF,CACyC;AACvC;AACF,aAAKwvB,OAAO8sB,KAAP,CAAa39C,IAAlB;AACEwyE,qBAAW3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GAAlC,CADF,CACyC;AACvC;AACF,aAAKwvB,OAAO8sB,KAAP,CAAa10C,KAAlB;AACEupE,qBAAW3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GAAlC,CADF,CACyC;AACvC;AACF,aAAKwvB,OAAO8sB,KAAP,CAAa6xB,MAAlB;AACE;AACF;AACE;AACA;AACA,cAAIxxE,GAAJ,EACEH,QAAQwB,IAAR,CAAayE,oCAAiC6N,OAAOrC,IAAxC,aAAoDqC,MAApD,CAAb;AACF;AA3BJ;AA6BA,UAAI6gE,aAAajyE,SAAjB,EAA4B,SA/BuB,CA+Bb;AACtC,UAAIoR,OAAOijB,MAAX,EAAmB,SAhCgC,CAgCtB;AAC7B,UAAI1X,SAAS;AACXnf,YAAIg3E,SADO;AAEX1zE,aAAKA,GAFM;AAGXiO,cAAMqC,OAAOrC,IAHF;AAIXijE,kBAAU5gE,OAAOkkB,YAJN;AAKX28C,kBAAUA,QALC;AAMX7wE,eAAO;AANI,OAAb;AAQA;AACA,UAAIgQ,OAAOrC,IAAP,KAAgBuhB,OAAO8sB,KAAP,CAAa2xB,MAAjC,EAAyC;AAAA;AACvC,cAAIxgE,UAAU,EAAd;AACA6C,iBAAO7C,OAAP,CAAeoB,OAAf,CAAuB,eAAO;AAC5B,gBAAIyQ,IAAI1N,KAAJ,KAAc,EAAlB,EAAsB;AACtBnE,oBAAQjS,IAAR,CAAa8jB,IAAI1N,KAAjB;AACD,WAHD;AAIAiK,iBAAOpO,OAAP,GAAiBA,OAAjB;AANuC;AAOxC;;AAEDgiE,cAAQj0E,IAAR,CAAaqgB,MAAb;AACD;AAxD+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyDhC,SAAO4zD,OAAP;AACD;AACD;AACA;;;;;;;;AAQA,SAASgE,mCAAT,CAA6ChE,OAA7C,EAAsD;AACpD,MAAMkE,gDAAuBlE,OAAvB,EAAN;AACA;AACA,MAAMmE,cAAc,CAApB,CAHoD,CAG7B;AACvB,MAAMC,mBAAmBF,iBAAiB50C,SAAjB,CAA2B;AAAA,WAAKrwB,EAAE1O,GAAF,KAAU,aAAf;AAAA,GAA3B,CAAzB;AACA2zE,mBAAiB30C,MAAjB,CAAwB40C,WAAxB,EAAqC,CAArC,EAAwCD,iBAAiBE,gBAAjB,CAAxC;AACAF,mBAAiB30C,MAAjB,CAAwB60C,gBAAxB,EAA0C,CAA1C;AACA;AACA,MAAMC,cAAc,CAApB,CARoD,CAQ7B;AACvB,MAAMC,mBAAmBJ,iBAAiB50C,SAAjB,CAA2B;AAAA,WAAKrwB,EAAE1O,GAAF,KAAU,aAAf;AAAA,GAA3B,CAAzB;AACA2zE,mBAAiB30C,MAAjB,CAAwB80C,WAAxB,EAAqC,CAArC,EAAwCH,iBAAiBI,gBAAjB,CAAxC;AACAJ,mBAAiB30C,MAAjB,CAAwB+0C,gBAAxB,EAA0C,CAA1C;AACA,SAAOJ,gBAAP;AACD;;AAED;AACA;AACA;;;AAGA,SAASP,cAAT,CAAwB93E,IAAxB,EAA8B;AAC5B,MAAM+/C,aAAa59C,MAAM+lB,QAAN,CAAe,YAAf,CAAnB;AACA63B,aAAWC,YAAX,GAA0BhgD,KAAKggD,YAAL,IAAqBD,WAAWC,YAA1D,CAF4B,CAE4C;AACxE,MAAIhgD,KAAKkc,KAAL,KAAe,OAAnB,EAA4B;AAC1B,QAAIlc,KAAK2S,IAAL,KAAc,cAAlB,EAAkC;AAChCotC,iBAAWnkB,KAAX,CAAiBw4C,YAAjB,GAAgCp0E,KAAKo0E,YAArC;AACD,KAFD,MAEO;AACL,UAAIsE,cAAc34B,WAAWnkB,KAAX,CAAiBu4C,OAAnC;AACA,UAAM5N,QAAQmS,YAAYj1C,SAAZ,CAAsB;AAAA,eAAKrwB,EAAEhS,EAAF,KAASpB,KAAKugB,MAAL,CAAYnf,EAA1B;AAAA,OAAtB,CAAd;AACAs3E,kBAAYh1C,MAAZ,CAAmB6iC,KAAnB,EAA0B,CAA1B,EAA6BvmE,KAAKugB,MAAlC;AACAw/B,iBAAWnkB,KAAX,CAAiBu4C,OAAjB,GAA2BuE,WAA3B;AACD;AACF,GATD,MASO,IAAI14E,KAAKkc,KAAL,KAAe,OAAnB,EAA4B;AACjC,QAAIlc,KAAK2S,IAAL,KAAc,cAAlB,EAAkC;AAChCotC,iBAAWhkB,KAAX,CAAiBq4C,YAAjB,GAAgCp0E,KAAKo0E,YAArC;AACD,KAFD,MAEO;AACL,UAAIuE,cAAc54B,WAAWhkB,KAAX,CAAiBo4C,OAAnC;AACA,UAAM5N,SAAQoS,YAAYl1C,SAAZ,CAAsB;AAAA,eAAKrwB,EAAEhS,EAAF,KAASpB,KAAKugB,MAAL,CAAYnf,EAA1B;AAAA,OAAtB,CAAd;AACAu3E,kBAAYj1C,MAAZ,CAAmB6iC,MAAnB,EAA0B,CAA1B,EAA6BvmE,KAAKugB,MAAlC;AACAw/B,iBAAWhkB,KAAX,CAAiBo4C,OAAjB,GAA2BwE,WAA3B;AACD;AACF,GATM,MASA,IAAI34E,KAAKkc,KAAL,KAAe,OAAnB,EAA4B;AACjC6jC,eAAWspB,KAAX,CAAiB+L,KAAjB,GAAyBp1E,KAAKugB,MAAL,CAAYvb,KAArC;AACD,GAFM,MAEA;AACL,wDAAkDhF,KAAKkc,KAAvD;AACD;AACD/Z,QAAMimB,WAAN,CAAkB,YAAlB,EAAgC23B,UAAhC;AACD;AACD;AACA;;;;AAIA,SAAS64B,cAAT,GAA0B;AACxB,MAAMnxE,SAAStF,MAAM+lB,QAAN,CAAe,QAAf,CAAf;AACA,MAAM63B,aAAa59C,MAAM+lB,QAAN,CAAe,YAAf,CAAnB;AACA,MAAMw3B,iBAAiB,EAAE9jB,oCAAWn0B,OAAOm0B,KAAlB,EAAF,EAAvB;;AAEA;AACA,MAAItxB,OAAOuH,IAAP,CAAYkuC,UAAZ,EAAwB57C,MAAxB,GAAiC,CAArC,EAAwC;;AAExC;AACA;AACA;AACAu7C,iBAAe3jB,KAAf,GAAuBt0B,OAAOs0B,KAAP,CAAajqB,GAAb,CAAiB,aAAK;AAC3C,QAAMupB,SAAS5zB,OAAOm0B,KAAP,CAAa+C,IAAb,CAAkB;AAAA,aAAKjC,EAAEt7B,EAAF,KAAS4B,EAAEq4B,MAAhB;AAAA,KAAlB,CAAf;AACA,QAAMlxB,SAAS1C,OAAOm0B,KAAP,CAAa+C,IAAb,CAAkB;AAAA,aAAKjC,EAAEt7B,EAAF,KAAS4B,EAAEmH,MAAhB;AAAA,KAAlB,CAAf;AACAnH,MAAE2uC,WAAF,GAAgBtW,SAASA,OAAO/kB,KAAhB,GAAwB,SAAxC;AACAtT,MAAEs9C,WAAF,GAAgBn2C,SAASA,OAAOmM,KAAhB,GAAwB,SAAxC;AACA,WAAOtT,CAAP;AACD,GANsB,CAAvB;;AAQA61E,wBAAsB94B,UAAtB,EAAkCL,cAAlC;AACAo5B,wBAAsB/4B,UAAtB,EAAkCL,cAAlC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA43B,QAAMyB,uBAAN,CAA8Br5B,cAA9B;AACA43B,QAAM0B,yBAAN,CAAgCt5B,cAAhC;;AAEA;AACAA,iBAAe21B,KAAf,GAAuB4D,oBAAoBxxE,MAApB,EAA4Bi4C,cAA5B,EAA4CK,WAAWC,YAAvD,CAAvB;;AAEA;AACA79C,QAAMimB,WAAN,CAAkB,gBAAlB,EAAoCs3B,cAApC;AACA;;AAEA,SAAOA,eAAe21B,KAAf,CAAqBH,YAA5B;AACD;AACD;AACA,SAASa,cAAT,GAA0B;AACxB;AACA,MAAMh2B,aAAatzC,MAAM8qE,kBAAN,CAAnB;AACAp1E,QAAMimB,WAAN,CAAkB,YAAlB,EAAgC23B,UAAhC;AACD;AACD;AACA,SAASk5B,mBAAT,CAA6BxxE,MAA7B,EAAqCi4C,cAArC,EAAqDM,YAArD,EAAmE;AACjE,MAAMD,aAAa59C,MAAM+lB,QAAN,CAAe,YAAf,CAAnB;AADiE,MAE3CgxD,gBAF2C,GAEtBn5B,WAAWnkB,KAFW,CAEzDw4C,YAFyD;AAAA,MAG3C+E,gBAH2C,GAGtBp5B,WAAWhkB,KAHW,CAGzDq4C,YAHyD;;;AAKjE,MAAMl9C,YAAYzvB,OAAOm0B,KAAP,CAAaz3B,MAA/B;AACA,MAAMgzB,YAAY1vB,OAAOs0B,KAAP,CAAa53B,MAA/B;AACA,MAAIi1E,0BAAJ;AAAA,MAAuBC,0BAAvB;AACA,MAAIr5B,iBAAiB9rB,OAAO+rB,MAAP,CAAcO,IAAnC,EAAyC;AACvC44B,wBAAoBliD,YAAYwoB,eAAe9jB,KAAf,CAAqBrb,MAArB,CAA4B;AAAA,aAAKmc,EAAE6lB,oBAAF,IAA0B22B,gBAA/B;AAAA,KAA5B,EAA6E/0E,MAA7G;AACAk1E,wBAAoBliD,YAAYuoB,eAAe3jB,KAAf,CAAqBxb,MAArB,CAA4B;AAAA,aAAKvd,EAAEu/C,oBAAF,IAA0B42B,gBAA/B;AAAA,KAA5B,EAA6Eh1E,MAA7G;AACD,GAHD,MAGO;AACLi1E,wBAAoB15B,eAAe9jB,KAAf,CAAqBz3B,MAAzC;AACAk1E,wBAAoB35B,eAAe3jB,KAAf,CAAqB53B,MAAzC;AACD;AACD,MAAM+wE,4BAA0BkE,iBAA1B,SAA+CliD,SAA/C,gBAAmEmiD,iBAAnE,SAAwFliD,SAAxF,WAAN;;AAEA,SAAO,EAAED,oBAAF,EAAaC,oBAAb,EAAwBiiD,oCAAxB,EAA2CC,oCAA3C,EAA8DnE,0BAA9D,EAAP;AACD;AACD;AACA,SAASoE,qBAAT,CAA+BpE,YAA/B,EAA6C;AAC3C,MAAMn1B,aAAa59C,MAAM+lB,QAAN,CAAe,YAAf,CAAnB;;AAEA;AACA,MAAI5d,OAAOuH,IAAP,CAAYkuC,UAAZ,EAAwB57C,MAAxB,GAAiC,CAArC,EAAwC;;AAExC,MAAMu0E,cAAc34B,WAAWnkB,KAAX,CAAiBu4C,OAArC;AACA,MAAMwE,cAAc54B,WAAWhkB,KAAX,CAAiBo4C,OAArC;;AAEA,MAAMoF,cAAcx5B,WAAWC,YAA/B,CAT2C,CASE;AAC7C,MAAMw5B,cAAcC,kBAAkB15B,WAAWnkB,KAAX,CAAiBu4C,OAAnC,CAApB;AACA,MAAMuF,cAAcD,kBAAkB15B,WAAWhkB,KAAX,CAAiBo4C,OAAnC,CAApB;AACA,MAAI73D,UAAU,EAAd;AACA,MAAIk9D,eAAeE,WAAnB,EACEp9D,UAAai9D,WAAb,UAA4BC,cAAc,SAAd,GAA0B,EAAtD,IAA2DA,WAA3D,UAA0EE,cAAc,SAAd,GAA0B,EAApG,IACKA,WADL;AAEF,MAAIp9D,OAAJ,EAAaA,WAAW,MAAM44D,YAAjB;;AAEb/yE,QAAME,SAAN,CAAgB,uBAAhB,EAAyC,EAAEukD,gBAAgBtqC,OAAlB,EAAzC;AACD;AACD;AACA,SAASu7D,eAAT,GAA2B;AACzB,MAAM3C,eAAe0D,gBAArB;AACAU,wBAAsBpE,YAAtB;AACD;AACD;AACA,SAASuE,iBAAT,CAA2BtF,OAA3B,EAAoC;AAClC,MAAI73D,UAAU,EAAd;AACA63D,UAAQ5gE,OAAR,CAAgB,kBAAU;AACxB,QACEgN,OAAOs1D,QAAP,KAAoBjyE,SAApB,IACA2c,OAAOvb,KAAP,KAAiBpB,SADjB,IAEA2c,OAAOvb,KAAP,KAAiB,EAHnB,EAKE;AACFsX,eAAWiE,OAAOq1D,QAAP,GAAkB,GAA7B;AACAt5D,eAAWq9D,mBAAmBp5D,OAAOs1D,QAA1B,IAAsC,GAAjD;AACAv5D,eAAW,MAAMiE,OAAOvb,KAAb,GAAqB,KAAhC;AACD,GAVD;AAWA,SAAOsX,OAAP;AACD;AACD;AACA,SAASq9D,kBAAT,CAA4B9D,QAA5B,EAAsC;AACpC,SAAO3hD,OAAO++C,SAAP,CAAiB4C,QAAjB,EAA2Bv/D,KAAlC;AACD;;AAED;AACA;AACA,SAASsjE,KAAT,CAAevlE,GAAf,EAAoB;AAAE,SAAOq3B,QAAQmuC,gBAAR,CAAyBh9B,OAAOxoC,GAAP,EAAYm3D,IAAZ,EAAzB,CAAP;AAAsD;AAC5E;AACA;;;;;;;;;;;AAWA,SAASsO,aAAT,CAAuBC,MAAvB,EAA+BC,QAA/B,EAA0D;AAAA,MAAjBC,QAAiB,uEAAN,IAAM;;AACxD,MAAMC,aAAar9B,OAAOk9B,MAAP,EAAe91E,KAAf,CAAqB,IAArB,CAAnB;AACA,MAAMk2E,eAAeD,WAAWpoE,GAAX,CAAe;AAAA,WAAQ+qC,OAAOu9B,IAAP,EAAan2E,KAAb,CAAmB,MAAnB,EAA2B6N,GAA3B,CAA+B;AAAA,aAAO+qC,OAAOxoC,GAAP,EAAYm3D,IAAZ,EAAP;AAAA,KAA/B,CAAR;AAAA,GAAf,CAArB;AACA;AACA,MAAM6O,YAAYF,aAAaroE,GAAb,CAAiB;AAAA,WAAQ+J,KAAKqrB,MAAL,CAAY,UAACxjC,CAAD,EAAIC,CAAJ;AAAA,aAAUD,KAAK42E,qBAAqBV,MAAMj2E,CAAN,CAArB,EAA+Bq2E,QAA/B,EAAyC,IAAzC,CAAf;AAAA,KAAZ,EAA2E,KAA3E,CAAR;AAAA,GAAjB,CAAlB;AACA,MAAMO,aAAaF,UAAUnzC,MAAV,CAAiB,UAACxjC,CAAD,EAAIC,CAAJ;AAAA,WAAUD,KAAKC,CAAf;AAAA,GAAjB,EAAmC,IAAnC,CAAnB;AACA,SAAOs2E,WAAWM,UAAX,GAAwB,CAACA,UAAhC;AACD;AACD,SAASD,oBAAT,CAA8BP,MAA9B,EAAsCC,QAAtC,EAAiE;AAAA,MAAjBC,QAAiB,uEAAN,IAAM;;AAC/D,MAAMj2C,QAAQ,IAAIw2C,MAAJ,EAAW,QAAST,MAApB,EAA4B,GAA5B,CAAd;AACA,MAAIr7C,gBAAJ;AACA,MAAIq7C,WAAW,EAAf,EAAmB;AACjB;AACAr7C,cAAU,IAAV;AACD,GAHD,MAGO,IAAIu7C,QAAJ,EAAc;AACnBv7C,cAAUsF,MAAM1U,IAAN,CAAW0qD,QAAX,CAAV;AACD,GAFM,MAEA;AACLt7C,cAAU,CAACsF,MAAM1U,IAAN,CAAW0qD,QAAX,CAAX;AACD;AACD,SAAOt7C,OAAP;AACD;AACD;AACA,SAAS+7C,aAAT,CAAuB5E,QAAvB,EAAiC6E,SAAjC,EAA4CC,MAA5C,EAAoD;AAClD,MAAIj8C,gBAAJ;AACA,MAAIg8C,cAAc,EAAlB,EAAsB;AACpBh8C,cAAU,IAAV;AACD,GAFD,MAEO;AACL,YAAQm3C,QAAR;AACE,WAAK3hD,OAAO++C,SAAP,CAAiBQ,EAAjB,CAAoB/uE,GAAzB;AACEg6B,kBAAUi8C,SAASD,SAAnB;AACA;AACF,WAAKxmD,OAAO++C,SAAP,CAAiBS,KAAjB,CAAuBhvE,GAA5B;AACEg6B,kBAAUi8C,UAAUD,SAApB;AACA;AACF,WAAKxmD,OAAO++C,SAAP,CAAiBU,EAAjB,CAAoBjvE,GAAzB;AACEg6B,kBAAUi8C,SAASD,SAAnB;AACA;AACF,WAAKxmD,OAAO++C,SAAP,CAAiBW,KAAjB,CAAuBlvE,GAA5B;AACEg6B,kBAAUi8C,UAAUD,SAApB;AACA;AACF,WAAKxmD,OAAO++C,SAAP,CAAiBM,EAAjB,CAAoB7uE,GAAzB;AACEg6B,kBAAUi8C,WAAWD,SAArB;AACA;AACF,WAAKxmD,OAAO++C,SAAP,CAAiBO,MAAjB,CAAwB9uE,GAA7B;AACEg6B,kBAAUi8C,WAAWD,SAArB;AACA;AACF;AACEx5E,gBAAQiX,KAAR,sCAAiD09D,QAAjD;AACA;AArBJ;AAuBD;AACD,SAAOn3C,OAAP;AACD;AACD;AACA,SAASk8C,YAAT,CAAsB/E,QAAtB,EAAgC6E,SAAhC,EAA2CC,MAA3C,EAAmD;AACjD;AADiD,MAEzC31E,KAFyC,GAEN21E,MAFM,CAEzC31E,KAFyC;AAAA,MAElC4N,MAFkC,GAEN+nE,MAFM,CAElC/nE,MAFkC;AAAA,MAE1BioE,eAF0B,GAENF,MAFM,CAE1BE,eAF0B;;AAGjD,MAAMn6B,OAAOp0C,gBAAMgF,KAAN,CAAYtM,KAAZ,CAAb,CAHiD,CAGhB;AACjC,MAAM27C,OAAOr0C,gBAAMgF,KAAN,CAAYopE,SAAZ,CAAb;AACA,MAAIh6B,KAAKv8C,MAAL,GAAc,CAAd,IAAmBw8C,KAAKx8C,MAAL,GAAc,CAArC,EAAwC,OAAO,KAAP;AACxC,MAAMg9C,KAAKT,KAAK,CAAL,EAAQ/uC,KAAR,CAAcD,WAAzB;AACA,MAAMuwB,KAAK0e,KAAK,CAAL,EAAQhvC,KAAR,CAAcD,WAAzB;;AAEA;AACA;AACA,MAAMopE,SAASxwE,OAAOuH,IAAP,CAAYsvC,EAAZ,CAAf;AACA,MAAM45B,SAASzwE,OAAOuH,IAAP,CAAYowB,EAAZ,CAAf;AACA,MAAM+4C,aAAaD,OAAOx6D,MAAP,CAAc;AAAA,WAAKu6D,OAAOpoE,QAAP,CAAgBX,CAAhB,CAAL;AAAA,GAAd,CAAnB;AACA,MAAIipE,WAAW72E,MAAX,GAAoB,CAAxB,EAA2B;AACzB;AACA,WAAO,KAAP;AACD;;AAED,MAAIi9C,cAAJ;AACA,MAAI45B,WAAWtoE,QAAX,CAAoB,MAApB,KAA+ByuC,GAAGp0C,IAAH,KAAYk1B,GAAGl1B,IAAlD,EAAwD;AACtDq0C,YAAQD,GAAGp0C,IAAH,GAAUk1B,GAAGl1B,IAArB;AACD,GAFD,MAEO,IAAIiuE,WAAWtoE,QAAX,CAAoB,OAApB,KAAgCyuC,GAAG/vC,KAAH,KAAa6wB,GAAG7wB,KAApD,EAA2D;AAChEgwC,YAAQD,GAAG/vC,KAAH,GAAW6wB,GAAG7wB,KAAtB;AACD,GAFM,MAEA,IAAI4pE,WAAWtoE,QAAX,CAAoB,KAApB,KAA8ByuC,GAAGtuC,GAAH,KAAWovB,GAAGpvB,GAAhD,EAAqD;AAC1DuuC,YAAQD,GAAGtuC,GAAH,GAASovB,GAAGpvB,GAApB;AACD,GAFM,MAEA,IAAImoE,WAAWtoE,QAAX,CAAoB,MAApB,KAA+ByuC,GAAGE,IAAH,KAAYpf,GAAGof,IAAlD,EAAwD;AAC7DD,YAAQD,GAAGE,IAAH,GAAUpf,GAAGof,IAArB;AACD,GAFM,MAEA,IAAI25B,WAAWtoE,QAAX,CAAoB,QAApB,KAAiCyuC,GAAGG,MAAH,KAAcrf,GAAGqf,MAAtD,EAA8D;AACnEF,YAAQD,GAAGG,MAAH,GAAYrf,GAAGqf,MAAvB;AACD,GAFM,MAEA,IAAI05B,WAAWtoE,QAAX,CAAoB,QAApB,KAAiCyuC,GAAGI,MAAH,KAActf,GAAGsf,MAAtD,EAA8D;AACnEH,YAAQD,GAAGI,MAAH,GAAYtf,GAAGsf,MAAvB;AACD,GAFM,MAEA;AACL;AACAH,YAAQ,CAAR;AACD;;AAED,MAAI1iB,gBAAJ;AACA,MAAIg8C,cAAc,EAAlB,EAAsB;AACpBh8C,cAAU,IAAV;AACD,GAFD,MAEO;AACL,YAAQm3C,QAAR;AACE,WAAK3hD,OAAO++C,SAAP,CAAiBQ,EAAjB,CAAoB/uE,GAAzB;AACEg6B,kBAAU0iB,QAAQ,CAAlB;AACA;AACF,WAAKltB,OAAO++C,SAAP,CAAiBS,KAAjB,CAAuBhvE,GAA5B;AACEg6B,kBAAU0iB,SAAS,CAAnB;AACA;AACF,WAAKltB,OAAO++C,SAAP,CAAiBU,EAAjB,CAAoBjvE,GAAzB;AACEg6B,kBAAU0iB,QAAQ,CAAlB;AACA;AACF,WAAKltB,OAAO++C,SAAP,CAAiBW,KAAjB,CAAuBlvE,GAA5B;AACEg6B,kBAAU0iB,SAAS,CAAnB;AACA;AACF,WAAKltB,OAAO++C,SAAP,CAAiBM,EAAjB,CAAoB7uE,GAAzB;AACEg6B,kBAAU0iB,UAAU,CAApB;AACA;AACF,WAAKltB,OAAO++C,SAAP,CAAiBO,MAAjB,CAAwB9uE,GAA7B;AACEg6B,kBAAU0iB,UAAU,CAApB;AACA;AACF;AACElgD,gBAAQiX,KAAR,sCAAiD09D,QAAjD;AACA;AArBJ;AAuBD;AACD,SAAOn3C,OAAP;AACD;;AAED;AACA;AACA;AACA,SAASm6C,qBAAT,CAA+B94B,UAA/B,EAA2CL,cAA3C,EAA2D;AACzDg4B,iBAAe,EAAf;;AAEA;AACA,MAAI33B,WAAWC,YAAX,KAA4B9rB,OAAO+rB,MAAP,CAAcE,KAA9C,EACE86B,YAAYl7B,UAAZ,EAAwBL,cAAxB;;AAEFA,iBAAe9jB,KAAf,GAAuB8jB,eAAe9jB,KAAf,CAAqBrb,MAArB,CAA4B,gBAAQ;AACzD,WAAO26D,iBAAiBz+C,IAAjB,EAAuBsjB,UAAvB,CAAP;AACD,GAFsB,CAAvB;AAGD;;AAED,SAASm7B,gBAAT,CAA0Bz+C,IAA1B,EAAgCsjB,UAAhC,EAA4C;AAAA,MAClCC,YADkC,GACjBD,UADiB,CAClCC,YADkC;AAAA,0BAERD,WAAWnkB,KAFH;AAAA,MAElCu4C,OAFkC,qBAElCA,OAFkC;AAAA,MAEzBC,YAFyB,qBAEzBA,YAFyB;AAAA,0BAGhBr0B,WAAWspB,KAHK;AAAA,MAGlChuC,MAHkC,qBAGlCA,MAHkC;AAAA,MAG1B+5C,KAH0B,qBAG1BA,KAH0B;;AAK1C;;AACA,MAAI+F,WAAW,IAAf;;AAEA;AACA;AACAhH,UAAQ5gE,OAAR,CAAgB,kBAAU;AACxB,QAAIgN,OAAOs1D,QAAP,KAAoB3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GAA/C,EAAoD,OAD5B,CACoC;AAC5D;AACA,QAAI,CAAC02E,wBAAwB3+C,IAAxB,EAA8Blc,MAA9B,CAAL,EAA4C;AAC1C46D,iBAAW,KAAX;AACD;AACF,GAND;;AAQA;AACA1+C,OAAK8lB,oBAAL,GAA4Bi1B,yBAA5B,CAnB0C,CAmBa;AACvD,MAAIx3B,iBAAiB9rB,OAAO+rB,MAAP,CAAc/rB,MAAnC,EAA2C;AACzC;AACA,QAAIinD,QAAJ,EAAc,OAAO,IAAP;AACd,WAAO,KAAP,CAHyC,CAG3B;AACf,GAJD,MAIO,IAAIn7B,iBAAiB9rB,OAAO+rB,MAAP,CAAcO,IAAnC,EAAyC;AAC9C,QAAI,CAAC26B,QAAL,EAAe;AACb1+C,WAAK8lB,oBAAL,GAA4B6xB,YAA5B,CADa,CAC6B;AAC3C;AACD,WAAO,IAAP,CAJ8C,CAIjC;AACd,GALM,MAKA,IAAIp0B,iBAAiB9rB,OAAO+rB,MAAP,CAAcC,MAAnC,EAA2C;AAChD,QAAIi7B,QAAJ,EAAc,OAAO,IAAP,CADkC,CACrB;AAC3B;AACAzD,iBAAax3E,IAAb,CAAkBu8B,KAAKr7B,EAAvB;AACA,WAAO,KAAP;AACD,GALM,MAKA,IAAI4+C,iBAAiB9rB,OAAO+rB,MAAP,CAAcE,KAAnC,EAA0C;AAC/C;AACA,QACE9kB,WAAWz3B,SAAX,KACC64B,KAAK4+C,WAAL,KAAqBz3E,SAArB,IAAkC64B,KAAK4+C,WAAL,GAAmBjG,KADtD,CADF,EAGE;AACAsC,mBAAax3E,IAAb,CAAkBu8B,KAAKr7B,EAAvB;AACA,aAAO,KAAP;AACD;AACD,WAAO,IAAP;AACD,GAVM,MAUA;AACL;AACA,WAAO,IAAP;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACD;AACA,SAASg6E,uBAAT,CAAiC3+C,IAAjC,EAAuClc,MAAvC,EAA+C;AAC7C,MACEA,OAAO7b,GAAP,KAAed,SAAf,IACA2c,OAAOs1D,QAAP,KAAoBjyE,SADpB,IAEA2c,OAAOvb,KAAP,KAAiBpB,SAHnB,EAIE;AACA,WAAO,KAAP,CADA,CACc;AACf;;AAED,MAAM03E,YAAY7+C,KAAKlc,OAAO7b,GAAZ,CAAlB;;AAEA,UAAQ6b,OAAOs1D,QAAf;AACE,SAAK3hD,OAAO++C,SAAP,CAAiBE,QAAjB,CAA0BzuE,GAA/B;AACE,aAAOo1E,cAAcv5D,OAAOvb,KAArB,EAA4Bs2E,SAA5B,EAAuC,IAAvC,CAAP;AACF,SAAKpnD,OAAO++C,SAAP,CAAiBG,YAAjB,CAA8B1uE,GAAnC;AACE,aAAOo1E,cAAcv5D,OAAOvb,KAArB,EAA4Bs2E,SAA5B,EAAuC,KAAvC,CAAP;AACF,SAAKpnD,OAAO++C,SAAP,CAAiBI,QAAjB,CAA0B3uE,GAA/B;AACE,aAAO42E,cAAc13E,SAAd,IAA2B03E,cAAc,EAAhD;AACF,SAAKpnD,OAAO++C,SAAP,CAAiBK,YAAjB,CAA8B5uE,GAAnC;AACE,aAAO42E,cAAc13E,SAAd,IAA2B03E,cAAc,EAAhD;AACF;AACE,UAAIA,cAAc13E,SAAlB,EAA6B,OAAO,KAAP,CAD/B,CAC6C;AAC3C,UAAI2c,OAAO5N,IAAP,KAAgBuhB,OAAO8sB,KAAP,CAAa10C,KAAjC,EACE,OAAOsuE,aAAar6D,OAAOs1D,QAApB,EAA8Bt1D,OAAOvb,KAArC,EAA4Cs2E,SAA5C,CAAP;AACF;AACA,aAAOb,cAAcl6D,OAAOs1D,QAArB,EAA+Bt1D,OAAOvb,KAAtC,EAA6Cs2E,SAA7C,CAAP;AAdJ;AAgBD;;AAED;AACA;AACA,SAASxC,qBAAT,CAA+B/4B,UAA/B,EAA2CL,cAA3C,EAA2D;AAAA,MACjDM,YADiD,GAChCD,UADgC,CACjDC,YADiD;AAAA,0BAEvBD,WAAWhkB,KAFY;AAAA,MAEjDo4C,OAFiD,qBAEjDA,OAFiD;AAAA,MAExCC,YAFwC,qBAExCA,YAFwC;;AAGzD,MAAI,CAAC10B,eAAe3jB,KAApB,EAA2B,OAH8B,CAGtB;AACnC2jB,iBAAe3jB,KAAf,GAAuB2jB,eAAe3jB,KAAf,CAAqBxb,MAArB,CAA4B,gBAAQ;AACzD,WAAOg7D,iBACL3+C,IADK,EAELu3C,OAFK,EAGLC,YAHK,EAILp0B,YAJK,EAKLN,cALK,CAAP;AAOD,GARsB,CAAvB;AASD;AACD;AACA;;;AAGA,SAAS67B,gBAAT,CAA0B3+C,IAA1B,EAAgCu3C,OAAhC,EAAyCC,YAAzC,EAAuDp0B,YAAvD,EAAqEN,cAArE,EAAqF;AACnF;AACA,MAAI87B,WAAW,IAAf;AACA,MAAMngD,SAASqkB,eAAe9jB,KAAf,CAAqB+C,IAArB,CAA0B,aAAK;AAC5C,QAAI/B,KAAKvB,MAAL,KAAgBz3B,SAApB,EAA+B,OAAO,KAAP;AAC/B;AACA;AACA,QAAMg2C,WAAW,OAAOhd,KAAKvB,MAAZ,KAAuB,QAAvB,GAAkCuB,KAAKvB,MAAvC,GAAgDuB,KAAKvB,MAAL,CAAYj6B,EAA7E;AACA,WAAO4B,EAAE5B,EAAF,KAASw4C,QAAhB;AACD,GANc,CAAf;AAOA,MAAMzvC,SAASu1C,eAAe9jB,KAAf,CAAqB+C,IAArB,CAA0B,aAAK;AAC5C,QAAI/B,KAAKzyB,MAAL,KAAgBvG,SAApB,EAA+B,OAAO,KAAP;AAC/B;AACA;AACA,QAAMi2C,WAAW,OAAOjd,KAAKzyB,MAAZ,KAAuB,QAAvB,GAAkCyyB,KAAKzyB,MAAvC,GAAgDyyB,KAAKzyB,MAAL,CAAY/I,EAA7E;AACA,WAAO4B,EAAE5B,EAAF,KAASy4C,QAAhB;AACD,GANc,CAAf;;AAQA;AACA;AACAjd,OAAK2lB,oBAAL,GAA4Bk1B,yBAA5B,CApBmF,CAoB5B;;AAEvD;AACA,MAAIp8C,WAAWz3B,SAAX,IAAwBuG,WAAWvG,SAAvC,EAAkD,OAAO,KAAP;;AAElD;AACA,MAAI8zE,aAAahlE,QAAb,CAAsB2oB,OAAOj6B,EAA7B,KAAoCs2E,aAAahlE,QAAb,CAAsBvI,OAAO/I,EAA7B,CAAxC,EACE,OAAO,KAAP;AACF;AACA,MAAIi6B,OAAOknB,oBAAP,GAA8B,GAA9B,IAAqCp4C,OAAOo4C,oBAAP,GAA8B,GAAvE,EAA4E;AAC1E;AACA;AACA;AACA,QAAIvC,iBAAiB9rB,OAAO+rB,MAAP,CAAc/rB,MAAnC,EAA2C,OAAO,KAAP;AAC3C;AACA;AACA0I,SAAK2lB,oBAAL,GAA4B6xB,YAA5B,CAP0E,CAOhC;AAC1C,WAAO,IAAP;AACD;;AAED;AACA;AACA;AACAD,UAAQ5gE,OAAR,CAAgB,kBAAU;AACxB,QAAIgN,OAAOs1D,QAAP,KAAoB3hD,OAAO++C,SAAP,CAAiBC,KAAjB,CAAuBxuE,GAA/C,EAAoD,OAD5B,CACoC;AAC5D;AACA;AACA,QAAI,CAAC+2E,wBAAwB7+C,IAAxB,EAA8Brc,MAA9B,CAAL,EAA4C;AAC1Ci7D,iBAAW,KAAX;AACD;AACF,GAPD;;AASA;AACA,MAAIx7B,iBAAiB9rB,OAAO+rB,MAAP,CAAc/rB,MAAnC,EAA2C;AACzC;AACA;AACA0I,SAAK2lB,oBAAL,GAA4Bk1B,yBAA5B,CAHyC,CAGc;AACvD,QAAI+D,QAAJ,EAAc,OAAO,IAAP,CAJ2B,CAId;AAC3B,WAAO,KAAP,CALyC,CAK3B;AACf,GAND,MAMO,IAAIx7B,iBAAiB9rB,OAAO+rB,MAAP,CAAcO,IAAnC,EAAyC;AAC9C,QAAI,CAACg7B,QAAL,EAAe;AACb5+C,WAAK2lB,oBAAL,GAA4B6xB,YAA5B,CADa,CAC6B;AAC3C;AACD,WAAO,IAAP,CAJ8C,CAIjC;AACd,GALM,MAKA,IAAIp0B,iBAAiB9rB,OAAO+rB,MAAP,CAAcC,MAAnC,EAA2C;AAChD,QAAIs7B,QAAJ,EAAc,OAAO,IAAP,CADkC,CACrB;AAC3B;AACA,WAAO,KAAP;AACD,GAJM,MAIA;AACL;AACA,WAAO,IAAP;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACD;AACA,SAASC,uBAAT,CAAiC7+C,IAAjC,EAAuCrc,MAAvC,EAA+C;AAC7C,MACEA,OAAO7b,GAAP,KAAed,SAAf,IACA2c,OAAOs1D,QAAP,KAAoBjyE,SADpB,IAEA2c,OAAOvb,KAAP,KAAiBpB,SAHnB,EAIE;AACA,WAAO,KAAP,CADA,CACc;AACf;;AAED,MAAI83E,kBAAJ;AACA,MAAIn7D,OAAO5N,IAAP,KAAgBuhB,OAAO8sB,KAAP,CAAah1C,IAAjC,EAAuC;AACrC;AACA;AACA,QAAIuU,OAAO7b,GAAP,KAAe,QAAnB,EAA6Bg3E,YAAY9+C,KAAK+U,WAAjB;AAC7B,QAAIpxB,OAAO7b,GAAP,KAAe,QAAnB,EAA6Bg3E,YAAY9+C,KAAK0jB,WAAjB;AAC9B,GALD,MAKO;AACLo7B,gBAAY9+C,KAAKrc,OAAO7b,GAAZ,CAAZ;AACD;;AAED,UAAQ6b,OAAOs1D,QAAf;AACE,SAAK3hD,OAAO++C,SAAP,CAAiBE,QAAjB,CAA0BzuE,GAA/B;AACE,aAAOo1E,cAAcv5D,OAAOvb,KAArB,EAA4B02E,SAA5B,EAAuC,IAAvC,CAAP;AACF,SAAKxnD,OAAO++C,SAAP,CAAiBG,YAAjB,CAA8B1uE,GAAnC;AACE,aAAOo1E,cAAcv5D,OAAOvb,KAArB,EAA4B02E,SAA5B,EAAuC,KAAvC,CAAP;AACF,SAAKxnD,OAAO++C,SAAP,CAAiBI,QAAjB,CAA0B3uE,GAA/B;AACE,aAAOg3E,cAAc93E,SAAd,IAA2B83E,cAAc,EAAhD;AACF,SAAKxnD,OAAO++C,SAAP,CAAiBK,YAAjB,CAA8B5uE,GAAnC;AACE,aAAOg3E,cAAc93E,SAAd,IAA2B83E,cAAc,EAAhD;AACF;AACE,UAAIA,cAAc93E,SAAlB,EAA6B,OAAO,KAAP,CAD/B,CAC6C;AAC3C,UAAI2c,OAAO5N,IAAP,KAAgBuhB,OAAO8sB,KAAP,CAAa10C,KAAjC,EACE,OAAOsuE,aAAar6D,OAAOs1D,QAApB,EAA8Bt1D,OAAOvb,KAArC,EAA4C02E,SAA5C,CAAP;AACF;AACA,aAAOjB,cAAcl6D,OAAOs1D,QAArB,EAA+Bt1D,OAAOvb,KAAtC,EAA6C02E,SAA7C,CAAP;AAdJ;AAgBD;;AAED;AACA;AACA;;;;;;;;;AASA,SAASC,sBAAT,CAAgCC,QAAhC,EAA0C5qC,MAA1C,EAAkD;AAChD,MAAI6qC,gBAAgB,IAAI5+D,GAAJ,EAApB;AACA2+D,WAAS7/C,KAAT,CAAexoB,OAAf,CAAuB,gBAAQ;AAC7B,QAAIqpB,KAAKvB,MAAL,KAAgB2V,MAApB,EAA4B6qC,cAAcl+D,GAAd,CAAkBif,KAAKzyB,MAAvB,EAA+B6mC,MAA/B,EADC,CACuC;AACpE,QAAIpU,KAAKzyB,MAAL,KAAgB6mC,MAApB,EAA4B6qC,cAAcl+D,GAAd,CAAkBif,KAAKvB,MAAvB,EAA+B2V,MAA/B;AAC7B,GAHD;AAIA,SAAO6qC,aAAP;AACD;AACD;AACA;;;;;;;AAOA,SAASC,eAAT,CAAyBT,WAAzB,EAAsCU,eAAtC,EAAuDH,QAAvD,EAAiEz/B,WAAjE,EAA8E;AAC5E,MAAIk/B,cAAcU,eAAlB,EAAmC;AACnC5/B,cAAY5oC,OAAZ,CAAoB,kBAAU;AAC5B,QAAMyoE,WAAW,EAAjB,CAD4B,CACP;AACrB,QAAMC,mBAAmBN,uBAAuBC,QAAvB,EAAiCvgD,MAAjC,CAAzB,CAF4B,CAEuC;AACnEugD,aAAShgD,KAAT,GAAiBggD,SAAShgD,KAAT,CAAe9pB,GAAf,CAAmB,gBAAQ;AAC1C,UAAI2qB,KAAK4+C,WAAL,KAAqBz3E,SAAzB,EAAoC,OAAO64B,IAAP,CADM,CACO;;AAEjD,UAAIA,KAAKr7B,EAAL,KAAYi6B,MAAhB,EAAwB;AACtBoB,aAAK4+C,WAAL,GAAmB,CAAnB,CADsB,CACA;AACvB,OAFD,MAEO,IAAIY,iBAAiBv+D,GAAjB,CAAqB+e,KAAKr7B,EAA1B,CAAJ,EAAmC;AACxCq7B,aAAK4+C,WAAL,GAAmBA,WAAnB;AACAW,iBAAS97E,IAAT,CAAcu8B,KAAKr7B,EAAnB;AACD;AACD,aAAOq7B,IAAP,CAT0C,CAS7B;AACd,KAVgB,CAAjB;;AAYA;AACA,QAAIu/C,SAAS73E,MAAT,GAAkB,CAAlB,IAAuBk3E,cAAc,CAAd,IAAmBU,eAA9C,EACED,gBAAgBT,cAAc,CAA9B,EAAiCU,eAAjC,EAAkDH,QAAlD,EAA4DI,QAA5D;AACH,GAlBD;AAmBD;AACD;AACA;;;;;;;;AAQA,SAASf,WAAT,CAAqBl7B,UAArB,EAAiC67B,QAAjC,EAA2C;AAAA,2BACf77B,WAAWspB,KADI;AAAA,MACjChuC,MADiC,sBACjCA,MADiC;AAAA,MACzB+5C,KADyB,sBACzBA,KADyB;AAEzC;;AACAwG,WAAShgD,KAAT,GAAiBggD,SAAShgD,KAAT,CAAe9pB,GAAf,CAAmB,gBAAQ;AAC1C2qB,SAAK4+C,WAAL,GAAmBz3E,SAAnB;AACA,WAAO64B,IAAP;AACD,GAHgB,CAAjB;AAIA,MAAI24C,QAAQ,CAAZ,EAAe;AACb,WADa,CACL;AACT;AACD;AACA;AACA0G,kBAAgB,CAAhB,EAAmB1G,KAAnB,EAA0BwG,QAA1B,EAAoC,CAACvgD,MAAD,CAApC;AACD;AACD;AACA;;;;;AAKA,SAAS28C,UAAT,CAAoBh4E,IAApB,EAA0B;AACxB,MAAMkwD,eAAelwD,KAAK47B,KAAL,CAAW,CAAX,CAArB;AACA,MAAMohC,iBAAiB9M,eAAeA,aAAa9uD,EAA5B,GAAiCwC,SAAxD;AACA,MAAMs4E,oBAAoBhsB,eAAeA,aAAa55C,KAA5B,GAAoC,EAA9D;;AAEA;AACA,MAAMypC,aAAa59C,MAAM+lB,QAAN,CAAe,YAAf,CAAnB;AACA63B,aAAWspB,KAAX,GAAmB;AACjBhuC,YAAQ2hC,cADS;AAEjBrrB,iBAAauqC,iBAFI;AAGjB9G,WAAOr1B,WAAWspB,KAAX,CAAiB+L;AAHP,GAAnB;AAKAjzE,QAAMimB,WAAN,CAAkB,YAAlB,EAAgC23B,UAAhC;AACA;AACD;;AAED;AACA;AACA3hD,OAAOC,OAAP,GAAiBoF,GAAjB;;;;;;AC37BA;;;;;;;;;;;;AAYA,IAAMrE,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAIiF,MAAMrE,OAAOoI,SAAP,CAAiBpJ,OAAOgD,EAAxB,CAAV;AACA,IAAIe,QAAQ/C,OAAOgD,WAAP,CAAmBqB,GAAnB,CAAZ;;AAEA;AACA;AACA,IAAMpC,MAAM,KAAZ;AACA,IAAM8F,KAAK,cAAX;;AAEA;AACA;AACA1D,IAAIiE,IAAJ,CAAS,YAAT,EAAuB,YAAM;AAC3BvF,QAAMrC,aAAN,CAAoB,kBAApB,EAAwCq8E,mBAAxC;AACAh6E,QAAMrC,aAAN,CAAoB,yBAApB,EAA+Cs8E,uBAA/C;AACAj6E,QAAMrC,aAAN,CAAoB,mBAApB,EAAyCu8E,iBAAzC;AACD,CAJD,E,CAII;;AAEJ;AACA;AACA,SAASF,mBAAT,CAA6Bn8E,IAA7B,EAAmC;AACjC;AACA,MAAMs8E,SAASn6E,MAAM+lB,QAAN,CAAe,QAAf,CAAf;AACAo0D,SAAO7e,mBAAP,GAA6Bz9D,KAAKgxC,MAAlC;AACA7uC,QAAMimB,WAAN,CAAkB,QAAlB,EAA4Bk0D,MAA5B;AACD;AACD;AACA;;;AAGA,SAASF,uBAAT,CAAiCp8E,IAAjC,EAAuC;AACrC,MAAMs8E,SAASn6E,MAAM+lB,QAAN,CAAe,QAAf,CAAf;AACAo0D,SAAO5e,uBAAP,GAAiC19D,KAAKgxC,MAAtC;AACA7uC,QAAMimB,WAAN,CAAkB,QAAlB,EAA4Bk0D,MAA5B;AACD;AACD;AACA;;;AAGA,SAASD,iBAAT,CAA2Br8E,IAA3B,EAAiC;AAC/B,MAAMs8E,SAASn6E,MAAM+lB,QAAN,CAAe,QAAf,CAAf;AACAo0D,SAAOC,iBAAP,GAA2Bv8E,KAAKgxC,MAAhC;AACA7uC,QAAMimB,WAAN,CAAkB,QAAlB,EAA4Bk0D,MAA5B;AACD;;AAED;AACA;AACAl+E,OAAOC,OAAP,GAAiBoF,GAAjB;;;;;;ACiZA;AACA;AACA;;;;;;;qEAMA,iBAAsCzD,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AACMkI,mBADN,GACgB,IADhB;AAEMs0E,uBAFN,GAEoB,EAFpB;AAGM13B,sBAHN,GAGmB,EAHnB;;AAKE;;AACMh5C,oBANR,GAMmB3J,MAAM+lB,QAAN,CAAe,UAAf,CANnB;AAOQu0D,oBAPR,GAOmBnyE,OAAOkW,MAAP,CAAc1U,SAASktB,QAAvB,EACdzY,MADc,CACP;AAAA,qBAAK,CAACxO,EAAEkmB,MAAR;AAAA,aADO,EACS;AADT,aAEdnmB,GAFc,CAEV;AAAA,qBAAKC,EAAEonB,WAAP;AAAA,aAFU,CAPnB;AAWUgqB,oBAXV,GAWuBnjD,IAXvB,CAWUmjD,QAXV;;AAAA,kBAYMA,aAAav/C,SAZnB;AAAA;AAAA;AAAA;;AAAA,6CAYqC,EAAEsE,SAAS,KAAX,EAAkBs0E,wBAAlB,EAA+BE,UAAU,EAAzC,EAZrC;;AAAA;AAAA;AAAA,mBAaqBv5B,SAAS3wC,IAAT,EAbrB;;AAAA;AAaMrN,kBAbN;;AAcE;AACMw3E,iBAfR,GAegBx3E,OAAOlB,KAAP,CAAa24E,uBAAb,CAfhB;AAgBE;AACA;;AACMC,mBAlBR,GAkBkBF,MAAMG,KAAN,GAActR,IAAd,GAAqBvnE,KAArB,CAA2B,GAA3B,CAlBlB;AAmBE;;AACM84E,oBApBR,GAoBmBC,cAAcP,QAAd,CApBnB;AAqBQC,oBArBR,GAqBmBM,cAAcH,OAAd,CArBnB;AAsBE;;AACAE,qBAASxpE,OAAT,CAAiB,aAAK;AACpB,kBAAI,CAACmpE,SAAShqE,QAAT,CAAkBX,CAAlB,CAAL,EAA2B;AACzB7J,0BAAU,KAAV;AACAs0E,4BAAYt8E,IAAZ,OAAqB6R,CAArB;AACD;AACF,aALD;AAMA,gBAAI,CAAC7J,OAAL,EAAc;AACZ;AACA48C,2BACE;AAAA;AAAA,kBAAK,OAAO,EAAEzzB,OAAO,KAAT,EAAZ;AACE;AAAA;AAAA;AAAA;AAA6BrxB,uBAAKmjD,QAAL,CAAc3vC,IAA3C;AAAA;AAAA,iBADF;AAEE;AAAA;AAAA;AAAA;AAAoBgpE,8BAAYpgE,IAAZ,CAAiB,IAAjB;AAApB,iBAFF;AAGE;AAAA;AAAA;AAAA;AAA0BsgE,2BAAStgE,IAAT,CAAc,IAAd;AAA1B;AAHF,eADF;AAOD;AAtCH,6CAuCS,EAAElU,gBAAF,EAAW48C,sBAAX,EAAuB+3B,gBAAvB,EAAgCF,YAAhC,EAvCT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeM,sB;;;;AAyCf;AACA;;;;;;;AA4MA;AACA;AACA;;;;;;;;sEAOA,kBAAsCj9E,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AACMkI,mBADN,GACgB,IADhB;AAEMs0E,uBAFN,GAEoB,EAFpB;AAGM13B,sBAHN,GAGmB,EAHnB;;AAKE;;AACMh5C,oBANR,GAMmB3J,MAAM+lB,QAAN,CAAe,UAAf,CANnB;AAOQg1D,oBAPR,GAOmB5yE,OAAOkW,MAAP,CAAc1U,SAAS0tB,QAAvB,EACdjZ,MADc,CACP;AAAA,qBAAK,CAACxO,EAAEkmB,MAAR;AAAA,aADO,EACS;AADT,aAEdnmB,GAFc,CAEV;AAAA,qBAAKC,EAAEonB,WAAP;AAAA,aAFU,CAPnB;AAWUoqB,oBAXV,GAWuBvjD,IAXvB,CAWUujD,QAXV;;AAAA,kBAYMA,aAAa3/C,SAZnB;AAAA;AAAA;AAAA;;AAAA,8CAYqC,EAAEsE,SAAS,KAAX,EAAkBs0E,wBAAlB,EAA+BE,UAAU,EAAzC,EAZrC;;AAAA;AAAA;AAAA,mBAaqBn5B,SAAS/wC,IAAT,EAbrB;;AAAA;AAaMrN,kBAbN;;AAcE;AACMw3E,iBAfR,GAegBx3E,OAAOlB,KAAP,CAAa24E,uBAAb,CAfhB;AAgBE;AACA;;AACMC,mBAlBR,GAkBkBF,MAAMG,KAAN,GAActR,IAAd,GAAqBvnE,KAArB,CAA2B,GAA3B,CAlBlB;AAmBE;;AACMk5E,oBApBR,GAoBmBH,cAAcE,QAAd,CApBnB;AAqBQR,oBArBR,GAqBmBM,cAAcH,OAAd,CArBnB;AAsBE;;AACAM,qBAAS5pE,OAAT,CAAiB,aAAK;AACpB,kBAAI,CAACmpE,SAAShqE,QAAT,CAAkBX,CAAlB,CAAL,EAA2B;AACzB7J,0BAAU,KAAV;AACAs0E,4BAAYt8E,IAAZ,OAAqB6R,CAArB;AACD;AACF,aALD;AAMA,gBAAI,CAAC7J,OAAL,EAAc;AACZ;AACA48C,2BACE;AAAA;AAAA,kBAAK,OAAO,EAAEzzB,OAAO,KAAT,EAAZ;AACE;AAAA;AAAA;AAAA;AAA6BrxB,uBAAKujD,QAAL,CAAc/vC,IAA3C;AAAA;AAAA,iBADF;AAEE;AAAA;AAAA;AAAA;AAAoBgpE,8BAAYpgE,IAAZ,CAAiB,IAAjB;AAApB,iBAFF;AAGE;AAAA;AAAA;AAAA;AAA0BsgE,2BAAStgE,IAAT,CAAc,IAAd;AAA1B;AAHF,eADF;AAOD;AAtCH,8CAuCS,EAAElU,gBAAF,EAAW48C,sBAAX,EAAuB+3B,gBAAvB,EAAgCF,YAAhC,EAvCT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeS,sB;;;;AAyCf;AACA;;;;;;;;;AA/vBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA,IAAM7+E,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;AACA,IAAMowC,YAAYpwC,QAAQ,kBAAR,CAAlB;AACA,IAAMyI,OAAOzI,QAAQ,aAAR,CAAb;AACA,IAAMiO,QAAQjO,QAAQ,MAAR,GAAd;AACA,IAAM84E,QAAQ94E,QAAQ,YAAR,CAAd;;AAEA;AACA;AACA,IAAM6C,MAAM,IAAZ;AACA,IAAM8F,KAAK,oBAAX;;AAEA;AACA;AACA,IAAI1D,MAAMrE,OAAOoI,SAAP,CAAiBpJ,OAAOgD,EAAxB,CAAV;AACA,IAAIe,QAAQ/C,OAAOgD,WAAP,CAAmBqB,GAAnB,CAAZ;;AAEA;AACA;AACA;AACA;AACA,IAAM45E,iBAAiB,KAAvB,C,CAA8B;AAC9B;AACA;AACA,IAAMT,0BAA0B,+BAAhC;AACA;AACA,IAAMU,8BAA8B,8BAApC;;AAEA;AACA;AACA,SAASC,YAAT,CAAsBrsE,IAAtB,EAA4B;AAC1B;AACA,MAAIA,IAAJ,EAAU,aAAW,IAAI5N,IAAJ,CAAS4N,IAAT,EAAessE,WAAf,EAAX;AACV,SAAO,EAAP;AACD;AACD;AACA,SAASC,QAAT,CAAkBz9E,IAAlB,EAAwB;AACtB,MAAI0I,YAAJ;AACA;AACAA,QAAMm0C,OAAO78C,IAAP,EAAa+yB,OAAb,CAAqB,IAArB,EAA2B,IAA3B,CAAN;AACA;AACA;AACA;AACA;AACA,SAAOrqB,GAAP;AACD;AACD;AACA,SAASg1E,QAAT,CAAkB19E,IAAlB,EAAwB;AACtB,MAAI0I,YAAJ;AACA;AACAA,QAAMm0C,OAAO78C,IAAP,EAAa+yB,OAAb,CAAqB,KAArB,EAA4B,GAA5B,CAAN;AACA,SAAOrqB,GAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAASs0E,aAAT,CAAuBnrE,IAAvB,EAA6Bw4B,MAA7B,EAAqC;AACnC,MAAI,CAAC/O,MAAMC,OAAN,CAAc1pB,IAAd,CAAL,EAA0B;AACxB;AACA,QAAMrE,MAAMlD,OAAOuH,IAAP,CAAYA,IAAZ,EAAkB,CAAlB,CAAZ;AACA,WAAOmrE,cAAcnrE,KAAKrE,GAAL,CAAd,EAAyBA,GAAzB,CAAP;AACD,GAJD,MAIO;AACL,QAAMmwE,gBAAgB9rE,KAAKC,GAAL,CAAS,aAAK;AAClC,UAAI,OAAOC,CAAP,KAAa,QAAjB,EAA2B,OAAOirE,cAAcjrE,CAAd,CAAP;AAC3B,UAAIs4B,MAAJ,EAAY,OAAUA,MAAV,SAAoBt4B,CAApB,CAAZ,KACK,OAAOA,CAAP;AACN,KAJqB,CAAtB;AAKA,WAAO4rE,cAAcC,IAAd,EAAP;AACD;AACF;;AAED;AACA;AACA;;;;;;;;AAQA,SAASC,kBAAT,CAA4BphD,IAA5B,EAAkC5qB,IAAlC,EAAwC;AACtC,MAAMisE,SAAS,EAAf;AACAjsE,OAAK0B,OAAL,CAAa,eAAO;AAClB;AACA;AACA,QAAIjJ,OAAOyzE,SAAP,CAAiBhtE,QAAjB,CAA0BsG,IAA1B,CAA+B3S,GAA/B,MAAwC,iBAA5C,EAA+D;AAC7D;AACA,UAAMs5E,UAAU1zE,OAAOuH,IAAP,CAAYnN,GAAZ,CAAhB,CAF6D,CAE3B;AAClCs5E,cAAQzqE,OAAR,CAAgB,aAAK;AACnBuqE,eAAO59E,IAAP,CAAY29E,mBAAmBphD,KAAK1qB,CAAL,CAAnB,EAA4BrN,IAAIqN,CAAJ,CAA5B,CAAZ;AACD,OAFD;AAGD;AACD;AACA;AACA,QAAI,CAAC,IAAD,EAAOW,QAAP,CAAgBhO,GAAhB,CAAJ,EAA0B;AACxB;AACAo5E,aAAO59E,IAAP,CAAYu8B,KAAK/3B,GAAL,CAAZ;AACA;AACD;AACD;AACA,QAAI,CAAC,UAAD,EAAagO,QAAb,CAAsBhO,GAAtB,CAAJ,EAAgC;AAC9B;AACAo5E,aAAO59E,IAAP,CAAYu8B,KAAKjkB,IAAL,CAAU9T,GAAV,CAAZ;AACA;AACD;AACD;AACA,QAAI,CAAC,SAAD,EAAY,SAAZ,EAAuBgO,QAAvB,CAAgChO,GAAhC,CAAJ,EAA0C;AACxCo5E,aAAO59E,IAAP,CAAYq9E,aAAa9gD,KAAKjkB,IAAL,CAAU9T,GAAV,CAAb,CAAZ;AACA;AACD;AACD;AACA,QAAI4F,OAAOyzE,SAAP,CAAiBE,cAAjB,CAAgC5mE,IAAhC,CAAqColB,IAArC,EAA2C/3B,GAA3C,CAAJ,EAAqD;AACnDo5E,aAAO59E,IAAP,OAAgBu9E,SAAShhD,KAAK/3B,GAAL,CAAT,CAAhB,QADmD,CACV;AACzC;AACD;AACD;AACAo5E,WAAO59E,IAAP,CAAY,EAAZ;AACD,GAnCD;AAoCA,SAAO49E,MAAP;AACD;AACD;AACA;;;;;;;;AAQA,SAASI,oBAAT,CAA8BtiD,KAA9B,EAAqCuiD,QAArC,EAA+C;AAC7C;AACA,MAAMC,WAAW,EAAjB;AACAxiD,QAAMroB,OAAN,CAAc;AAAA,WAAK6qE,SAASl+E,IAAT,CAAc29E,mBAAmBnhD,CAAnB,EAAsByhD,QAAtB,CAAd,CAAL;AAAA,GAAd;AACA,SAAOC,QAAP;AACD;AACD;AACA;;;;;;;;AAQA,SAASC,kBAAT,CAA4BzhD,IAA5B,EAAkC/qB,IAAlC,EAAwC;AACtC,MAAMisE,SAAS,EAAf;AACAjsE,OAAK0B,OAAL,CAAa,eAAO;AAClB;AACA;AACA,QAAIjJ,OAAOyzE,SAAP,CAAiBhtE,QAAjB,CAA0BsG,IAA1B,CAA+B3S,GAA/B,MAAwC,iBAA5C,EAA+D;AAC7D;AACA,UAAMs5E,UAAU1zE,OAAOuH,IAAP,CAAYnN,GAAZ,CAAhB,CAF6D,CAE3B;AAClCs5E,cAAQzqE,OAAR,CAAgB,aAAK;AACnBuqE,eAAO59E,IAAP,CAAY29E,mBAAmBjhD,KAAK7qB,CAAL,CAAnB,EAA4BrN,IAAIqN,CAAJ,CAA5B,CAAZ;AACD,OAFD;AAGD;AACD;AACA;AACA,QAAI,CAAC,IAAD,EAAOW,QAAP,CAAgBhO,GAAhB,CAAJ,EAA0B;AACxB;AACAo5E,aAAO59E,IAAP,CAAY08B,KAAKl4B,GAAL,CAAZ;AACA;AACD;AACD;AACA,QAAI,CAAC,QAAD,EAAW,QAAX,EAAqBgO,QAArB,CAA8BhO,GAA9B,CAAJ,EAAwC;AACtC;AACAo5E,aAAO59E,IAAP,CAAY08B,KAAKl4B,GAAL,CAAZ;AACA;AACD;AACD;AACA,QAAI,CAAC,UAAD,EAAagO,QAAb,CAAsBhO,GAAtB,CAAJ,EAAgC;AAC9B;AACAo5E,aAAO59E,IAAP,CAAY08B,KAAKpkB,IAAL,CAAU9T,GAAV,CAAZ;AACA;AACD;AACD;AACA,QAAI,CAAC,SAAD,EAAY,SAAZ,EAAuBgO,QAAvB,CAAgChO,GAAhC,CAAJ,EAA0C;AACxCo5E,aAAO59E,IAAP,CAAYq9E,aAAa3gD,KAAKpkB,IAAL,CAAU9T,GAAV,CAAb,CAAZ;AACA;AACD;AACD;AACA,QAAI4F,OAAOyzE,SAAP,CAAiBE,cAAjB,CAAgC5mE,IAAhC,CAAqCulB,IAArC,EAA2Cl4B,GAA3C,CAAJ,EAAqD;AACnDo5E,aAAO59E,IAAP,OAAgBu9E,SAAS7gD,KAAKl4B,GAAL,CAAT,CAAhB,QADmD,CACV;AACzC;AACD;AACD;AACAo5E,WAAO59E,IAAP,CAAY,EAAZ;AACD,GAzCD;AA0CA,SAAO49E,MAAP;AACD;AACD;AACA;;;;;;;;AAQA,SAASQ,oBAAT,CAA8BviD,KAA9B,EAAqCwiD,QAArC,EAA+C;AAC7C;AACA,MAAMC,UAAU,EAAhB;AACAziD,QAAMxoB,OAAN,CAAc;AAAA,WAAKirE,QAAQt+E,IAAR,CAAam+E,mBAAmBr7E,CAAnB,EAAsBu7E,QAAtB,CAAb,CAAL;AAAA,GAAd;AACA,SAAOC,OAAP;AACD;;AAED;AACA;AACA;;;AAGA/6E,IAAIghD,WAAJ,GAAkB,YAAM;AACtB,MAAMg6B,OAAOt8E,MAAM+lB,QAAN,CAAe,gBAAf,CAAb;AACA,MAAMpc,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AAFsB,MAGd0T,KAHc,GAGJ6iD,IAHI,CAGd7iD,KAHc;;AAItB,MAAI8iD,SAAS,EAAb;;AAEA;AACA;AACA;AACA;AACA,MAAMP,WAAW7zE,OAAOuH,IAAP,CAAY/F,SAASktB,QAArB,EAA+BzY,MAA/B,CAAsC,aAAK;AAC1D,WAAOzU,SAASktB,QAAT,CAAkBjnB,CAAlB,EAAqBkmB,MAArB,GAA8B,KAA9B,GAAsClmB,CAA7C;AACD,GAFgB,CAAjB;;AAIA;AACA;AACA;AACA;AACA,MAAM4sE,iBAAiB,EAAvB;AACAR,WAAS5qE,OAAT,CAAiB,eAAO;AACtB;AACA,QAAIjJ,OAAOyzE,SAAP,CAAiBhtE,QAAjB,CAA0BsG,IAA1B,CAA+B3S,GAA/B,MAAwC,iBAA5C,EAA+D;AAC7D;AACA,YAAM,IAAIH,KAAJ,+BAAsCwE,KAAKC,SAAL,CAAetE,GAAf,CAAtC,CAAN;AACA;AACA;AACA;AACA;AACA;AACD,KARD,MAQO;AACLi6E,qBAAez+E,IAAf,CAAoB4L,SAASktB,QAAT,CAAkBt0B,GAAlB,EAAuBy0B,WAA3C;AACD;AACF,GAbD;AAcA,MAAMylD,cAAcD,eAAef,IAAf,EAApB;AACA;AACA,MAAMQ,WAAWF,qBAAqBtiD,KAArB,EAA4BuiD,QAA5B,CAAjB;AACA;AACAC,WAASS,OAAT,CAAiBD,WAAjB,EArCsB,CAqCS;AAC/B;AACA,MAAME,sBAAsBV,SAAStsE,GAAT,CAAa;AAAA,WAAK4qB,EAAEtgB,IAAF,CAAO,GAAP,CAAL;AAAA,GAAb,CAA5B;AACAsiE,YAAUI,oBAAoB1iE,IAApB,CAAyB,IAAzB,CAAV;;AAEA;AACA;AACA;AACA,MAAM+6C,OAAO51D,SAASuS,aAAT,CAAuB,GAAvB,CAAb;AACA,MAAMirE,OAAO,IAAIC,IAAJ,CAAS,CAAC,QAAD,EAAWN,MAAX,CAAT,CAAb;AACA,MAAMn8E,MAAMgE,IAAI04E,eAAJ,CAAoBF,IAApB,CAAZ;AACA5nB,OAAK92D,IAAL,GAAYkC,GAAZ;AACA,MAAMo1E,UAAUr5E,OAAOP,SAAP,CAAiBC,OAAjB,IAA4B,WAA5C;AACAm5D,OAAK+nB,QAAL,GAAmBvH,OAAnB;AACA;AACA;AACAp2E,WAAS49E,IAAT,CAAcnrE,WAAd,CAA0BmjD,IAA1B,EArDsB,CAqDW;AACjCA,OAAKioB,KAAL;AACA79E,WAAS49E,IAAT,CAAcE,WAAd,CAA0BloB,IAA1B;AACD,CAxDD;;AA0DA;AACA;AACA;;;AAGA1zD,IAAIihD,WAAJ,GAAkB,YAAM;AACtB,MAAM+5B,OAAOt8E,MAAM+lB,QAAN,CAAe,gBAAf,CAAb;AACA,MAAMpc,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AAFsB,MAGd6T,KAHc,GAGJ0iD,IAHI,CAGd1iD,KAHc;;AAItB,MAAI2iD,SAAS,EAAb;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAMH,WAAWj0E,OAAOuH,IAAP,CAAY/F,SAAS0tB,QAArB,EAA+BjZ,MAA/B,CAAsC,aAAK;AAC1D,WAAOzU,SAAS0tB,QAAT,CAAkBznB,CAAlB,EAAqBkmB,MAArB,GAA8B,KAA9B,GAAsClmB,CAA7C;AACD,GAFgB,CAAjB;;AAIA;;AAEA;AACA;AACA;AACA;AACA,MAAMutE,iBAAiB,EAAvB;AACAf,WAAShrE,OAAT,CAAiB,eAAO;AACtB;AACA,QAAIjJ,OAAOyzE,SAAP,CAAiBhtE,QAAjB,CAA0BsG,IAA1B,CAA+B3S,GAA/B,MAAwC,iBAA5C,EAA+D;AAC7D;AACA,YAAM,IAAIH,KAAJ,+BAAsCwE,KAAKC,SAAL,CAAetE,GAAf,CAAtC,CAAN;AACA;AACA;AACD,KALD,MAKO;AACL46E,qBAAep/E,IAAf,CAAoB4L,SAAS0tB,QAAT,CAAkB90B,GAAlB,EAAuBy0B,WAA3C;AACD;AACF,GAVD;AAWA,MAAMomD,cAAcD,eAAe1B,IAAf,EAApB;AACA;AACA,MAAM4B,WAAWlB,qBAAqBviD,KAArB,EAA4BwiD,QAA5B,CAAjB;AACA;AACAiB,WAASX,OAAT,CAAiBU,WAAjB;AACA;AACA,MAAME,sBAAsBD,SAAS1tE,GAAT,CAAa;AAAA,WAAK9O,EAAEoZ,IAAF,CAAO,GAAP,CAAL;AAAA,GAAb,CAA5B;AACAsiE,YAAUe,oBAAoBrjE,IAApB,CAAyB,IAAzB,CAAV;;AAEA;AACA;AACA;AACA,MAAM+6C,OAAO51D,SAASuS,aAAT,CAAuB,GAAvB,CAAb;AACA,MAAMirE,OAAO,IAAIC,IAAJ,CAAS,CAAC,QAAD,EAAWN,MAAX,CAAT,CAAb;AACA,MAAMn8E,MAAMgE,IAAI04E,eAAJ,CAAoBF,IAApB,CAAZ;AACA5nB,OAAK92D,IAAL,GAAYkC,GAAZ;AACA,MAAMo1E,UAAUr5E,OAAOP,SAAP,CAAiBC,OAAjB,IAA4B,WAA5C;AACAm5D,OAAK+nB,QAAL,GAAmBvH,OAAnB;AACA;AACA;AACAp2E,WAAS49E,IAAT,CAAcnrE,WAAd,CAA0BmjD,IAA1B,EA1DsB,CA0DW;AACjCA,OAAKioB,KAAL;AACA79E,WAAS49E,IAAT,CAAcE,WAAd,CAA0BloB,IAA1B;AACD,CA7DD;;AA+DA;AACA;AACA,IAAIuoB,iBAAJ;AACA,IAAIC,iBAAJ;AACA,IAAIC,gBAAgB,EAApB;AACA,IAAIC,gBAAgB,EAApB;AACA,IAAIC,sBAAJ;AACA;AACA;;;;AAIAr8E,IAAIyhD,eAAJ,GAAsB,YAAM;AAC1Bw6B,aAAW97E,SAAX;AACA+7E,aAAW/7E,SAAX;AACAg8E,kBAAgB,EAAhB;AACAC,kBAAgB,EAAhB;AACAC,kBAAgBrzE,MAAMtK,MAAM+lB,QAAN,CAAe,QAAf,CAAN,CAAhB;AACD,CAND;;AAQA;AACA;AACA;AACA;AACA;AACA,SAAS63D,sBAAT,CAAgCnjD,IAAhC,EAAsCn1B,MAAtC,EAA8Cu4E,gBAA9C,EAAgEC,GAAhE,EAAqE;AACnE,MAAM5kD,SAAS5zB,OAAOm0B,KAAP,CAAa+C,IAAb,CAAkB;AAAA,WAAKjC,EAAEt7B,EAAF,KAASguB,OAAOwN,KAAKvB,MAAZ,CAAd;AAAA,GAAlB,CAAf;AACA,MAAMlxB,SAAS1C,OAAOm0B,KAAP,CAAa+C,IAAb,CAAkB;AAAA,WAAKjC,EAAEt7B,EAAF,KAASguB,OAAOwN,KAAKzyB,MAAZ,CAAd;AAAA,GAAlB,CAAf;AACA,MAAIkxB,WAAWz3B,SAAf,EACEo8E,iBAAiB9/E,IAAjB,cACa08B,KAAKx7B,EADlB,cAC6B6+E,GAD7B,2CACsErjD,KAAKvB,MAD3E;AAGF,MAAIlxB,WAAWvG,SAAf,EACEo8E,iBAAiB9/E,IAAjB,cACa08B,KAAKx7B,EADlB,cAC6B6+E,GAD7B,2CACsErjD,KAAKzyB,MAD3E;AAGF,SAAOkxB,UAAUlxB,MAAjB;AACD;;AAED;AACA;AACA;;;AAGA1G,IAAIuhD,mBAAJ,GAA0B,YAAM;AAC9B06B,aAAW97E,SAAX;AACAg8E,kBAAgB,EAAhB;AACA,MAAIE,aAAJ,EAAmBA,cAAclkD,KAAd,GAAsBnvB,MAAMtK,MAAM+lB,QAAN,CAAe,QAAf,EAAyB0T,KAA/B,CAAtB;AACpB,CAJD;AAKA;AACA;;;AAGAn4B,IAAIwhD,mBAAJ,GAA0B,YAAM;AAC9B06B,aAAW/7E,SAAX;AACAi8E,kBAAgB,EAAhB;AACA,MAAIC,aAAJ,EAAmBA,cAAc/jD,KAAd,GAAsBtvB,MAAMtK,MAAM+lB,QAAN,CAAe,QAAf,EAAyB6T,KAA/B,CAAtB;AACpB,CAJD,CA6DA,SAASmkD,mBAAT,CAA6BrD,OAA7B,EAAsCF,KAAtC,EAA6C;AAC3C;AACA;AACA,MAAM7wE,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,MAAMi4D,sBAAsB,IAAIljE,GAAJ,EAA5B;AACA3S,SAAOqO,OAAP,CAAe7M,SAASktB,QAAxB,EAAkClnB,GAAlC,CAAsC;AAAA,WACpCquE,oBAAoBxiE,GAApB,CAAwB3a,EAAE,CAAF,EAAKm2B,WAA7B,EAA0Cn2B,EAAE,CAAF,CAA1C,CADoC;AAAA,GAAtC;AAGA;AACA;AACA,MAAIkF,UAAU,IAAd;AACA,MAAI48C,aAAa,EAAjB;AACA,MAAMlpB,QAAQ+gD,MAAM7qE,GAAN,CAAU,aAAK;AAC3B,QAAIsuE,MAAM,EAAV,EAAc,OAAOx8E,SAAP,CADa,CACK;AAChC,QAAM64B,OAAO,EAAEjkB,MAAM,EAAR,EAAb;AACA,QAAM6nE,gBAAgB,IAAIpjE,GAAJ,EAAtB;AACA,QAAMqjE,eAAeF,EAAEn8E,KAAF,CAAQq5E,2BAAR,CAArB,CAJ2B,CAIgC;AAC3DgD,iBAAa/sE,OAAb,CAAqB,UAACH,CAAD,EAAImzD,KAAJ,EAAc;AACjC,UAAMttC,QAAQ7lB,EAAE2f,OAAF,CAAU,IAAV,EAAgB,EAAhB,EAAoBA,OAApB,CAA4B,IAA5B,EAAkC,EAAlC,CAAd,CADiC,CACoB;AACrD,UAAMruB,MAAMm4E,QAAQtW,KAAR,CAAZ;AACA,UAAMga,WAAW1jC,OAAOn4C,GAAP,EAAYT,KAAZ,CAAkB,GAAlB,CAAjB;AACA;AACA,UAAMu8E,cAAcD,SAAS,CAAT,CAApB,CALiC,CAKA;AACjC,UAAME,SAASF,SAAS,CAAT,CAAf,CANiC,CAML;AAC5B,UAAIE,MAAJ,EAAY;AACVv4E,kBAAU,KAAV;AACA48C,qBAAa;AAAA;AAAA,YAAK,OAAM,KAAX;AAAA;AAA2B27B,gBAA3B;AAAA;AAAA,SAAb;AACAv/E,gBAAQiX,KAAR,CAAchR,EAAd,cAA4Bs5E,MAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OAXD,MAWO;AACL;AACA,YAAMtnD,cAAc0jD,QAAQtW,KAAR,CAApB;AACA,YAAIptC,gBAAgBv1B,SAApB,EACE1C,QAAQiX,KAAR,CACEhR,EADF,EAEE,sCAFF,EAGEo/D,KAHF,EAIE,IAJF,EAKEsW,OALF;AAOF,YAAM6D,gBAAgBP,oBAAoBjgE,GAApB,CAAwBiZ,WAAxB,CAAtB;AACA;AACA,YAAI,CAAC,IAAD,EAAOzmB,QAAP,CAAgBguE,aAAhB,CAAJ,EAAoC;AAClC;AACA;AACA;AACAjkD,eAAKikD,aAAL,IAAsBznD,UAAU,EAAV,GAAe0nD,GAAf,GAAqB1nD,KAA3C,CAJkC,CAIgB;AACnD,SALD,MAKO,IAAI,CAAC,SAAD,EAAY,SAAZ,EAAuBvmB,QAAvB,CAAgCguE,aAAhC,CAAJ,EAAoD;AACzD;AACAjkD,eAAKjkB,IAAL,CAAUkoE,aAAV,IAA2B,IAAIp9E,IAAJ,CAAS21B,KAAT,EAAgB2nD,OAAhB,EAA3B;AACD,SAHM,MAGA,IAAI,CAAC,UAAD,EAAaluE,QAAb,CAAsBguE,aAAtB,CAAJ,EAA0C;AAC/C;AACAjkD,eAAKjkB,IAAL,CAAUkoE,aAAV,IAA2BznD,KAA3B;AACD,SAHM,MAGA;AACLwD,eAAKikD,aAAL,IAAsBhD,SAASzkD,KAAT,CAAtB,CADK,CACkC;AACxC;AACF;AACF,KA9CD;;AAgDA;AACA;AACA;AACA;AACA;;;AAGA;AACA,QAAIwF,MAAMhC,KAAKjkB,IAAL,CAAU+gB,OAAhB,CAAJ,EAA8BkD,KAAKjkB,IAAL,CAAU+gB,OAAV,GAAoB,IAAIj2B,IAAJ,GAAWs9E,OAAX,EAApB;AAC9B,QAAIniD,MAAMhC,KAAKjkB,IAAL,CAAUonC,QAAhB,CAAJ,EAA+BnjB,KAAKjkB,IAAL,CAAUonC,QAAV,GAAqB,CAArB;;AAE/B,WAAOnjB,IAAP;AACD,GAjEa,EAiEXlc,MAjEW,CAiEJ;AAAA,WAAKmc,MAAM94B,SAAX;AAAA,GAjEI,CAAd;AAkEA,SAAO,EAAEsE,gBAAF,EAAW48C,sBAAX,EAAuBlpB,YAAvB,EAAP;AACD;AACD;AACA;;;;;;AAMA,SAASilD,uBAAT,CAAiCjlD,KAAjC,EAAwC;AACtC,MAAI1zB,UAAU,IAAd;AACA,MAAI48C,aAAa,EAAjB;AACA,MAAIg8B,aAAa,CAAjB,CAHsC,CAGlB;AACpB,MAAIC,gBAAgB,CAApB,CAJsC,CAIf;AACvB,MAAMn9B,aAAa,EAAnB;AACA,MAAMo9B,mBAAmB,EAAzB;AACAplD,QAAMroB,OAAN,CAAc,UAACmpB,CAAD,EAAI53B,CAAJ,EAAU;AACtB,QAAMm7E,MAAMn7E,IAAI,CAAhB,CADsB,CACH;AACnB,QAAI+3C,OAAOngB,EAAEt7B,EAAT,EAAa6/E,WAAb,OAA+B5D,cAAnC,EAAmD;AACjD;AACAz5B,iBAAW1jD,IAAX,gBAA6Bw8B,EAAEpmB,KAA/B;AACA;AACA;AACAwqE;AACD,KAND,MAMO;AACLpkD,QAAEt7B,EAAF,GAAOguB,OAAOsN,EAAEt7B,EAAT,CAAP,CADK,CACgB;AACrB,UAAIq9B,MAAM/B,EAAEt7B,EAAR,CAAJ,EAAiB;AACf;AACA8G,kBAAU,KAAV;AACA84E,yBAAiB9gF,IAAjB,kBACiB+/E,GADjB,4CAC2DvjD,EAAEt7B,EAD7D;AAGD,OAND,MAMO;AACL,YAAM8/E,kBAAkBpB,cAAclkD,KAAd,CAAoB6H,SAApB,CACtB;AAAA,iBAAQhH,KAAKr7B,EAAL,KAAYs7B,EAAEt7B,EAAtB;AAAA,SADsB,CAAxB;AAGA,YAAI8/E,kBAAkB,CAAC,CAAvB,EAA0B;AACxB;AACAt9B,qBAAW1jD,IAAX,uBACsBw8B,EAAEt7B,EADxB,UAC+B0+E,cAAclkD,KAAd,CAAoBslD,eAApB,EAAqC5qE,KADpE,oCACwGomB,EAAEpmB,KAD1G,iBAC2H2pE,GAD3H;AAGAH,wBAAclkD,KAAd,CAAoB8H,MAApB,CAA2Bw9C,eAA3B,EAA4C,CAA5C,EAA+CxkD,CAA/C;AACAqkD;AACD,SAPD,MAOO;AACL;AACAn9B,qBAAW1jD,IAAX,kBAA+Bw8B,EAAEt7B,EAAjC,UAAwCs7B,EAAEpmB,KAA1C;AACAwpE,wBAAclkD,KAAd,CAAoB17B,IAApB,CAAyBw8B,CAAzB;AACAokD;AACD;AACF;AACF;AACF,GAnCD;AAoCA,MAAI54E,OAAJ,EAAa;AACX48C,iBACE;AAAA;AAAA;AACGlB,iBAAW9xC,GAAX,CAAe,UAAC9O,CAAD,EAAI8B,CAAJ;AAAA,eACd;AAAA;AAAA,YAAI,KAAKA,CAAT;AAAa9B;AAAb,SADc;AAAA,OAAf;AADH,KADF;AAOD,GARD,MAQO;AACL8hD,iBACE;AAAA;AAAA,QAAI,OAAO,EAAEzzB,OAAO,KAAT,EAAX;AACG2vD,uBAAiBlvE,GAAjB,CAAqB,UAAC9O,CAAD,EAAI8B,CAAJ;AAAA,eACpB;AAAA;AAAA,YAAI,KAAKA,CAAT;AAAa9B;AAAb,SADoB;AAAA,OAArB;AADH,KADF;AAOD;AACD,SAAO,EAAEkF,gBAAF,EAAW48C,sBAAX,EAAuBlpB,YAAvB,EAA8BkkD,4BAA9B,EAAP;AACD;AACD;AACA;;;;;;;;;;;;AAYAr8E,IAAImhD,gBAAJ;AAAA,sEAAuB,kBAAM5kD,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEhBA,KAAKmjD,QAFW;AAAA;AAAA;AAAA;;AAAA,8CAEM,EAAEj7C,SAAS,KAAX,EAFN;;AAAA;;AAIrB,gBAAI,CAAC43E,aAAL,EAAoBA,gBAAgBrzE,MAAMtK,MAAM+lB,QAAN,CAAe,QAAf,CAAN,CAAhB;AACdi5D,wBALe,GAKAnhF,KAAKmjD,QAAL,CAAc3vC,IALd;AAAA;AAAA,mBAOOypE,uBAAuBj9E,IAAvB,CAPP;;AAAA;AAOfohF,yBAPe;;AAAA,gBAQhBA,cAAcl5E,OARE;AAAA;AAAA;AAAA;;AAAA,8CASZoC,OAAOC,MAAP,CAAc62E,aAAd,EAA6B;AAClCv8B,oDAAoCs8B,YAApC;AADkC,aAA7B,CATY;;AAAA;AAafE,yBAbe,GAaCnB,oBACpBkB,cAAcvE,OADM,EAEpBuE,cAAczE,KAFM,CAbD;;AAAA,gBAiBhB0E,cAAcn5E,OAjBE;AAAA;AAAA;AAAA;;AAAA,8CAkBZoC,OAAOC,MAAP,CAAc82E,aAAd,EAA6B;AAClCx8B,oDAAoCs8B,YAApC;AADkC,aAA7B,CAlBY;;AAAA;AAsBfG,uBAtBe,GAsBDT,wBAAwBQ,cAAczlD,KAAtC,EAA6CkkD,aAA7C,CAtBC;;AAAA,gBAuBhBwB,YAAYp5E,OAvBI;AAAA;AAAA;AAAA;;AAAA,8CAwBZoC,OAAOC,MAAP,CAAc+2E,WAAd,EAA2B;AAChCz8B,oDAAoCs8B,YAApC;AADgC,aAA3B,CAxBY;;AAAA;;AA4BrB;AACAvB,4BAAgB0B,YAAY1lD,KAA5B;AACA8jD,uBAAW1/E,KAAKmjD,QAAhB;AACA28B,0BAAclkD,KAAd,GAAsBtxB,OAAOC,MAAP,CAAcu1E,cAAclkD,KAA5B,EAAmC0lD,YAAY1lD,KAA/C,CAAtB;AA/BqB,8CAgCdtxB,OAAOC,MAAP,CAAc+2E,WAAd,EAA2B;AAChCz8B,oDAAoCs8B,YAApC;AADgC,aAA3B,CAhCc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA,IA6FA,SAASI,mBAAT,CAA6B1E,OAA7B,EAAsCF,KAAtC,EAA6C;AAC3C;AACA;AACA,MAAM7wE,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,MAAMi4D,sBAAsB,IAAIljE,GAAJ,EAA5B;AACA3S,SAAOqO,OAAP,CAAe7M,SAAS0tB,QAAxB,EAAkC1nB,GAAlC,CAAsC;AAAA,WACpCquE,oBAAoBxiE,GAApB,CAAwB3a,EAAE,CAAF,EAAKm2B,WAA7B,EAA0Cn2B,EAAE,CAAF,CAA1C,CADoC;AAAA,GAAtC;;AAIA;AACA;AACA,MAAIkF,UAAU,IAAd;AACA,MAAI48C,aAAa,EAAjB;AACA,MAAM/oB,QAAQ4gD,MAAM7qE,GAAN,CAAU,aAAK;AAC3B,QAAIsuE,MAAM,EAAV,EAAc,OAAOx8E,SAAP,CADa,CACK;AAChC,QAAMg5B,OAAO,EAAEpkB,MAAM,EAAR,EAAb;AACA,QAAM6nE,gBAAgB,IAAIpjE,GAAJ,EAAtB;AACA,QAAMqjE,eAAeF,EAAEn8E,KAAF,CAAQq5E,2BAAR,CAArB,CAJ2B,CAIgC;AAC3DgD,iBAAa/sE,OAAb,CAAqB,UAACH,CAAD,EAAImzD,KAAJ,EAAc;AACjC,UAAMttC,QAAQ7lB,EAAE2f,OAAF,CAAU,IAAV,EAAgB,EAAhB,EAAoBA,OAApB,CAA4B,IAA5B,EAAkC,EAAlC,CAAd,CADiC,CACoB;AACrD,UAAMruB,MAAMm4E,QAAQtW,KAAR,CAAZ;AACA,UAAMga,WAAW1jC,OAAOn4C,GAAP,EAAYT,KAAZ,CAAkB,GAAlB,CAAjB;AACA;AACA,UAAMu8E,cAAcD,SAAS,CAAT,CAApB,CALiC,CAKA;AACjC,UAAME,SAASF,SAAS,CAAT,CAAf,CANiC,CAML;AAC5B,UAAIE,MAAJ,EAAY;AACVv4E,kBAAU,KAAV;AACA48C,qBAAa;AAAA;AAAA,YAAK,OAAM,KAAX;AAAA;AAA2B27B,gBAA3B;AAAA;AAAA,SAAb;AACAv/E,gBAAQiX,KAAR,CAAchR,EAAd,cAA4Bs5E,MAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OAXD,MAWO;AACL;AACA;AACA,YAAMtnD,cAAc0jD,QAAQtW,KAAR,CAApB;AACA,YAAIptC,gBAAgBv1B,SAApB,EACE1C,QAAQiX,KAAR,CACEhR,EADF,EAEE,sCAFF,EAGEo/D,KAHF,EAIE,IAJF,EAKEsW,OALF;AAOF,YAAM6D,gBAAgBP,oBAAoBjgE,GAApB,CAAwBiZ,WAAxB,CAAtB;AACA;AACA,YAAI,CAAC,IAAD,EAAO,QAAP,EAAiB,QAAjB,EAA2BzmB,QAA3B,CAAoCguE,aAApC,CAAJ,EAAwD;AACtD;AACA;AACA;AACA9jD,eAAK8jD,aAAL,IAAsBznD,UAAU,EAAV,GAAe0nD,GAAf,GAAqB1nD,KAA3C,CAJsD,CAIJ;AACnD,SALD,MAKO,IAAI,CAAC,SAAD,EAAY,SAAZ,EAAuBvmB,QAAvB,CAAgCguE,aAAhC,CAAJ,EAAoD;AACzD;AACA9jD,eAAKpkB,IAAL,CAAUkoE,aAAV,IAA2B,IAAIp9E,IAAJ,CAAS21B,KAAT,EAAgB2nD,OAAhB,EAA3B;AACD,SAHM,MAGA,IAAI,CAAC,UAAD,EAAaluE,QAAb,CAAsBguE,aAAtB,CAAJ,EAA0C;AAC/C;AACA9jD,eAAKpkB,IAAL,CAAUkoE,aAAV,IAA2BznD,KAA3B;AACD,SAHM,MAGA;AACL2D,eAAK8jD,aAAL,IAAsBhD,SAASzkD,KAAT,CAAtB,CADK,CACkC;AACxC;AACF;AACF,KA/CD;;AAiDA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAIwF,MAAM7B,KAAKpkB,IAAL,CAAU+gB,OAAhB,CAAJ,EAA8BqD,KAAKpkB,IAAL,CAAU+gB,OAAV,GAAoB,IAAIj2B,IAAJ,GAAWs9E,OAAX,EAApB;AAC9B,QAAIniD,MAAM7B,KAAKpkB,IAAL,CAAUonC,QAAhB,CAAJ,EAA+BhjB,KAAKpkB,IAAL,CAAUonC,QAAV,GAAqB,CAArB;;AAE/B,WAAOhjB,IAAP;AACD,GAjEa,EAiEXrc,MAjEW,CAiEJ;AAAA,WAAKvd,MAAMY,SAAX;AAAA,GAjEI,CAAd,CAiEgC;AAChC,SAAO,EAAEsE,gBAAF,EAAW48C,sBAAX,EAAuB/oB,YAAvB,EAAP;AACD;AACD;AACA;;;;;AAKA,SAASylD,uBAAT,CAAiCzlD,KAAjC,EAAwC;AACtC,MAAI7zB,UAAU,IAAd;AACA,MAAI48C,aAAa,EAAjB;AACA,MAAI28B,aAAa,CAAjB,CAHsC,CAGlB;AACpB,MAAIC,gBAAgB,CAApB,CAJsC,CAIf;AACvB,MAAM99B,aAAa,EAAnB;AACA,MAAMo8B,mBAAmB,EAAzB;AACAjkD,QAAMxoB,OAAN,CAAc,UAACvQ,CAAD,EAAI8B,CAAJ,EAAU;AACtB,QAAMm7E,MAAMn7E,IAAI,CAAhB,CADsB,CACH;AACnB9B,MAAEw/C,IAAF,GAAS,CAAT,CAFsB,CAEV;;AAEZ;AACA,QAAI,CAACu9B,uBAAuB/8E,CAAvB,EAA0B88E,aAA1B,EAAyCE,gBAAzC,EAA2DC,GAA3D,CAAL,EACE/3E,UAAU,KAAV;;AAEF,QAAI20C,OAAO75C,EAAE5B,EAAT,EAAa6/E,WAAb,OAA+B5D,cAAnC,EAAmD;AACjD;AACAz5B,iBAAW1jD,IAAX;AACA;AACAuhF;AACD,KALD,MAKO;AACLz+E,QAAE5B,EAAF,GAAOguB,OAAOpsB,EAAE5B,EAAT,CAAP,CADK,CACgB;AACrB,UAAIq9B,MAAMz7B,EAAE5B,EAAR,CAAJ,EAAiB;AACf;AACA8G,kBAAU,KAAV;AACA83E,yBAAiB9/E,IAAjB,kBACiB+/E,GADjB,4CAC2Dj9E,EAAE5B,EAD7D;AAGD,OAND,MAMO;AACL,YAAMugF,kBAAkB7B,cAAc/jD,KAAd,CAAoB0H,SAApB,CACtB;AAAA,iBAAQ7G,KAAKx7B,EAAL,KAAY4B,EAAE5B,EAAtB;AAAA,SADsB,CAAxB;AAGA,YAAIugF,kBAAkB,CAAC,CAAvB,EAA0B;AACxB;AACA/9B,qBAAW1jD,IAAX,uBACsB8C,EAAE5B,EADxB,yCAC8D6+E,GAD9D;AAGAH,wBAAc/jD,KAAd,CAAoB2H,MAApB,CAA2Bi+C,eAA3B,EAA4C,CAA5C,EAA+C3+E,CAA/C;AACA0+E;AACD,SAPD,MAOO;AACL;AACA99B,qBAAW1jD,IAAX,kBAA+B8C,EAAE5B,EAAjC;AACA0+E,wBAAc/jD,KAAd,CAAoB77B,IAApB,CAAyB8C,CAAzB;AACAy+E;AACD;AACF;AACF;AACF,GAxCD;AAyCA,MAAIv5E,OAAJ,EAAa;AACX48C,iBACE;AAAA;AAAA;AACGlB,iBAAW9xC,GAAX,CAAe,UAAC9O,CAAD,EAAI8B,CAAJ;AAAA,eACd;AAAA;AAAA,YAAI,KAAKA,CAAT;AAAa9B;AAAb,SADc;AAAA,OAAf;AADH,KADF;AAOD,GARD,MAQO;AACL8hD,iBACE;AAAA;AAAA,QAAI,OAAO,EAAEzzB,OAAO,KAAT,EAAX;AACG2uD,uBAAiBluE,GAAjB,CAAqB,UAAC9O,CAAD,EAAI8B,CAAJ;AAAA,eACpB;AAAA;AAAA,YAAI,KAAKA,CAAT;AAAa9B;AAAb,SADoB;AAAA,OAArB;AADH,KADF;AAOD;AACD,SAAO,EAAEkF,gBAAF,EAAW48C,sBAAX,EAAuB/oB,YAAvB,EAA8B+jD,4BAA9B,EAAP;AACD;AACD;AACA;;;;;;;;;;;;;AAaAr8E,IAAIshD,gBAAJ;AAAA,sEAAuB,kBAAM/kD,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEhBA,KAAKujD,QAFW;AAAA;AAAA;AAAA;;AAAA,8CAEM,EAAEr7C,SAAS,KAAX,EAFN;;AAAA;;AAIrB,gBAAI,CAAC43E,aAAL,EAAoBA,gBAAgBrzE,MAAMtK,MAAM+lB,QAAN,CAAe,QAAf,CAAN,CAAhB;AACd05D,wBALe,GAKA5hF,KAAKujD,QAAL,CAAc/vC,IALd;AAAA;AAAA,mBAOO4pE,uBAAuBp9E,IAAvB,CAPP;;AAAA;AAOfohF,yBAPe;;AAAA,gBAQhBA,cAAcl5E,OARE;AAAA;AAAA;AAAA;;AAAA,8CASZoC,OAAOC,MAAP,CAAc62E,aAAd,EAA6B;AAClCv8B,oDAAoC+8B,YAApC;AADkC,aAA7B,CATY;;AAAA;AAafP,yBAbe,GAaCE,oBACpBH,cAAcvE,OADM,EAEpBuE,cAAczE,KAFM,CAbD;;AAAA,gBAiBhB0E,cAAcn5E,OAjBE;AAAA;AAAA;AAAA;;AAAA,8CAkBZoC,OAAOC,MAAP,CAAc82E,aAAd,EAA6B;AAClCx8B,mDAAmC+8B,YAAnC;AADkC,aAA7B,CAlBY;;AAAA;AAsBfC,uBAtBe,GAsBDL,wBAAwBH,cAActlD,KAAtC,EAA6C+jD,aAA7C,CAtBC;;AAAA,gBAuBhB+B,YAAY35E,OAvBI;AAAA;AAAA;AAAA;;AAAA,8CAwBZoC,OAAOC,MAAP,CAAcs3E,WAAd,EAA2B;AAChCh9B,oDAAoC+8B,YAApC;AADgC,aAA3B,CAxBY;;AAAA;;AA4BrB;AACA/B,4BAAgBgC,YAAY9lD,KAA5B,CA7BqB,CA6Bc;AACnC4jD,uBAAW3/E,KAAKujD,QAAhB,CA9BqB,CA8BK;AA9BL,8CA+Bdj5C,OAAOC,MAAP,CAAcs3E,WAAd,EAA2B;AAChCh9B,oDAAoC+8B,YAApC;AADgC,aAA3B,CA/Bc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAoCA;AACA;AACA;;;;;AAKAn+E,IAAI0hD,MAAJ,2DAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AACX;AACMh6C,mBAFK,GAEO,EAAEywB,OAAOgkD,aAAT,EAAwB7jD,OAAO8jD,aAA/B,EAFP;AAAA;AAAA,iBAGL19E,MAAME,SAAN,CAAgB,UAAhB,EAA4B8I,SAA5B,EAAuC1C,IAAvC,CAA4C,eAAO;AACvD;AACAtG,kBAAME,SAAN,CAAgB,WAAhB;AACD,WAHK,CAHK;;AAAA;AAOLy/E,uBAPK,GAOW,EAPX;;AAQX,cAAIpC,QAAJ,EAAcoC,cAAc5hF,IAAd,CAAmBw/E,SAASlsE,IAA5B;AACd,cAAImsE,QAAJ,EAAcmC,cAAc5hF,IAAd,CAAmBy/E,SAASnsE,IAA5B;AACRuuE,2BAVK,GAUeD,cAAc1lE,IAAd,CAAmB,IAAnB,CAVf;AAAA,4CAWJ;AACL0oC,wBAAY;AAAA;AAAA;AAAMi9B,+BAAN;AAAA;AAAA;AADP,WAXI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAb;;AAgBA;AACA;AACA3jF,OAAOC,OAAP,GAAiBoF,GAAjB;;;;;;;;ACz+BA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,IAAMpE,WAAWb,QAAQ,UAAR,CAAjB;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;AACA,IAAMyU,QAAQzU,QAAQ,mBAAR,CAAd;AACA,IAAMwjF,KAAKxjF,QAAQ,IAAR,CAAX;AACA,IAAM84E,QAAQ94E,QAAQ,YAAR,CAAd;;AAEA,IAAMqlB,UAAUrlB,QAAQ,uBAAR,CAAhB;AACA,IAAMowC,YAAYpwC,QAAQ,kBAAR,CAAlB;AACA,IAAMyxB,UAAUzxB,QAAQ,uBAAR,CAAhB;AACA,IAAM0I,UAAU1I,QAAQ,qBAAR,CAAhB;AACA,IAAMutC,SAASvtC,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA,IAAM8F,KAAKD,QAAQE,GAAR,CAAY,SAAZ,CAAX;AACA;AACA,IAAM66E,mBAAmB,EAAzB;AACA;AACA;AACA;AACA,IAAMC,uBAAuB,SAA7B;AACA,IAAMC,uBAAuB,SAA7B;AACA,IAAMC,eAAe,SAArB;AACA;AACA,IAAMzK,UAAUr5E,OAAOP,SAAP,CAAiBC,OAAjB,IAA4B,WAA5C;AACA,IAAM45E,8BAA4BD,OAA5B,UAAN;;AAEA;AACA;AACA,IAAIl0E,MAAMrE,OAAOoI,SAAP,CAAiBpJ,OAAOgD,EAAxB,CAAV;AACA,IAAIe,QAAQ/C,OAAOgD,WAAP,CAAmBqB,GAAnB,CAAZ;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA,IAAIgE,SAAS,IAAb,C,CAAmB;AACnB,IAAIqE,WAAW,IAAf,C,CAAqB;;AAErB;AACA;AACA;;AAEA,SAASu2E,eAAT,GAA2B;AACzB,SAAOzzC,UAAU9jC,aAAV,GAA0BrC,IAA1B,CAA+B,gBAAQ;AAC5C,QAAIpH,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,yBAAhB,EAA2CnH,IAA3C;AACTsiF,kBAActiF,KAAKkL,MAAnB;AACAosE,UAAMyB,uBAAN,CAA8B/4E,KAAKkL,MAAnC;AACAosE,UAAM0B,yBAAN,CAAgCh5E,KAAKkL,MAArC;AACA/I,UAAMimB,WAAN,CAAkB,QAAlB,EAA4BpoB,KAAKkL,MAAjC;AACA/I,UAAMimB,WAAN,CAAkB,UAAlB,EAA8BpoB,KAAKgL,QAAnC;AACA7I,UAAME,SAAN,CAAgB,uBAAhB,EAAyCrC,IAAzC;AACA;AACAyH,aAASzH,KAAKkL,MAAd;AACAY,eAAW9L,KAAKgL,QAAhB;AACD,GAXM,CAAP;AAYD;;AAED;AACA;AACA;;;AAGAvH,IAAIiE,IAAJ,CAAS,YAAT,EAAuB,YAAM;AAC3B,MAAItI,OAAOmJ,gBAAP,EAAJ,EAA+B;AAC7B;AACA;;AAEA,QAAMg6E,YAAY,KAAlB;AACA,QAAIA,SAAJ,EAAe;AACbrhF,cAAQwB,IAAR,CAAayE,EAAb,EAAiB,mDAAjB;AACA,aAAO,IAAIxE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAM2/E,SAASlkF,OAAOmkF,YAAtB;AACA,YAAIC,MAAMF,OAAOG,OAAP,CAAe,QAAf,CAAV;AACAl7E,iBAASsB,KAAKyB,KAAL,CAAWk4E,GAAX,CAAT;AACA,YAAI,CAACj7E,MAAL,EAAa5E,OAAO0B,MAAM,sCAAN,CAAP;AACbpC,cAAMimB,WAAN,CAAkB,QAAlB,EAA4B3gB,MAA5B;AACA,YAAIm7E,MAAMJ,OAAOG,OAAP,CAAe,UAAf,CAAV;AACA72E,mBAAW/C,KAAKyB,KAAL,CAAWo4E,GAAX,CAAX;AACA1hF,gBAAQC,GAAR,CAAYsG,MAAZ,EAAoBqE,QAApB;AACA,YAAI,CAACA,QAAL,EAAejJ,OAAO0B,MAAM,wCAAN,CAAP;AACfpC,cAAMimB,WAAN,CAAkB,UAAlB,EAA8Btc,QAA9B;AACA5K,gBAAQwB,IAAR,CAAa,sCAAb,EAXsC,CAWgB;AACtDE;AACD,OAbM,CAAP;AAcD;AACD;AACA1B,YAAQwB,IAAR,CACEyE,EADF,EAEE,gEAFF;AAIA;AACA,QAAI07E,YAAY,IAAIC,eAAJ,CAAoBxkF,OAAO8B,QAAP,CAAgB2iF,MAApC,CAAhB;AACA,QAAI/kF,UAAU6kF,UAAU3iE,GAAV,CAAc,SAAd,CAAd;AACA,QAAIliB,YAAY,IAAhB,EAAsBA,UAAU,YAAV;AACtB,WAAO,IAAI2E,OAAJ,CAAY,mBAAW;AAC5B,8DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACgBisC,UAAU9kC,eAAV,CAA0B,UAAU9L,OAAV,GAAoB,UAA9C,EAA0DyK,IAA1D,CACb,kBAAU;AACR65E,gCAAcp3E,MAAd;AACAosE,wBAAMyB,uBAAN,CAA8B7tE,MAA9B;AACAosE,wBAAM0B,yBAAN,CAAgC9tE,MAAhC;AACA/I,wBAAMimB,WAAN,CAAkB,QAAlB,EAA4Bld,MAA5B;AACA;AACAzD,2BAASyD,MAAT;AACA;AACA/I,wBAAME,SAAN,CAAgB,uBAAhB,EAAyC6I,MAAzC;AACD,iBAVY,CADhB;;AAAA;AACK83E,kBADL;AAAA;AAAA,uBAcgBp0C,UAAUjkC,eAAV,CACb,UAAU3M,OAAV,GAAoB,gBADP,EAEbyK,IAFa,CAER,gBAAQ;AACbqD,6BAAW9L,IAAX;AACAmC,wBAAMimB,WAAN,CAAkB,UAAlB,EAA8Btc,QAA9B;AACD,iBALc,CAdhB;;AAAA;AAcKm3E,kBAdL;;AAoBCrgF;;AApBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;AAsBD,KAvBM,CAAP;AAwBD;AACD,SAAOD,QAAQmc,GAAR,CAAY,CAACujE,iBAAD,CAAZ,CAAP;AACD,CA1DD,E,CA0DI;;AAEJ;AACA;AACA;;;AAGA5+E,IAAIiE,IAAJ,CAAS,WAAT,EAAsB,YAAM;AAC1B;AACAw7E;AACD,CAHD,E,CAGI;;AAEJ;AACA;AACA;;AAEAz/E,IAAIiE,IAAJ,CAAS,YAAT,EAAuB,YAAM;AAC3BxG,UAAQC,GAAR,CAAY,iBAAZ;AACA,MAAMqhF,SAASlkF,OAAOmkF,YAAtB;AACAD,SAAOW,OAAP,CAAe,QAAf,EAAyBp6E,KAAKC,SAAL,CAAevB,MAAf,CAAzB;AACA+6E,SAAOW,OAAP,CAAe,UAAf,EAA2Bp6E,KAAKC,SAAL,CAAe8C,QAAf,CAA3B;AACA5K,UAAQC,GAAR,CAAY,uCAAZ;AACD,CAND;;AAQA;AACA;AACA;;AAEAsC,IAAIiE,IAAJ,CAAS,YAAT,EAAuB,YAAM;AAC3B;AACAvF,QAAM6F,gBAAN,CAAuB,SAAvB,EAAkC,mBAAW;AAAA,QACnCwnB,MADmC,GACxB8sB,OADwB,CACnC9sB,MADmC;AAE3C;;AACAuc,WAAOmG,gBAAP,CAAwB1iB,MAAxB;AACD,GAJD;AAKA;AACA;;;;;;;AAOArtB,QAAMrC,aAAN,CAAoB,WAApB,EAAiC,YAAM;AACrC,WAAO6C,QAAQmc,GAAR,CAAY,CAACujE,iBAAD,CAAZ,CAAP;AACD,GAFD;AAGA;AACA;AACAlgF,QAAM6F,gBAAN,CAAuB,QAAvB,EAAiC,uBAAe;AAC9C,QAAI3G,GAAJ,EAASH,QAAQC,GAAR,CAAY,sBAAZ,EAAoCwY,WAApC;AACTlS,aAASkS,WAAT;AACD,GAHD;AAIA;AACA;;;AAGAxX,QAAM6F,gBAAN,CAAuB,WAAvB,EAAoC,uBAAe;AACjD,QAAI3G,GAAJ,EAASH,QAAQC,GAAR,CAAY,yBAAZ,EAAuCwY,WAAvC;AADwC,QAE3CiiB,KAF2C,GAE1BjiB,WAF0B,CAE3CiiB,KAF2C;AAAA,QAEpCG,KAFoC,GAE1BpiB,WAF0B,CAEpCoiB,KAFoC;AAGjD;;AACA,QAAIH,UAAUh4B,SAAd,EAAyB;AACvB,UAAIg4B,MAAMz3B,MAAN,GAAe,CAAnB,EAAsB;AACpB,YAAIktB,QAAQ,SAAZ;AACAuK,cAAMroB,OAAN,CAAc,gBAAQ;AACpBnU,iBAAO6C,GAAP,CAAW,aAAX,EAA0Bw6B,KAAKr7B,EAA/B,EAAmCq7B,KAAKnmB,KAAxC;AACA,cAAIpY,UAAUH,UAAUG,OAAxB;;AAEA,cAAIA,WAAW,GAAf,EAAoB;AAClBipD,eAAG,MAAH,EAAW;AACTC,uBAAS,OADA;AAETC,6BAAe,MAFN;AAGTC,2BAAa,KAAK7qB,KAAKnmB,KAHd;AAITixC,0BAAY,KAAKjpD,OAAO8B;AAJf,aAAX;AAMD;AACF,SAZD;AAaD;AACF;AACF,GAtBD,EA5B2B,CAkDvB;AACJ;AACA;AACA+B,QAAM6F,gBAAN,CAAuB,QAAvB,EAAiC,uBAAe;AAC9C,QAAI3G,GAAJ,EAASH,QAAQC,GAAR,CAAY,sBAAZ,EAAoCwY,WAApC;AADqC,QAExCiiB,KAFwC,GAEvBjiB,WAFuB,CAExCiiB,KAFwC;AAAA,QAEjCG,KAFiC,GAEvBpiB,WAFuB,CAEjCoiB,KAFiC;AAAA,QAGxCsc,WAHwC,GAGxB1+B,WAHwB,CAGxC0+B,WAHwC;AAAA,QAIxCD,oBAJwC,GAIfz+B,WAJe,CAIxCy+B,oBAJwC;AAK9C;;AACA,QAAI3wC,OAAOm0B,KAAP,CAAaz3B,MAAb,GAAsB,GAA1B,EAA+B;AAC7B;AACA,UAAIk0C,gBAAgB,EAApB,EAAwB;AACtB+qC;AACD,OAFD,MAEO,IAAI/qC,gBAAgBz0C,SAApB,EAA+B;AACpCy/E,kCACEhrC,WADF,EAEEvsC,SAAS8sB,WAAT,IAAwBspD,oBAF1B;AAID;AACF;AACF,GAjBD,EArD2B,CAsEvB;;AAEJ;AACA;;;;;;;;;AASA//E,QAAMrC,aAAN,CAAoB,eAApB,EAAqCwjF,cAArC;AACA,WAASA,cAAT,CAAwBtjF,IAAxB,EAA8B;AAC5B,QAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,wBAAhB,EAA0CnH,IAA1C;;AADmB,2BAGYA,IAHZ,CAGtB83D,UAHsB;AAAA,QAGtBA,UAHsB,oCAGT,EAHS;AAAA,wBAGY93D,IAHZ,CAGLqJ,OAHK;AAAA,QAGLA,OAHK,iCAGK,EAHL;;AAI5B,QAAIk6E,YAAYzrB,WAAWglB,KAAX,EAAhB;AACA,QAAI5zE,SAASG,QAAQyzE,KAAR,EAAb;AACA,QAAIrgD,aAAJ;AAAA,QAAU+mD,qBAAV;AAAA,QAAwBC,kBAAxB;;AAEA,QAAIv6E,MAAJ,EAAY;AACVuzB,aAAOinD,eAAex6E,MAAf,CAAP,CADU,CACqB;AAC/B,UAAI7H,GAAJ,EACEH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,+BAAhB,EAAiD+B,MAAjD,EAAyD,OAAzD,EAAkEuzB,IAAlE;AACH,KAJD,MAIO,IAAI8mD,SAAJ,EAAe;AACpB9mD,aAAOknD,2BAA2BJ,SAA3B,EAAsCzG,KAAtC,EAAP;AACA,UAAIz7E,GAAJ,EACEH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,kCAAhB,EAAoDo8E,SAApD,EAA+D,OAA/D,EAAwE9mD,IAAxE;AACH,KAJM,MAIA;AACL;AACA,UAAIp7B,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,6BAAhB,EAA+Cs1B,IAA/C;AACV;;AAED,QAAIp7B,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,qBAAhB,EAAuCs1B,IAAvC;;AAET,QAAIA,SAAS74B,SAAb,EAAwB;AACtB;AACA4/E,qBAAe;AACb5nD,eAAO,EADM;AAEbG,eAAO;AAFM,OAAf;AAIA0nD,kBAAY;AACV/lB,iCAAyB95D;AADf,OAAZ;AAGD,KATD,MASO;AACL;AACA,UAAIm4B,QAAQ,EAAZ;AACA,UAAIt0B,OAAOs0B,KAAX,EAAkB;AAChB;AACA,YAAI7yB,MAAJ,EAAY;AACV6yB,kBAAQA,MAAM5f,MAAN,CACN1U,OAAOs0B,KAAP,CAAaxb,MAAb,CACE;AAAA,mBAAQqc,KAAKvB,MAAL,KAAgBnyB,MAAhB,IAA0B0zB,KAAKzyB,MAAL,KAAgBjB,MAAlD;AAAA,WADF,CADM,CAAR;AAKD,SAND,MAMO;AACLhI,kBAAQiX,KAAR,CACEhR,EADF,wDAEsDo8E,SAFtD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF;AACD;AACAC,qBAAe;AACb5nD,eAAO,CAACa,IAAD,CADM;AAEbV,eAAOA;AAFM,OAAf;AAIA0nD,kBAAY;AACV/lB,iCAAyB95D;AADf,OAAZ;AAGD;;AAED;AACAzB,UAAMimB,WAAN,CAAkB,WAAlB,EAA+Bo7D,YAA/B;AACArhF,UAAMimB,WAAN,CAAkB,QAAlB,EAA4Bq7D,SAA5B;AACD;;AAED;AACA;;;AAGAthF,QAAMrC,aAAN,CAAoB,eAApB,EAAqC,UAAUE,IAAV,EAAgB;AAAA,QAC7C44C,YAD6C,GAC5B54C,IAD4B,CAC7C44C,YAD6C;;AAEnD,QAAIla,UAAUilD,2BAA2B/qC,YAA3B,CAAd;AACA,QAAI96B,WAAW;AACbg7B,sBAAgBpa,QAAQ5sB,GAAR,CAAY,aAAK;AAC/B,eAAO,EAAE1Q,IAAIs7B,EAAEt7B,EAAR,EAAYkV,OAAOomB,EAAEpmB,KAArB,EAAP;AACD,OAFe,CADH;AAIb+hC,mBAAaO;AAJA,KAAf;AAMA;AACAz2C,UAAMimB,WAAN,CAAkB,QAAlB,EAA4BtK,QAA5B;AACD,GAXD;;AAaA;AACA;;;;;AAKA3b,QAAMrC,aAAN,CAAoB,0BAApB,EAAgD,UAAUE,IAAV,EAAgB;AAAA,QACxD44C,YADwD,GACvC54C,IADuC,CACxD44C,YADwD;;AAE9D,QAAInc,OAAOknD,2BAA2B/qC,YAA3B,EAAyCkkC,KAAzC,EAAX;AACA,QAAIrgD,QAAQA,KAAKnmB,KAAL,KAAesiC,YAA3B,EAAyC;AACvC13C,cAAQC,GAAR,CACEgG,EADF,EAEE,kEAFF,EAGEnH,IAHF;AAKAsjF,qBAAe,EAAEj6E,SAAS,CAACozB,KAAKr7B,EAAN,CAAX,EAAf;AACD;AACF,GAXD;;AAaA;AACA;;;;;AAKAe,QAAMrC,aAAN,CAAoB,eAApB,EAAqC,UAAUE,IAAV,EAAgB;AAAA,QAC7Cy8B,IAD6C,GACpCz8B,IADoC,CAC7Cy8B,IAD6C;AAEnD;AACA;AACA;AACA;;AACAA,SAAK0/B,OAAL,GAAe1/B,KAAK0/B,OAAL,IAAgB,CAA/B;AACA;AACA,QAAIynB,eAAeC,yBAAyB,EAAEziF,IAAIq7B,KAAKr7B,EAAX,EAAzB,EAA0Cq7B,IAA1C,CAAnB;AACA,QAAIp7B,GAAJ,EAASH,QAAQC,GAAR,CAAY,wBAAZ,EAAsCyiF,YAAtC;AACT,QAAIA,aAAaz/E,MAAb,GAAsB,CAA1B,EAA6B;AAC3B;AACA,YAAMI,MAAM,oCAAN,CAAN;AACD,KAHD,MAGO,IAAIq/E,aAAaz/E,MAAb,KAAwB,CAA5B,EAA+B;AACpC;AACA,UAAMoiE,QAAQ9+D,OAAOm0B,KAAP,CAAa6H,SAAb,CAAuB;AAAA,eAAK/G,EAAEt7B,EAAF,KAASq7B,KAAKr7B,EAAnB;AAAA,OAAvB,CAAd;AACAqG,aAAOm0B,KAAP,CAAa8H,MAAb,CAAoB6iC,KAApB,EAA2B,CAA3B,EAA8B9pC,IAA9B;AACD,KAJM,MAIA,IAAImnD,aAAaz/E,MAAb,KAAwB,CAA5B,EAA+B;AACpC;AACAsD,aAAOm0B,KAAP,CAAa17B,IAAb,CAAkBu8B,IAAlB;AACD;AACDt6B,UAAMimB,WAAN,CAAkB,QAAlB,EAA4B3gB,MAA5B;AACD,GAtBD;AAuBA;AACAtF,QAAMrC,aAAN,CAAoB,aAApB,EAAmC,gBAAQ;AACzC;AACA,QAAMw8C,UAAUn6C,MAAM+lB,QAAN,CAAe,SAAf,CAAhB;AACA,QAAM+K,YAAY,IAAI3vB,IAAJ,GAAW6sD,cAAX,CAA0B,OAA1B,CAAlB;AACA,QAAMl1B,aAAa,EAAnB;AACA,QAAMm1B,YAAY3sD,IAAImtC,gBAAJ,EAAlB;AACA,QAAMyf,YAAYD,SAAlB;;AAEA,WAAOxhB,UAAU3lC,gBAAV,GAA6BR,IAA7B,CAAkC,qBAAa;AACpD,UAAMg0B,OAAO;AACXr7B,YAAIq/D,SADO,EACInqD,OAAOtW,KAAKsW,KADhB,EACuB2kB,sBADvB,EACmCm1B,oBADnC,EAC8CC;AAD9C,OAAb;AAGA,aAAOluD,MAAME,SAAN,CAAgB,WAAhB,EAA6B,EAAEo6B,UAAF,EAA7B,EAAuCh0B,IAAvC,CAA4C,YAAM;AACvDhB,eAAOm0B,KAAP,CAAa17B,IAAb,CAAkBu8B,IAAlB;AACAt6B,cAAMimB,WAAN,CAAkB,QAAlB,EAA4B3gB,MAA5B;AACA,eAAOg1B,IAAP;AACD,OAJM,CAAP;AAKD,KATM,CAAP;AAUD,GAlBD;AAmBA;AACA;;;AAGAt6B,QAAMrC,aAAN,CAAoB,aAApB,EAAmC,UAAUE,IAAV,EAAgB;AAAA,QAC3CkJ,MAD2C,GACblJ,IADa,CAC3CkJ,MAD2C;AAAA,QACnCy2B,iBADmC,GACb3/B,IADa,CACnC2/B,iBADmC;;AAGjD;;AACA,QAAIU,uBAAJ;AACA,QAAIV,sBAAsB,CAAC,CAA3B,EAA8B;AAC5B;AACA,UAAImkD,kBAAkBJ,eAAe/jD,iBAAf,CAAtB;AACAU,uBAAiB54B,OAAOs0B,KAAP,CAAajqB,GAAb,CAAiB,gBAAQ;AACxC,YAAI8qB,KAAKvB,MAAL,KAAgBnyB,MAApB,EAA4B0zB,KAAKvB,MAAL,GAAcsE,iBAAd;AAC5B,YAAI/C,KAAKzyB,MAAL,KAAgBjB,MAApB,EAA4B0zB,KAAKzyB,MAAL,GAAcw1B,iBAAd;AAC5B,eAAO/C,IAAP;AACD,OAJgB,CAAjB;AAKD,KARD,MAQO;AACL;AACAyD,uBAAiB54B,OAAOs0B,KAAP,CAAaxb,MAAb,CAAoB,gBAAQ;AAC3C,YAAIzE,OAAO,KAAX;AACA,YAAI8gB,KAAKvB,MAAL,KAAgBnyB,MAAhB,IAA0B0zB,KAAKzyB,MAAL,KAAgBjB,MAA9C,EAAsD;AACpD4S,iBAAO,IAAP;AACD,SAFD,MAEO;AACL;AACA,cAAMw1B,QAAOvF,OAAOkF,WAAP,CAAmBrU,KAAKx7B,EAAxB,CAAb;AACA2qC,iBAAOoK,wBAAP,CAAgC7E,KAAhC;AACD;AACD,eAAOx1B,IAAP;AACD,OAVgB,CAAjB;AAWD;AACDrU,WAAOs0B,KAAP,GAAesE,cAAf;;AAEA;AACA,QAAMiR,OAAOvF,OAAOgF,WAAP,CAAmB7nC,MAAnB,CAAb;AACA6iC,WAAOoK,wBAAP,CAAgC7E,IAAhC;;AAEA;AACA,QAAIsyC,eAAeG,4BAA4B,EAAE3iF,IAAI8H,MAAN,EAA5B,CAAnB;AACAzB,WAAOm0B,KAAP,GAAegoD,YAAf;AACAzhF,UAAMimB,WAAN,CAAkB,QAAlB,EAA4B3gB,MAA5B;;AAEA;AACAtF,UAAMimB,WAAN,CAAkB,WAAlB,EAA+B;AAC7BwT,aAAOh4B,SADsB;AAE7Bm4B,aAAOn4B;AAFsB,KAA/B;AAIA;AACA;AACD,GA7CD;AA8CA;AACA;;;;;;;;;;;;;;AAcAzB,QAAMrC,aAAN,CAAoB,mBAApB,EAAyC,gBAAQ;AAAA,QACvCkkF,gBADuC,GAClBhkF,IADkB,CACvCgkF,gBADuC;;AAE/C,QAAMC,YAAY,IAAIhnE,GAAJ,EAAlB;AACA+mE,qBAAiBzwE,OAAjB,CAAyB,aAAK;AAC5B0wE,gBAAUtmE,GAAV,CAAckf,EAAEvmB,KAAhB,EAAuBumB,CAAvB;AACD,KAFD;AAGAp1B,WAAOm0B,KAAP,GAAen0B,OAAOm0B,KAAP,CAAa9pB,GAAb,CAAiB,aAAK;AACnC,UAAMa,OAAO+pB,EAAE/pB,IAAf;AACA,UAAM63B,SAASy5C,UAAU/jE,GAAV,CAAcwc,EAAE/pB,IAAhB,CAAf;AACA,UAAI63B,UAAUA,OAAO05C,WAArB,EAAkC;AAChCxnD,UAAE/pB,IAAF,GAAS63B,OAAO05C,WAAhB;AACD;AACD,aAAOxnD,CAAP;AACD,KAPc,CAAf;AAQA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAv6B,UAAME,SAAN,CAAgB,cAAhB,EAAgCoF,MAAhC;AACAtF,UAAMimB,WAAN,CAAkB,QAAlB,EAA4B3gB,MAA5B;AACD,GA1BD;AA2BA;AACAtF,QAAMrC,aAAN,CAAoB,mBAApB,EAAyC,gBAAQ;AAC/C,QAAMqkF,mBAAmB,EAAzB;AACAA,qBAAiBnkF,KAAK0E,GAAtB,IAA6B1E,KAAK44C,YAAlC;AACA,WAAO,EAAEhd,OAAOwoD,yBAAyBD,gBAAzB,CAAT,EAAP;AACD,GAJD;AAKA;AACAhiF,QAAMrC,aAAN,CAAoB,qBAApB,EAA2C,gBAAQ;AACjD,WAAO,EAAE87B,OAAO+nD,2BAA2B3jF,KAAK44C,YAAhC,CAAT,EAAP;AACD,GAFD;AAGA;AACA;;;;;;;AAOAz2C,QAAMrC,aAAN,CAAoB,aAApB,EAAmC,gBAAQ;AACzC;AACA,QAAMw8C,UAAUn6C,MAAM+lB,QAAN,CAAe,SAAf,CAAhB;AACA,QAAM+K,YAAY,IAAI3vB,IAAJ,GAAW6sD,cAAX,CAA0B,OAA1B,CAAlB;AACA,QAAMl1B,aAAa,EAAnB;AACA,QAAMm1B,YAAY3sD,IAAImtC,gBAAJ,EAAlB;AACA,QAAMyf,YAAYD,SAAlB;;AAEA;AACA,WAAOxhB,UAAUplC,gBAAV,GAA6Bf,IAA7B,CAAkC,qBAAa;AACpD;AACA,UAAMm0B,OAAO;AACXx7B,YAAIs/D,SADO;AAEXrlC,gBAAQr7B,KAAKgxC,MAFF;AAGX7mC,gBAAQvG,SAHG;AAIXi9C,oBAAY,EAJD;AAKX5lB,8BALW;AAMXm1B,4BANW;AAOXC;AAPW,OAAb;AASA,aAAOluD,MAAME,SAAN,CAAgB,WAAhB,EAA6B,EAAEu6B,UAAF,EAA7B,EAAuCn0B,IAAvC,CAA4C,YAAM;AACvDvH,gBAAQC,GAAR,CAAY,0BAAZ,EAAwCy7B,IAAxC;AACAn1B,eAAOs0B,KAAP,CAAa77B,IAAb,CAAkB08B,IAAlB;AACAz6B,cAAMimB,WAAN,CAAkB,QAAlB,EAA4B3gB,MAA5B;AACA,eAAOm1B,IAAP;AACD,OALM,CAAP;AAMD,KAjBM,CAAP;AAkBD,GA3BD;AA4BA;AACA;;;;;;;;;;;;;;AAcAz6B,QAAMrC,aAAN,CAAoB,mBAApB,EAAyC,gBAAQ;AAAA,QACvCukF,gBADuC,GAClBrkF,IADkB,CACvCqkF,gBADuC;;AAE/C,QAAMJ,YAAY,IAAIhnE,GAAJ,EAAlB;AACAonE,qBAAiB9wE,OAAjB,CAAyB,aAAK;AAC5B0wE,gBAAUtmE,GAAV,CAAckf,EAAEvmB,KAAhB,EAAuBumB,CAAvB;AACD,KAFD;AAGAp1B,WAAOs0B,KAAP,GAAet0B,OAAOs0B,KAAP,CAAajqB,GAAb,CAAiB,aAAK;AACnC,UAAMa,OAAO3P,EAAE2P,IAAf;AACA,UAAM63B,SAASy5C,UAAU/jE,GAAV,CAAcld,EAAE2P,IAAhB,CAAf;AACA,UAAI63B,UAAUA,OAAO05C,WAArB,EAAkC;AAChChjF,gBAAQC,GAAR,CAAY,WAAZ,EAAyB6B,EAAE2P,IAA3B,EAAiC,MAAjC,EAAyC63B,OAAO05C,WAAhD;AACAlhF,UAAE2P,IAAF,GAAS63B,OAAO05C,WAAhB;AACD;AACD,aAAOlhF,CAAP;AACD,KARc,CAAf;AASA;AACA;AACA;AACA;AACAb,UAAME,SAAN,CAAgB,cAAhB,EAAgCoF,MAAhC;AACAtF,UAAMimB,WAAN,CAAkB,QAAlB,EAA4B3gB,MAA5B;AACD,GArBD;AAsBA;AACA;;;;AAIAtF,QAAMrC,aAAN,CAAoB,aAApB,EAAmC,UAAUE,IAAV,EAAgB;AAAA,QAC3C48B,IAD2C,GAClC58B,IADkC,CAC3C48B,IAD2C;;AAEjD,QAAIv7B,GAAJ,EAASH,QAAQC,GAAR,CAAY,qCAAZ,EAAmDy7B,IAAnD;AACT;AACA,QAAI0nD,eAAeC,yBAAyB,EAAEnjF,IAAIw7B,KAAKx7B,EAAX,EAAzB,EAA0Cw7B,IAA1C,CAAnB;AACA,QAAIv7B,GAAJ,EAASH,QAAQC,GAAR,CAAY,+BAAZ,EAA6CmjF,YAA7C;;AAET,QAAIA,aAAangF,MAAb,KAAwB,CAA5B,EAA+B;AAC7B;AACA,UAAI9C,GAAJ,EAASH,QAAQC,GAAR,CAAY,uCAAZ,EAAqDy7B,IAArD;AACT;AACAA,WAAK4lB,IAAL,GAAY,CAAZ;AACA/6C,aAAOs0B,KAAP,CAAa77B,IAAb,CAAkB08B,IAAlB;AACD,KAND,MAMO,IAAI0nD,aAAangF,MAAb,KAAwB,CAA5B,EAA+B;AACpC;AACA,UAAMoiE,QAAQ9+D,OAAOs0B,KAAP,CAAa0H,SAAb,CAAuB;AAAA,eAAKzgC,EAAE5B,EAAF,KAASw7B,KAAKx7B,EAAnB;AAAA,OAAvB,CAAd;AACAqG,aAAOs0B,KAAP,CAAa2H,MAAb,CAAoB6iC,KAApB,EAA2B,CAA3B,EAA8B3pC,IAA9B;AACA,UAAIv7B,GAAJ,EACEH,QAAQC,GAAR,CAAY,8CAAZ,EAA4DmjF,YAA5D;AACH,KANM,MAMA,IAAIA,aAAangF,MAAb,GAAsB,CAA1B,EAA6B;AAClC;AACA,YAAMI,MAAM,gCAAN,CAAN;AACD;;AAED+yE,UAAMyB,uBAAN,CAA8BtxE,MAA9B;AACA6vE,UAAM0B,yBAAN,CAAgCvxE,MAAhC;AACAtF,UAAMimB,WAAN,CAAkB,QAAlB,EAA4B3gB,MAA5B;AACD,GA3BD;AA4BA;AACA;;AAEAtF,QAAMrC,aAAN,CAAoB,aAApB,EAAmC,UAAUE,IAAV,EAAgB;AAAA,QAC3CyJ,MAD2C,GAChCzJ,IADgC,CAC3CyJ,MAD2C;;AAEjD,QAAIsyB,QAAQ,EAAZ;AACA;AACAt0B,WAAOs0B,KAAP,GAAeyoD,2BAA2B,EAAEpjF,IAAIqI,MAAN,EAA3B,CAAf;AACA6tE,UAAMyB,uBAAN,CAA8BtxE,MAA9B;AACA6vE,UAAM0B,yBAAN,CAAgCvxE,MAAhC;AACAtF,UAAMimB,WAAN,CAAkB,QAAlB,EAA4B3gB,MAA5B;AACA;AACA,QAAI4+D,YAAYlkE,MAAM+lB,QAAN,CAAe,WAAf,CAAhB;AACA,QACEm+C,UAAUzqC,KAAV,KAAoBh4B,SAApB,IACAyiE,UAAUzqC,KAAV,CAAgBz3B,MAAhB,GAAyB,CADzB,IAEAkiE,UAAUzqC,KAAV,CAAgB,CAAhB,EAAmBx6B,EAAnB,KAA0BwC,SAH5B,EAIE;AACA,UAAIvC,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,eAAhB,EAAiCk/D,SAAjC;AACV,KAND,MAMO;AACL,UAAIhlE,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,qBAAhB,EAAuCk/D,SAAvC;AACT,UAAIn9D,SAASm9D,UAAUzqC,KAAV,CAAgB,CAAhB,EAAmBx6B,EAAhC;AACA;AACA,UAAIilE,UAAUtqC,KAAV,KAAoBn4B,SAApB,IAAiCyiE,UAAUtqC,KAAV,CAAgB53B,MAAhB,GAAyB,CAA9D,EAAiE;AAC/D43B,gBAAQA,MAAM5f,MAAN,CAAakqD,UAAUtqC,KAAV,CAAgBxb,MAAhB,CAAuB;AAAA,iBAAQqc,KAAKx7B,EAAL,KAAYqI,MAApB;AAAA,SAAvB,CAAb,CAAR;AACD;AACF;AACDtH,UAAMimB,WAAN,CAAkB,WAAlB,EAA+B;AAC7BwT,aAAOyqC,UAAUzqC,KADY;AAE7BG,aAAOA;AAFsB,KAA/B;AAID,GA5BD;AA6BA;AACA;;;AAGA55B,QAAMrC,aAAN,CAAoB,qBAApB,EAA2C,UAAUE,IAAV,EAAgB;AACzDykF,+BAA2BzkF,IAA3B;AACD,GAFD;AAGA;AACA;;;;AAIAmC,QAAMrC,aAAN,CAAoB,qBAApB,EAA2C,uBAAe;AACxD,QAAIuB,GAAJ,EAASH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,kCAAhB,EAAoDwS,WAApD;AACT7N,eAAW6N,WAAX;AACAxX,UAAMimB,WAAN,CAAkB,UAAlB,EAA8Btc,QAA9B;AACAo3E;AACD,GALD;AAMA;AACA/gF,QAAMrC,aAAN,CAAoB,uBAApB,EAA6C,YAAM;AACjD,WAAO,EAAEkL,UAAUc,QAAZ,EAAP;AACD,GAFD;AAGD,CAtfD,E,CAsfI;;AAEJ;AACA;;AAEA,SAAS24E,0BAAT,CAAoCzkF,IAApC,EAA0C;AACxC,MAAIqB,GAAJ,EAASH,QAAQC,GAAR,CAAY,sCAAZ,EAAoDnB,KAAKoB,EAAzD;AACTe,QAAMimB,WAAN,CAAkB,oBAAlB,EAAwC;AACtCgwB,0BAAsBp4C,KAAKoB;AADW,GAAxC;AAGD;;AAED;AACA;;AAEAqC,IAAIiE,IAAJ,CAAS,OAAT,EAAkB,YAAM;AACtB;AACA;AACA;AACAvF,QAAMimB,WAAN,CAAkB,QAAlB,EAA4B3gB,MAA5B;AACD,CALD,E,CAKI;;AAEJ;AACA;AACA;;;AAGAhE,IAAIiE,IAAJ,CAAS,WAAT,EAAsB,UAAUsY,IAAV,EAAgB;AACpC;AACA;AACA,SAAO,IAAIrd,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIxB,GAAJ,EAASH,QAAQC,GAAR,CAAegG,EAAf;AACT;AACA,QAAIu9E,UAAUh/E,WAAW,YAAM;AAC7B7C,aAAO,IAAI0B,KAAJ,CAAU,yBAAV,CAAP;AACD,KAFa,EAEX,IAFW,CAAd;;AAIA;AACAnF,WAAO8qB,uBAAP,CAA+B,CAC7B,eAD6B,iBAG7B,aAH6B,EAI7B,aAJ6B,EAK7B,gBAL6B,EAM7B,iBAN6B,EAO7B,eAP6B,EAQ7B,yBAR6B,EAS7B,qBAT6B,CAA/B,EAUGzhB,IAVH,CAUQ,aAAK;AACXhD,mBAAai/E,OAAb;AACA,UAAIrjF,GAAJ,EACEH,QAAQC,GAAR,CACKgG,EADL,yDACyD4B,KAAKC,SAAL,CACrD8e,EAAEihB,UADmD,CADzD;AAKF,UAAI1nC,GAAJ,EACEH,QAAQC,GAAR,mCACkC/B,OAAOonB,WAAP,EADlC,EAEE,6BAFF;AAIF5jB;AACD,KAxBD;AAyBD,GAjCM,CAAP;AAkCD,CArCD,E,CAqCI;;AAEJ;AACA;;AAEAa,IAAImtC,gBAAJ,GAAuB,YAAM;AAC3B;AACA,MAAM0L,UAAUn6C,MAAM+lB,QAAN,CAAe,SAAf,CAAhB;AAF2B,MAGnBsH,MAHmB,GAGR8sB,OAHQ,CAGnB9sB,MAHmB;;AAI3B,SAAOA,MAAP;AACD,CALD;;AAOA;AACA;AACA;AACA;;;AAGA,SAAS2vB,wBAAT,CAAkC6C,QAAlC,EAA2D;AAAA,MAAfC,QAAe,uEAAJ,EAAI;;AACzD;AACA,MAAI,CAAC3mB,MAAMC,OAAN,CAAcymB,QAAd,CAAL,EACE,MAAMz9C,MAAM,8CAAN,CAAN;AACF,MAAIm6B,UAAUsjB,SAASzhC,MAAT,CAAgB,eAAO;AACnC,QAAIzE,OAAO,IAAX;AACA,SAAK,IAAIpX,GAAT,IAAgBu9C,QAAhB,EAA0B;AACxB,UAAIA,SAASv9C,GAAT,MAAkB8Q,IAAI9Q,GAAJ,CAAtB,EAAgCoX,OAAO,KAAP;AAChC;AACD;AACD,WAAOA,IAAP;AACD,GAPa,CAAd;AAQA;AACA,SAAO4iB,OAAP;AACD;AACD;AACA;;;AAGA,SAASimD,uBAAT,CAAiC3iC,QAAjC,EAA6E;AAAA,MAAlCC,QAAkC,uEAAvB,EAAuB;AAAA,MAAnB2iC,GAAmB,uEAAb,EAAa;AAAA,MAATC,EAAS,uEAAJ,EAAI;;AAC3E;AACA,MAAI,CAACvpD,MAAMC,OAAN,CAAcymB,QAAd,CAAL,EACE,MAAMz9C,MAAM,2CAAN,CAAN;;AAEF,MAAIs3E,gBAAgB,EAApB;AACA75B,WAASzuC,OAAT,CAAiB,gBAAQ;AACvB,QAAIuxE,UAAU,IAAd;AACA,SAAK,IAAIpgF,GAAT,IAAgBu9C,QAAhB,EAA0B;AACxB,UAAIA,SAASv9C,GAAT,MAAkB+3B,KAAK/3B,GAAL,CAAtB,EAAiCogF,UAAU,KAAV;AACjC;AACD;AACD,QAAIA,OAAJ,EAAa;AACX,WAAK,IAAIpgF,IAAT,IAAgBkgF,GAAhB;AAAqBnoD,aAAK/3B,IAAL,IAAYkgF,IAAIlgF,IAAJ,CAAZ;AAArB,OACAm3E,cAAc37E,IAAd,CAAmBu8B,IAAnB;AACD,KAHD,MAGO;AACL,WAAK,IAAI/3B,KAAT,IAAgBmgF,EAAhB;AAAoBpoD,aAAK/3B,KAAL,IAAYmgF,GAAGngF,KAAH,CAAZ;AAApB;AACD;AACF,GAZD;AAaA,SAAOm3E,aAAP;AACD;AACD;AACA;;AAEA,SAASkJ,YAAT,CAAsB/iC,QAAtB,EAA0C;AAAA,MAAVljC,GAAU,uEAAJ,EAAI;;AACxC;AACA,MAAI,CAACwc,MAAMC,OAAN,CAAcymB,QAAd,CAAL,EAA8B,MAAMz9C,MAAM,gCAAN,CAAN;AAC9By9C,WAASzuC,OAAT,CAAiB,eAAO;AACtB,SAAK,IAAI7O,GAAT,IAAgBoa,GAAhB;AAAqBtJ,UAAI9Q,GAAJ,IAAWoa,IAAIpa,GAAJ,CAAX;AAArB;AACD,GAFD;AAGD;AACDjB,IAAIuhF,UAAJ,GAAiBD,YAAjB,C,CAA+B;;AAE/B;AACA;AACA;;AAEA,SAAS7B,gBAAT,GAA4B;AAC1B;AACA;AACA;AACA;AACA,MAAI;AACF,QAAMpyB,eAAe,EAArB;AACAhlD,aAASktB,QAAT,CAAkBrmB,IAAlB,CAAuBR,OAAvB,CAA+BoB,OAA/B,CAAuC,aAAK;AAC1Cu9C,mBAAap4C,EAAEpC,KAAf,IAAwBoC,EAAE2Y,KAA1B;AACD,KAFD;;AAIA,QAAMw/B,eAAe,EAArB;AACA,QAAIo0B,mBAAmBn5E,SAAS0tB,QAAT,CAAkBnI,KAAlB,IAA2B,MAAlD,CAPE,CAOwD;AAC1DvlB,aAAS0tB,QAAT,CAAkB7mB,IAAlB,CAAuBR,OAAvB,CAA+BoB,OAA/B,CAAuC,aAAK;AAC1Cs9C,mBAAan4C,EAAEpC,KAAf,IAAwBoC,EAAE2Y,KAAF,IAAW4zD,gBAAnC;AACD,KAFD;;AAIA9iF,UAAMimB,WAAN,CAAkB,UAAlB,EAA8B,EAAE0oC,0BAAF,EAAgBD,0BAAhB,EAA9B;AACD,GAbD,CAaE,OAAO14C,KAAP,EAAc;AACdjX,YAAQiX,KAAR,CACEhR,EADF,EAEE,6CAFF,EAGEgR,KAHF,EAIE,SAJF,EAKErM,QALF;AAOD;AACF;AACD;AACA;;AAEA,SAASi4E,2BAAT,GAAkD;AAAA,MAAbmB,MAAa,uEAAJ,EAAI;;AAChD,MAAIxmD,UAAUj3B,OAAOm0B,KAAP,CAAarb,MAAb,CAAoB,gBAAQ;AACxC,QAAIzE,OAAO,KAAX;AACA,SAAK,IAAIpX,GAAT,IAAgBwgF,MAAhB,EAAwB;AACtB,UAAIA,OAAOxgF,GAAP,MAAgB+3B,KAAK/3B,GAAL,CAApB,EAA+B;AAC7BoX,eAAO,IAAP;AACA;AACD;AACF;AACD,WAAOA,IAAP;AACD,GATa,CAAd;AAUA;AACA,SAAO4iB,OAAP;AACD;AACD;AACA;;;AAGA,SAAS0lD,wBAAT,GAAiD;AAAA,MAAfniC,QAAe,uEAAJ,EAAI;;AAC/C,SAAO9C,yBAAyB13C,OAAOm0B,KAAhC,EAAuCqmB,QAAvC,CAAP;AACD;AACD;AACA;GACI,SAASyhC,cAAT,CAAwBtiF,EAAxB,EAA4B;AAC9B,SAAOgjF,yBAAyB,EAAEhjF,MAAF,EAAzB,EAAiC,CAAjC,CAAP;AACD;AACD;AACA;;AAEA,SAASuiF,0BAAT,GAA8C;AAAA,MAAVtvE,GAAU,uEAAJ,EAAI;;AAC5C,MAAI,CAACA,GAAL,EAAU,OAAO,EAAP;AACVA,QAAM8wE,mBAAmB9wE,IAAIm3D,IAAJ,EAAnB,CAAN;AACA,MAAIn3D,QAAQ,EAAZ,EAAgB,OAAO,EAAP;AAChB,MAAM2vB,QAAQ,IAAIw2C,MAAJ,EAAW,QAASnmE,GAApB,EAAyB,GAAzB,CAAd;AACA,SAAO5M,OAAOm0B,KAAP,CAAarb,MAAb,CAAoB;AAAA,WAAQyjB,MAAM1U,IAAN,CAAWmN,KAAKnmB,KAAhB,CAAR;AAAA,GAApB,CAAP;AACD;AACD;AACA;;;;AAIA,SAAS8uE,yBAAT,GAAgE;AAAA,MAA7B/wE,GAA6B,uEAAvB,EAAuB;AAAA,MAAnBuwE,GAAmB,uEAAb,EAAa;AAAA,MAATC,EAAS,uEAAJ,EAAI;;AAC9D,MAAIhJ,gBAAgB,EAApB;AACAxnE,QAAM8wE,mBAAmB9wE,IAAIm3D,IAAJ,EAAnB,CAAN;AACA,MAAIn3D,QAAQ,EAAZ,EAAgB,OAAOzQ,SAAP;AAChB,MAAMogC,QAAQ,IAAIw2C,MAAJ,EAAW,QAASnmE,GAApB,EAAyB,GAAzB,CAAd;AACA5M,SAAOm0B,KAAP,CAAaroB,OAAb,CAAqB,gBAAQ;AAC3B,QAAIywB,MAAM1U,IAAN,CAAWmN,KAAKnmB,KAAhB,CAAJ,EAA4B;AAC1B,WAAK,IAAI5R,GAAT,IAAgBkgF,GAAhB;AAAqBnoD,aAAK/3B,GAAL,IAAYkgF,IAAIlgF,GAAJ,CAAZ;AAArB,OACAm3E,cAAc37E,IAAd,CAAmBu8B,IAAnB;AACD,KAHD,MAGO;AACL,WAAK,IAAI/3B,KAAT,IAAgBmgF,EAAhB;AAAoBpoD,aAAK/3B,KAAL,IAAYmgF,GAAGngF,KAAH,CAAZ;AAApB;AACD;AACF,GAPD;AAQA,SAAOm3E,aAAP;AACD;AACD;AACA;;;AAGA,SAASgI,wBAAT,GAAoE;AAAA,MAAlC5hC,QAAkC,uEAAvB,EAAuB;AAAA,MAAnB2iC,GAAmB,uEAAb,EAAa;AAAA,MAATC,EAAS,uEAAJ,EAAI;;AAClE,SAAOF,wBAAwBl9E,OAAOm0B,KAA/B,EAAsCqmB,QAAtC,EAAgD2iC,GAAhD,EAAqDC,EAArD,CAAP;AACD;;AAED;AACA;AACA;;AAEA,SAASL,0BAAT,GAAiD;AAAA,MAAbU,MAAa,uEAAJ,EAAI;;AAC/C,MAAIxmD,UAAUj3B,OAAOs0B,KAAP,CAAaxb,MAAb,CAAoB,gBAAQ;AACxC,QAAIzE,OAAO,KAAX;AACA,SAAK,IAAIpX,GAAT,IAAgBwgF,MAAhB,EAAwB;AACtB,UAAIA,OAAOxgF,GAAP,MAAgBk4B,KAAKl4B,GAAL,CAApB,EAA+B;AAC7BoX,eAAO,IAAP;AACA;AACD;AACF;AACD,QAAI,CAACA,IAAL,EAAW;AACT;AACA,UAAMw1B,OAAOvF,OAAOkF,WAAP,CAAmBrU,KAAKx7B,EAAxB,CAAb;AACA2qC,aAAOoK,wBAAP,CAAgC7E,IAAhC;AACD;AACD,WAAOx1B,IAAP;AACD,GAda,CAAd;AAeA;AACA,SAAO4iB,OAAP;AACD;AACD;AACA;;AAEA,SAAS6lD,wBAAT,GAAoE;AAAA,MAAlCtiC,QAAkC,uEAAvB,EAAuB;AAAA,MAAnB2iC,GAAmB,uEAAb,EAAa;AAAA,MAATC,EAAS,uEAAJ,EAAI;;AAClE,SAAOF,wBAAwBl9E,OAAOs0B,KAA/B,EAAsCkmB,QAAtC,EAAgD2iC,GAAhD,EAAqDC,EAArD,CAAP;AACD;;AAED;AACA;AACA;;;AAGA,IAAMQ,mBAAmB,qBAAzB;AACA;AACA;;;AAGA,SAASF,kBAAT,CAA4BG,MAA5B,EAAoC;AAClC,SAAOA,OAAOvyD,OAAP,CAAesyD,gBAAf,EAAiC,MAAjC,CAAP,CADkC,CACe;AAClD;AACD5hF,IAAIo2E,gBAAJ,GAAuBsL,kBAAvB,C,CAA2C;AAC3C;AACA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAS7C,aAAT,CAAuBtiF,IAAvB,EAA6B;AAC3BA,OAAK47B,KAAL,CAAWroB,OAAX,CAAmB,gBAAQ;AACzBkpB,SAAKr7B,EAAL,GAAU4L,SAASyvB,KAAKr7B,EAAd,CAAV;AACA,QAAIq7B,KAAKokB,UAAT,EAAqB;AACnB;AACApkB,WAAK9pB,IAAL,GAAY8pB,KAAK9pB,IAAL,IAAa8pB,KAAKokB,UAAL,CAAgB0kC,SAAzC;AACA9oD,WAAKzc,IAAL,GAAYyc,KAAKzc,IAAL,IAAayc,KAAKokB,UAAL,CAAgB,YAAhB,CAAzB;AACApkB,WAAKjB,KAAL,GAAaiB,KAAKjB,KAAL,IAAciB,KAAKokB,UAAL,CAAgB2kC,KAA3C;AACA;AACA9uE,cAAQmX,cAAR,CAAuB4O,IAAvB,EAA6B,YAA7B;AACD;AACF,GAVD;AAWAz8B,OAAK+7B,KAAL,CAAWxoB,OAAX,CAAmB,gBAAQ;AACzBqpB,SAAKx7B,EAAL,GAAU4L,SAAS4vB,KAAKx7B,EAAd,CAAV;AACA;AACAw7B,SAAKvB,MAAL,GAAcruB,SAAS4vB,KAAKvB,MAAd,CAAd;AACAuB,SAAKzyB,MAAL,GAAc6C,SAAS4vB,KAAKzyB,MAAd,CAAd;AACA,QAAIyyB,KAAKikB,UAAT,EAAqB;AACnB;AACAjkB,WAAKjqB,IAAL,GAAYiqB,KAAKjqB,IAAL,IAAaiqB,KAAKikB,UAAL,CAAgB4kC,YAAzC;AACA7oD,WAAK5c,IAAL,GAAY4c,KAAK5c,IAAL,IAAa4c,KAAKikB,UAAL,CAAgB5kB,IAAzC;AACAW,WAAK9D,QAAL,GAAgB8D,KAAK9D,QAAL,IAAiB8D,KAAKikB,UAAL,CAAgB6kC,SAAjD;AACA9oD,WAAKpB,KAAL,GAAaoB,KAAKpB,KAAL,IAAcoB,KAAKikB,UAAL,CAAgB2kC,KAA3C;AACA5oD,WAAKnB,QAAL,GAAgBmB,KAAKnB,QAAL,IAAiBmB,KAAKikB,UAAL,CAAgB8kC,QAAjD;AACA;AACAjvE,cAAQmX,cAAR,CAAuB+O,IAAvB,EAA6B,YAA7B;AACD;AACF,GAfD;AAgBD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAASgpD,gBAAT,GAA4B;AAC1B,MAAIpmF,QAAQ,EAAEqzD,UAAUovB,gBAAZ,EAAZ;AACA8C,eAAat9E,OAAOm0B,KAApB,EAA2Bp8B,KAA3B;AACA2C,QAAMimB,WAAN,CAAkB,QAAlB,EAA4B3gB,MAA5B;AACD;AACD;AACA;;AAEA,SAAS27E,kBAAT,GAA8B;AAC5B,MAAI5jF,QAAQ,EAAEw6D,aAAap2D,SAAf,EAAZ;AACAmhF,eAAat9E,OAAOm0B,KAApB,EAA2Bp8B,KAA3B;AACA2C,QAAMimB,WAAN,CAAkB,QAAlB,EAA4B3gB,MAA5B;AACD;AACD;AACA;;AAEA,SAASo+E,oBAAT,CAA8BjtC,YAA9B,EAA4CvnB,KAA5C,EAAmD;AACjD,MAAIunB,iBAAiB,EAArB,EAAyB;AACvBgtC;AACA;AACD;AACD,MAAIr8B,SAAS,EAAEsJ,UAAUxhC,KAAZ,EAAb;AACA,MAAIy0D,WAAW,EAAEjzB,UAAUovB,gBAAZ,EAAf;AACAmD,4BAA0BxsC,YAA1B,EAAwC2Q,MAAxC,EAAgDu8B,QAAhD;AACA3jF,QAAMimB,WAAN,CAAkB,QAAlB,EAA4B3gB,MAA5B;AACD;AACD;AACA;;;;;AAKA,SAAS47E,yBAAT,CAAmCzqC,YAAnC,EAAiDvnB,KAAjD,EAAwD;AACtD,MAAIyzD,UAAU,EAAE9qB,aAAa3oC,KAAf,EAAd;AACA,MAAI00D,aAAa,EAAE/rB,aAAap2D,SAAf,EAAjB;AACAwhF,4BAA0BxsC,YAA1B,EAAwCksC,OAAxC,EAAiDiB,UAAjD;AACA5jF,QAAMimB,WAAN,CAAkB,QAAlB,EAA4B3gB,MAA5B;AACD;AACD;AACA;;AAEA,SAASu+E,mBAAT,CAA6BjqD,KAA7B,EAAoCU,IAApC,EAA0C;AACxC;AACAV,QAAMxoB,OAAN,CAAc,gBAAQ;AACpBqpB,SAAKi2B,QAAL,GAAgB,KAAhB;AACD,GAFD;AAGA;AACA,MAAIzxD,KAAKq7B,KAAKr7B,EAAd;AACAqG,SAAOs0B,KAAP,CAAaxoB,OAAb,CAAqB,gBAAQ;AAC3B,QAAIqpB,KAAKvB,MAAL,KAAgBj6B,EAAhB,IAAsBw7B,KAAKzyB,MAAL,KAAgB/I,EAA1C,EAA8C;AAC5Cw7B,WAAKi2B,QAAL,GAAgB,IAAhB;AACD,KAFD,MAEO;AACLj2B,WAAKi2B,QAAL,GAAgB,KAAhB;AACD;AACF,GAND;AAOA1wD,QAAMimB,WAAN,CAAkB,QAAlB,EAA4B3gB,MAA5B;AACD;;AAED;AACA;AACA;;;;;AAKAwL,MAAME,WAAN,CAAkB,SAAS8yE,2BAAT,GAAuC;AACvD9jF,QAAMqG,IAAN,CAAW,iCAAX;AACAtH,UAAQC,GAAR,CAAY,8DAAZ;AACD,CAHD;AAIA;;AAEA8R,MAAME,WAAN,CAAkB,SAAS+yE,cAAT,CAAwBn8E,QAAxB,EAAkC;AAClDA,aAAWA,YAAY,wBAAvB;AACA6kC,YAAU9kC,eAAV,CAA0BC,QAA1B,EACGtB,IADH,CACQ,gBAAQ;AACZ;AACAvH,YAAQC,GAAR,CAAYgG,EAAZ,yBAAqC4C,QAArC,iBAA2D/J,IAA3D;AACA;AACA;AACA,WAAOmC,MAAMqG,IAAN,CAAW,WAAX,EAAwBxI,IAAxB,CAAP;AACD,GAPH,EAQGyI,IARH,CAQQ,aAAK;AACT,QAAIqf,EAAEnf,EAAN,EAAU;AACRrK,aAAO2E,KAAP,kBACiB8G,QADjB;AAGA7I,cAAQC,GAAR,CACKgG,EADL,qDACuD4C,QADvD,EAEE,YAFF;AAIA7I,cAAQC,GAAR,CAAegG,EAAf;AACAzB,iBAAWtG,OAAOoG,uBAAlB,EAA2C,IAA3C;AACD,KAVD,MAUO;AACLtE,cAAQiX,KAAR,CAAchR,EAAd,EAAkB,cAAlB,EAAkC2gB,CAAlC;AACAxpB,aAAO2E,KAAP,YAAsB8F,KAAKC,SAAL,CAAe8e,CAAf,CAAtB;AACD;AACF,GAvBH;AAwBA;AACA,SAAO,4DAAP;AACD,CA5BD;AA6BA;AACA;;AAEA7U,MAAME,WAAN,CAAkB,SAASgzE,eAAT,GAA2B;AAC3C7nF,SAAO4nF,cAAP,CAAsB,uBAAtB;AACA,SAAO,2EAAP;AACD,CAHD;AAIA;AACA;;;AAGAjzE,MAAME,WAAN,CAAkB,SAASizE,WAAT,GAAuB;AACvCjkF,QAAM0G,OAAN,CAAc,iBAAd,EAAiC,EAAjC;AACA,SAAO,6EAAP;AACD,CAHD;AAIAoK,MAAME,WAAN,CAAkB,SAASkzE,gBAAT,GAA4B;AAC5ClkF,QAAM0G,OAAN,CAAc,sBAAd,EAAsC,EAAtC;AACA,SAAO,sCAAP;AACD,CAHD;AAIAoK,MAAME,WAAN,CAAkB,SAASmzE,gBAAT,GAA4B;AAC5CnkF,QAAM0G,OAAN,CAAc,sBAAd,EAAsC,EAAtC;AACA,SAAO,sCAAP;AACD,CAHD;AAIAoK,MAAME,WAAN,CAAkB,SAASozE,cAAT,GAA0B;AAC1CrlF,UAAQC,GAAR,CAAYgB,MAAM+lB,QAAN,CAAe,UAAf,CAAZ;AACA,SAAO,iBAAP;AACD,CAHD;AAIAjV,MAAME,WAAN,CAAkB,SAASqzE,UAAT,GAAsB;AACtCtlF,UAAQC,GAAR,CAAY,QAAZ,EAAsBsG,MAAtB;AACA,0BAAsBsB,KAAKC,SAAL,CAAevB,MAAf,CAAtB;AACD,CAHD;AAIA;AACA;;AAEA;AACA;AACA;AACAwL,MAAME,WAAN,CAAkB,SAASszE,kBAAT,CAA4BC,KAA5B,EAAmC73D,MAAnC,EAA2C83D,SAA3C,EAAsD;AACtE,SAAOC,aAAaF,KAAb,EAAoB73D,MAApB,EAA4BjrB,SAA5B,EAAuC+iF,SAAvC,CAAP;AACD,CAFD;AAGA;AACA1zE,MAAME,WAAN,CAAkB,SAASyzE,YAAT,CAAsBF,KAAtB,EAA6B73D,MAA7B,EAAqC7wB,OAArC,EAA8C2oF,SAA9C,EAAyD;AACzE;AACA,MAAI,OAAOD,KAAP,KAAiB,QAArB,EACE,OAAO,2DAAP;AACF,MAAI,OAAO73D,MAAP,KAAkB,QAAtB,EACE,OAAO,2DAAP;;AAEF;AACA;AACA;AACA;;AAEA,MAAI63D,MAAMviF,MAAN,GAAe,EAAnB,EAAuB,OAAO,yCAAP;AACvB,MAAI0qB,OAAO1qB,MAAP,GAAgB,EAApB,EAAwB,OAAO,yCAAP;AACxB,MAAI,CAACirB,OAAOC,SAAP,CAAiBs3D,SAAjB,CAAL,EAAkC,OAAO,gCAAP;AAClC,MAAIA,YAAY,CAAhB,EAAmB,OAAO,yCAAP;AACnB;AACA,MAAIrzE,oCAAiCozE,KAAjC,qBAAoD73D,MAApD,WAAJ;AACA,MAAIg4D,MAAMhqC,OAAO8pC,SAAP,EAAkBxiF,MAA5B;AACA,OAAK,IAAIW,IAAI,CAAb,EAAgBA,KAAK6hF,SAArB,EAAgC7hF,GAAhC,EAAqC;AACnC,QAAI1D,KAAKy7C,OAAO/3C,CAAP,CAAT;AACA1D,SAAKA,GAAG4P,QAAH,CAAY61E,GAAZ,EAAiB,GAAjB,CAAL;AACAvzE,sBAAgBlS,EAAhB,UAAuB6uB,QAAQN,SAAR,CAAkB+2D,KAAlB,EAAyB73D,MAAzB,EAAiC/pB,CAAjC,EAAoC9G,OAApC,CAAvB;AACD;AACD,MAAIM,UAAUA,OAAO8B,QAArB,EAA+B;AAC7B,QAAIkG,QAAQ,IAAIC,GAAJ,CAAQjI,OAAO8B,QAAf,CAAZ;AACA,QAAIoG,OAAOF,MAAME,IAAN,CAAWvC,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAX;AACA,QAAI1B,MAAS+D,MAAMG,QAAf,UAA4BH,MAAMI,IAAlC,SAA0CF,IAA9C;AACA8M,+BAAyBjU,SAASgH,YAAT,EAAzB,cAAyD4pB,QAAQN,SAAR,CACvD+2D,KADuD,EAEvD73D,MAFuD,EAGvD,CAHuD,CAAzD;AAKD;AACD3tB,UAAQC,GAAR,CAAYmS,GAAZ;AACA,SAAO,EAAP;AACD,CApCD;;AAsCA;;AAEA;AACA;AACAlV,OAAOC,OAAP,GAAiBoF,GAAjB;;;;;;AC9xCA;;;;;;AAnBA;;;;;;;;;;;;AAYA,IAAMlF,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMY,SAASZ,QAAQ,eAAR,CAAf;AACA,IAAMsoF,KAAKtoF,QAAQ,aAAR,GAAX;AACA,IAAMuoF,UAAUvoF,QAAQ,mBAAR,CAAhB;AACAsoF,GAAGE,GAAH,CAAOD,OAAP;AACA,IAAME,UAAUzoF,QAAQ,mBAAR,EAA6Bs5B,OAA7C;AACA,IAAMqzB,yBAAyB3sD,QAAQ,qCAAR,CAA/B;;;AAGA;AACA;AACA,IAAMsyC,WAAW;AACfif,QAAM,MADS;AAEff,QAAM;AAFS,CAAjB;;AAKA;AACA;AACA,IAAMvrD,MAAMrE,OAAOoI,SAAP,CAAiBpJ,OAAOgD,EAAxB,CAAZ;AACA,IAAMe,QAAQ/C,OAAOgD,WAAP,CAAmBqB,GAAnB,CAAd;;AAEA;AACA;AACA,SAASkuD,aAAT,GAAyB;AACvB,MAAI/U,QAAQ,IAAIt5C,IAAJ,EAAZ;AACA,MAAIyJ,OAAO8vC,OAAOD,MAAMpW,WAAN,EAAP,CAAX;AACA,MAAIt1B,OACF0rC,MAAMzW,QAAN,KAAmB,CAAnB,GAAuB,GAAvB,GAA6ByW,MAAMvW,OAAN,EAA7B,GAA+C,GAA/C,GAAqDt5B,KAAKwiB,SAAL,CAAe,CAAf,EAAkB,CAAlB,CADvD;AAEA,MAAI+d,OAAOsP,MAAME,YAAN,GAAqBvtB,SAArB,CAA+B,CAA/B,EAAkC,CAAlC,CAAX;AACA,MAAIwtB,WAAWzP,OAAO,MAAP,GAAgBp8B,IAA/B;AACA,SAAO6rC,QAAP;AACD;;AAED;;;;;AAKA,SAAS0F,WAAT,GAA+B;AAAA,MAAVpuC,GAAU,uEAAJ,EAAI;;AAC7B,MAAM6yE,aAAaJ,GAAGhkF,MAAH,CAAUuR,GAAV,CAAnB;AACA;AACA;AACA,MAAM8yE,mBAAmBD,WAAWn0D,OAAX,CAAmB,UAAnB,4BAAzB;AACA,SAAOk0D,QAAQE,gBAAR,CAAP;AACD;;AAED;AACA;AACA;;;;;;;AAOA,SAASC,uBAAT,CAAiCllF,KAAjC,EAAwCozC,EAAxC,EAA4C;AAC1Cp0C,UAAQwB,IAAR,CACE,uEADF;AAGA,MAAMgC,MAAMxC,MAAMiI,MAAN,CAAa/I,EAAzB;AACA,MAAM4D,QAAQ9C,MAAMiI,MAAN,CAAanF,KAA3B;AACA,MAAI,OAAOswC,EAAP,KAAc,UAAlB,EAA8BA,GAAG5wC,GAAH,EAAQM,KAAR;AAC/B;AACD;AACA;;;;;;AAMA,SAASqiF,qBAAT,CAA+BnlF,KAA/B,EAAsCozC,EAAtC,EAA0C;AACxC,MAAM5wC,MAAMxC,MAAMiI,MAAN,CAAa/I,EAAzB;AACA,MAAM4D,QAAQ9C,MAAMiI,MAAN,CAAanF,KAA3B;AACA,MAAI,OAAOswC,EAAP,KAAc,UAAlB,EAA8BA,GAAG5wC,GAAH,EAAQM,KAAR;AAC/B;AACD;AACA;;;;;;AAMA,SAASsiF,qBAAT,CAA+BplF,KAA/B,EAAsCozC,EAAtC,EAA0C;AACxC,MAAM5wC,MAAMxC,MAAMiI,MAAN,CAAa/I,EAAzB;AACA,MAAM4D,QAAQoqB,OAAOltB,MAAMiI,MAAN,CAAanF,KAApB,CAAd;AACA,MAAI,OAAOswC,EAAP,KAAc,UAAlB,EAA8BA,GAAG5wC,GAAH,EAAQM,KAAR;AAC/B;AACD;AACA;;;;;;AAMA,SAASuiF,qBAAT,CAA+BrlF,KAA/B,EAAsCozC,EAAtC,EAA0C;AACxC,MAAM5wC,MAAMxC,MAAMiI,MAAN,CAAa/I,EAAzB;AACA,MAAM4D,QAAQ9C,MAAMiI,MAAN,CAAanF,KAA3B;AACA,MAAI,OAAOswC,EAAP,KAAc,UAAlB,EAA8BA,GAAG5wC,GAAH,EAAQM,KAAR;AAC/B;AACD;AACA;;;;;;AAMA,SAASwiF,mBAAT,CAA6BtlF,KAA7B,EAAoCozC,EAApC,EAAwC;AACtC,MAAM5wC,MAAMxC,MAAMiI,MAAN,CAAa/I,EAAzB;AACA,MAAM4D,QAAQ9C,MAAMiI,MAAN,CAAanF,KAA3B;AACA,MAAI,OAAOswC,EAAP,KAAc,UAAlB,EAA8BA,GAAG5wC,GAAH,EAAQM,KAAR;AAC/B;AACD;AACA;;;;;;;AAOA,SAASyiF,kBAAT,CAA4BllF,GAA5B,EAAiCmlF,QAAjC,EAA2CpyC,EAA3C,EAA+C;AAC7C,MAAMoU,UAAUnoD,SAASqS,cAAT,CAAwB8zE,QAAxB,CAAhB;AACA,MAAMj+B,iBAAiBC,QAAQD,cAA/B;AACA,MAAMk+B,eAAe9qC,OAAO6M,QAAQ1kD,KAAf,CAArB;AACA;AACA,MAAM9C,QAAQ;AACZiI,YAAQ;AACN/I,UAAIsmF,QADE;AAEN1iF,aACE2iF,aAAap4D,SAAb,CAAuB,CAAvB,EAA0Bk6B,cAA1B,mBACYlnD,GADZ,UAEAolF,aAAap4D,SAAb,CAAuBk6B,cAAvB;AALI;AADI,GAAd;AASA29B,0BAAwBllF,KAAxB,EAA+BozC,EAA/B;AACD;AACD,SAASsyC,wBAAT,GAAoC,CAEnC;AADC;;;AAGF;AACA;AACA,SAAS91B,kBAAT,CAA4B/L,IAA5B,EAAkCpmD,KAAlC,EAAyCkoF,OAAzC,EAAkD;AAAA,MACxC54B,YADwC,GACHtvD,KADG,CACxCsvD,YADwC;AAAA,MAC1BF,SAD0B,GACHpvD,KADG,CAC1BovD,SAD0B;AAAA,MACfoN,OADe,GACHx8D,KADG,CACfw8D,OADe;;AAEhD,MAAM2rB,yBAAuBx9E,OAAOuH,IAAP,CAAYk0C,IAAZ,EAAkB5hD,MAAzC,WAAN;AACA,SACE;AAAA;AAAA;AACE,iBAAU,cADZ;AAEE,aAAO,EAAEktB,OAAO,KAAT,EAAgB8yC,qBAAqB2jB,UAArC;AAFT;AAIGx9E,WAAOuH,IAAP,CAAYk0C,IAAZ,EAAkBj0C,GAAlB,CAAsB,aAAK;AAC1B,aACE;AAAA;AAAA;AACE,cAAIC,CADN;AAEE,eAAKA,CAFP;AAGE,gBAAK,QAHP;AAIE,qBAAWk9C,iBAAiBlJ,KAAKh0C,CAAL,CAAjB,GAA2B,UAA3B,GAAwC,EAJrD;AAKE,mBAAS81E,OALX;AAME,iBAAO9hC,KAAKh0C,CAAL,CANT;AAOE,oBAAUg9C,cAAcje,SAASif;AAPnC;AASGhK,aAAKh0C,CAAL,MAAY,OAAZ,GAAyBg0C,KAAKh0C,CAAL,CAAzB,UAAqCoqD,OAArC,SAAkDpW,KAAKh0C,CAAL;AATrD,OADF;AAaD,KAdA;AAJH,GADF;AAsBD;AACD;AACA,SAASggD,uBAAT,CAAiCpyD,KAAjC,EAAwC6xD,IAAxC,EAA8C;AAAA,MACpC3Q,UADoC,GACZlhD,KADY,CACpCkhD,UADoC;AAAA,MACxBsb,OADwB,GACZx8D,KADY,CACxBw8D,OADwB;;AAE5C,MAAMnxC,QAAQ,EAAd;AACA1gB,SAAOuH,IAAP,CAAYgvC,UAAZ,EAAwBttC,OAAxB,CAAgC,aAAK;AACnCyX,UAAM9qB,IAAN,CAAW0xD,YAAY7/C,CAAZ,EAAey/C,KAAKz/C,CAAL,EAAQmnB,YAAvB,EAAqCs4B,KAAKz/C,CAAL,EAAQqnB,IAA7C,CAAX;AACA,QAAMzmB,OAAO6+C,KAAKz/C,CAAL,EAAQY,IAArB;AACA,YAAQA,IAAR;AACE,WAAK,UAAL;AACEqY,cAAM9qB,IAAN,CAAW6nF,oBAAoBh2E,CAApB,EAAuB8uC,WAAW9uC,CAAX,CAAvB,CAAX;AACA;AACF,WAAK,OAAL;AACEiZ,cAAM9qB,IAAN,CAAW8nF,gBAAgBj2E,CAAhB,EAAmB8uC,WAAW9uC,CAAX,CAAnB,EAAkCy/C,KAAKz/C,CAAL,EAAQa,MAA1C,EAAkD4+C,KAAKz/C,CAAL,EAAQG,oBAA1D,CAAX;AACA;AACF,WAAK,QAAL;AACA;AACE8Y,cAAM9qB,IAAN,CAAW2xD,kBAAkB9/C,CAAlB,EAAqB8uC,WAAW9uC,CAAX,CAArB,CAAX;AACA;AAVJ;AAYD,GAfD;;AAiBA;AACA,MAAIy/C,KAAK,SAAL,CAAJ,EAAqB;AACnB;AACAxmC,UAAM9qB,IAAN,CAAW0xD,YAAY,SAAZ,EAAuBJ,KAAK,SAAL,EAAgBt4B,YAAvC,CAAX;AACAlO,UAAM9qB,IAAN,CAAW2xD,kBAAkB,SAAlB,EAA6BsK,OAA7B,CAAX;AACD;;AAED,SAAO;AAAA;AAAA,MAAK,WAAU,UAAf;AAA2BnxC;AAA3B,GAAP;AACD;AACD;AACA,SAASsnC,uBAAT,CAAiC3yD,KAAjC,EAAwC6xD,IAAxC,EAA8Cy2B,QAA9C,EAAwD;AAAA,MAC9CpnC,UAD8C,GACtBlhD,KADsB,CAC9CkhD,UAD8C;AAAA,MAClCsb,OADkC,GACtBx8D,KADsB,CAClCw8D,OADkC;;AAEtD,MAAMnxC,QAAQ,EAAd;AACA1gB,SAAOuH,IAAP,CAAYgvC,UAAZ,EAAwBttC,OAAxB,CAAgC,aAAK;AACnCyX,UAAM9qB,IAAN,CAAW0xD,YAAY7/C,CAAZ,EAAey/C,KAAKz/C,CAAL,EAAQmnB,YAAvB,CAAX;AACA,QAAMvmB,OAAO6+C,KAAKz/C,CAAL,EAAQY,IAArB;AACA,QAAM3N,QAAQ67C,WAAW9uC,CAAX,KAAiB,EAA/B,CAHmC,CAGA;AACnC,QAAMyrC,WAAWgU,KAAKz/C,CAAL,EAAQqnB,IAAzB;AACA,YAAQzmB,IAAR;AACE,WAAK,UAAL;AACEqY,cAAM9qB,IAAN,CAAWgoF,oBAAoBn2E,CAApB,EAAuB/M,KAAvB,EAA8BijF,QAA9B,EAAwCzqC,QAAxC,CAAX;AACA;AACF,WAAK,OAAL;AACExyB,cAAM9qB,IAAN,CAAWioF,gBAAgBp2E,CAAhB,EAAmB/M,KAAnB,EAA0BwsD,KAAKz/C,CAAL,EAAQa,MAAlC,EAA0C4+C,KAAKz/C,CAAL,EAAQG,oBAAlD,EAAwE+1E,QAAxE,EAAkFzqC,QAAlF,CAAX;AACA;AACF,WAAK,QAAL;AACExyB,cAAM9qB,IAAN,CAAW48D,kBAAkB/qD,CAAlB,EAAqB/M,KAArB,EAA4BijF,QAA5B,EAAsCzqC,QAAtC,CAAX;AACA;AACF,WAAK,QAAL;AACExyB,cAAM9qB,IAAN,CAAWkoF,oBAAoBr2E,CAApB,EAAuB/M,KAAvB,EAA8BijF,QAA9B,EAAwCzqC,QAAxC,CAAX;AACA;AACF,WAAK,QAAL;AACExyB,cAAM9qB,IAAN,CAAWmyD,mBAAmBtgD,CAAnB,EAAsB/M,KAAtB,EAA6BwsD,IAA7B,EAAmCy2B,QAAnC,EAA6CzqC,QAA7C,CAAX;AACA;AACF;AACExyB,cAAM9qB,IAAN,CAAW2xD,kBAAkB9/C,CAAlB,EAAqB/M,KAArB,EAA4BijF,QAA5B,CAAX,EAjBJ,CAiBuD;AAjBvD;AAmBD,GAxBD;;AA0BA;AACA,MAAIz2B,KAAK,SAAL,CAAJ,EAAqB;AACnB;AACAxmC,UAAM9qB,IAAN,CAAW0xD,YAAY,SAAZ,EAAuBJ,KAAK,SAAL,EAAgBt4B,YAAvC,CAAX;AACAlO,UAAM9qB,IAAN,CAAW2xD,kBAAkB,SAAlB,EAA6BsK,OAA7B,CAAX;AACD;;AAED,SAAO;AAAA;AAAA,MAAK,WAAU,UAAf;AAA2BnxC;AAA3B,GAAP;AACD;AACD;AACA,SAASq9D,yBAAT,CAAmC1oF,KAAnC,EAA0C6xD,IAA1C,EAAgD;AAAA,MACtCv2B,UADsC,GACvBt7B,KADuB,CACtCs7B,UADsC;;AAE9C,MAAMjQ,QAAQ,EAAd;AACA1gB,SAAOuH,IAAP,CAAYopB,UAAZ,EAAwB1nB,OAAxB,CAAgC,aAAK;AACnCyX,UAAM9qB,IAAN,CAAW0xD,YAAY7/C,CAAZ,EAAey/C,KAAKz/C,CAAL,EAAQmnB,YAAvB,EAAqCs4B,KAAKz/C,CAAL,EAAQqnB,IAA7C,CAAX;AACA,QAAMzmB,OAAO6+C,KAAKz/C,CAAL,EAAQY,IAArB;AACA,YAAQA,IAAR;AACE,WAAK,UAAL;AACEqY,cAAM9qB,IAAN,CAAW6nF,oBAAoBh2E,CAApB,EAAuBkpB,WAAWlpB,CAAX,CAAvB,CAAX;AACA;AACF,WAAK,OAAL;AACEiZ,cAAM9qB,IAAN,CAAW8nF,gBAAgBj2E,CAAhB,EAAmBkpB,WAAWlpB,CAAX,CAAnB,EAAkCy/C,KAAKz/C,CAAL,EAAQa,MAA1C,EAAkD4+C,KAAKz/C,CAAL,EAAQG,oBAA1D,CAAX;AACA;AACF,WAAK,QAAL;AACA,WAAK,QAAL;AACA;AACE8Y,cAAM9qB,IAAN,CAAW2xD,kBAAkB9/C,CAAlB,EAAqBkpB,WAAWlpB,CAAX,CAArB,CAAX;AACA;AAXJ;AAaD,GAhBD;AAiBA,SAAOiZ,KAAP;AACD;AACD;AACA,SAASs9D,yBAAT,CAAmC3oF,KAAnC,EAA0C6xD,IAA1C,EAAgDy2B,QAAhD,EAA0D;AAAA,MAChDhtD,UADgD,GACxBt7B,KADwB,CAChDs7B,UADgD;AAAA,MACpCkhC,OADoC,GACxBx8D,KADwB,CACpCw8D,OADoC;;AAExD,MAAMnxC,QAAQ,EAAd;AACA1gB,SAAOuH,IAAP,CAAYopB,UAAZ,EAAwB1nB,OAAxB,CAAgC,aAAK;AACnCyX,UAAM9qB,IAAN,CAAW0xD,YAAY7/C,CAAZ,EAAey/C,KAAKz/C,CAAL,EAAQmnB,YAAvB,CAAX;AACA,QAAMvmB,OAAO6+C,KAAKz/C,CAAL,EAAQY,IAArB;AACA,QAAM3N,QAAQi2B,WAAWlpB,CAAX,KAAiB,EAA/B,CAHmC,CAGA;AACnC,QAAMyrC,WAAWgU,KAAKz/C,CAAL,EAAQqnB,IAAzB;AACA,YAAQzmB,IAAR;AACE,WAAK,UAAL;AACEqY,cAAM9qB,IAAN,CAAWgoF,oBAAoBn2E,CAApB,EAAuB/M,KAAvB,EAA8BijF,QAA9B,EAAwCzqC,QAAxC,CAAX;AACA;AACF,WAAK,OAAL;AACExyB,cAAM9qB,IAAN,CAAWioF,gBAAgBp2E,CAAhB,EAAmB/M,KAAnB,EAA0BwsD,KAAKz/C,CAAL,EAAQa,MAAlC,EAA0C4+C,KAAKz/C,CAAL,EAAQG,oBAAlD,EAAwE+1E,QAAxE,EAAkFzqC,QAAlF,CAAX;AACA;AACF,WAAK,QAAL;AACExyB,cAAM9qB,IAAN,CAAW48D,kBAAkB/qD,CAAlB,EAAqB/M,KAArB,EAA4BijF,QAA5B,EAAsCzqC,QAAtC,CAAX;AACA;AACF,WAAK,QAAL;AACExyB,cAAM9qB,IAAN,CAAWkoF,oBAAoBr2E,CAApB,EAAuB/M,KAAvB,EAA8BijF,QAA9B,EAAwCzqC,QAAxC,CAAX;AACA;AACF,WAAK,QAAL;AACExyB,cAAM9qB,IAAN,CAAWmyD,mBAAmBtgD,CAAnB,EAAsB/M,KAAtB,EAA6BwsD,IAA7B,EAAmCy2B,QAAnC,EAA6CzqC,QAA7C,CAAX;AACA;AACF;AACExyB,cAAM9qB,IAAN,CAAW2xD,kBAAkB9/C,CAAlB,EAAqB/M,KAArB,EAA4BijF,QAA5B,CAAX,EAjBJ,CAiBuD;AAjBvD;AAmBD,GAxBD;AAyBA,SAAOj9D,KAAP;AACD;AACD;AACA,SAASgnC,uBAAT,CAAiCryD,KAAjC,EAAwC6xD,IAAxC,EAA8C;AAAA,MACpCv2B,UADoC,GACsCt7B,KADtC,CACpCs7B,UADoC;AAAA,MACxBkhC,OADwB,GACsCx8D,KADtC,CACxBw8D,OADwB;AAAA,MACf5iC,OADe,GACsC55B,KADtC,CACf45B,OADe;AAAA,MACN62B,SADM,GACsCzwD,KADtC,CACNywD,SADM;AAAA,MACK92B,OADL,GACsC35B,KADtC,CACK25B,OADL;AAAA,MACc+2B,SADd,GACsC1wD,KADtC,CACc0wD,SADd;AAAA,MACyBzQ,QADzB,GACsCjgD,KADtC,CACyBigD,QADzB;AAE5C;;AACA,SACE;AAAA;AAAA,MAAK,WAAU,qBAAf;AACE;AAAA;AAAA,QAAK,WAAU,UAAf;AAAA;AAAA,KADF;AAEGyoC,8BAA0B1oF,KAA1B,EAAiC6xD,IAAjC,CAFH;AAGE;AAAA;AAAA,QAAK,WAAU,UAAf;AAAA;AAAA,KAHF;AAIGI,gBAAY,cAAZ,EAA4BJ,KAAKj4B,OAAL,CAAaL,YAAzC,CAJH;AAKG24B,sBAAkB,cAAlB,EAAkC02B,uBAAuBn4B,SAAvB,EAAkC72B,OAAlC,CAAlC,CALH;AAMGq4B,gBAAY,cAAZ,EAA4BJ,KAAKl4B,OAAL,CAAaJ,YAAzC,CANH;AAOG24B,sBAAkB,cAAlB,EAAkC02B,uBAAuBl4B,SAAvB,EAAkC/2B,OAAlC,CAAlC,CAPH;AAQGs4B,gBAAY,eAAZ,EAA6BJ,KAAK5R,QAAL,CAAc1mB,YAA3C,CARH;AASG24B,sBAAkB,eAAlB,EAAmCjS,QAAnC;AATH,GADF;AAaD;AACD;AACA,SAAS2S,uBAAT,CAAiC5yD,KAAjC,EAAwC6xD,IAAxC,EAA8Cy2B,QAA9C,EAAwD;AAAA,MAC9ChtD,UAD8C,GAC4Bt7B,KAD5B,CAC9Cs7B,UAD8C;AAAA,MAClCkhC,OADkC,GAC4Bx8D,KAD5B,CAClCw8D,OADkC;AAAA,MACzB5iC,OADyB,GAC4B55B,KAD5B,CACzB45B,OADyB;AAAA,MAChB62B,SADgB,GAC4BzwD,KAD5B,CAChBywD,SADgB;AAAA,MACL92B,OADK,GAC4B35B,KAD5B,CACL25B,OADK;AAAA,MACI+2B,SADJ,GAC4B1wD,KAD5B,CACI0wD,SADJ;AAAA,MACezQ,QADf,GAC4BjgD,KAD5B,CACeigD,QADf;AAEtD;;AACA,SACE;AAAA;AAAA,MAAK,WAAU,qBAAf;AACE;AAAA;AAAA,QAAK,WAAU,UAAf;AAAA;AAAA,KADF;AAEG0oC,8BAA0B3oF,KAA1B,EAAiC6xD,IAAjC,EAAuCy2B,QAAvC,CAFH;AAGE;AAAA;AAAA,QAAK,WAAU,UAAf;AAAA;AAAA,KAHF;AAIGr2B,gBAAY,cAAZ,EAA4BJ,KAAKj4B,OAAL,CAAaL,YAAzC,CAJH;AAKG24B,sBAAkB,cAAlB,EAAkC02B,uBAAuBn4B,SAAvB,EAAkC72B,OAAlC,CAAlC,CALH;AAMGq4B,gBAAY,cAAZ,EAA4BJ,KAAKl4B,OAAL,CAAaJ,YAAzC,CANH;AAOG24B,sBAAkB,cAAlB,EAAkC02B,uBAAuBl4B,SAAvB,EAAkC/2B,OAAlC,CAAlC,CAPH;AAQGs4B,gBAAY,eAAZ,EAA6BJ,KAAK5R,QAAL,CAAc1mB,YAA3C,CARH;AASG24B,sBAAkB,eAAlB,EAAmCjS,QAAnC;AATH,GADF;AAaD;AACD;AACA,SAAS2oC,sBAAT,CAAgC7V,MAAhC,EAAwCxhE,IAAxC,EAA8C;AAC5C,MAAMs3E,KAAK9V,cAAYA,MAAZ,mBAAX;AACA,SAAU8V,EAAV,UAAiBt3E,IAAjB,CAF4C,CAEnB;AAC1B;;AAED;AACA;AACA;AACA,SAAS0gD,WAAT,CAAqBltD,GAArB,EAA0B4R,KAA1B,EAAiCknC,QAAjC,EAA2C;AACzC,SACE;AAAA;AAAA,MAAO,SAAS94C,GAAhB,EAAqB,KAAQA,GAAR,UAArB,EAAyC,OAAO84C,QAAhD;AACGlnC;AADH,GADF;AAKD;AACD;AACA,SAASyxE,mBAAT,CAA6BrjF,GAA7B,EAA8C;AAAA,MAAZM,KAAY,uEAAJ,EAAI;;AAC5C,MAAMM,MAAMu3C,OAAO73C,KAAP,CAAZ;AACA,SACE;AAAA;AAAA,MAAK,IAAIN,GAAT,EAAc,KAAQA,GAAR,UAAd,EAAkC,WAAU,WAA5C;AACG+9C,gBAAYn9C,GAAZ;AADH,GADF;AAKD;AACD;AACA,SAASusD,iBAAT,CAA2BntD,GAA3B,EAAgCM,KAAhC,EAAuC;AACrC,SACE;AAAA;AAAA,MAAK,IAAIN,GAAT,EAAc,KAAQA,GAAR,UAAd,EAAkC,WAAU,WAA5C;AACGM;AADH,GADF;AAKD;AACD;AACA,SAASgjF,eAAT,CAAyBtjF,GAAzB,EAA8BM,KAA9B,EAAqCiN,UAArC,EAAiDC,oBAAjD,EAAuE;AACrE,SACE,oBAAC,qBAAD,IAAa,IAAIxN,GAAjB,EAAsB,KAAQA,GAAR,UAAtB,EAA0C,OAAOM,KAAjD,EAAwD,YAAYiN,UAApE;AACE,0BAAsBC,oBADxB;AAEE,kBAFF,GADF;AAKD;AACD;AACA;;;;;;;;;;AAUA,SAASg2E,mBAAT,CAA6BxjF,GAA7B,EAAkCM,KAAlC,EAAyCswC,EAAzC,EAA6CkI,QAA7C,EAAuD;AACrD,MAAMirC,OAAO5rC,OAAO73C,KAAP,EAAcb,MAAd,GAAuB,EAAvB,GAA4B,CAA5B,GAAgC,CAA7C;AACA,SACE;AAAA;AAAA,MAAK,KAAQO,GAAR,QAAL;AACE;AAAA;AAAA,QAAK,WAAU,MAAf;AAAuB84C;AAAvB,KADF;AAEE;AAAA;AAAA;AACE,mBAAU,aADZ;AAEE,iBAAS;AAAA,iBAAMr7C,MAAME,SAAN,CAAgB,uBAAhB,EAAyC,EAAEjB,IAAIsD,GAAN,EAAzC,CAAN;AAAA;AAFX;AAAA;AAAA,KAFF;AAQE;AACE,UAAIA,GADN;AAEE,WAAQA,GAAR,UAFF;AAGE,YAAK,QAHP;AAIE,aAAOM,KAJT;AAKE,gBAAU;AAAA,eAASoiF,wBAAwBllF,KAAxB,EAA+BozC,EAA/B,CAAT;AAAA,OALZ;AAME,oBAAa,KANf,CAMqB;AANrB,QAOE,WAAWmzC,OAAO,CAAP,YAAoB,EAPjC;AAQE,YAAMA;AARR,MARF;AAkBE,wBAAC,sBAAD;AACE,UAAI/jF,GADN;AAEE,eAAQ,kBAFV;AAGE,iBAAU,QAHZ;AAIE,YAAM;AAAA,eAAO+iF,mBAAmBllF,GAAnB,EAAwBmC,GAAxB,EAA6B4wC,EAA7B,CAAP;AAAA,OAJR;AAKE,qBAAc,QALhB;AAME,gBAAUsyC;AANZ;AAlBF,GADF;AA6BD;AACD;AACA;;;;;;;;;;;;AAYA,SAAS9qB,iBAAT,CAA2Bp4D,GAA3B,EAAgCM,KAAhC,EAAuCswC,EAAvC,EAA2CkI,QAA3C,EAAqDkrC,QAArD,EAA8DxwC,OAA9D,EAAsE;AACpE,MAAMuwC,OAAO5rC,OAAO73C,KAAP,EAAcb,MAAd,GAAuB,EAAvB,GAA4B,CAA5B,GAAgC,CAA7C;AACA,SACE;AAAA;AAAA,MAAK,KAAQO,GAAR,QAAL;AACE;AAAA;AAAA,QAAK,WAAU,MAAf;AAAuB84C;AAAvB,KADF;AAEE;AACE,UAAI94C,GADN;AAEE,WAAQA,GAAR,UAFF;AAGE,YAAK,QAHP;AAIE,aAAOM,KAJT;AAKE,gBAAU;AAAA,eAASqiF,sBAAsBnlF,KAAtB,EAA6BozC,EAA7B,CAAT;AAAA,OALZ;AAME,eAAS;AAAA,eAAM,OAAOozC,QAAP,KAAmB,UAAnB,IAAiCA,UAAvC;AAAA,OANX;AAOE,cAAQ;AAAA,eAAM,OAAOxwC,OAAP,KAAkB,UAAlB,IAAgCA,SAAtC;AAAA,OAPV;AAQE,oBAAa,KARf,CAQqB;AARrB,QASE,WAAWuwC,OAAO,CAAP,YAAoB,EATjC;AAUE,YAAMA;AAVR;AAFF,GADF;AAiBD;AACD;AACA;;;;;;;;AAQA,SAASL,mBAAT,CAA6B1jF,GAA7B,EAAkCM,KAAlC,EAAyCswC,EAAzC,EAA6CkI,QAA7C,EAAuD;AACrD,SACE;AAAA;AAAA,MAAK,KAAQ94C,GAAR,QAAL;AACE;AAAA;AAAA,QAAK,WAAU,MAAf;AAAuB84C;AAAvB,KADF;AAEE;AACE,UAAI94C,GADN;AAEE,WAAQA,GAAR,UAFF;AAGE,aAAOM,QAAQA,KAAR,GAAgB,CAHzB;AAIE,YAAK,QAJP;AAKE,gBAAU;AAAA,eAASsiF,sBAAsBplF,KAAtB,EAA6BozC,EAA7B,CAAT;AAAA;AALZ;AAFF,GADF;AAYD;AACD;AACA;;;;;;;;AAQA;AACA,SAAS+c,kBAAT,CAA4B3tD,GAA5B,EAAiCM,KAAjC,EAAwCwsD,IAAxC,EAA8Clc,EAA9C,EAAkDkI,QAAlD,EAA4D;AAC1D,MAAMrrC,UAAUq/C,KAAK9sD,GAAL,EAAUyN,OAA1B;AACA,SACE;AAAA;AAAA,MAAK,KAAQzN,GAAR,QAAL;AACE;AAAA;AAAA,QAAK,WAAU,MAAf;AAAuB84C;AAAvB,KADF;AAEE;AAAA;AAAA;AACE,YAAI94C,GADN;AAEE,aAAQA,GAAR,WAFF;AAGE,eAAOM,KAHT;AAIE,kBAAU;AAAA,iBAASuiF,sBAAsBrlF,KAAtB,EAA6BozC,EAA7B,CAAT;AAAA;AAJZ;AAMGnjC,cAAQL,GAAR,CAAY;AAAA,eACX;AAAA;AAAA,YAAQ,KAAK4G,EAAEpC,KAAf,EAAsB,OAAOoC,EAAEpC,KAA/B;AACGoC,YAAEpC;AADL,SADW;AAAA,OAAZ;AANH;AAFF,GADF;AAiBD;AACD;AACA;;;;;;;;;;;;AAYA,SAAS6xE,eAAT,CAAyBzjF,GAAzB,EAA8BM,KAA9B,EAAqCiN,UAArC,EAAiDC,oBAAjD,EAAuEojC,EAAvE,EAA2EkI,QAA3E,EAAqF;AACnF,SACE,oBAAC,qBAAD,IAAa,IAAI94C,GAAjB,EAAsB,KAAQA,GAAR,UAAtB,EAA0C,OAAOM,KAAjD;AACE,gBAAYiN,UADd;AAEE,0BAAsBC,oBAFxB;AAGE,cAAU;AAAA,aAASs1E,oBAAoBtlF,KAApB,EAA2BozC,EAA3B,CAAT;AAAA,KAHZ;AAIE,cAAUkI;AAJZ,IADF;AAQD;;AAED;AACA;AACAp/C,OAAOC,OAAP,GAAiB;AACfyyC,oBADe;AAEf6gB,8BAFe;AAGflP,0BAHe;AAIfqP,wCAJe;AAKfC,kDALe;AAMfO,kDANe;AAOfN,kDAPe;AAQfO,kDARe;AASfX,0BATe;AAUfm2B,0CAVe;AAWfl2B,sCAXe;AAYfq2B,0CAZe;AAafprB,sCAbe;AAcfzK;AAde,CAAjB;;;;;;ACthBA;;;;;;;;;;;AAWA;AACA;AACA;;;;;;AAMA,SAASs2B,YAAT,GAAwB;AACtB;AACA,SAAO9rC,OAAO/pC,KAAK81E,MAAL,KAAgB,GAAvB,CAAP;AACD;AACD;;;;;;;;;AASA,SAAS5P,yBAAT,CAAmCh5E,IAAnC,EAAyC;AACvC,MAAMm8D,UAAU,IAAIl/C,GAAJ,EAAhB;AACA,WAAS4rE,GAAT,CAAa73C,MAAb,EAAqB;AACnB,QAAM1rC,MAAM62D,QAAQj8C,GAAR,CAAY8wB,MAAZ,KAAuB,CAAnC;AACAmrB,YAAQx+C,GAAR,CAAYqzB,MAAZ,EAAoB1rC,MAAM,CAA1B;AACD;AACD;AACAtF,OAAK+7B,KAAL,CAAWxoB,OAAX,CAAmB,aAAK;AACtBs1E,QAAI7lF,EAAEq4B,MAAN;AACAwtD,QAAI7lF,EAAEmH,MAAN;AACD,GAHD;AAIA;AACAnK,OAAK47B,KAAL,CAAWroB,OAAX,CAAmB,aAAK;AACtBmpB,MAAEy/B,OAAF,GAAYA,QAAQj8C,GAAR,CAAYwc,EAAEt7B,EAAd,KAAqB,CAAjC;AACD,GAFD;AAGD;AACD;AACA;;;;;;;;AAQA,SAAS23E,uBAAT,CAAiC/4E,IAAjC,EAAuC;AACrC,MAAMwiD,OAAO,IAAIvlC,GAAJ,EAAb;AACA,WAAS6rE,MAAT,CAAgBlvC,QAAhB,EAA0BC,QAA1B,EAAoC;AAClC;AACA,WAAOD,WAAWC,QAAX,GACAD,QADA,SACYC,QADZ,GAEAA,QAFA,SAEYD,QAFnB;AAGD;AACD,WAASivC,GAAT,CAAa7tD,MAAb,EAAqB4e,QAArB,EAA+BC,QAA/B,EAAyC;AACvC,QAAMkvC,IAAI/tD,UAAU,CAApB;AACA,QAAMt2B,MAAMokF,OAAOlvC,QAAP,EAAiBC,QAAjB,CAAZ;AACA,QAAMv0C,MAAMk9C,KAAKtiC,GAAL,CAASxb,GAAT,KAAiB,CAA7B;AACA89C,SAAK7kC,GAAL,CAASjZ,GAAT,EAAcY,MAAMyjF,CAApB;AACD;AACD;AACA/oF,OAAK+7B,KAAL,CAAWxoB,OAAX,CAAmB,aAAK;AACtBs1E,QAAI7lF,EAAEg4B,MAAN,EAAch4B,EAAEq4B,MAAhB,EAAwBr4B,EAAEmH,MAA1B;AACD,GAFD;AAGA;AACAnK,OAAK+7B,KAAL,CAAWxoB,OAAX,CAAmB,aAAK;AACtB,QAAM7O,MAAMokF,OAAO9lF,EAAEq4B,MAAT,EAAiBr4B,EAAEmH,MAAnB,CAAZ;AACAnH,MAAEw/C,IAAF,GAASA,KAAKtiC,GAAL,CAASxb,GAAT,KAAiB,CAA1B;AACD,GAHD;AAID;;AAED;AACA;AACAtG,OAAOC,OAAP,GAAiB;AACfsqF,4BADe;AAEf3P,sDAFe;AAGfD;AAHe,CAAjB;;;;;;;;ACpFA;;;;;;;;;;;;;;AAcA,IAAM35E,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAIiF,MAAMrE,OAAOoI,SAAP,CAAiBpJ,OAAOgD,EAAxB,CAAV;AACA,IAAIe,QAAQ/C,OAAOgD,WAAP,CAAmBqB,GAAnB,CAAZ;;AAEA;AACA;AACA,IAAMpC,MAAM,KAAZ;AACA,IAAM8F,KAAK,cAAX;AACA;AACA,IAAIqvE,QAAQ,EAAZ;;AAEA;AACA;AACA;;AAEA/yE,IAAIiE,IAAJ,CAAS,YAAT,EAAuB,YAAM;AAC3B;AACA;AACA;AACD,CAJD,E,CAII;;AAEJ;AACA;AACA;;;;;;;;;;AAUAjE,IAAI+xD,aAAJ,GAAoB,gBAAQ;AAC1B,MAAIn0D,GAAJ,EAASH,QAAQC,GAAR,CAAY,eAAZ;AACT,MAAMy6B,QAAQotD,cAAchpF,KAAK47B,KAAnB,CAAd;AACA,MAAMG,QAAQktD,cAAcjpF,KAAK+7B,KAAnB,CAAd;AACAy6C,QAAM56C,KAAN,GAAcA,KAAd;AACA46C,QAAMz6C,KAAN,GAAcA,KAAd;AACA,SAAOy6C,KAAP;AACD,CAPD;AAQA;AACA/yE,IAAIylF,SAAJ,GAAgB,gBAAQ;AACtB1S,UAAQx2E,IAAR;AACD,CAFD;AAGA;AACAyD,IAAI4oD,eAAJ,GAAsB,gBAAQ;AAC5B,MAAMzwB,QAAQotD,cAAcxS,MAAM56C,KAApB,CAAd;AACA,MAAMG,QAAQktD,cAAczS,MAAMz6C,KAApB,CAAd;AACAy6C,QAAM56C,KAAN,GAAcA,KAAd;AACA46C,QAAMz6C,KAAN,GAAcA,KAAd;AACA,SAAOy6C,KAAP;AACD,CAND;;AAQA;AACA;AACA,SAASwS,aAAT,CAAuBptD,KAAvB,EAA8B;AAC5B,MAAM9vB,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,MAAMwqC,YAAYvwD,MAAM+lB,QAAN,CAAe,WAAf,CAAlB;AACA,MAAMo0D,SAASn6E,MAAM+lB,QAAN,CAAe,QAAf,CAAf;AACA,MAAMihE,SAAShnF,MAAM+lB,QAAN,CAAe,QAAf,CAAf;AACA,MAAMkhE,gBAAgB12B,UAAU92B,KAAV,GAAkB82B,UAAU92B,KAAV,CAAgB9pB,GAAhB,CAAoB;AAAA,WAAK4qB,EAAEt7B,EAAP;AAAA,GAApB,CAAlB,GAAmD,EAAzE;AACA,MAAMs8D,0BAA0B4e,OAAO5e,uBAAvC;AACA,MAAM6e,oBAAoBD,OAAOC,iBAAjC;AACA,MAAM8M,aAAaF,OAAOrwC,cAAP,GACfqwC,OAAOrwC,cAAP,CAAsBhnC,GAAtB,CAA0B;AAAA,WAAK4qB,EAAEt7B,EAAP;AAAA,GAA1B,CADe,GAEf,EAFJ;AAGA,MAAMkoF,uBAAuBx9E,SAAS+sB,WAAtC;AACA,MAAM0wD,mBAAmBz9E,SAAS8sB,WAAlC;;AAEA,MAAMg4B,WAAWzuD,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,SAAO0T,MAAM9pB,GAAN,CAAU,aAAK;AACpB,QAAM03E,uBAAuB9rB,4BAA4BhhC,EAAEt7B,EAA3D;AACA,QAAMqoF,kBAAkBlN,sBAAsB7/C,EAAEt7B,EAAhD;AACA,QAAMqkE,aAAa2jB,cAAc12E,QAAd,CAAuBgqB,EAAEt7B,EAAzB,CAAnB;AACA,QAAMsoF,sBAAsBh3B,UAAUE,iBAAV,KAAgCl2B,EAAEt7B,EAA9D;AACA,QAAMuoF,UAAUN,WAAW32E,QAAX,CAAoBgqB,EAAEt7B,EAAtB,CAAhB;AACA;AACAs7B,MAAErL,KAAF,GAAUu/B,SAASE,YAAT,CAAsBp0B,EAAE/pB,IAAxB,CAAV;AACA+pB,MAAE4lB,OAAF,GAAY5lB,EAAE6lB,oBAAd;AACA7lB,MAAE8lB,IAAF,GAAS1vC,KAAKghC,GAAL,CAAShoC,SAAS8uB,eAAT,GAA2B8B,EAAEy/B,OAAtC,EAA+CrwD,SAAS+uB,WAAxD,CAAT;AACA6B,MAAEm2B,QAAF,GAAa,KAAb;AACAn2B,MAAEk2B,iBAAF,GAAsB,KAAtB;AACA,QAAI42B,oBAAJ,EAA0B;AACxB9sD,QAAEw9B,SAAF,GAAc,MAAd;AACAx9B,QAAEs9B,WAAF,GAAgB,MAAhB;AACAt9B,QAAEu9B,WAAF,GAAgB,KAAhB;AACD,KAJD,MAIO,IAAIwvB,eAAJ,EAAqB;AAC1B/sD,QAAEw9B,SAAF,GAAc,MAAd;AACAx9B,QAAEs9B,WAAF,GAAgB,MAAhB;AACAt9B,QAAEu9B,WAAF,GAAgB,KAAhB;AACD,KAJM,MAIA,IAAIwL,UAAJ,EAAgB;AACrB;AACA/oC,QAAEw9B,SAAF,GAAcovB,oBAAd;AACA5sD,QAAEs9B,WAAF,GAAgBsvB,oBAAhB;AACA5sD,QAAEu9B,WAAF,GAAgB,KAAhB;AACD,KALM,MAKA,IAAI0vB,OAAJ,EAAa;AAClBjtD,QAAEw9B,SAAF,GAAcqvB,gBAAd;AACA7sD,QAAEs9B,WAAF,GAAgBuvB,gBAAhB;AACA7sD,QAAEu9B,WAAF,GAAgB,KAAhB;AACD,KAJM,MAIA;AACLv9B,QAAEw9B,SAAF,GAAc,MAAd;AACAx9B,QAAEs9B,WAAF,GAAgB,MAAhB,CAFK,CAEmB;AACxBt9B,QAAEu9B,WAAF,GAAgB,KAAhB;AACD;AACD,QAAIwL,UAAJ,EAAgB;AACd/oC,QAAEm2B,QAAF,GAAa,IAAb,CADc,CACK;AACpB;AACD,QAAI62B,mBAAJ,EAAyB;AACvBhtD,QAAEk2B,iBAAF,GAAsB,IAAtB,CADuB,CACK;AAC7B;AACDl2B,MAAEtD,IAAF,GAASwwD,UAAUltD,CAAV,CAAT;AACA,WAAOA,CAAP;AACD,GA1CM,CAAP;AA2CD;AACD;AACA,SAASusD,aAAT,CAAuBltD,KAAvB,EAA8B;AAC5B,MAAMjwB,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,MAAMo0D,SAASn6E,MAAM+lB,QAAN,CAAe,QAAf,CAAf;AAF4B,MAGpBu1C,mBAHoB,GAGI6e,MAHJ,CAGpB7e,mBAHoB;;AAI5B,SAAO1hC,MAAMjqB,GAAN,CAAU,aAAK;AACpB;AACA;AACA;AACA,QAAM8nC,WAAW,OAAO52C,EAAEq4B,MAAT,KAAoB,QAApB,GAA+Br4B,EAAEq4B,MAAjC,GAA0Cr4B,EAAEq4B,MAAF,CAASj6B,EAApE;AACA,QAAMy4C,WAAW,OAAO72C,EAAEmH,MAAT,KAAoB,QAApB,GAA+BnH,EAAEmH,MAAjC,GAA0CnH,EAAEmH,MAAF,CAAS/I,EAApE;AACA,QACE4B,EAAE6vD,QAAF,IACA4K,wBAAwB75D,SADxB,IACqC;AACrCg2C,iBAAa6jB,mBAFb,IAEoC;AACpC5jB,iBAAa4jB,mBAJf,CAImC;AAJnC,MAKE;AACA;AACAz6D,UAAEpC,KAAF,GAAUoC,EAAEw/C,IAAZ;AACAx/C,UAAEs/C,OAAF,GAAYt/C,EAAEu/C,oBAAd;AACD,OATD,MASO;AACLv/C,QAAEpC,KAAF,GAAUkL,SAASgvB,eAAnB,CADK,CAC+B;AACpC93B,QAAEs/C,OAAF,GAAYx2C,SAAS6sB,uBAArB,CAFK,CAEyC;AAC/C;AACD;AACA,WAAO31B,CAAP;AACD,GArBM,CAAP;AAsBD;AACD;AACA;;;;AAIA,SAAS4mF,SAAT,CAAmBntD,IAAnB,EAAyB;AACvB,MAAM3wB,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,MAAM8Q,WAAWltB,SAASktB,QAA1B;AACA,MAAIy5C,YAAY,EAAhB;AACAnoE,SAAOqO,OAAP,CAAeqgB,QAAf,EAAyBzlB,OAAzB,CAAiC,gBAAgB;AAAA;AAAA,QAAd7O,GAAc;AAAA,QAATgxE,GAAS;;AAC/C,QAAIA,IAAIr8C,qBAAJ,IAA6BoD,KAAK/3B,GAAL,MAAcd,SAA/C,EAA0D;AACxD,UAAI6uE,SAAJ,EAAeA,aAAa,IAAb;AACfA,mBAAaiD,IAAIx8C,YAAJ,GAAmB,IAAnB,GAA0BuD,KAAK/3B,GAAL,CAAvC;AACD;AACF,GALD;AAMA,SAAO+tE,SAAP;AACD;AACD;AACA,SAASoX,oBAAT,CAA8BlqC,QAA9B,EAAwC,CASvC;AARC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGF;AACA;AACAvhD,OAAOC,OAAP,GAAiBoF,GAAjB;;;;;;AC/LA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,IAAMrE,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA,IAAM8F,KAAK,iBAAX;AACA;AACA,IAAM2iF,iBAAiB;AACrBtb,UAAQ,QADa,EACH;AAClBub,aAAW,WAFU,EAEG;AACxB;AACAC,gBAAc,cAJO,EAIS;AAC9BC,gBAAc,cALO,CAKQ;AALR,CAAvB;AAOA;AACA,IAAIC,kBAAkBJ,eAAetb,MAArC,C,CAA6C;;AAE7C;AACA;AACA,IAAI/qE,MAAMrE,OAAOoI,SAAP,CAAiBpJ,OAAOgD,EAAxB,CAAV;AACA,IAAIe,QAAQ/C,OAAOgD,WAAP,CAAmBqB,GAAnB,CAAZ;;AAEA;AACA;AACA;;AAEAA,IAAIiE,IAAJ,CAAS,YAAT,EAAuB,YAAM;AAC3BvF,QAAMrC,aAAN,CAAoB,oBAApB,EAA0CqqF,SAA1C;AACAhoF,QAAMrC,aAAN,CAAoB,gBAApB,EAAsCsqF,cAAtC;AACAjoF,QAAMrC,aAAN,CAAoB,4BAApB,EAAkDuqF,iBAAlD;AACAloF,QAAMrC,aAAN,CAAoB,8BAApB,EAAoDwqF,mBAApD;AACA;AACA;AACD,CAPD,E,CAOI;;AAEJ;AACA;AACA;;;;AAIA,SAASH,SAAT,CAAmBnqF,IAAnB,EAAyB;AACvB,MAAIuqF,UAAUT,eAAetb,MAA7B,CADuB,CACc;AACrC,MAAIlkE,OAAOkW,MAAP,CAAcspE,cAAd,EAA8Bp3E,QAA9B,CAAuC1S,KAAKmuB,IAA5C,CAAJ,EAAuDo8D,UAAUvqF,KAAKmuB,IAAf;AACvD+7D,oBAAkBK,OAAlB;AACD;AACD;AACA;;;;;;;AAOA,SAASH,cAAT,CAAwBpqF,IAAxB,EAA8B;AAC5B,MAAMy8B,OAAO+tD,UAAUxqF,IAAV,CAAb;AACA,MAAIkqF,oBAAoBJ,eAAetb,MAAvC,EAA+C;AAC7Cic,0BAAsBhuD,IAAtB;AACD,GAFD,MAEO,IAAIytD,oBAAoBJ,eAAeC,SAAvC,EAAkD;AACvD;AACA,QAAI1oF,GAAJ,EACEH,QAAQC,GAAR,CAAYgG,EAAZ,EAAgB,0DAAhB;AACH,GAJM,MAIA,IAAI+iF,oBAAoBJ,eAAeE,YAAvC,EAAqD;AAC1DU,sCAAkCjuD,IAAlC;AACD,GAFM,MAEA,IAAIytD,oBAAoBJ,eAAeG,YAAvC,EAAqD;AAC1D;AACA;AACD,GAHM,MAGA;AACL,sCAAgCC,eAAhC;AACD;AACF;AACD;AACA;;;;;;;AAOA,SAASM,SAAT,CAAmBG,UAAnB,EAA+B;AAC7B,MAAMljF,SAAStF,MAAM+lB,QAAN,CAAe,QAAf,CAAf;AAD6B,8BAEayiE,UAFb,CAErB7yB,UAFqB;AAAA,MAErBA,UAFqB,yCAER,EAFQ;AAAA,4BAEa6yB,UAFb,CAEJthF,OAFI;AAAA,MAEJA,OAFI,uCAEM,EAFN;;AAG7B,MAAMk6E,YAAYzrB,WAAW,CAAX,CAAlB;AACA,MAAM9mB,SAAS3nC,QAAQ,CAAR,CAAf;AACA,MAAIozB,aAAJ;AACA,MAAIuU,MAAJ,EAAY;AACVvU,WAAOh1B,OAAOm0B,KAAP,CAAa+C,IAAb,CAAkB;AAAA,aAAKjC,EAAEt7B,EAAF,KAAS4vC,MAAd;AAAA,KAAlB,CAAP;AACD,GAFD,MAEO,IAAIuyC,SAAJ,EAAe;AACpB9mD,WAAOh1B,OAAOm0B,KAAP,CAAa+C,IAAb,CAAkB;AAAA,aAAKjC,EAAEpmB,KAAF,KAAYitE,SAAjB;AAAA,KAAlB,CAAP;AACD,GAFM,MAEA;AACL;AACD;AACD,SAAO9mD,IAAP;AACD;AACD;AACA;;;AAGA,SAASguD,qBAAT,CAA+BhuD,IAA/B,EAAqC;AACnC,MAAMh1B,SAAStF,MAAM+lB,QAAN,CAAe,QAAf,CAAf;AACA,MAAIs7D,qBAAJ;AAAA,MAAkBC,kBAAlB;AACA,MAAIhnD,SAAS74B,SAAb,EAAwB;AACtB;AACA4/E,mBAAe,EAAE5nD,OAAO,EAAT,EAAaG,OAAO,EAApB,EAAwB62B,mBAAmBhvD,SAA3C,EAAf;AACA6/E,gBAAY,EAAE/lB,yBAAyB95D,SAA3B,EAAZ;AACD,GAJD,MAIO;AACL;AACA,QAAMgnF,MAAMnuD,KAAKr7B,EAAjB;AACA,QAAI26B,QAAQ,EAAZ;AACA,QAAIt0B,OAAOs0B,KAAX,EACEA,QAAQA,MAAM5f,MAAN,CACN1U,OAAOs0B,KAAP,CAAaxb,MAAb,CAAoB;AAAA,aAAQqc,KAAKvB,MAAL,KAAgBuvD,GAAhB,IAAuBhuD,KAAKzyB,MAAL,KAAgBygF,GAA/C;AAAA,KAApB,CADM,CAAR;AAGF;AACApH,mBAAe,EAAE5nD,OAAO,CAACa,IAAD,CAAT,EAAiBV,YAAjB,EAAwB62B,mBAAmBhvD,SAA3C,EAAf;AACA6/E,gBAAY,EAAE/lB,yBAAyB95D,SAA3B,EAAZ;AACD;AACD;AACAzB,QAAMimB,WAAN,CAAkB,WAAlB,EAA+Bo7D,YAA/B;AACArhF,QAAMimB,WAAN,CAAkB,QAAlB,EAA4Bq7D,SAA5B;AACD;AACD;AACA;;;AAGA,SAASiH,iCAAT,CAA2CjuD,IAA3C,EAAiD;AAC/C,MAAIA,SAAS74B,SAAb,EAAwB,OADuB,CACf;AAChCzB,QAAME,SAAN,CAAgB,qBAAhB,EAAuC,EAAEo6B,UAAF,EAAvC;AACD;AACD;AACA;;;;;;AAMA,SAAS4tD,iBAAT,CAA2BrqF,IAA3B,EAAiC;AAC/B,MAAM0yD,YAAYvwD,MAAM+lB,QAAN,CAAe,WAAf,CAAlB;AACAwqC,YAAUE,iBAAV,GAA8B5yD,KAAKy8B,IAAL,CAAUr7B,EAAxC;AACAe,QAAMimB,WAAN,CAAkB,WAAlB,EAA+BsqC,SAA/B;AACD;AACD;AACA;;;;;AAKA,SAAS43B,mBAAT,GAA+B;AAC7B;AACA,MAAM53B,YAAYvwD,MAAM+lB,QAAN,CAAe,WAAf,CAAlB;AACAwqC,YAAUE,iBAAV,GAA8BhvD,SAA9B;AACAzB,QAAMimB,WAAN,CAAkB,WAAlB,EAA+BsqC,SAA/B;AACD;;AAED;AACA;AACAt0D,OAAOC,OAAP,GAAiBoF,GAAjB;;;;;;ACzLA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,IAAMgJ,QAAQjO,QAAQ,MAAR,GAAd;;AAEA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA,IAAM8F,KAAK,iBAAX;;AAEA;AACA;AACA,IAAM1D,MAAM,EAAZ;AACA;AACA;;;;;;;;;;;;;;AAcAA,IAAI4/D,eAAJ,GAAsB;AACpB1wD,QAAM,OADc;AAEpBshD,SAAO,YAFa;AAGpBrhD,UAAQ,OAHY;AAIpBT,WAAS;AACP04E,sBAAkB,IADX;AAEPC,uBAAmB,KAFZ;AAGPC,0BAAsB,KAHf;AAIPC,mCAA+B,IAJxB;AAKPC,mCAA+B,IALxB;AAMPC,2BAAuB;AANhB,GAJW,EAWjB;AACHlgE,SAAO;AACLrY,UAAM,QADD;AAEL+kB,gBAAY;AACV,eAAS;AACP/kB,cAAM,QADC;AAEPshD,eAAO,OAFA;AAGPrhD,gBAAQ,OAHD;AAIPklB,iBAAS,SAJF,CAIY;AAJZ,OADC;AAOV,eAAS;AACPnlB,cAAM,QADC;AAEPshD,eAAO,OAFA;AAGPn8B,iBAAS,EAHF,CAGK;AAHL;AAPC;AAFP;AAZa,CAAtB;AA6BA;AACA;;;;;;;;;;;AAWAr0B,IAAIggE,eAAJ,GAAsB;AACpB9wD,QAAM,OADc;AAEpBshD,SAAO,YAFa;AAGpBrhD,UAAQ,OAHY;AAIpBT,WAAS;AACP04E,sBAAkB,IADX;AAEPC,uBAAmB,KAFZ;AAGPC,0BAAsB,KAHf;AAIPC,mCAA+B,IAJxB;AAKPC,mCAA+B,IALxB;AAMPC,2BAAuB;AANhB,GAJW,EAWjB;AACHlgE,SAAO;AACLrY,UAAM,QADD;AAEL+kB,gBAAY;AACV,eAAS;AACP;AACA/kB,cAAM,QAFC;AAGPshD,eAAO,OAHA;AAIPrhD,gBAAQ,OAJD;AAKPklB,iBAAS,SALF,CAKY;AALZ,OADC;AAQV,eAAS;AACPnlB,cAAM,QADC;AAEPshD,eAAO,OAFA;AAGPn8B,iBAAS,EAHF,CAGK;AAHL;AARC;AAFP;AAZa,CAAtB;AA8BA;AACA;;;;;;AAMAr0B,IAAIqI,QAAJ,GAAe;AACbmoD,SAAO,oBADM;AAEb74B,WAAS,GAFI,EAEC;AACdzoB,QAAM,QAHO;AAIb+kB,cAAY;AACV,YAAQ;AACN/kB,YAAM,QADA;AAENilB,mBACE,sIAHI;AAINE,eAAS;AAJH,KADE;AAOV,mBAAe;AACbnlB,YAAM,QADO;AAEbilB,mBACE,6FAHW;AAIbE,eAAS;AAJI,KAPL;AAaV,gBAAY;AACVnlB,YAAM,QADI;AAEVilB,mBAAa,oBAFH;AAGVF,kBAAY;AACV,gBAAQ;AACN/kB,gBAAM,QADA;AAENilB,uBAAa,yBAFP;AAGNE,mBAAS,iBAHH;AAIN3lB,mBAAS;AACPg5E,6BAAiB,EAAEnyC,aAAa,kBAAf;AADV;AAJH,SADE;AASV,kBAAU;AACRrmC,gBAAM,SADE;AAERC,kBAAQ,UAFA;AAGRglB,uBAAa,gDAHL;AAIRE,mBAAS;AAJD;AATA;AAHF,KAbF;AAiCV,oBAAgB;AACdnlB,YAAM,SADQ;AAEdC,cAAQ,UAFM;AAGdglB,mBAAa,iDAHC;AAIdE,eAAS;AAJK,KAjCN;AAuCV,4BAAwB;AACtB;AACA;AACA;AACA;AACAnlB,YAAM,SALgB;AAMtBC,cAAQ,UANc;AAOtBglB,mBAAa,kDAPS;AAQtBE,eAAS;AARa,KAvCd;AAiDV,iCAA6B;AAC3B;AACA;AACA;AACA;AACAnlB,YAAM,SALqB;AAM3BC,cAAQ,UANmB;AAO3BglB,mBACE,0EARyB;AAS3BE,eAAS;AATkB,KAjDnB;AA4DV,uBAAmB;AACjBnlB,YAAM,QADW;AAEjBilB,mBAAa,iCAFI;AAGjBE,eAAS;AAHQ,KA5DT;AAiEV,mBAAe;AACbnlB,YAAM,QADO;AAEbilB,mBAAa,iCAFA;AAGbE,eAAS;AAHI,KAjEL;AAsEV,uBAAmB;AACjBnlB,YAAM,QADW;AAEjBilB,mBAAa,gCAFI;AAGjBE,eAAS,CAHQ,CAGN;AAHM,KAtET;AA2EV,mBAAe;AACbnlB,YAAM,QADO;AAEbilB,mBACE,0EAHW;AAIbE,eAAS;AAJI,KA3EL;AAiFV,kBAAc;AACZnlB,YAAM,QADM;AAEZilB,mBACE,iFAHU;AAIZE,eAAS;AAJG,KAjFJ;AAuFV,sBAAkB;AAChBnlB,YAAM,QADU;AAEhBilB,mBAAa,8DAFG;AAGhBE,eAAS;AAHO,KAvFR;AA4FV,oBAAgB;AACdnlB,YAAM,QADQ;AAEdilB,mBACE,6FAHY;AAIdE,eAAS;AAJK,KA5FN;AAkGV,wBAAoB;AAClBnlB,YAAM,QADY;AAElBilB,mBAAa,gEAFK;AAGlBE,eAAS;AAHS,KAlGV;AAuGV,mBAAe;AACbnlB,YAAM,QADO;AAEbilB,mBACE,6GAHW;AAIbE,eAAS;AAJI,KAvGL;AA6GV,uBAAmB;AACjBnlB,YAAM,QADW;AAEjBilB,mBAAa,+DAFI;AAGjBE,eAAS;AAHQ,KA7GT;AAkHV,wBAAoB;AAClBnlB,YAAM,QADY;AAElBilB,mBACE,oFAHgB;AAIlBE,eACE;AALgB,KAlHV;AAyHV,2BAAuB;AACrBnlB,YAAM,QADe;AAErBilB,mBACE,8FAHmB;AAIrBE,eACE;AALmB,KAzHb;AAgIV,2BAAuB;AACrBnlB,YAAM,QADe;AAErBilB,mBACE,+FAHmB;AAIrBE,eACE;AALmB,KAhIb;AAuIV,+BAA2B;AACzBnlB,YAAM,QADmB;AAEzBilB,mBACE,mHAHuB;AAIzBE,eAAS;AAJgB,KAvIjB;AA6IV,6BAAyB;AACvBnlB,YAAM,QADiB;AAEvBilB,mBACE,kGAHqB;AAIvBE,eAAS;AAJc,KA7If;AAmJV,+BAA2B;AACzBnlB,YAAM,QADmB;AAEzBilB,mBAAa,yCAFY;AAGzBE,eAAS;AAHgB,KAnJjB;AAwJV,+BAA2B;AACzBnlB,YAAM,QADmB;AAEzBilB,mBAAa,yCAFY;AAGzBE,eAAS;AAHgB,KAxJjB;AA6JV,mBAAe;AACbnlB,YAAM,QADO;AAEbilB,mBAAa,sDAFA;AAGbE,eAAS,SAHI;AAIbllB,cAAQ;AAJK,KA7JL;AAmKV,mBAAe;AACbD,YAAM,QADO;AAEbilB,mBAAa,sDAFA;AAGbE,eAAS,SAHI;AAIbllB,cAAQ;AAJK,KAnKL;AAyKV,gBAAY;AACV8kB,kBAAY;AACV,cAAM;AACJ/kB,gBAAM,QADF;AAEJilB,uBAAa,mCAFT;AAGJF,sBAAY;AACV,oBAAQ;AACN/kB,oBAAM,QADA;AAENR,uBAAS,EAAE8lB,QAAQ,IAAV,EAFH,EAEqB;AAC3BL,2BAAa,gBAHP;AAINE,uBAAS;AAJH,aADE;AAOV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aAPN;AAYV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aAZL;AAiBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENR,uBAAS,EAAE8lB,QAAQ,IAAV,EAFH,EAEqB;AAC3BL,2BAAa,8CAHP;AAINE,uBAAS;AAJH,aAjBE;AAuBV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,qCAHU;AAIvBE,uBAAS;AAJc,aAvBf;AA6BV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aA7BN;AAmCV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRT,uBAAS,EAAE8lB,QAAQ,IAAV,EAHD,EAGmB;AAC3BL,2BAAa,mCAJL;AAKRE,uBAAS;AALD;AAnCA;AAHR,SADI;AAgDV,iBAAS;AACPnlB,gBAAM,QADC;AAEPilB,uBAAa,0BAFN;AAGPF,sBAAY;AACV,oBAAQ;AACN/kB,oBAAM,QADA;AAENR,uBAAS,EAAE8lB,QAAQ,IAAV,EAFH,EAEqB;AAC3BL,2BAAa,mBAHP;AAINE,uBAAS;AAJH,aADE;AAOV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aAPN;AAYV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aAZL;AAiBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAjBE;AAsBV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,wCAHU;AAIvBE,uBAAS;AAJc,aAtBf;AA4BV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aA5BN;AAkCV,sBAAU;AACRnlB,oBAAM,SADE;AAERR,uBAAS,EAAE8lB,QAAQ,IAAV,EAFD,EAEmB;AAC3BL,2BAAa,qCAHL;AAIRhlB,sBAAQ,UAJA;AAKRklB,uBAAS;AALD;AAlCA;AAHL,SAhDC;AA8FV,gBAAQ;AACNnlB,gBAAM,QADA;AAENilB,uBAAa,uBAFP;AAGNF,sBAAY;AACV,oBAAQ;AACN/kB,oBAAM,QADA;AAENR,uBAAS,EAAE8lB,QAAQ,IAAV,EAFH,EAEqB;AAC3BL,2BAAa,uBAHP;AAINE,uBAAS;AAJH,aADE;AAOV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aAPN;AAYV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS,UAHI,CAGO;AAHP,aAZL;AAiBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAjBE;AAsBV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,uCAHU;AAIvBE,uBAAS;AAJc,aAtBf;AA4BV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aA5BN;AAkCV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BAAa,yDAHL;AAIRE,uBAAS;AAJD,aAlCA;AAwCV,uBAAWxtB,OAAOC,MAAP,CAAc,EAAd,EAAkB9G,IAAI4/D,eAAtB,EAAuC;AAChDzrC,2BACE;AAF8C,aAAvC;AAxCD;AAHN,SA9FE;AA+IV,iBAAS;AACP;AACAjlB,gBAAM,QAFC;AAGPilB,uBAAa,kCAHN;AAIPF,sBAAY;AACV,oBAAQ;AACN/kB,oBAAM,QADA;AAENilB,2BAAa,mBAFP;AAGNE,uBAAS;AAHH,aADE;AAMV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aANN;AAWV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aAXL;AAgBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAhBE;AAqBV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,wCAHU;AAIvBE,uBAAS;AAJc,aArBf;AA2BV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aA3BN;AAiCV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BAAa,0DAHL;AAIRE,uBAAS;AAJD;AAjCA;AAJL,SA/IC;AA4LV,gBAAQ;AACN;AACAnlB,gBAAM,QAFA;AAGNilB,uBAAa,oCAHP;AAINF,sBAAY;AACV,oBAAQ;AACN/kB,oBAAM,QADA;AAENilB,2BAAa,kBAFP;AAGNE,uBAAS;AAHH,aADE;AAMV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aANN;AAWV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aAXL;AAgBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAhBE;AAqBV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,uCAHU;AAIvBE,uBAAS;AAJc,aArBf;AA2BV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aA3BN;AAiCV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BAAa,yDAHL;AAIRE,uBAAS;AAJD;AAjCA;AAJN,SA5LE;AAyOV,sBAAc;AACZnlB,gBAAM,QADM;AAEZilB,uBAAa,sBAFD;AAGZF,sBAAY;AACV,oBAAQ;AACN/kB,oBAAM,QADA;AAENilB,2BAAa,wBAFP;AAGNE,uBAAS;AAHH,aADE;AAMV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aANN;AAWV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aAXL;AAgBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAhBE;AAqBV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,6CAHU;AAIvBE,uBAAS;AAJc,aArBf;AA2BV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aA3BN;AAiCV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BACE,+DAJM;AAKRE,uBAAS;AALD;AAjCA;AAHA,SAzOJ;AAsRV,mBAAW;AACTnlB,gBAAM,QADG;AAETilB,uBAAa,0DAFJ;AAGTF,sBAAY;AACV,oBAAQ;AACN/kB,oBAAM,QADA;AAENilB,2BAAa,qBAFP;AAGNE,uBAAS;AAHH,aADE;AAMV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aANN;AAWV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aAXL;AAgBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAhBE;AAqBV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,0CAHU;AAIvBE,uBAAS;AAJc,aArBf;AA2BV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aA3BN;AAiCV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BACE,4DAJM;AAKRE,uBAAS;AALD;AAjCA;AAHH,SAtRD;AAmUV,mBAAW;AACT;AACAnlB,gBAAM,QAFG;AAGTilB,uBACE,2FAJO;AAKTF,sBAAY;AACV,4BAAgB;AACd/kB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aADN;AAMV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aANL;AAWV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAXE;AAgBV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,0CAHU;AAIvBE,uBAAS;AAJc,aAhBf;AAsBV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aAtBN;AA4BV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BAAa,4CAHL;AAIRE,uBAAS;AAJD;AA5BA;AALH,SAnUD;AA4WV,qBAAa;AACX;AACAnlB,gBAAM,QAFK;AAGXilB,uBACE,2FAJS;AAKXF,sBAAY;AACV,4BAAgB;AACd/kB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aADN;AAMV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aANE;AAWV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aAXL;AAgBV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,6CAHU;AAIvBE,uBAAS;AAJc,aAhBf;AAsBV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aAtBN;AA4BV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BAAa,+CAHL;AAIRE,uBAAS;AAJD;AA5BA;AALD,SA5WH;AAqZV,mBAAW;AACT;AACAnlB,gBAAM,QAFG;AAGTilB,uBACE,2FAJO;AAKTF,sBAAY;AACV,4BAAgB;AACd/kB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aADN;AAMV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aANL;AAWV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAXE;AAgBV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,0CAHU;AAIvBE,uBAAS;AAJc,aAhBf;AAsBV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aAtBN;AA4BV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BAAa,4CAHL;AAIRE,uBAAS;AAJD;AA5BA;AALH,SArZD;AA8bV,qBAAa;AACX;AACAnlB,gBAAM,QAFK;AAGXilB,uBACE,2FAJS;AAKXF,sBAAY;AACV,4BAAgB;AACd/kB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aADN;AAMV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aANL;AAWV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAXE;AAgBV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,6CAHU;AAIvBE,uBAAS;AAJc,aAhBf;AAsBV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aAtBN;AA4BV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BAAa,+CAHL;AAIRE,uBAAS;AAJD;AA5BA;AALD,SA9bH;AAueV,oBAAY;AACV;AACAnlB,gBAAM,QAFI;AAGVilB,uBACE,2FAJQ;AAKVF,sBAAY;AACV,4BAAgB;AACd/kB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aADN;AAMV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aANL;AAWV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAXE;AAgBV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,2CAHU;AAIvBE,uBAAS;AAJc,aAhBf;AAsBV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aAtBN;AA4BV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BAAa,6CAHL;AAIRE,uBAAS;AAJD;AA5BA;AALF;AAveF;AADF,KAzKF;AA4rBV,gBAAY;AACVJ,kBAAY;AACV,cAAM;AACJ/kB,gBAAM,QADF;AAEJilB,uBAAa,mCAFT;AAGJF,sBAAY;AACV,oBAAQ;AACN/kB,oBAAM,QADA;AAENR,uBAAS,EAAE8lB,QAAQ,IAAV,EAFH,EAEqB;AAC3BL,2BAAa,gBAHP;AAINE,uBAAS;AAJH,aADE;AAOV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aAPN;AAYV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aAZL;AAiBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENR,uBAAS,EAAE8lB,QAAQ,IAAV,EAFH,EAEqB;AAC3BL,2BAAa,8CAHP;AAINE,uBAAS;AAJH,aAjBE;AAuBV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aAvBN;AA6BV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRT,uBAAS,EAAE8lB,QAAQ,IAAV,EAHD,EAGmB;AAC3BL,2BAAa,mCAJL;AAKRE,uBAAS;AALD;AA7BA;AAHR,SADI;AA0CV,kBAAU;AACRnlB,gBAAM,QADE;AAERilB,uBAAa,+BAFL;AAGRF,sBAAY;AACV,oBAAQ;AACN/kB,oBAAM,QADA;AAENR,uBAAS,EAAE8lB,QAAQ,IAAV,EAFH,EAEqB;AAC3BL,2BAAa,oBAHP;AAINE,uBAAS;AAJH,aADE;AAOV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aAPN;AAYV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aAZL;AAiBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAjBE;AAsBV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aAtBN;AA4BV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRT,uBAAS,EAAE8lB,QAAQ,IAAV,EAHD,EAGmB;AAC3BL,2BAAa,sCAJL;AAKRE,uBAAS;AALD;AA5BA;AAHJ,SA1CA;AAkFV,kBAAU;AACRnlB,gBAAM,QADE;AAERilB,uBAAa,+BAFL;AAGRF,sBAAY;AACV,oBAAQ;AACN/kB,oBAAM,QADA;AAENR,uBAAS,EAAE8lB,QAAQ,IAAV,EAFH,EAEqB;AAC3BL,2BAAa,oBAHP;AAINE,uBAAS;AAJH,aADE;AAOV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aAPN;AAYV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aAZL;AAiBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAjBE;AAsBV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRT,uBAAS,EAAE8lB,QAAQ,IAAV,EAHD,EAGmB;AAC3BL,2BAAa,sCAJL;AAKRE,uBAAS;AALD;AAtBA;AAHJ,SAlFA;AAoHV,gBAAQ;AACNnlB,gBAAM,QADA;AAENilB,uBAAa,uBAFP;AAGNF,sBAAY;AACV,oBAAQ;AACN/kB,oBAAM,QADA;AAENR,uBAAS,EAAE8lB,QAAQ,IAAV,EAFH,EAEqB;AAC3BL,2BAAa,uBAHP;AAINE,uBAAS;AAJH,aADE;AAOV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aAPN;AAYV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS,UAHI,CAGO;AAHP,aAZL;AAiBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAjBE;AAsBV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aAtBN;AA4BV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BAAa,yDAHL;AAIRE,uBAAS;AAJD,aA5BA;AAkCV,uBAAWxtB,OAAOC,MAAP,CAAc,EAAd,EAAkB9G,IAAIggE,eAAtB,EAAuC;AAChD7rC,2BACE;AAF8C,aAAvC;AAlCD;AAHN,SApHE;AA+JV,iBAAS;AACP;AACAjlB,gBAAM,QAFC;AAGPilB,uBAAa,kCAHN;AAIPF,sBAAY;AACV,oBAAQ;AACN/kB,oBAAM,QADA;AAENilB,2BAAa,mBAFP;AAGNE,uBAAS;AAHH,aADE;AAMV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aANN;AAWV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aAXL;AAgBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAhBE;AAqBV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aArBN;AA2BV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BAAa,0DAHL;AAIRE,uBAAS;AAJD;AA3BA;AAJL,SA/JC;AAsMV,gBAAQ;AACN;AACAnlB,gBAAM,QAFA;AAGNilB,uBAAa,oCAHP;AAINF,sBAAY;AACV,oBAAQ;AACN/kB,oBAAM,QADA;AAENilB,2BAAa,kBAFP;AAGNE,uBAAS;AAHH,aADE;AAMV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aANN;AAWV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aAXL;AAgBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAhBE;AAqBV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aArBN;AA2BV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BAAa,yDAHL;AAIRE,uBAAS;AAJD;AA3BA;AAJN,SAtME;AA6OV,kBAAU;AACR;AACAnlB,gBAAM,QAFE;AAGRilB,uBAAa,qBAHL;AAIRF,sBAAY;AACV,oBAAQ;AACN/kB,oBAAM,QADA;AAENilB,2BAAa,oBAFP;AAGNE,uBAAS;AAHH,aADE;AAMV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,mCAFC;AAGdE,uBAAS;AAHK,aANN;AAWV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aAXN;AAgBV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aAhBL;AAqBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aArBE;AA0BV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,yCAHU;AAIvBE,uBAAS;AAJc,aA1Bf;AAgCV,0BAAc;AACZnlB,oBAAM,SADM;AAEZC,sBAAQ,UAFI;AAGZglB,2BACE,8KAJU;AAKZE,uBAAS;AALG,aAhCJ;AAuCV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aAvCN;AA6CV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BACE,2DAJM;AAKRE,uBAAS;AALD;AA7CA;AAJJ,SA7OA;AAuSV,sBAAc;AACZnlB,gBAAM,QADM;AAEZilB,uBAAa,sBAFD;AAGZF,sBAAY;AACV,oBAAQ;AACN/kB,oBAAM,QADA;AAENilB,2BAAa,wBAFP;AAGNE,uBAAS;AAHH,aADE;AAMV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aANN;AAWV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aAXL;AAgBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAhBE;AAqBV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,6CAHU;AAIvBE,uBAAS;AAJc,aArBf;AA2BV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aA3BN;AAiCV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BACE,+DAJM;AAKRE,uBAAS;AALD;AAjCA;AAHA,SAvSJ;AAoVV,oBAAY;AACVnlB,gBAAM,QADI;AAEVilB,uBAAa,oBAFH;AAGVF,sBAAY;AACV,oBAAQ;AACN/kB,oBAAM,QADA;AAENilB,2BAAa,sBAFP;AAGNE,uBAAS;AAHH,aADE;AAMV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aANN;AAWV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aAXL;AAgBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAhBE;AAqBV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aArBN;AA2BV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BACE,6DAJM;AAKRE,uBAAS;AALD;AA3BA;AAHF,SApVF;AA2XV,oBAAY;AACVnlB,gBAAM,QADI;AAEVilB,uBAAa,gDAFH;AAGVF,sBAAY;AACV,oBAAQ;AACN/kB,oBAAM,QADA;AAENilB,2BAAa,sBAFP;AAGNE,uBAAS;AAHH,aADE;AAMV,4BAAgB;AACdnlB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aANN;AAWV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aAXL;AAgBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAhBE;AAqBV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aArBN;AA2BV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BACE,6DAJM;AAKRE,uBAAS;AALD;AA3BA;AAHF,SA3XF;AAkaV,mBAAW;AACT;AACAnlB,gBAAM,QAFG;AAGTilB,uBACE,2FAJO;AAKTF,sBAAY;AACV,4BAAgB;AACd/kB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aADN;AAMV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aANL;AAWV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,0CAHU;AAIvBE,uBAAS;AAJc,aAXf;AAiBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAjBE;AAsBV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aAtBN;AA4BV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BAAa,4CAHL;AAIRE,uBAAS;AAJD;AA5BA;AALH,SAlaD;AA2cV,qBAAa;AACX;AACAnlB,gBAAM,QAFK;AAGXilB,uBACE,2FAJS;AAKXF,sBAAY;AACV,4BAAgB;AACd/kB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aADN;AAMV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aANL;AAWV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,6CAHU;AAIvBE,uBAAS;AAJc,aAXf;AAiBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAjBE;AAsBV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aAtBN;AA4BV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BAAa,+CAHL;AAIRE,uBAAS;AAJD;AA5BA;AALD,SA3cH;AAofV,mBAAW;AACT;AACAnlB,gBAAM,QAFG;AAGTilB,uBACE,2FAJO;AAKTF,sBAAY;AACV,4BAAgB;AACd/kB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aADN;AAMV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aANL;AAWV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,0CAHU;AAIvBE,uBAAS;AAJc,aAXf;AAiBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAjBE;AAsBV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aAtBN;AA4BV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BAAa,4CAHL;AAIRE,uBAAS;AAJD;AA5BA;AALH,SApfD;AA6hBV,qBAAa;AACX;AACAnlB,gBAAM,QAFK;AAGXilB,uBACE,2FAJS;AAKXF,sBAAY;AACV,4BAAgB;AACd/kB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aADN;AAMV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aANL;AAWV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,6CAHU;AAIvBE,uBAAS;AAJc,aAXf;AAiBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAjBE;AAsBV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aAtBN;AA4BV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BAAa,+CAHL;AAIRE,uBAAS;AAJD;AA5BA;AALD,SA7hBH;AAskBV,oBAAY;AACV;AACAnlB,gBAAM,QAFI;AAGVilB,uBACE,2FAJQ;AAKVF,sBAAY;AACV,4BAAgB;AACd/kB,oBAAM,QADQ;AAEdilB,2BAAa,iCAFC;AAGdE,uBAAS;AAHK,aADN;AAMV,2BAAe;AACbnlB,oBAAM,QADO;AAEbilB,2BAAa,+CAFA;AAGbE,uBAAS;AAHI,aANL;AAWV,qCAAyB;AACvBnlB,oBAAM,SADiB;AAEvBC,sBAAQ,UAFe;AAGvBglB,2BAAa,2CAHU;AAIvBE,uBAAS;AAJc,aAXf;AAiBV,oBAAQ;AACNnlB,oBAAM,QADA;AAENilB,2BAAa,8CAFP;AAGNE,uBAAS;AAHH,aAjBE;AAsBV,4BAAgB;AACdnlB,oBAAM,SADQ;AAEdC,sBAAQ,UAFM;AAGdglB,2BAAa,wBAHC;AAIdE,uBAAS;AAJK,aAtBN;AA4BV,sBAAU;AACRnlB,oBAAM,SADE;AAERC,sBAAQ,UAFA;AAGRglB,2BAAa,6CAHL;AAIRE,uBAAS;AAJD;AA5BA;AALF;AAtkBF;AADF;AA5rBF;AAJC,CAAf;;AAqzCA;AACA;AACA;;;;;;;;;AASAr0B,IAAI8/D,mBAAJ,GAA0B,6BAAqB;AAC7C,MAAM/B,cAAc/0D,MAAM2+E,iBAAN,CAApB;AACA,MAAI;AACF5pB,gBAAYrvD,OAAZ,CAAoB44E,oBAApB,GAA2C,IAA3C;AACAvpB,gBAAYx2C,KAAZ,CAAkB0M,UAAlB,CAA6BphB,KAA7B,CAAmCnE,OAAnC,GAA6C;AAC3C;AACA;AACA;AACA;AACAg5E,uBAAiB,EAAEE,OAAO,eAAT;AAL0B,KAA7C;AAOA7pB,gBAAYx2C,KAAZ,CAAkB0M,UAAlB,CAA6BwsD,WAA7B,GAA2C;AACzCvxE,YAAM,QADmC;AAEzCshD,aAAO;AAFkC,KAA3C;AAIAuN,gBAAYx2C,KAAZ,CAAkB0M,UAAlB,CAA6BhW,MAA7B,GAAsC;AACpC/O,YAAM,SAD8B;AAEpCshD,aAAO,SAF6B;AAGpCrhD,cAAQ;AAH4B,KAAtC;AAKD,GAlBD,CAkBE,OAAO8N,GAAP,EAAY;AACZxf,YAAQiX,KAAR,CAAc,4BAAd,EAA4CuI,GAA5C;AACD;AACD,SAAO;AACLuzC,WAAO,mBADF;AAELthD,UAAM,QAFD;AAGLilB,iBACE,6EAJG;AAKLzlB,aAAS;AACP24E,yBAAmB,IADZ;AAEPC,4BAAsB,IAFf;AAGPC,qCAA+B,IAHxB;AAIPC,qCAA+B,IAJxB;AAKPC,6BAAuB,IALhB;AAMPL,wBAAkB,IANX;AAOPhoB,0BAAoB;AAPb,KALJ,EAaF;AACHnrC,gBAAY;AACV,iBAAW8pC;AADD;AAdP,GAAP;AAkBD,CAzCD;AA0CA;AACA;;;;AAIA/9D,IAAIy2B,mBAAJ,GAA0B,YAAM;AAC9B,MAAIoxD,uBAAJ;AACA;AACA,WAASC,cAAT,CAAwBC,iBAAxB,EAA2C;AACzC,QAAM1kE,OAAO,EAAb;AACA,QAAM3U,UAAUq5E,kBAAkBxgE,KAAlB,CAAwB0M,UAAxC;AACAptB,WAAOuH,IAAP,CAAYM,OAAZ,EAAqBoB,OAArB,CAA6B,eAAO;AAClCuT,WAAKpiB,GAAL,IAAYyN,QAAQzN,GAAR,EAAaozB,OAAzB;AACD,KAFD;AAGA,WAAO,CAAChR,IAAD,CAAP;AACD;AACD,WAAS2kE,eAAT,CAAyB70E,IAAzB,EAA+B;AAC7B,QAAIA,KAAKjE,IAAL,KAAc,QAAlB,EAA4B,OAAOiE,KAAKkhB,OAAL,IAAgB,EAAvB,CADC,CAC0B;AACvD,QAAIlhB,KAAKjE,IAAL,KAAc,QAAlB,EAA4B,OAAOiE,KAAKkhB,OAAL,IAAgB,CAAvB,CAFC,CAEyB;AACtD,QAAIlhB,KAAKjE,IAAL,KAAc,SAAlB,EAA6B,OAAOiE,KAAKkhB,OAAL,IAAgB,KAAvB,CAHA,CAG8B;AAC3D,WAAO,EAAP;AACD;AACD,WAAS4zD,iBAAT,CAA2Bh0D,UAA3B,EAAuCi0D,QAAvC,EAAiD;AAC/CrhF,WAAOuH,IAAP,CAAY6lB,UAAZ,EAAwBnkB,OAAxB,CAAgC,+BAAuB;AACrD,UAAIq4E,wBAAwB,UAA5B,EAAwCN,iBAAiB,OAAjB;AACxC,UAAIM,wBAAwB,UAA5B,EAAwCN,iBAAiB,OAAjB;AACxC;AACA;;AAEA,UAAM10E,OAAO8gB,WAAWk0D,mBAAX,CAAb;AACA,UAAIh1E,KAAK8gB,UAAT,EAAqB;AACnBi0D,iBAASC,mBAAT,IAAgCF,kBAAkB90E,KAAK8gB,UAAvB,EAAmC,EAAnC,CAAhC;AACD,OAFD,MAEO,IAAIk0D,wBAAwB,SAA5B,EAAuC;AAC5C;AACA;AACA,YAAIN,mBAAmB,OAAvB,EAAgC;AAC9BK,mBAASx5E,OAAT,GAAmBo5E,eAAe9nF,IAAI4/D,eAAnB,CAAnB;AACD,SAFD,MAEO,IAAIioB,mBAAmB,OAAvB,EAAgC;AACrCK,mBAASx5E,OAAT,GAAmBo5E,eAAe9nF,IAAIggE,eAAnB,CAAnB;AACD,SAFM,MAEA;AACL,gBAASt8D,EAAT,gEAAoE4B,KAAKC,SAAL,CAClE0uB,UADkE,CAApE,YAEQk0D,mBAFR;AAGD;AACF,OAZM,MAYA;AACLD,iBAASC,mBAAT,IAAgCH,gBAAgB70E,IAAhB,CAAhC;AACD;AACF,KAxBD;AAyBA,WAAO+0E,QAAP;AACD;AACD,MAAI7kE,OAAO,EAAEsU,SAAS33B,IAAIqI,QAAJ,CAAasvB,OAAxB,EAAX,CA7C8B,CA6CiB;AAC/CswD,oBAAkBjoF,IAAIqI,QAAJ,CAAa4rB,UAA/B,EAA2C5Q,IAA3C;AACA,SAAOA,IAAP;AACD,CAhDD;;AAkDA;AACA;AACArjB,IAAIy2B,mBAAJ;;AAEA;AACA;AACA97B,OAAOC,OAAP,GAAiBoF,GAAjB;;;;;;;;ACjjDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,IAAMrE,SAASZ,QAAQ,eAAR,CAAf;AACA,IAAMyI,OAAOzI,QAAQ,aAAR,CAAb;AACA,IAAMowC,YAAYpwC,QAAQ,kBAAR,CAAlB;;AAEA;AACA;AACA,IAAM6C,MAAM,KAAZ;;AAEA;AACA;AACA,IAAIoC,MAAMrE,OAAOoI,SAAP,CAAiBpJ,OAAOgD,EAAxB,CAAV;AACA,IAAIe,QAAQ/C,OAAOgD,WAAP,CAAmBqB,GAAnB,CAAZ;;AAEA;AACA;AACA;;;AAGAA,IAAIkgE,gBAAJ;AAAA,qEAAuB,iBAAM3jE,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACb0hE,oBADa,GACA1hE,IADA,CACb0hE,QADa;AAAA;AAAA;AAAA,mBAGEA,SAASlvD,IAAT,EAHF;;AAAA;AAGfq5E,oBAHe;AAIb/kE,gBAJa,GAIN7f,KAAKuD,KAAL,CAAWqhF,QAAX,CAJM;AAKb3jF,mBALa,GAKH,IALG;AAAA,6CAMZ,EAAEA,gBAAF,EAAW07D,cAAc98C,IAAzB,EANY;;AAAA;AAAA;AAAA;AAAA,6CAQZ,EAAE5e,SAAS,KAAX,EAAkBiQ,kBAAlB,EARY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;;;;;;;;;;;;;;;;AAgBA1U,IAAIugE,cAAJ,GAAqB,UAAC8nB,eAAD,EAAkBrqB,SAAlB,EAAgC;AACnD,MAAI31D,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAf;;AAEA;AACA,MAAIu5C,cAAc,MAAlB,EAA0B31D,WAAWggF,eAAX;;AAE1B;AACA,MAAIrqB,cAAc,iBAAlB,EAAqC;AACnC;AACA;AACA,QAAIsqB,mBAAmB,CAAvB;AACAjgF,aAASktB,QAAT,CAAkBrmB,IAAlB,CAAuBR,OAAvB,GAAiC25E,gBAAgB35E,OAAhB,CAAwBoO,MAAxB,CAA+B,aAAK;AACnE;AACA,UAAI7H,EAAEwrE,WAAF,KAAkB,EAAtB,EAA0B,OAAO,IAAP;AAC1B;AACA,UAAIxrE,EAAEpC,KAAF,KAAY,EAAhB,EAAoB;AAClB,YAAIy1E,mBAAmB,CAAvB,EAA0B;AACxB;AACAA;AACA,iBAAO,IAAP;AACD,SAJD,MAIO;AACL;AACA,iBAAO,KAAP;AACD;AACF;AACD;AACA,aAAO,IAAP;AACD,KAhBgC,CAAjC;AAiBA;AACA5pF,UAAME,SAAN,CAAgB,mBAAhB,EAAqC;AACnC2hF,wBAAkB8H,gBAAgB35E;AADC,KAArC;AAGA;AACArG,aAASktB,QAAT,CAAkBrmB,IAAlB,CAAuBR,OAAvB,GAAiCrG,SAASktB,QAAT,CAAkBrmB,IAAlB,CAAuBR,OAAvB,CAA+BoO,MAA/B,CAC/B;AAAA,aAAK,CAAC7H,EAAEgJ,MAAR;AAAA,KAD+B,CAAjC;AAGA;AACA5V,aAASktB,QAAT,CAAkBrmB,IAAlB,CAAuBR,OAAvB,GAAiCrG,SAASktB,QAAT,CAAkBrmB,IAAlB,CAAuBR,OAAvB,CAA+BL,GAA/B,CAAmC,aAAK;AACvE,UAAI4G,EAAEwrE,WAAN,EAAmB;AACjBxrE,UAAEpC,KAAF,GAAUoC,EAAEwrE,WAAZ;AACAxrE,UAAEwrE,WAAF,GAAgB,EAAhB;AACD;AACD,aAAOxrE,CAAP;AACD,KANgC,CAAjC;AAOD;;AAED;AACA,MAAI+oD,cAAc,iBAAlB,EAAqC;AACnC;AACA;AACA,QAAIsqB,oBAAmB,CAAvB;AACAjgF,aAAS0tB,QAAT,CAAkB7mB,IAAlB,CAAuBR,OAAvB,GAAiC25E,gBAAgB35E,OAAhB,CAAwBoO,MAAxB,CAA+B,aAAK;AACnE;AACA,UAAI7H,EAAEwrE,WAAF,KAAkB,EAAtB,EAA0B,OAAO,IAAP;AAC1B;AACA,UAAIxrE,EAAEpC,KAAF,KAAY,EAAhB,EAAoB;AAClB,YAAIy1E,oBAAmB,CAAvB,EAA0B;AACxB;AACAA;AACA,iBAAO,IAAP;AACD,SAJD,MAIO;AACL;AACA,iBAAO,KAAP;AACD;AACF;AACD;AACA,aAAO,IAAP;AACD,KAhBgC,CAAjC;AAiBA;AACA5pF,UAAME,SAAN,CAAgB,mBAAhB,EAAqC;AACnCgiF,wBAAkByH,gBAAgB35E;AADC,KAArC;AAGA;AACArG,aAAS0tB,QAAT,CAAkB7mB,IAAlB,CAAuBR,OAAvB,GAAiCrG,SAAS0tB,QAAT,CAAkB7mB,IAAlB,CAAuBR,OAAvB,CAA+BoO,MAA/B,CAC/B;AAAA,aAAK,CAAC7H,EAAEgJ,MAAR;AAAA,KAD+B,CAAjC;AAGA;AACA5V,aAAS0tB,QAAT,CAAkB7mB,IAAlB,CAAuBR,OAAvB,GAAiCrG,SAAS0tB,QAAT,CAAkB7mB,IAAlB,CAAuBR,OAAvB,CAA+BL,GAA/B,CAAmC,aAAK;AACvE,UAAI4G,EAAEwrE,WAAN,EAAmB;AACjBxrE,UAAEpC,KAAF,GAAUoC,EAAEwrE,WAAZ;AACAxrE,UAAEwrE,WAAF,GAAgB,EAAhB;AACD;AACD,aAAOxrE,CAAP;AACD,KANgC,CAAjC;AAOD;AACD;AACA;AACA,SAAO5M,QAAP;AACD,CAxFD;AAyFA;AACA;;;;AAIArI,IAAIwgE,kBAAJ,GAAyB,oBAAY;AACnC,SAAOr1B,UAAU7jC,gBAAV,CAA2BC,QAA3B,CAAP;AACD,CAFD;AAGA;AACA;;AAEAvH,IAAIqgE,gBAAJ,GAAuB,YAAM;AAC3Bl1B,YAAU3jC,uBAAV,GAAoC;AAApC,GACGxC,IADH,CACQ,gBAAQ;AACZ,QAAM45B,WAAWriC,KAAKqiC,QAAtB;AACA,QAAMv2B,WAAW3J,MAAM+lB,QAAN,CAAe,UAAf,CAAjB;AACA,QAAMsa,OAAOv7B,KAAK+B,SAAL,CAAe8C,QAAf,CAAb;AACA,QAAMqrD,OAAO51D,SAASuS,aAAT,CAAuB,GAAvB,CAAb;AACA,QAAMirE,OAAO,IAAIC,IAAJ,CAAS,CAAC,QAAD,EAAWx8C,IAAX,CAAT,CAAb;AACA,QAAMjgC,MAAMgE,IAAI04E,eAAJ,CAAoBF,IAApB,CAAZ;AACA5nB,SAAK92D,IAAL,GAAYkC,GAAZ;AACA40D,SAAK+nB,QAAL,GAAgB78C,QAAhB;AACA9gC,aAAS49E,IAAT,CAAcnrE,WAAd,CAA0BmjD,IAA1B,EATY,CASqB;AACjCA,SAAKioB,KAAL;AACA79E,aAAS49E,IAAT,CAAcE,WAAd,CAA0BloB,IAA1B;AACD,GAbH;AAcD,CAfD;;AAiBA;AACA;AACA/4D,OAAOC,OAAP,GAAiBoF,GAAjB;;;;;;ACvMA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAMrE,SAASZ,QAAQ,eAAR,CAAf;;AAEA;AACA;AACA,IAAM6C,MAAM,KAAZ;AACA,IAAM8F,KAAK,UAAX;;AAEA;AACA;AACA,IAAI1D,MAAMrE,OAAOoI,SAAP,CAAiBpJ,OAAOgD,EAAxB,CAAV;AACA,IAAIe,QAAQ/C,OAAOgD,WAAP,CAAmBqB,GAAnB,CAAZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACArF,OAAOC,OAAP,GAAiBoF,GAAjB","file":"public/scripts/netc-app.js","sourcesContent":["\n// this file generated by NC command\nconst NC_CONFIG = {\n  dataset: \"20248thELATraits\",\n  port: \"3000\",\n  googlea: \"0\"\n};\nif (typeof process === \"object\") module.exports = NC_CONFIG;\nif (typeof window === \"object\") window.NC_CONFIG = NC_CONFIG;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    init-appshell.jsx\n    application shell loaded and rendered in init.jsx\n\n    These are the top-level React components (\"view\").\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// REACT LIBRARIES ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React = require('react');\nconst { Collapse } = require('reactstrap');\nconst { Navbar, NavbarToggler } = require('reactstrap');\nconst { NavbarBrand, Nav, NavItem, NavLink } = require('reactstrap');\nconst { UncontrolledDropdown, DropdownToggle } = require('reactstrap');\nconst { DropdownMenu, DropdownItem } = require('reactstrap');\n//\nconst UNISYS = require('unisys/client');\n\n/// 1. MAIN VIEWS /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst SETTINGS = require('settings');\nconst NetCreate = require('view/netcreate/NetCreate');\n// const AppDefault = require('view/default/AppDefault');\n// const HTMLFrame = require('view/html-frame/HTMLFrame');\n\n/// APPLICATION NAVBAR + ROUTER VIEW //////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** The application shell consists of a navbar implemented with Reactstrap\n *  components.\n */\nclass AppShell extends UNISYS.Component {\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n    // bind handler\n    this.redirect = this.redirect.bind(this);\n    // add UNISYS message for redirects\n    this.HandleMessage('SHELL_REDIRECT', this.redirect);\n  }\n  /** Handle changes in state of his toggle switch */\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  /** Called by SHELL_REDIRECT unisys message */\n  redirect(data) {\n    let { redirect } = data;\n    this.props.history.push(redirect);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Draw top navbar w/ menus and the <NetCreate> view\n   */\n  render(props) {\n    const { route, routeProps } = SETTINGS.GetRouteInfoFromURL(window.location.href);\n    const isLocalHost = SETTINGS.IsLocalHost();\n    return (\n      <div\n        className=\"--AppShell\"\n        style={{\n          display: 'flex',\n          flexFlow: 'column nowrap',\n          width: '100%',\n          height: '100vh'\n        }}\n      >\n        <Navbar\n          className=\"--AppShell_Navbar\"\n          fixed=\"top\"\n          light\n          expand=\"md\"\n          style={{ backgroundColor: '#f0f0f0', padding: '4px 10px' }}\n        >\n          <NavbarBrand href=\"#\" style={{ padding: '0' }}>\n            <img src=\"images/netcreate-logo.svg\" height=\"26px\" />\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            {/*/ (1) add navigation links here /*/}\n            <Nav className=\"ml-auto\" navbar hidden={!isLocalHost}>\n              {/* extra menu items\n                  <NavItem>\n                    <NavLink to=\"/d3forcedemo\" tag={RRNavLink} replace>D3 ForceDemo</NavLink>\n                  </NavItem>\n                  <UncontrolledDropdown direction=\"right\" nav size=\"sm\">\n                    <DropdownToggle>\n                      Extras\n                    </DropdownToggle>\n                    <DropdownMenu>\n                      <DropdownItem>\n                        <NavLink to=\"/dev-react\" tag={RRNavLink} replace>dev-react</NavLink>\n                      </DropdownItem>\n                      <DropdownItem>\n                        <NavLink to=\"/dev-unisys\" tag={RRNavLink} replace>dev-unisys</NavLink>\n                      </DropdownItem>\n                      <DropdownItem>\n                        <NavLink to=\"/dev-db\" tag={RRNavLink} replace>dev-db</NavLink>\n                      </DropdownItem>\n                      <DropdownItem>\n                        <NavLink to=\"/dev-session\" tag={RRNavLink} replace>dev-session</NavLink>\n                      </DropdownItem>\n                      <DropdownItem>\n                        <NavLink to=\"/simple\" tag={RRNavLink} replace>SimpleHTML Example</NavLink>\n                      </DropdownItem>\n                      <DropdownItem>\n                        <NavLink to=\"/vocabulary\" tag={RRNavLink} replace>Network Vocabulary</NavLink>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n              */}\n            </Nav>\n          </Collapse>\n        </Navbar>\n        {/* <div style={{ height: '3.5em' }}> */}\n        {/*/ add space underneath the fixed navbar /*/}\n        {/* </div> */}\n        <NetCreate />\n      </div>\n    );\n  } // render()\n} // AppShell()\n\n/// EXPORT REACT CLASS ////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = AppShell;\n","/* eslint-disable no-debugger */\nif (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    init.jsx\n    system startup, loaded by app/assets/index.html at end of body.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst DBG = false;\n\n/// SYSTEM-WIDE LANGUAGE EXTENSIONS ///////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// These are loaded in init to make sure they are available globally!\n/// You do not need to copy these extensions to your own module files\nrequire('babel-polyfill'); // enables regenerators for async/await\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React = require('react');\nconst ReactDOM = require('react-dom');\n\n/// SYSTEM MODULES ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// demo: require system modules; this will likely be removed\nconst SETTINGS = require('settings');\nconst UNISYS = require('unisys/client');\nconst AppShell = require('init-appshell');\n\n/// UNISYS LIFECYCLE LOADER ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// When the DOM is loaded, initialize UNISYS\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.groupCollapsed('init.jsx bootstrap');\n  console.log(\n    '%cINIT %cDOMContentLoaded. Starting UNISYS Lifecycle!',\n    'color:blue',\n    'color:auto'\n  );\n  m_SetLifecycleScope();\n  (async () => {\n    await UNISYS.JoinNet(); // UNISYS socket connection (that is all)\n    await UNISYS.EnterApp(); // TEST_CONF, INITIALIZE, LOADASSETS, CONFIGURE\n    await m_RenderApp(); // compose React view\n    await UNISYS.SetupDOM(); // DOM_READY\n    await UNISYS.SetupRun(); // RESET, START, APP_READY, RUN\n    console.log(\n      '%cINIT %cUNISYS Lifecycle Initialization Complete',\n      'color:blue',\n      'color:auto'\n    );\n    console.groupEnd();\n  })();\n});\n\n/// UNISYS LIFECYCLE CLOSE EVENT //////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** this custom event accesses post-run lifecycles defined for 'DOMContentLoaded'\n *  `event` is originated by `comment-netmessage-class.GlobalOfflineMode\n *  with a custom event message coming from client-network.m_ResetHearbeatTimer\n *  This is so we can display an error to the user explaining the disconnect\n */\ndocument.addEventListener('UNISYSDisconnect', event => {\n  console.log(\n    '%cDISCONNECT %cUNISYSDisconnect. Closing UNISYS Lifecycle!',\n    'color:blue',\n    'color:auto'\n  );\n  // This call will fail if the server is disconnected.\n  UNISYS.Log('Server disconnected with error', event);\n  // hack a local module for now\n  let UDATA = UNISYS.NewDataLink({});\n  UDATA.LocalCall('DISCONNECT', event);\n  (async () => {\n    await UNISYS.ServerDisconnect(); // UNISYS has dropped server\n    console.log(\n      '%cDISCONNECT %cUNISYSDisconnect Complete',\n      'color:blue',\n      'color:auto'\n    );\n  })();\n});\n\n/// LIFECYCLE HELPERS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** DEPRECATED? This may no longer actually be needed as it\n *  helper to infer view module scope before module is routed lated (!)\n *  scope is really the 'path' of the current route (e.g. #)\n */\nfunction m_SetLifecycleScope() {\n  // set scope for UNISYS execution\n  const url = window.location.href;\n  const { scope } = SETTINGS.GetRouteInfoFromURL(url);\n  if (scope) {\n    if (DBG) console.log(`Lifecycle Module Scope is ${scope}`);\n    UNISYS.SetScope(scope);\n  } else {\n    console.warn(`m_SetLifecycleScope() could not match scope ${url}`);\n  }\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Wraps ReactDOM.render() in a Promise. Execution continues in <AppShell>\n */\nfunction m_RenderApp() {\n  if (DBG)\n    console.log('%cINIT %cReactDOM.render() begin', 'color:blue', 'color:auto');\n  return new Promise((resolve, reject) => {\n    try {\n      ReactDOM.render(<AppShell />, document.querySelector('#app-container'), () => {\n        console.log(\n          '%cINIT %cReactDOM.render() complete',\n          'color:blue',\n          'color:auto'\n        );\n        resolve();\n      });\n    } catch (e) {\n      // eslint-disable-next-line no-alert\n      alert(\n        `m_RenderApp() Lifecycle Error.\\nOpen Javascript Console, then press \"OK\" for for debugging details.`\n      );\n      debugger;\n    }\n  }); // promise\n}\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  LOCAL SETTINGS\n  utility function for managing local\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// GLOBAL NETWORK INFO (INJECTED ON INDEX) ///////////////////////////////////\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// NOTE: server-embedded properties are not defined for simple html apps\nvar EJSPROPS = window.NC_UNISYS || {};\n\n/// STORAGE ///////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet S = {};\nlet DATE = new Date();\nlet RELOAD_CHECK = 0;\nlet RELOAD_TIMER = null;\n\n/// MAIN GETTER SETTER FUNCTION  //////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** settings.js returns a function as its module.exports value so\n    syntax like let a = SETTINGS['key'] can be used.\n */\nlet MOD = (a, b) => {\n  if (a === undefined) throw 'SETTINGS requires key or key,value parms';\n  if (typeof a !== 'string') throw 'SETTINGS parm1 must be key string';\n\n  if (b === undefined) {\n    return S[a];\n  } else {\n    S[a] = b;\n    return b;\n  }\n};\n\n/// ROUTE UTILITIES ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst ROUTES_PARAMS = {\n  '/': { scope: 'NetCreate' },\n  '/edit': { scope: 'NetCreate', plist: ['token'] },\n  '/simple': { scope: 'HTMLFrame' }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Return matching routed information. Looks part after /#/ as route\n *  information and returns the routing information for UNISYS routing\n *  of components and setting UNISYS module scope (used for client exec)\n */\nMOD.GetRouteInfoFromURL = (url = window.location.href) => {\n  const fn = 'GetRouteInfoFromURL:';\n  // routestring is everything after the leading /#/ (not same as URL.hash)\n  const hrefParts = url.split('/#/');\n  const hrefString = hrefParts.length === 1 ? '' : hrefParts[1];\n  // pluck querystring (e.g. ?admin=true) off the end\n  const stringParts = hrefString.split('?');\n  let routeString = '';\n  let queryString = '';\n  if (stringParts.length === 1) {\n    routeString = stringParts[0];\n  } else if (stringParts.length === 2) {\n    routeString = stringParts[0];\n    queryString = stringParts[1];\n  } else throw Error(`${fn} unexpected url format ${url}`);\n\n  // handle route\n  const routeParameters = routeString.split('/');\n  const [route, ...params] = routeParameters;\n  const key = `/${route}`;\n  const routeInfo = ROUTES_PARAMS[key];\n  const { scope, plist = [] } = routeInfo || {};\n\n  // build the queryVars dictionary\n  const settings = queryString.split('&');\n  const vars = {};\n  for (let i = 0; i < settings.length; i++) {\n    const setting = settings[i];\n    const [key, value] = setting.split('=');\n    vars[key] = value;\n  }\n  // build the routeProps dictionary\n  const dict = {};\n  for (let i = 0; i < plist.length; i++) {\n    const pkey = plist[i];\n    dict[pkey] = params[i];\n  }\n  // return RouteInfo\n  const result = {\n    route: key,\n    scope,\n    routeProps: dict,\n    queryVars: vars\n  };\n  return result;\n};\n\n/// API ///////////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** alternate call to set a key value pair\n */\nMOD.Set = (key, val) => {\n  MOD(key, val);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** alternate call to retrieve a key\n */\nMOD.Get = key => {\n  return MOD(key);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Force Reload if another module was navigated to and we want to ensure the\n    entire browser was refreshed so only one set of app modules is loaded\n */\nMOD.ForceReloadOnNavigation = () => {\n  RELOAD_CHECK++;\n  if (RELOAD_CHECK > 1) {\n    console.warn(`SETTINGS: ForceReloadOnNavigation active. Reloading!`);\n    if (RELOAD_TIMER) clearTimeout(RELOAD_TIMER);\n    RELOAD_TIMER = setTimeout(() => {\n      location.reload();\n    }, 500);\n  } else {\n    console.warn(`SETTINGS: ForceReloadOnNavigation check OK`);\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** test time function\n */\nMOD.CurrentTime = () => {\n  return DATE.toDateString();\n};\n\n/// SERVER-PROVIDED PROPERTIES ////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** searches through the window.NC_UNISYS object that is injected by web page\n    app/static/index.ejs, which contains interesting values from server\n */\nMOD.EJSProp = propName => {\n  if (propName === undefined) return EJSPROPS;\n  return EJSPROPS[propName];\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nMOD.ServerHostName = () => {\n  return EJSPROPS.server.hostname || 'ERROR';\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nMOD.ServerHostIP = () => {\n  return EJSPROPS.server.ip || 'ERROR';\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nMOD.ServerAppURL = suburl => {\n  let ubits = new URL(window.location);\n  let hash = ubits.hash.split('/')[0];\n  // let serverip = MOD.ServerHostIP();\n  let url = `${ubits.protocol}//${ubits.host}/${hash}`;\n  if (typeof suburl === 'string') url += suburl;\n  return url;\n};\n\n/// UTILITIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Joshua added to disable Extras in init-appshell.jsx */\nMOD.IsLocalHost = () => {\n  const ip = MOD.EJSProp('client').ip;\n  return ip.endsWith('127.0.0.1');\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Returns true is the NetCreate app should assume that an administrator is\n *  logged in. Administrators can edit templates. The check is very weak,\n *  relying on browsers running on localhost with the URL parameter.\n *  TODO: will be replacing with \"real\" login system for NetCreate 2.0.\n */\nMOD.IsAdmin = () => {\n  const isLocalHost = MOD.IsLocalHost();\n  const rinfo = MOD.GetRouteInfoFromURL().queryVars || {};\n  const urlHasAdmin = rinfo.admin === 'true';\n  //\n  return isLocalHost && urlHasAdmin;\n};\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  DATASTORE\n  stub for testing module loading\n  eventually will load data from database\n  data.json is { nodes: [ {} ... {} ] }\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst TOML = require('@iarna/toml');\nconst UNISYS = require('unisys/client');\nconst PROMPTS = require('system/util/prompts');\nconst PR = PROMPTS.Pad('Datastore');\nconst NetMessage = require('unisys/common-netmessage-class');\n\n/// CONSTANTS /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = { load: true };\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet DSTOR = UNISYS.NewModule(module.id);\nlet UDATA = UNISYS.NewDataLink(DSTOR);\nlet NCDATA = {};\n\n/// LIFECYCLE /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** establish message handlers during INITIALIZE phase\n */\nDSTOR.Hook('INITIALIZE', () => {\n  // DBUPDATE_ALL is a local call originating from within the app\n  // Used to update the full NCDATA object during template updates\n  UDATA.HandleMessage('DBUPDATE_ALL', function (data) {\n    DSTOR.UpdateDataPromise(data);\n  });\n\n  // DB_UPDATE is a local call originating from within the app\n  // Generally used to update individual nodes and edges\n  UDATA.HandleMessage('DB_UPDATE', function (data) {\n    DSTOR.UpdateServerDB(data);\n  });\n\n  // DB_BATCHUPDATE is a local call originating from within the app\n  // Generally used to update mutliple comments\n  UDATA.HandleMessage('DB_BATCHUPDATE', function (data) {\n    DSTOR.BatchUpdateServerDB(data);\n  });\n\n  // DB_INSERT is a local call originating from within the app\n  // Generally used to add new nodes and edges after an import\n  UDATA.HandleMessage('DB_INSERT', function (data) {\n    DSTOR.InsertServerDB(data);\n  });\n\n  // DB_MERGE is a local call originating from within the app\n  // Generally used to update or add new nodes and edges after an import\n  // Unlike DB_INSERT, it'll update existing nodes/edges\n  UDATA.HandleMessage('DB_MERGE', DSTOR.MergeServerDB);\n\n  UDATA.OnAppStateChange('SESSION', function (decodedData) {\n    let { isValid } = decodedData;\n    console.log(PR, 'Handling SESSION', isValid || '[NO LOGIN TOKEN]');\n    if (isValid) DSTOR.SetSessionGroupID(decodedData);\n  });\n});\n\n/// SESSION ///////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** datastore needs to set NetMessage GroupID property on behalf of SESSIONS\n    because SESSION can't include NetMessage (or vice versa)\n */\nDSTOR.SetSessionGroupID = function (decodedData) {\n  let { token, isValid } = decodedData;\n  if (isValid) {\n    NetMessage.GlobalSetGroupID(token);\n    console.log('setting NetMessage group id', token);\n  } else {\n    console.warn('will not set bad group id:', token);\n  }\n};\n\n/// DB INTERFACE //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Placeholder DATA access function\n */\nDSTOR.Data = function () {\n  return NCDATA;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Write update to database\n */\nDSTOR.UpdateServerDB = function (data) {\n  // check that network is online\n  if (UNISYS.IsStandaloneMode()) {\n    console.warn(PR, `STANDALONE MODE: UpdateServerDB() suppressed!`);\n    return;\n  }\n  // it is!\n  UDATA.Call('SRV_DBUPDATE', data).then(res => {\n    if (res.OK) {\n      console.log(PR, `server db transaction`, data, `success`);\n    } else {\n      console.log(PR, 'error updating server db', res);\n    }\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Write batch updates to database\n */\nDSTOR.BatchUpdateServerDB = function (data) {\n  // check that network is online\n  if (UNISYS.IsStandaloneMode()) {\n    console.warn(PR, `STANDALONE MODE: UpdateServerDB() suppressed!`);\n    return;\n  }\n  // it is!\n  UDATA.Call('SRV_DBBATCHUPDATE', data).then(res => {\n    if (res.OK) {\n      console.log(PR, `server db transaction`, data, `success`);\n    } else {\n      console.log(PR, 'error updating server db', res);\n    }\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** update max node id count for generating new ids\n */\nDSTOR.PromiseCalculateMaxNodeId = function () {\n  return new Promise((resolve, reject) => {\n    UDATA.NetCall('SRV_CALCULATE_MAXNODEID').then(data => {\n      if (data.maxNodeID !== undefined) {\n        if (DBG) console.log(PR, 'server calculated max_node_id', data.maxNodeID);\n        resolve(data.maxNodeID);\n      } else {\n        reject(new Error('unknown error' + JSON.stringify(data)));\n      }\n    });\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** get a unique NodeID\n */\nDSTOR.PromiseNewNodeID = function () {\n  return new Promise((resolve, reject) => {\n    UDATA.NetCall('SRV_DBGETNODEID').then(data => {\n      if (data.nodeID) {\n        if (DBG) console.log(PR, 'server allocated node_id', data.nodeID);\n        resolve(data.nodeID);\n      } else {\n        if (UNISYS.IsStandaloneMode()) {\n          reject(\n            new Error(\n              'STANDALONE MODE: UI should prevent PromiseNewNodeID() from running!'\n            )\n          );\n        } else {\n          reject(new Error('unknown error' + JSON.stringify(data)));\n        }\n      }\n    });\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** get multiple unique NodeIDs\n */\nDSTOR.PromiseNewNodeIDs = function (count) {\n  return new Promise((resolve, reject) => {\n    UDATA.NetCall('SRV_DBGETNODEIDS', { count }).then(data => {\n      if (data.nodeIDs) {\n        if (DBG) console.log(PR, 'server allocated node_id', data.nodeIDs);\n        resolve(data.nodeIDs);\n      } else {\n        reject(new Error('unknown error' + JSON.stringify(data)));\n      }\n    });\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** update max edge id count for generating new ids\n */\nDSTOR.PromiseCalculateMaxEdgeId = function () {\n  return new Promise((resolve, reject) => {\n    UDATA.NetCall('SRV_CALCULATE_MAXEDGEID').then(data => {\n      if (data.maxEdgeID !== undefined) {\n        if (DBG) console.log(PR, 'server calculated max_edge_id', data.maxEdgeID);\n        resolve(data.maxEdgeID);\n      } else {\n        reject(new Error('unknown error' + JSON.stringify(data)));\n      }\n    });\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** get a unique Edge\n */\nDSTOR.PromiseNewEdgeID = function () {\n  return new Promise((resolve, reject) => {\n    UDATA.NetCall('SRV_DBGETEDGEID').then(data => {\n      if (data.edgeID) {\n        if (DBG) console.log(PR, 'server allocated edge_id:', data.edgeID);\n        resolve(data.edgeID);\n      } else {\n        if (UNISYS.IsStandaloneMode()) {\n          reject(\n            new Error(\n              'STANDALONE MODE: UI should prevent PromiseNewEdgeID() from running!'\n            )\n          );\n        } else {\n          reject(new Error('unknown error' + JSON.stringify(data)));\n        }\n      }\n    });\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** get multiple unique EdgeIDs\n */\nDSTOR.PromiseNewEdgeIDs = function (count) {\n  return new Promise((resolve, reject) => {\n    UDATA.NetCall('SRV_DBGETEDGEIDS', { count }).then(data => {\n      if (data.edgeIDs) {\n        if (DBG) console.log(PR, 'server allocated edge_id:', data.edgeIDs);\n        resolve(data.edgeIDs);\n      } else {\n        reject(new Error('unknown error' + JSON.stringify(data)));\n      }\n    });\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** get a unique CommentID\n */\nDSTOR.PromiseNewCommentID = function () {\n  return new Promise((resolve, reject) => {\n    UDATA.NetCall('SRV_DBGETCOMMENTID').then(data => {\n      if (data.comment_id) {\n        if (DBG) console.log(PR, 'server allocated comment_id', data.comment_id);\n        resolve(data.comment_id);\n      } else {\n        if (UNISYS.IsStandaloneMode()) {\n          reject(\n            new Error(\n              'STANDALONE MODE: UI should prevent PromiseNewCommentID() from running!'\n            )\n          );\n        } else {\n          reject(new Error('unknown error' + JSON.stringify(data)));\n        }\n      }\n    });\n  });\n};\n\n/// DATABASE LOADER ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Load default data set from a JSON file in /assets/data\n */\nDSTOR.PromiseJSONFile = function (jsonFile) {\n  if (typeof jsonFile !== 'string') {\n    throw new Error('pass arg <filename_in_assets/data>');\n  }\n  let promise = new Promise((resolve, reject) => {\n    let xobj = new XMLHttpRequest();\n    xobj.addEventListener('load', event => {\n      if (event.target.status === 404) {\n        reject(new Error(`file not found`));\n        return;\n      }\n      let data = event.target.responseText;\n      NCDATA = Object.assign(NCDATA, JSON.parse(data));\n      resolve(NCDATA);\n    });\n    xobj.open('GET', `${jsonFile}`, true);\n    xobj.send();\n  });\n  return promise;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Load default data set from a TOML file in /assets/data\n */\nDSTOR.PromiseTOMLFile = function (tomlFile) {\n  if (typeof tomlFile !== 'string') {\n    throw new Error('pass arg <filename_in_assets/data>');\n  }\n  let promise = new Promise((resolve, reject) => {\n    let xobj = new XMLHttpRequest();\n    xobj.addEventListener('load', event => {\n      if (event.target.status === 404) {\n        reject(new Error(`file not found`));\n        return;\n      }\n      const data = event.target.responseText;\n      const tomlData = Object.assign(NCDATA, TOML.parse(data));\n      resolve(tomlData);\n    });\n    xobj.open('GET', `${tomlFile}`, true);\n    xobj.send();\n  });\n  return promise;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Load D3 Database\n */\nDSTOR.PromiseD3Data = function () {\n  // UDATA.Call() returns a promise\n  return UDATA.Call('SRV_DBGET', {}); // server.js\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Write Template file to Server\n */\nDSTOR.SaveTemplateFile = template => {\n  // UDATA.Call() returns a promise\n  return UDATA.Call('SRV_TEMPLATESAVE', { template }); // server.js\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Get Template File Path.\n    Called by templateEditor-mgr when downloading template file.\n */\nDSTOR.GetTemplateTOMLFileName = () => {\n  return UDATA.Call('SRV_GET_TEMPLATETOML_FILENAME');\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Update database from d3data-formatted object\n */\nDSTOR.UpdateDataPromise = function (d3data) {\n  return new Promise((resolve, reject) => {\n    UDATA.Call('SRV_DBUPDATE_ALL', d3data).then(res => {\n      if (res.OK) {\n        console.log(PR, `database update OK`);\n        resolve(res);\n      } else {\n        reject(new Error(JSON.stringify(res)));\n      }\n    });\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Insert new records into database from d3data-formatted object\n */\nDSTOR.InsertServerDB = function (d3data) {\n  return new Promise((resolve, reject) => {\n    UDATA.Call('SRV_DBINSERT', d3data).then(res => {\n      if (res.OK) {\n        console.log(PR, `database update OK`);\n        resolve(res);\n      } else {\n        reject(new Error(JSON.stringify(res)));\n      }\n    });\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/**\n * API: Add or Insert records into database from d3data-formatted object\n * @param {object} mergeData\n * @param {array} mergeData.nodes\n * @param {array} mergeData.edges\n * @returns\n */\nDSTOR.MergeServerDB = function (mergeData) {\n  return new Promise((resolve, reject) => {\n    UDATA.Call('SRV_DBMERGE', mergeData).then(res => {\n      if (res.OK) {\n        console.log(PR, `database update OK`);\n        resolve(res);\n      } else {\n        reject(new Error(JSON.stringify(res)));\n      }\n    });\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: (WIP) write database from d3data-formatted object\n */\nDSTOR.OverwriteDataPromise = function (d3data) {\n  return new Promise((resolve, reject) => {\n    UDATA.Call('SRV_DBSET', d3data).then(res => {\n      if (res.OK) {\n        console.log(PR, `database set OK`);\n        resolve(res);\n      } else {\n        reject(new Error(JSON.stringify(res)));\n      }\n    });\n  });\n};\n\n/// EXPORT MODULE /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = DSTOR;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Constants\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst CONSTANT = {};\n\nCONSTANT.EDGE_NOT_SET_LABEL = '...';\nCONSTANT.ARROW_DOWN = `\\u2193`;\nCONSTANT.ARROW_UPDOWN = `\\u21F5`;\nCONSTANT.ARROW_RIGHT = `\\u2794`;\n\n// From Glyphicons\n// Update NetCreate.css to set size\nCONSTANT.ICON_PENCIL = (\n  <svg id=\"icon-pencil\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n    <path id=\"pencil\" d=\"M27.414,8.82812l-2.08588,2.08594L21.08588,6.67188l2.08587-2.08594a.99985.99985,0,0,1,1.41425,0l2.828,2.82812A.99986.99986,0,0,1,27.414,8.82812ZM8.08594,19.67188l4.24218,4.24218L23.91406,12.32812,19.67181,8.08594ZM4.27667,27.09863a.50005.50005,0,0,0,.62476.62476l5.92773-2.48023L6.75677,21.1709Z\" />\n  </svg>\n);\nCONSTANT.ICON_VIEW = (\n  < svg id=\"icon-view\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" >\n    <path id=\"eye\" d=\"M30.30762,14.36768C28.25488,12.002,22.751,6.5,16,6.5S3.74512,12.002,1.69336,14.36572a2.49922,2.49922,0,0,0-.001,3.2666C3.74512,19.99805,9.249,25.5,16,25.5s12.25488-5.502,14.30762-7.86768A2.49888,2.49888,0,0,0,30.30762,14.36768ZM9.24042,20.25977A25.33965,25.33965,0,0,1,4.25391,16a25.33613,25.33613,0,0,1,4.98657-4.25977,7.93436,7.93436,0,0,0-.00006,8.51954ZM16,22a6,6,0,1,1,6-6A6.00657,6.00657,0,0,1,16,22Zm6.75952-1.74023a7.93436,7.93436,0,0,0,.00006-8.51954A25.33965,25.33965,0,0,1,27.74609,16,25.33613,25.33613,0,0,1,22.75952,20.25977ZM19,16a3.00014,3.00014,0,1,1-5.80646-1.03174,1.49952,1.49952,0,0,0,1.77472-1.77466A2.97577,2.97577,0,0,1,19,16Z\" />\n  </svg >\n)\n\n/// MODULE EXPORTS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = CONSTANT;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Enumerators\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst ENUM = {};\n// EDITORTYPE handles network edit locking messages\nENUM.EDITORTYPE = {\n  TEMPLATE: 'template',\n  IMPORTER: 'importer',\n  NODE: 'node', // parameter sent with packet, listed here for coverage\n  EDGE: 'edge', // parameter sent with packet, listed here for coverage\n  COMMENT: 'comment'\n};\n// BUILT-IN FIELDS\nENUM.BUILTIN_FIELDS_NODE = [\n  'id',\n  'label',\n  'type',\n  'degrees',\n  'created',\n  'createdBy',\n  'updated',\n  'updatedBy',\n  'revision'\n];\nENUM.BUILTIN_FIELDS_EDGE = [\n  'id',\n  'source',\n  'type',\n  'target',\n  'weight',\n  'degrees',\n  'created',\n  'createdBy',\n  'updated',\n  'updatedBy',\n  'revision',\n  'sourceLabel', // used internally for filters\n  'targetLabel' // used internally for filters\n];\n\n/// MODULE EXPORTS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = ENUM;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Historical Date Utilities\n\n  Used by the URDateField component to parse and format historical dates.\n  Also used in NodeTablea nd EdgeTable for sorting and filtering.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\nimport * as chrono from 'chrono-node';\n\nconst HDATE = {};\n\n/// HISTORICAL CHRONO /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Create a custom parser for BCE/CE dates\n///   ex: erasChrono.parseDate(\"I'll arrive at 2.30AM tomorrow\");\nHDATE.erasChrono = chrono.casual.clone();\nHDATE.erasChrono.parsers.push(\n  {\n  pattern: () => {\n      // match year if \"BC/AD/BCE/CE\" (case insensitive)\n      //   \"10bc\"  -- without space\n      //   \"10 bc\" -- with space\n      return /(\\d+)\\s*(BCE|CE|BC|AD)?/i;\n  },\n  extract: (context, match) => {\n    const year = parseInt(match[1], 10);\n      const era = match[2] ? match[2].toUpperCase() : 'CE'; // default to CE\n    // Adjust the year based on the era\n    const adjustedYear = era === 'BCE' || era === 'BC' ? -year : year;\n    return { year: adjustedYear };\n  }\n  }\n\n  // ALTERNATIVE APPROACH: Any 3 digits is a year\n  //\n  // NOTE: This only works with an UnlikelyFormatFilter override.\n  //       UnlikelyFormatFilter will remove raw numbers\n  //       so if we want to allow 3 digits, then\n  ///      UnlikelyFormatFilter needs to be overriden, otherwise\n  //       the ParsingResults are filtered out.\n  //       Remove lines 10-15 `if (result.text.replace(\" \", \"\").match(/^\\d*(\\.\\d*)?$/)) {`\n  // {\n  //   pattern: () => {\n  //     // match year if more than 3 digits assume CE\n  //     // NOTE: This assumes the string starts with the digits\n  //     return /(\\d{3,})/i;\n  //   },\n  //   extract: (context, match) => {\n  //     const year = parseInt(match[0], 10);\n  //     return { year: year };\n  //   }\n  // },\n);\nHDATE.erasChrono.refiners.push(\n  {\n    refine: (context, results) => {\n      // placeholder if we decide we want to add a refiner\n      return results;\n    }\n  }\n);\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// Use template to define other values, e.g. BC/AD\n// Other ERAS are not currently defined\nHDATE.ERAS = {\n  pre: 'BCE',\n  post: 'CE'\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// `CALENDAR` is not currently used.\nHDATE.CALENDAR = {\n  ISO: 'iso8601',\n  GREGORIAN: 'gregory',\n  JULIAN: 'julian',\n  ISLAMIC: 'islamic',\n  HEBREW: 'hebrew',\n  CHINESE: 'chinese'\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nHDATE.DATEFORMAT = {\n  AS_ENTERED: 'As Entered',\n\n  // MONTH\n  MONTH_ABBR: 'MMM',\n  MONTH_FULL: 'Month',\n  MONTH_NUM: 'M',\n  MONTH_PAD: 'MM',\n\n  // MONTHDAY\n  MONTHDAY_ABBR: 'MMM D',\n  MONTHDAY_FULL: 'Month D',\n  MONTHDAY_NUM: 'M/D',\n  MONTHDAY_PAD: 'MM/DD',\n\n  // YEARMONTHDAY\n  MONTHDAYYEAR_ABBR: 'MMM D, YYYY',\n  MONTHDAYYEAR_FULL: 'Month D, YYYY',\n  MONTHDAYYEAR_NUM: 'M/D/YYYY',\n  MONTHDAYYEAR_PAD: 'MM/DD/YYYY',\n  YEARMONTHDAY_ABBR: 'YYYY MMM D',\n  YEARMONTHDAY_FULL: 'YYYY Month D',\n  YEARMONTHDAY_NUM: 'YYYY/M/D',\n  YEARMONTHDAY_PAD: 'YYYY/MM/DD',\n  HISTORICAL_MONTHDAYYEAR_ABBR: 'MMM D, YYYY CE',\n  HISTORICAL_MONTHDAYYEAR_FULL: 'Month D, YYYY CE',\n  HISTORICAL_MONTHDAYYEAR_NUM: 'M/D/YYYY CE',\n  HISTORICAL_MONTHDAYYEAR_PAD: 'MM/DD/YYYY CE',\n  HISTORICAL_YEARMONTHDAY_ABBR: 'YYYY MMM D CE',\n  HISTORICAL_YEARMONTHDAY_FULL: 'YYYY Month D CE',\n  HISTORICAL_YEARMONTHDAY_NUM: 'YYYY/M/D CE',\n  HISTORICAL_YEARMONTHDAY_PAD: 'YYYY/MM/DD CE',\n\n  // YEARMONTH\n  MONTHYEAR_ABBR: 'MMM YYYY',\n  MONTHYEAR_FULL: 'Month YYYY',\n  MONTHYEAR_NUM: 'M/YYYY',\n  MONTHYEAR_PAD: 'MM/YYYY',\n  YEARMONTH_ABBR: 'YYYY MMM',\n  YEARMONTH_FULL: 'YYYY Month',\n  YEARMONTH_NUM: 'YYYY/M',\n  YEARMONTH_PAD: 'YYYY/MM',\n  HISTORICAL_MONTHYEAR_ABBR: 'MMM YYYY CE',\n  HISTORICAL_MONTHYEAR_FULL: 'Month YYYY CE',\n  HISTORICAL_MONTHYEAR_NUM: 'M/YYYY CE',\n  HISTORICAL_MONTHYEAR_PAD: 'MM/YYYY CE',\n  HISTORICAL_YEARMONTH_ABBR: 'YYYY MMM CE',\n  HISTORICAL_YEARMONTH_FULL: 'YYYY Month CE',\n  HISTORICAL_YEARMONTH_NUM: 'YYYY/M CE',\n  HISTORICAL_YEARMONTH_PAD: 'YYYY/MM CE',\n\n  // YEAR\n  YEAR: 'YYYY',\n  HISTORICALYEAR: 'YYYY CE'\n};\n\n/// UTILITIES //////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nHDATE.u_pad = num => {\n  if (!num) return '';\n  return num.toString().padStart(2, '0');\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nHDATE.u_monthAbbr = num => {\n  const date = new Date(2000, num - 1, 1);\n  return date.toLocaleDateString('default', { month: 'short' });\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nHDATE.u_monthName = num => {\n  const date = new Date(2000, num - 1, 1);\n  return date.toLocaleDateString('default', { month: 'long' });\n}\n\n/// HDATE METHODS //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nHDATE.Parse = dateInputStr => {\n  return HDATE.erasChrono.parse(dateInputStr);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Show how the raw input string is parsed into date information by breaking\n  *  down the known values (e.g. `day`, and `month`) into a human-readable string.\n  *  @param {Array} ParsedResult - a chrono array of parsed date objects\n  */\nHDATE.ShowValidationResults = ParsedResult => {\n  // Show interpreted values\n  if (ParsedResult.length > 0) {\n    const knownValues = ParsedResult[0].start.knownValues;\n    const dateValidationStr = knownValues\n      ? Object.keys(knownValues).map(k => `${k}:${knownValues[k]}`)\n      : [\"result: 'cannot interpret'\"];\n    // TODO show HDATE.ERAS TOO?\n    return dateValidationStr;\n  }\n  return undefined;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Show the list of available format types with previews based on the values\n *  parsed from the input string. e.g. `April 1, 2024` will show formats\n *  that include a month, day, and year.\n *  @param {Array} ParsedResult - a chrono array of parsed date objects\n *  @return {Array} formatMenuOptions - an array of format objects with `value` and `preview` keys\n */\nHDATE.ShowMatchingFormats = (ParsedResult, dateFormat, allowFormatSelection) => {\n  let options = [{ value: 'AS_ENTERED', preview: 'as entered' }];\n  if (ParsedResult.length < 1) {\n    if (allowFormatSelection) return options;\n    else return [\n      { value: dateFormat, preview: HDATE.DATEFORMAT[dateFormat] }\n    ];\n  }\n\n  let matchingTypes = [];\n  let additionalOptions = [];\n  const knownValues = ParsedResult[0].start.knownValues;\n  const knownTypes = Object.keys(ParsedResult[0].start.knownValues);\n  const dateInputStr = ParsedResult[0].text;\n\n  if (!allowFormatSelection) {\n    // force the format to use the defined format\n    const options = [\n      { value: dateFormat, preview: HDATE.GetPreviewStr(dateInputStr, knownValues, dateFormat) }\n    ];\n    return options;\n  }\n\n  // Figure out which formats are eligible based on the known values\n  if (knownTypes.includes('year')) {\n    if (knownTypes.includes('month')) {\n      if (knownTypes.includes('day')) {\n        // year month day\n        matchingTypes = [\n          'MONTHDAYYEAR_ABBR',\n          'MONTHDAYYEAR_FULL',\n          'MONTHDAYYEAR_NUM',\n          'MONTHDAYYEAR_PAD',\n          'YEARMONTHDAY_ABBR',\n          'YEARMONTHDAY_FULL',\n          'YEARMONTHDAY_NUM',\n          'YEARMONTHDAY_PAD',\n          'HISTORICAL_MONTHDAYYEAR_ABBR',\n          'HISTORICAL_MONTHDAYYEAR_FULL',\n          'HISTORICAL_MONTHDAYYEAR_NUM',\n          'HISTORICAL_MONTHDAYYEAR_PAD',\n          'HISTORICAL_YEARMONTHDAY_ABBR',\n          'HISTORICAL_YEARMONTHDAY_FULL',\n          'HISTORICAL_YEARMONTHDAY_NUM',\n          'HISTORICAL_YEARMONTHDAY_PAD'\n        ];\n      } else {\n        // year month only\n        matchingTypes = [\n          'MONTHYEAR_ABBR',\n          'MONTHYEAR_FULL',\n          'MONTHYEAR_NUM',\n          'MONTHYEAR_PAD',\n          'YEARMONTH_ABBR',\n          'YEARMONTH_FULL',\n          'YEARMONTH_NUM',\n          'YEARMONTH_PAD',\n          'HISTORICAL_MONTHYEAR_ABBR',\n          'HISTORICAL_MONTHYEAR_FULL',\n          'HISTORICAL_MONTHYEAR_NUM',\n          'HISTORICAL_MONTHYEAR_PAD',\n          'HISTORICAL_YEARMONTH_ABBR',\n          'HISTORICAL_YEARMONTH_FULL',\n          'HISTORICAL_YEARMONTH_NUM',\n          'HISTORICAL_YEARMONTH_PAD'\n        ];\n      }\n    } else {\n      // year only\n      matchingTypes = ['YEAR', 'HISTORICALYEAR'];\n    }\n  } else if (knownTypes.includes('month')) {\n    if (knownTypes.includes('day')) {\n      matchingTypes = [\n        'MONTHDAY_ABBR',\n        'MONTHDAY_FULL',\n        'MONTHDAY_NUM',\n        'MONTHDAY_PAD'\n      ];\n    } else {\n      matchingTypes = ['MONTH_ABBR', 'MONTH_FULL', 'MONTH_NUM', 'MONTH_PAD'];\n    }\n  }\n\n  additionalOptions = matchingTypes.map(type => {\n    return { value: type, preview: HDATE.GetPreviewStr(dateInputStr, knownValues, type) };\n  });\n  options = [...additionalOptions, ...options];\n  return options;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Show the formatted date string using the parsed result information\n *  @param {String} dateInputStr - the raw input string\n *  @param {Object} knownValues - the parsed date values\n *  @param {String} format - the selected format\n *  @returns {String} - the formatted date string\n */\nHDATE.GetPreviewStr = (dateInputStr, knownValues, format) => {\n  const month = knownValues.month || 'M?';\n  const day = knownValues.day || 'D?';\n  const year = knownValues.year || 'Y?';\n  switch (format) {\n    case 'MONTH_ABBR':\n      return `${HDATE.u_monthAbbr(month)}`;\n    case 'MONTH_FULL':\n      return `${HDATE.u_monthName(month)}`;\n    case 'MONTH_NUM':\n      return `${month}`;\n    case 'MONTH_PAD':\n      return `${HDATE.u_pad(month)}`;\n    case 'MONTHDAY_ABBR':\n      return `${HDATE.u_monthAbbr(month)} ${day}`;\n    case 'MONTHDAY_FULL':\n      return `${HDATE.u_monthName(month)} ${day}`;\n    case 'MONTHDAY_NUM':\n      return `${month}/${day}`;\n    case 'MONTHDAY_PAD':\n      return `${HDATE.u_pad(month)}/${HDATE.u_pad(day)}`;\n    case 'MONTHDAYYEAR_ABBR':\n      return `${HDATE.u_monthAbbr(month)} ${day}, ${year}`;\n    case 'MONTHDAYYEAR_FULL':\n      return `${HDATE.u_monthName(month)} ${day}, ${year}`;\n    case 'MONTHDAYYEAR_NUM':\n      return `${month}/${day}/${year}`;\n    case 'MONTHDAYYEAR_PAD':\n      return `${HDATE.u_pad(month)}/${HDATE.u_pad(day)}/${year}`;\n    case 'YEARMONTHDAY_ABBR':\n      return `${year} ${HDATE.u_monthAbbr(month)} ${day}`;\n    case 'YEARMONTHDAY_FULL':\n      return `${year} ${HDATE.u_monthName(month)} ${day}`;\n    case 'YEARMONTHDAY_NUM':\n      return `${year}/${month}/${day}`;\n    case 'YEARMONTHDAY_PAD':\n      return `${year}/${HDATE.u_pad(month)}/${HDATE.u_pad(day)}`;\n    case 'HISTORICAL_MONTHDAYYEAR_ABBR':\n      return year < 1\n        ? `${HDATE.u_monthAbbr(month)} ${day}, ${Math.abs(year)} ${HDATE.ERAS.pre}`\n        : `${HDATE.u_monthAbbr(month)} ${day}, ${year} ${HDATE.ERAS.post}`;\n    case 'HISTORICAL_MONTHDAYYEAR_FULL':\n      return year < 1\n        ? `${HDATE.u_monthName(month)} ${day}, ${Math.abs(year)} ${HDATE.ERAS.pre}`\n        : `${HDATE.u_monthName(month)} ${day}, ${year} ${HDATE.ERAS.post}`;\n    case 'HISTORICAL_MONTHDAYYEAR_NUM':\n      return year < 1\n        ? `${month}/${day}/${Math.abs(year)} ${HDATE.ERAS.pre}`\n        : `${month}/${day}/${year} ${HDATE.ERAS.post}`;\n    case 'HISTORICAL_MONTHDAYYEAR_PAD':\n      return year < 1\n        ? `${HDATE.u_pad(month)}/${HDATE.u_pad(day)}/${Math.abs(year)} ${HDATE.ERAS.pre}`\n        : `${HDATE.u_pad(month)}/${HDATE.u_pad(day)}/${year} ${HDATE.ERAS.post}`;\n    case 'HISTORICAL_YEARMONTHDAY_ABBR':\n      return year < 1\n        ? `${Math.abs(year)} ${HDATE.u_monthAbbr(month)} ${day} ${HDATE.ERAS.pre}`\n        : `${year} ${HDATE.u_monthAbbr(month)} ${day} ${HDATE.ERAS.post} `;\n    case 'HISTORICAL_YEARMONTHDAY_FULL':\n      return year < 1\n        ? `${Math.abs(year)} ${HDATE.u_monthName(month)} ${day} ${HDATE.ERAS.pre}`\n        : `${year} ${HDATE.u_monthName(month)} ${day} ${HDATE.ERAS.post}`;\n    case 'HISTORICAL_YEARMONTHDAY_NUM':\n      return year < 1\n        ? `${Math.abs(year)}/${month}/${day} ${HDATE.ERAS.pre}`\n        : `${year}/${month}/${day} ${HDATE.ERAS.post}`;\n    case 'HISTORICAL_YEARMONTHDAY_PAD':\n      return year < 1\n        ? `${Math.abs(year)}/${HDATE.u_pad(month)}/${HDATE.u_pad(day)} ${HDATE.ERAS.pre}`\n        : `${year}/${HDATE.u_pad(month)}/${HDATE.u_pad(day)} ${HDATE.ERAS.post}`;\n    case 'MONTHYEAR_ABBR':\n      return `${HDATE.u_monthAbbr(month)} ${year}`;\n    case 'MONTHYEAR_FULL':\n      return `${HDATE.u_monthName(month)} ${year}`;\n    case 'MONTHYEAR_NUM':\n      return `${month}/${year}`;\n    case 'MONTHYEAR_PAD':\n      return `${HDATE.u_pad(month)}/${year}`;\n    case 'YEARMONTH_ABBR':\n      return `${year} ${HDATE.u_monthAbbr(month)}`;\n    case 'YEARMONTH_FULL':\n      return `${year} ${HDATE.u_monthName(month)}`;\n    case 'YEARMONTH_NUM':\n      return `${year}/${month}`;\n    case 'YEARMONTH_PAD':\n      return `${year}/${HDATE.u_pad(month)}`;\n    case 'HISTORICAL_MONTHYEAR_ABBR':\n      return year < 1\n        ? `${HDATE.u_monthAbbr(month)} ${Math.abs(year)} ${HDATE.ERAS.pre}`\n        : `${HDATE.u_monthAbbr(month)} ${year} ${HDATE.ERAS.post}`;\n    case 'HISTORICAL_MONTHYEAR_FULL':\n      return year < 1\n        ? `${HDATE.u_monthName(month)} ${Math.abs(year)} ${HDATE.ERAS.pre}`\n        : `${HDATE.u_monthName(month)} ${year} ${HDATE.ERAS.post}`;\n    case 'HISTORICAL_MONTHYEAR_NUM':\n      return year < 1\n        ? `${month}/${Math.abs(year)} ${HDATE.ERAS.pre}`\n        : `${month}/${year} ${HDATE.ERAS.post}`;\n    case 'HISTORICAL_MONTHYEAR_PAD':\n      return year < 1\n        ? `${HDATE.u_pad(month)}/${Math.abs(year)} ${HDATE.ERAS.pre}`\n        : `${HDATE.u_pad(month)}/${year} ${HDATE.ERAS.post}`;\n    case 'HISTORICAL_YEARMONTH_ABBR':\n      return year < 1\n        ? `${Math.abs(year)} ${HDATE.u_monthAbbr(month)} ${HDATE.ERAS.pre}`\n        : `${year} ${HDATE.u_monthAbbr(month)} ${HDATE.ERAS.post}`;\n    case 'HISTORICAL_YEARMONTH_FULL':\n      return year < 1\n        ? `${Math.abs(year)} ${HDATE.u_monthName(month)} ${HDATE.ERAS.pre}`\n        : `${year} ${HDATE.u_monthName(month)} ${HDATE.ERAS.post}`;\n    case 'HISTORICAL_YEARMONTH_NUM':\n      return year < 1\n        ? `${Math.abs(year)}/${month} ${HDATE.ERAS.pre}`\n        : `${year}/${month} ${HDATE.ERAS.post}`;\n    case 'HISTORICAL_YEARMONTH_PAD':\n      return year < 1\n        ? `${Math.abs(year)}/${HDATE.u_pad(month)} ${HDATE.ERAS.pre}`\n        : `${year}/${HDATE.u_pad(month)} ${HDATE.ERAS.post}`;\n    case 'YEAR':\n      return `${year}`;\n    case 'HISTORICALYEAR':\n      return year < 1 ? `${Math.abs(year)} ${HDATE.ERAS.pre}` : `${year} ${HDATE.ERAS.post}`;\n    case 'AS_ENTERED':\n    default:\n      // console.log('showprevieow...showing as entered', dateInputStr);\n      return `${dateInputStr}` || '...';\n  }\n}\n\n/// MODULE EXPORTS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = HDATE;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  JS CLI\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst UNISYS = require('unisys/client');\n// const PROMPTS = require('system/util/prompts');\n\n/// CONSTANTS & DECLARATIONS ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst SHOW_DOM = true;\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet JSCLI = UNISYS.NewModule(module.id);\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet CMD = [];\n\n/// DEFINE CLI FUNCTIONS //////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nJSCLI.AddFunction = f => {\n  if (typeof f !== 'function') throw Error('AddFunction() arg is Function object');\n  CMD.push(f);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nJSCLI.HelpString = () => {\n  let out = 'The following CLI commands are available\\n\\n';\n  CMD.forEach(f => {\n    out += `  ${f.name}()\\n`;\n  });\n  out += '\\n';\n  out += 'Mac shortcuts to open console\\n';\n  out += '  Chrome  : cmd-option-j\\n';\n  out += '  Firefox : cmd-option-k\\n';\n  out += 'PC use ctrl-shift instead\\n';\n  return out;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** initialize registered functions\n */\nJSCLI.Hook('RESET', () => {\n  JSCLI.AddFunction(function ncHelp() {\n    return JSCLI.HelpString();\n  });\n  CMD.forEach(f => {\n    window[f.name] = f;\n  });\n  if (SHOW_DOM) JSCLI.DOM_ShowInstructions();\n});\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nJSCLI.DOM_ShowInstructions = () => {\n  var E_SHELL = document.getElementById('fdshell');\n  if (!E_SHELL) {\n    // console.warn(PR,\"DOM_ShowInstructions() found no id 'fdshell' to append instructions. Type 'ncHelp()' to list available JSCLI functions.\");\n    return;\n  }\n  var E_OUT = document.createElement('pre');\n  var E_HEADER = document.createElement('h4');\n  E_SHELL.appendChild(E_HEADER);\n  E_SHELL.appendChild(E_OUT);\n  E_HEADER.innerHTML = 'Command Information';\n  E_OUT.innerHTML = JSCLI.HelpString();\n};\n\n/// EXPORT MODULE /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = JSCLI;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Path Strings\n  REGEX approach from https://stackoverflow.com/a/47212224\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// CONSTANTS & DECLARATIONS ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar PATH = {};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst rx_dir = /(.*)\\/+([^/]*)$/;\nconst rx_file = /()(.*)$/;\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Return the directory portion of a path\n */\nPATH.Parse = function (str) {\n  // [0] original string\n  // [1] dirname\n  // [2] filename\n  return rx_dir.exec(str) || rx_file.exec(str);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Return the directory portion of a path\n */\nPATH.Dirname = function (str) {\n  // return str.substring(0,str.lastIndexOf(\"/\"));\n  return (rx_dir.exec(str) || rx_file.exec(str))[1];\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Return the file portion of a path\n */\nPATH.Basename = function (str) {\n  // return str.substring(str.lastIndexOf(\"/\")+1);\n  return (rx_dir.exec(str) || rx_file.exec(str))[2];\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Return the string stripped of extension\n */\nPATH.StripExt = function (str) {\n  return str.substr(0, str.lastIndexOf('.'));\n};\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = PATH;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  String Prompts for server\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst REFLECT = require('./reflection');\n\n/// CONSTANTS /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// detect node environment and set padsize accordingly\nconst IS_NODE =\n  typeof process !== 'undefined' &&\n  process.release &&\n  process.release.name === 'node';\nvar PAD_SIZE = IS_NODE\n  ? 9 // nodejs\n  : 0; // not nodejs\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// module declaration\nvar PROMPTS = {};\n\n/// PROMPT STRING HELPERS /////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** return a string padded to work as a prompt for either browser or node\n *  console output\n */\nPROMPTS.Pad = function (prompt = '', psize = PAD_SIZE) {\n  let len = prompt.length;\n  if (IS_NODE) return prompt.padEnd(psize, ' ') + '-';\n  // must be non-node environment, so do dynamic string adjust\n  if (!psize) return prompt + ':';\n  // if this far, then we're truncating\n  if (len >= psize) prompt = prompt.substr(0, psize - 1);\n  else prompt.padEnd(psize, ' ');\n  return prompt + ':';\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** returns PAD_SIZE stars\n */\nPROMPTS.Stars = function (count) {\n  if (count !== undefined) return ''.padEnd(count, '*');\n  return ''.padEnd(PAD_SIZE, '*');\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** return string of calling object's name\n */\nPROMPTS.FunctionName = function () {\n  return REFLECT.FunctionName(2);\n};\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = PROMPTS;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Reflection and other Object Inspection Utilities\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst STACKTRACE = require('stacktrace-js');\nconst PATH = require('./path');\n\n/// MODULE DECLARATION ////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar REFLECT = {};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Returns the name of the constructor for the current class\n *  https://stackoverflow.com/questions/22777181/typescript-get-to-get-class-name-at-runtime\n */\nREFLECT.ExtractClassName = function (obj) {\n  var funcNameRegex = /function (.{1,})\\(/;\n  var results = funcNameRegex.exec(obj.constructor.toString());\n  return results && results.length > 1 ? results[1] : '';\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Returns the name of the calling function\n */\nREFLECT.FunctionName = function (depth = 1) {\n  let stack = STACKTRACE.getSync();\n  let frame = stack[depth];\n  let fn = frame.functionName;\n  if (!fn) {\n    fn = PATH.Basename(frame.fileName);\n    fn += `:${frame.lineNumber}:${frame.columnNumber}`;\n    return fn;\n  } else {\n    let bits = fn.split('.');\n    return `method ${bits[1]}() called by module ${bits[0]}`;\n  }\n};\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** InspectModule() prints a list of public properties and methods for each\n *  require module that contains the passed string. It returns a string,\n *  so you will have to console.log() to see the output.\n */\nREFLECT.InspectModule = function (str) {\n  throw Error(\n    `REFLECT.InspectModule() needs to be rewritten for brunch-style modules. ${str}`\n  );\n};\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** InspectObject() accepts an object and a label, and prints a list of\n *  all the methods and properties in it. It returns a string, so you will\n *  have to console.log() to see the output.\n */\nREFLECT.InspectObject = function (obj, depth) {\n  if (!obj) return 'Must pass an object or 1401 watched object key string';\n  var out = '';\n  // handle command line calls\n  switch (typeof obj) {\n    case 'object':\n    case 'function':\n      break;\n    default:\n      return 'must pass object or function, not ' + typeof obj;\n  }\n  // handle recursive scan\n  depth = depth || 0;\n  var label = obj.constructor.name || '(anonymous object)';\n  var indent = '';\n  for (var i = 0; i <= depth; i++) indent += '\\t';\n  out += label + '\\n';\n  out += '\\n';\n  out += m_DumpObj(obj, depth + 1);\n  var proto = Reflect.getPrototypeOf(obj);\n  if (proto) {\n    out += '\\n' + indent + 'IN PROTO: ';\n    out += this.InspectObject(proto, depth + 1);\n    out += '\\n';\n  }\n  if (depth === 0) out = '\\n' + out;\n  console.log(out);\n  return obj;\n};\n\n/// SUPPORTING FUNCTIONS //////////////////////////////////////////////////////\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Support function for InspectModule() and InspectObject()\n *  Also checks m_watching array\n */\nfunction m_DumpObj(obj, depth) {\n  var indent = '';\n  for (var i = 0; i < depth; i++) indent += '\\t';\n\n  var str = '';\n  Object.keys(obj).forEach(function (key) {\n    var prop = obj[key];\n    var type = typeof prop;\n    str += indent;\n    str += type + '\\t' + key;\n    switch (type) {\n      case 'function':\n        var regexp = /function.*\\(([^)]*)\\)/;\n        var args = regexp.exec(prop.toString());\n        str += ' (' + args[1] + ')';\n        break;\n      default:\n        break;\n    }\n    str += '\\n';\n  });\n  return str;\n}\n\n/// GLOBAL HOOKS //////////////////////////////////////////////////////////////\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nif (typeof window === 'object') {\n  window.InspectModule = REFLECT.InspectModule;\n  window.InspectObject = REFLECT.InspectObject;\n  window.DBG_Out = function (msg, selector) {\n    REFLECT.Out(msg, false, selector);\n  };\n  window.DBG_OutClean = function (msg, selector) {\n    REFLECT.Out(msg, true, selector);\n  };\n}\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = REFLECT;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  TEST\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nlet DBG = false;\n\n/// DECLARATIONS //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** list of tests that are allowed to run\n */\nlet TESTS = {\n  call: false, // unisys calls\n  state: false, // unisys state manager\n  hook: false, // unisys lifecycle hooks\n  remote: false, // unisys 'remote' calls to other module\n  net: false, // network connection to socket server\n  server: false // unisys 'server implemented' calls\n};\n/** groups of tests to run\n */\nlet PASSED = {};\nlet TEST_GO = false;\n/** pairs of arrays to match (array of arrays)\n */\nlet ARR_MATCH = [];\nlet PR = 'TEST:';\nlet m_meta_info = {};\n\nlet E_SHELL, E_OUT, E_HEADER;\nlet m_failed = [];\nlet m_skipped = [];\nlet m_passed = [];\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Main TEST ENABLE\n    pass the testname (as listed in TESTS) and either true or false)\n */\nlet TM = (testname, flag) => {\n  if (testname === undefined) {\n    console.warn(\n      `${PR} %cConfigured and Active`,\n      `color:red;background-color:yellow`\n    );\n    TEST_GO = true;\n    return true;\n  }\n  if (typeof testname !== 'string') throw 'arg1 must be a testname';\n  if (!TESTS[testname]) throw `\"${testname}\" is not a valid testname`;\n  if (DBG) console.log(PR, 'TM', testname, flag || '');\n  if (flag === undefined) {\n    if (!TEST_GO) console.error(`${PR} Test Switch read before testing started`);\n    let setting = TESTS[testname];\n    return setting;\n  } else {\n    TESTS[testname] = flag;\n    m_ConfigureTestFlags(testname, flag);\n    return flag;\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nTM.SetTitle = function (text) {\n  E_HEADER.innerText = text;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nTM.SetMeta = function (meta, value) {\n  if (typeof meta === 'string') {\n    let obj = {};\n    obj[meta] = value;\n    meta = obj;\n  }\n  if (typeof meta === 'object') {\n    Object.assign(m_meta_info, meta);\n  } else {\n    throw Error('SetMeta() expected either object or string,value');\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nTM.MetaString = function () {\n  let o = '';\n  Object.entries(m_meta_info).forEach(([k, v]) => {\n    o += `${k}:${v} `;\n  });\n  return o;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: pass the particular subtest\n */\nTM.Pass = function (subtest) {\n  m_InitShell();\n  // initialize tests\n  if (DBG) console.log(`${PR} %cPass %c${subtest}`, 'color:green', 'color:black');\n  if (PASSED[subtest]) {\n    if (PASSED[subtest]) ++PASSED[subtest];\n    else PASSED[subtest] = 1;\n  } else {\n    throw Error(`Unknown subtest: ${subtest}`);\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: fail the particular subtest\n */\nTM.Fail = function (subtest) {\n  m_InitShell();\n  if (DBG) console.error(`${PR} %cFail ${subtest}`, 'color:red;font-weight:bold');\n  if (PASSED[subtest]) {\n    // 'null' for 'condition succeed' tests\n    // '0' for 'no error detected' tests\n    let flag = PASSED[subtest];\n    if (typeof flag === 'string') {\n      // this has already failed with error\n      PASSED[subtest] = flag + '+';\n      return;\n    }\n    if (flag === null) return; // null flag are skipped\n    if (flag === 0) {\n      PASSED[subtest] = -1; // failed once\n      return;\n    }\n    if (flag <= 0) {\n      --PASSED[subtest]; // multiple failures\n      return;\n    }\n    // bizarre 'succeeded but now failed'\n    if (flag > 0) {\n      PASSED[subtest] = `succeeded ${flag} times, then failed`;\n      return;\n    }\n  }\n  throw Error(`Unknown subtest: ${subtest}`);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: check if the particular subtests passed have indeed passed\n */\nTM.Passed = function (...args) {\n  if (DBG) console.log(PR, 'Passed');\n  let passed = true;\n  args.forEach(subtest => {\n    if (!PASSED[subtest]) throw `\"${subtest}\" is not valid subtest`;\n    passed = passed && PASSED[subtest];\n  });\n  return passed;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: output test results\n */\nTM.Assess = function () {\n  if (DBG) console.log(PR, 'Assess');\n  m_failed = [];\n  m_skipped = [];\n  m_passed = [];\n  m_PreTest();\n  m_TestResults();\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: assess whether passed arrays match during Assess function()\n */\nTM.AssessArrayMatch = function (subtest, arr1, arr2) {\n  if (DBG) console.log(PR, 'AssessArrayMatch');\n  ARR_MATCH.push([subtest, arr1, arr2]);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: return TRUE if there were no failing tests in the last test.\n    Call TM.Assess() again to retest\n */\nTM.AllPassed = function () {\n  return m_failed.length !== 0;\n};\n\n/// TEST FUNCTIONS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** sets the PASSED object keys to enable/disable tests prior to running\n */\nfunction m_ConfigureTestFlags(testname, flag) {\n  if (flag === undefined) throw 'arg2 flag must be true to enable, false to disable';\n  // the subtest value must be set to false first\n  // to skip tests, the subtest value is set to null\n  if (flag === false) flag = null;\n  if (flag === true) flag = false;\n  // set subtest flags\n  let subtests;\n  switch (testname) {\n    case 'state':\n      subtests = {\n        stateChange: flag,\n        stateMerge: flag,\n        stateConcat: flag\n      };\n      break;\n    case 'hook':\n      subtests = {\n        hookInit1: flag,\n        hookInit2: flag,\n        hookInitDeferred: flag,\n        hookStart: flag\n      };\n      break;\n    case 'call':\n      subtests = {\n        callHndlrReg: flag,\n        callHndlrData: flag,\n        callHndlrDataProp: flag,\n        callDataReturn: flag,\n        callDataAdd: flag,\n        callDataMulti: flag\n      };\n      break;\n    case 'remote':\n      subtests = {\n        remoteCall: flag,\n        remoteData: flag,\n        remoteData2: flag,\n        remoteDataReturn: flag,\n        remoteDataAdd: flag,\n        remoteDataMulti: flag\n      };\n      break;\n    case 'server':\n      subtests = {\n        serverCall: flag,\n        serverCallOrder: flag,\n        serverReturn: flag,\n        serverData: flag,\n        serverDataAdd: flag\n      };\n      break;\n    case 'net':\n      subtests = {\n        netMessageReg: flag,\n        netCallHndlr: flag,\n        netSendHndlr: flag,\n        netSendNoEcho: 0, // if this stays 0, then NOERR has passed\n        netSignal: flag,\n        netSignalEcho: flag,\n        netData: flag,\n        netDataReturn: flag,\n        netDataAdd: flag,\n        //          netDataGather     : flag,\n        netDataMulti: flag\n      };\n      break;\n    default:\n      throw `Unknown test \"${testname}\"`;\n  } // end switch\n  Object.assign(PASSED, subtests);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_PreTest() {\n  // test arrays\n  ARR_MATCH.forEach(function (pair) {\n    let pass = true;\n    let subtest = pair[0];\n    let arr1 = pair[1];\n    let arr2 = pair[2];\n    pass = pass && arr1.length === arr2.length;\n    for (let i = 0; i < arr1.length; i++) {\n      pass = pass && arr1[i] === arr2[i];\n    }\n    if (pass) TM.Pass(subtest);\n  });\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** prints the test output to console\n */\nfunction m_TestResults() {\n  m_ShowShell();\n  // check all test results\n  let pEntries = Object.entries(PASSED);\n  let padding = 0;\n  // find longest string\n  pEntries.forEach(([key]) => {\n    if (key.length > padding) padding = key.length;\n  });\n  // scan test results\n  pEntries.forEach(([key, value]) => {\n    let res = '';\n    if (value === null) {\n      // res = `${(key).padEnd(padding)} [ ]\\n`;\n      m_skipped.push(res);\n    } else\n      switch (typeof value) {\n        case 'number':\n          if (value >= 1) {\n            if (value === 1) res = `${key.padEnd(padding)} [OK]\\n`;\n            if (value > 1) res = `${key.padEnd(padding)} [OK] x ${value}\\n`;\n            m_passed.push(res);\n          } else {\n            if (value === 0) {\n              res = `${key.padEnd(padding)} [NP]\\n`;\n              m_passed.push(res);\n            }\n            if (value === -1) {\n              res = `${key.padEnd(padding)} [!!] FAIL\\n`;\n              m_failed.push(res);\n            }\n            if (value < -1) {\n              res = `${key.padEnd(padding)} [!!] FAIL x ${-value}\\n`;\n              m_failed.push(res);\n            }\n          }\n          break;\n        case 'boolean':\n          if (value) {\n            res = `${key.padEnd(padding)} [OK]\\n`;\n            m_passed.push(res);\n          } else {\n            res = `${key.padEnd(padding)} [!!] FAIL\\n`;\n            m_failed.push(res);\n          }\n          break;\n        default:\n          m_passed.push(`${key.padEnd(padding)} [OK] '${value}'\\n`);\n          break;\n      } // switch typeof value\n  }); // pEntries.forEach\n\n  let testTitle = 'UNISYS LOGIC TEST RESULTS';\n  console.group(testTitle);\n  let out = m_passed.concat(m_failed, m_skipped).join('');\n\n  // additional help\n  let tnotes = '';\n  if (!TM.Passed('netCallHndlr'))\n    tnotes += `NOTE: 'netCallHndlr' requires a synched remote app to call-in\\n`;\n  if (!TM.Passed('netSendHndlr'))\n    tnotes += `NOTE: 'netSendHndlr' requires a synched remote app to call-in\\n`;\n  if (!TM.Passed('netData'))\n    tnotes += `NOTE: 'netData*' requires a synched remote app to respond to call-out\\n`;\n  if (tnotes) out += '\\n' + tnotes;\n\n  // summary\n  let summary = `${m_passed.length}=passed`;\n  if (m_failed.length) summary += ` ${m_failed.length}=failed`;\n  if (m_skipped.length) summary += ` ${m_skipped.length}=skipped`;\n  console.log(`${out}\\n${summary}`);\n  TM.SetTitle(`${testTitle} ${TM.MetaString()}`);\n  E_OUT.innerText = `${summary}\\n\\n`;\n  E_OUT.innerText += 'OPEN JAVASCRIPT CONSOLE TO SEE DETAILS\\n';\n  E_OUT.innerText += 'Mac shortcuts to open console\\n';\n  E_OUT.innerText += '  Chrome  : cmd-option-j\\n';\n  E_OUT.innerText += '  Firefox : cmd-option-k\\n';\n  E_OUT.innerText += 'PC use ctrl-shift instead\\n';\n  console.groupEnd();\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** initialize the shell user interface for test results as elements, but\n    don't yet link them because component may not have rendered yet\n */\nfunction m_InitShell() {\n  if (!E_OUT) {\n    E_OUT = document.createElement('pre');\n    E_HEADER = document.createElement('h4');\n    E_HEADER.innerText = 'RUNNING TESTS ';\n    E_OUT.innerText = '.';\n  } else {\n    E_OUT.innerText += '.';\n  }\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ show the shell elements by finding root div and appending them\n/*/ function m_ShowShell() {\n  E_SHELL = document.getElementById('fdshell');\n  E_SHELL.appendChild(E_HEADER);\n  E_SHELL.appendChild(E_OUT);\n}\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = TM;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  UNISYS DATALINK CLASS\n\n  The UNISYS DATALINK (UDATA) class represents a connection to the UNISYS\n  event messaging system. Instances are created with UNISYS.NewDataLink().\n\n  Each UNODE has a unique UNISYS_ID (the UID) which represents its\n  local address. Combined with the device UADDR, this makes every UNODE\n  on the network addressable.\n\n  * UNODES can get and set global state objects\n  * UNODES can subscribe to state change events\n  * UNODES can register listeners for a named message\n  * UNODES can send broadcast to all listeners\n  * UNODES can call listeners and receive data\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/* added for pull request #81 so 'npm run lint' test appears clean */\n/* eslint-disable no-unused-vars */\n\nconst SETTINGS = require('settings');\nconst STATE = require('unisys/client-state');\nconst Messager = require('unisys/client-messager-class');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = { send: false, return: false, register: false };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst BAD_OWNER =\n  \"must pass owner object of type React.Component or UniModule with optional 'name' parameter\";\nconst BAD_NAME = 'name parameter must be a string';\nconst BAD_UID = 'unexpected non-unique UID';\nconst NO_DATAOBJ = 'syntax error: missing data object';\nconst BAD_EJSPROPS =\n  'EJS props (window.NC_UNISYS) is undefined, so can not set datalink IP address';\nconst PR = 'UDATA:';\n\n/// NODE MANAGEMENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UNODE = new Map(); // unisys connector node map (local)\nvar UNODE_COUNTER = 100; // unisys connector node id counter\n\n/// GLOBAL MESSAGES ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar MESSAGER = new Messager();\n\n/// UNISYS NODE CLASS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Instances of this class can register/unregister message handlers and also\n    send messages. Constructor receives an owner, which is inspected for\n    properties to determine how to classify the created messager for debugging\n    purposes\n */\nclass UnisysDataLink {\n  /** CONSTRUCTOR\n      A messager creates a unique ID within the webapp instance. Since\n      messagers are \"owned\" by an object, we want the ID to reflect\n      the owner's identity too while also allowing multiple instances per\n      owner.\n   */\n  constructor(owner, optName) {\n    let msgr_type = '?TYPE';\n    let msgr_name = '?NAME';\n\n    if (optName !== undefined && typeof optName !== 'string') {\n      throw Error(BAD_NAME);\n    }\n\n    // require an owner that is an object of some kind\n    if (typeof owner !== 'object') throw Error(BAD_OWNER);\n\n    // react components or regular objects\n    if (owner.name) {\n      msgr_type = 'MOD';\n      msgr_name = owner.name || optName;\n    } else if (owner.constructor.name) {\n      msgr_type = 'RCT';\n      msgr_name = owner.constructor.name;\n    } else {\n      throw Error(BAD_OWNER);\n    }\n\n    // generate and save unique id\n    this.uid = `${msgr_type}_${UNODE_COUNTER++}`;\n    this.name = msgr_name;\n    if (UNODE.has(this.uid)) throw Error(BAD_UID + this.uid);\n\n    // save module in the global module list\n    UNODE.set(this.uid, this);\n  }\n\n  /// UNIQUE UNISYS ID for local application\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// this is used to differentiate sources of events so they don't echo\n  UID() {\n    return this.uid;\n  }\n  Name() {\n    return this.name;\n  }\n\n  /// GLOBAL STATE ACCESS\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// global STATE module calls are wrapped by unisys node so the unique\n  /// UnisysID address can be appended\n  AppState(namespace) {\n    return STATE.State(namespace);\n  }\n  SetAppState(namespace, newState) {\n    // uid is \"source uid\" designating who is making the change\n    STATE.SetState(namespace, newState, this.UID());\n  }\n  MergeAppState(namespace, newState) {\n    // uid is \"source uid\" designating who is making the change\n    STATE.MergeState(namespace, newState, this.UID());\n  }\n  ConcatAppState(namespace, newState) {\n    // uid is \"source uid\" designating who is making the change\n    STATE.ConcatState(namespace, newState, this.UID());\n  }\n  // uid is \"source uid\" of subscribing object, to avoid reflection\n  // if the subscribing object is also the originating state changer\n  OnAppStateChange(namespace, listener) {\n    STATE.OnStateChange(namespace, listener, this.UID());\n  }\n  AppStateChangeOff(namespace, listener) {\n    STATE.OffStateChange(namespace, listener);\n  }\n\n  /// MESSAGES ////////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// mesgName is a string, and is an official event that's defined by the\n  /// subclasser of UnisysNode\n  HandleMessage(mesgName, listener) {\n    // uid is \"source uid\" of subscribing object, to avoid reflection\n    // if the subscribing object is also the originating state changer\n    if (DBG.register)\n      console.log(`${this.uid}_${PR}`, `${this.name} handler added [${mesgName}]`);\n    MESSAGER.HandleMessage(mesgName, listener, { receiverUID: this.UID() });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  UnhandleMessage(mesgName, listener) {\n    if (DBG.register)\n      console.log(`${this.uid}_${PR}`, `${this.name} handler removed [${mesgName}]`);\n    MESSAGER.UnhandleMessage(mesgName, listener);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** UDATA wraps Messager.Call(), which returns an array of promises.\n      The UDATA version of Call() manages the promises, and returns a\n   */\n  async Call(mesgName, inData = {}, options = {}) {\n    options = Object.assign(options, { type: 'mcall' });\n    if (DBG.send) {\n      let status = '';\n      if (!options.toNet) status += 'NO_NET ';\n      if (!options.toLocal) status += 'NO_LOCAL';\n      if (!(options.toLocal || options.toNet)) status = 'ERR NO LOCAL OR NET';\n      console.log(`${this.uid}_${PR}`, '** DATALINK CALL ASYNC', mesgName, status);\n    }\n    // uid is \"source uid\" of subscribing object, to avoid reflection\n    // if the subscribing object is also the originating state changer\n    options.srcUID = this.UID();\n    let promises = MESSAGER.Call(mesgName, inData, options);\n    /// MAGICAL ASYNC/AWAIT BLOCK ///////\n    if (DBG.send) console.log(`${this.uid}_${PR}`, '** awaiting...', promises);\n    let resArray = await Promise.all(promises);\n    if (DBG.send) console.log(`${this.uid}_${PR}`, '** promise fulfilled!', mesgName);\n    /// END MAGICAL ASYNC/AWAIT BLOCK ///\n    let resObj = Object.assign({}, ...resArray);\n    if (DBG.return)\n      console.log(\n        `${this.uid}_${PR}`,\n        `[${mesgName}] returned`,\n        JSON.stringify(resObj)\n      );\n    return resObj;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Sends the data to all message implementors UNLESS it is originating from\n      the same UDATA instance (avoid echoing back to self)\n   */\n  Send(mesgName, inData = {}, options = {}) {\n    if (DBG.send) console.log(`${this.uid}_${PR}`, '** DATALINK SEND', mesgName);\n    options = Object.assign(options, { type: 'msend' });\n    // uid is \"source uid\" of subscribing object, to avoid reflection\n    // if the subscribing object is also the originating state changer\n    options.srcUID = this.UID();\n    // uid is \"source uid\" of subscribing object, to avoid reflection\n    // if the subscribing object is also the originating state changer\n    MESSAGER.Send(mesgName, inData, options);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Sends the data to all message implementors, irregardless of origin.\n   */\n  Signal(mesgName, inData = {}, options = {}) {\n    options = Object.assign(options, { type: 'msig' });\n    MESSAGER.Signal(mesgName, inData, options);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** version of Call that forces local-only calls\n   */\n  LocalCall(mesgName, inData, options = {}) {\n    options = Object.assign(options, { type: 'mcall' });\n    options.toLocal = true;\n    options.toNet = false;\n    return this.Call(mesgName, inData, options);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** version of Send that force local-only calls\n   */\n  LocalSend(mesgName, inData, options = {}) {\n    options = Object.assign(options, { type: 'msend' });\n    options.toLocal = true;\n    options.toNet = false;\n    this.Send(mesgName, inData, options);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** version of Send that force local-only calls\n   */\n  LocalSignal(mesgName, inData, options = {}) {\n    options = Object.assign(options, { type: 'msig' });\n    options.toLocal = true;\n    options.toNet = false;\n    this.Signal(mesgName, inData, options);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** version of Call that forces network-only calls\n   */\n  NetCall(mesgName, inData, options = {}) {\n    options = Object.assign(options, { type: 'mcall' });\n    options.toLocal = false;\n    options.toNet = true;\n    return this.Call(mesgName, inData, options);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** version of Send that force network-only calls\n   */\n  NetSend(mesgName, inData, options = {}) {\n    options = Object.assign(options, { type: 'msend' });\n    options.toLocal = false;\n    options.toNet = true;\n    this.Send(mesgName, inData, options);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** version of Signal that forces network-only signal\n   */\n  NetSignal(mesgName, inData, options = {}) {\n    options.toLocal = false;\n    options.toNet = true;\n    this.Signal(mesgName, inData, options);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  NullCallback() {\n    if (DBG.send) console.log(`${this.uid}_${PR}`, 'null_callback', this.UID());\n  }\n} // class UnisysNode\n\n/// STATIC CLASS METHODS //////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** There's a single MESSAGER object that handles all registered messages for\n    UNISYS.\n */\nUnisysDataLink.MessageNames = function () {\n  return MESSAGER.MessageNames();\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Filter any bad messages from the passed array of strings\n */\nUnisysDataLink.ValidateMessageNames = function (msgs = []) {\n  let valid = [];\n  msgs.forEach(name => {\n    if (MESSAGER.HasMessageName(name)) valid.push(name);\n    else throw new Error(`ValidateMessageNames() found invalid message '${name}'`);\n  });\n  return valid;\n};\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = UnisysDataLink;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  LifeCycle - A system manager for application lifecycle events.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/* added for pull request #81 so 'npm run lint' test appears clean */\n/* eslint-disable no-unused-vars */\n\nconst PATH = require('system/util/path');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = window.NC_DBG && window.NC_DBG.lifecycle;\nconst BAD_PATH = \"module_path must be a string derived from the module's module.id\";\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar PHASE_HOOKS = new Map(); // functions that might right a Promise\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst PHASES = [\n  'TEST_CONF', // setup tests\n  'INITIALIZE', // module data structure init\n  'LOADASSETS', // load any external data, make connections\n  'CONFIGURE', // configure runtime data structures\n  'DOM_READY', // when viewsystem has completely composed\n  'RESET', // reset runtime data structures\n  'START', // start normal execution run\n  'APP_READY', // synchronize to UNISYS network server\n  'RUN', // system starts running\n  'UPDATE', // system is running (periodic call w/ time)\n  'PREPAUSE', // system wants to pause run\n  'PAUSE', // system has paused (periodic call w/ time)\n  'POSTPAUSE', // system wants to resume running\n  'STOP', // system wants to stop current run\n  'DISCONNECT', // unisys server has gone offline\n  'RECONNECT', // unisys server has reconnected\n  'UNLOADASSETS', // system releases any connections\n  'SHUTDOWN' // system wants to shut down\n];\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar PHASE = PHASES[0] + '_PENDING'; // current phase\n\n/// MODULE DEFINITION /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar MOD = {\n  name: 'LifeCycle',\n  scope: 'system/booting' // overwritten by UNISYS.SystemInitialize()\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** UTILITY: compare the destination scope with the acceptable scope (the\n    module.id of the root JSX component in a view). Any module not in the\n    system directory will not get called\n */\nfunction m_ExecuteScopedPhase(phase, o) {\n  // check for special unisys or system directory\n  if (o.scope.indexOf('system') === 0) return o.f();\n  if (o.scope.indexOf('unisys') === 0) return o.f();\n  // check for subdirectory\n  if (o.scope.includes(MOD.scope, 0)) return o.f();\n  // else do nothing\n  if (DBG)\n    console.info(\n      `LIFECYCLE: skipping [${phase}] for ${o.scope} because scope is ${MOD.scope}`\n    );\n  return undefined;\n}\n\n/// LIFECYCLE METHODS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: register a Phase Handler which is invoked by MOD.Execute()\n    phase is a string constant from PHASES array above\n    f is a function that does work immediately, or returns a Promise\n */\nMOD.Hook = (phase, f, scope) => {\n  // make sure scope is included\n  if (typeof scope !== 'string')\n    throw Error(`<arg3> scope is required (set to module.id)`);\n  // does this phase exist?\n  if (typeof phase !== 'string')\n    throw Error(\"<arg1> must be PHASENAME (e.g. 'LOADASSETS')\");\n  if (!PHASES.includes(phase))\n    throw Error(phase, 'is not a recognized lifecycle phase');\n  // did we also get a promise?\n  if (!(f instanceof Function))\n    throw Error('<arg2> must be a function optionally returning Promise');\n\n  // get the list of promises associated with this phase\n  // and add the new promise\n  if (!PHASE_HOOKS.has(phase)) PHASE_HOOKS.set(phase, []);\n  PHASE_HOOKS.get(phase).push({ f, scope });\n  if (DBG) console.log(`[${phase}] added handler`);\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Execute all Promises associated with a phase, completing when\n    all the callback functions complete. If the callback function returns\n    a Promise, this is added to a list of Promises to wait for before the\n    function returns control to the calling code.\n */\nMOD.Execute = async phase => {\n  // require scope to be set\n  if (MOD.scope === false)\n    throw Error(\n      `UNISYS.SetScope() must be set to RootJSX View's module.id. Aborting.`\n    );\n\n  // note: contents of PHASE_HOOKs are promise-generating functions\n  if (!PHASES.includes(phase))\n    throw Error(`${phase} is not a recognized lifecycle phase`);\n  let hooks = PHASE_HOOKS.get(phase);\n  if (hooks === undefined) {\n    if (DBG) console.log(`[${phase}] no subscribers`);\n    return;\n  }\n\n  // phase housekeeping\n  PHASE = phase + '_PENDING';\n\n  // now execute handlers and promises\n  let icount = 0;\n  if (DBG) console.group(phase);\n  // get an array of promises\n  // o contains f, scope pushed in Hook() above\n  let promises = hooks.map(o => {\n    let retval = m_ExecuteScopedPhase(phase, o);\n    if (retval instanceof Promise) {\n      icount++;\n      return retval;\n    }\n    // return undefined to signal no special handling\n    return undefined;\n  });\n  promises = promises.filter(e => {\n    return e !== undefined;\n  });\n  if (DBG && hooks.length)\n    console.log(`[${phase}] HANDLERS PROCESSED : ${hooks.length}`);\n  if (DBG && icount) console.log(`[${phase}] PROMISES QUEUED    : ${icount}`);\n\n  // wait for all promises to execute\n  await Promise.all(promises)\n    .then(values => {\n      if (DBG && values.length)\n        console.log(`[${phase}] PROMISES RETURNED  : ${values.length}`, values);\n      if (DBG) console.groupEnd();\n      return values;\n    })\n    .catch(err => {\n      if (DBG) console.log(`[${phase} EXECUTE ERROR ${err}`);\n      throw Error(`[${phase} EXECUTE ERROR ${err}`);\n    });\n\n  // phase housekeeping\n  PHASE = phase;\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: The scope is used to filter lifecycle events within a particular\n    application path, which are defined under the view directory.\n */\nMOD.SetScope = module_path => {\n  if (typeof module_path !== 'string') throw Error(BAD_PATH);\n  if (DBG) console.log(`setting lifecycle scope to ${module_path}`);\n  // strip out filename, if one exists\n  MOD.scope = PATH.Dirname(module_path);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: The scope\n */\nMOD.Scope = () => {\n  return MOD.scope;\n};\n\n/// STATIC METHODS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// ...\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Messager - Handle a collection of named events and their handlers\n  https://en.wikipedia.org/wiki/Event-driven_architecture#JavaScript\n\n  NOTE: This class is often WRAPPED by other UNISYS modules that manage\n  a unique ID (such as the unique unisys datalink id) that hide that\n  implementation detail from local users (e.g. unisys-data-class)\n\n  HandleMessasge('MESG_NAME',handlerFunc,options)\n    Add a handlerFunc. Specify options.handlerUID to enable echo rejection\n    (same udata module will not invoke own handler when sending same message)\n  UnhandleMessage('MESG_NAME',handlerFunc)\n    Remove a handlerFunc associated with the handlerFuncFunction\n  Send('MESG_NAME',data,options)\n    Trigger an message+data to all handlers from a particular UDATA id\n    If options.srcUID is specified, echo suppression is enabled\n  Signal('MESG_NAME',data)\n    Similar to Send(), but will ALWAYS broadcast to all implementors\n  Call('MESG_NAME',data,options)\n    Similar to Send(), but can return a value to a callback function\n    options.srcUID is the UDATA id; set for echo supression to that uid\n    options.dataReturnFunc is the callback function.\n\n  NOTE: CallerReturnFunctions receive data object AND control object.\n  The control object has the \"return\" function that closes a transaction;\n  this is useful for async operations without Promises.\n\n  NOTE: HandlerFunctions and CallerReturnFunctions are anotated with the\n  udata_id property, which can be set to avoid echoing a message back to\n  the same originating udata source.\n\n  NOTE: When providing a handlerFunc, you might want to bind it to a\n  specific object context (i.e. 'this') value using bind().\n  e.g. handlerFunction = handlerFunction.bind(this);\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/* added for pull request #81 so 'npm run lint' test appears clean */\n/* eslint-disable no-unused-vars */\n\nconst TEST = require('test');\nconst NetMessage = require('unisys/common-netmessage-class');\n\n/// MODULE VARS ///////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar MSGR_IDCOUNT = 0;\nvar DBG = false;\n\n/// UNISYS MESSAGER CLASS /////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass Messager {\n  /** Instances of this class can be used to implement a UNISYS-style message\n    passing scheme with shared semantics. It maintains a Map keyed by mesgName\n    strings, containing a Set object filled with handlers for that mesgName.\n */\n  constructor() {\n    this.handlerMap = new Map(); // message map storing sets of functions\n    this.messager_id = ++MSGR_IDCOUNT;\n  }\n\n  /// FIRE ONCE EVENTS //////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** API: subscribe a handlerFunc function with a particular unisys id\n    to receive a particular message. The handlerFunc receives a data obj\n    and should return one as well. If there is an error, return a string.\n */\n  HandleMessage(mesgName, handlerFunc, options = {}) {\n    let { handlerUID } = options;\n    let { syntax } = options;\n    if (typeof handlerFunc !== 'function') {\n      throw 'arg2 must be a function';\n    }\n    if (typeof handlerUID === 'string') {\n      // bind the udata uid to the handlerFunc function for convenient access\n      // by the message dispatcher\n      handlerFunc.udata_id = handlerUID;\n    }\n    let handlers = this.handlerMap.get(mesgName);\n    if (!handlers) {\n      handlers = new Set();\n      this.handlerMap.set(mesgName, handlers);\n    }\n    // syntax annotation\n    if (syntax) handlerFunc.umesg = { syntax };\n    // saved function to handler\n    handlers.add(handlerFunc);\n    return this;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** API: unsubscribe a handlerFunc function from a particular event\n   */\n  UnhandleMessage(mesgName, handlerFunc) {\n    if (!arguments.length) {\n      this.handlerMap.clear();\n    } else if (arguments.length === 1) {\n      this.handlerMap.delete(mesgName);\n    } else {\n      const handlers = this.handlerMap.get(mesgName);\n      if (handlers) {\n        handlers.delete(handlerFunc);\n      }\n    }\n    return this;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** API: trigger a message with the data object payload, sending to all handlers\n    that implement that event. Includer sender's unisys id to prevent the sender\n    to receiving its own message back if it happens to implement the message as\n    well. dstScope is 'net' or 'local' to limit where to send, or 'all'\n    for everyone on net or local\n */\n  Send(mesgName, inData, options = {}) {\n    let { srcUID, type } = options;\n    let { toLocal = true, toNet = true } = options;\n    const handlers = this.handlerMap.get(mesgName);\n    /// toLocal\n    if (handlers && toLocal)\n      for (let handlerFunc of handlers) {\n        // handlerFunc signature: (data,dataReturn) => {}\n        // handlerFunc has udata_id property to note originating UDATA object\n        // skip \"same origin\" calls\n        if (srcUID && handlerFunc.udata_id === srcUID) {\n          if (DBG)\n            console.warn(\n              `MessagerSend: [${mesgName}] skip call since origin = destination; use Broadcast() if intended`\n            );\n          continue;\n        }\n        // trigger the handler (no return expected)\n        handlerFunc(inData, {\n          /*control functions go here*/\n        });\n      } // end toLocal\n    /// toNetwork\n    if (toNet) {\n      let pkt = new NetMessage(mesgName, inData, type);\n      pkt.SocketSend();\n    } // end toNetwork\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** API: wrapper for Send() used when you want every handlerFunc, including\n    the sender, to receive the event even if it is the one who sent it.\n */\n  Signal(mesgName, data, options = {}) {\n    if (options.srcUID) {\n      console.warn(\n        `overriding srcUID ${options.srcUID} with NULL because Signal() doesn't use it`\n      );\n      options.srcUID = null;\n    }\n    this.Send(mesgName, data, options);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** API: Return an array of Promises. Called by UDATA.Call().\n   */\n  Call(mesgName, inData, options = {}) {\n    let { srcUID, type } = options;\n    let { toLocal = true, toNet = true } = options;\n    const handlers = this.handlerMap.get(mesgName);\n    let promises = [];\n    /// toLocal\n    if (handlers && toLocal) {\n      for (let handlerFunc of handlers) {\n        // handlerFunc signature: (data,dataReturn) => {}\n        // handlerFunc has udata_id property to note originating UDATA object\n        // skip \"same origin\" calls\n        if (srcUID && handlerFunc.udata_id === srcUID) {\n          if (DBG)\n            console.warn(\n              `MessagerCall: [${mesgName}] skip call since origin = destination; use Broadcast() if intended`\n            );\n          continue;\n        }\n        // Create a promise. if handlerFunc returns a promise, it follows\n        let p = f_MakeResolverFunction(handlerFunc, inData);\n        promises.push(p);\n      } // end toLocal\n    }\n    /// resolver function\n    /// remember MESSAGER class is used for more than just Network Calls\n    /// the state manager also uses it, so the resolved value may be of any type\n    function f_MakeResolverFunction(handlerFunc) {\n      return new Promise((resolve, reject) => {\n        let retval = handlerFunc(inData, {\n          /*control functions go here*/\n        });\n        resolve(retval);\n      });\n    }\n    /// toNetwork\n    if (toNet) {\n      type = type || 'mcall';\n      let pkt = new NetMessage(mesgName, inData, type);\n      let p = pkt.QueueTransaction();\n      promises.push(p);\n    } // end toNetwork\n\n    /// return all queued promises\n    return promises;\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** API: Return a list of messages handled by this Messager instance\n   */\n  MessageNames() {\n    let handlers = [];\n    this.handlerMap.forEach((value, key) => {\n      handlers.push(key);\n      if (DBG) console.log('handler: ' + key);\n    });\n    return handlers;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** API: Verify that message exists\n   */\n  HasMessageName(msg = '') {\n    return this.handlerMap.has(msg);\n  }\n} // class Messager\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = Messager;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    UNISYS MODULE SHELL\n\n    A simple shell with a unique id and unique name. Currently this is just\n    a utility class for maintaining naming convention for modules, and\n    serves as the interface for module management within the UNISYS universe\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst LIFECYCLE = require('unisys/client-lifecycle');\nconst PATH = require('system/util/path');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst BAD_NAME = 'name parameter must be a string or unisys module';\nconst NOT_UNIQUE = 'name must be unique';\n\n/// MODULE DECLARATIONS ///////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar MODULES = new Map(); // unisys modules map\nvar MODULES_COUNTER = 1; // unisys modules counter\n\n/// UNISYS MODULE CLASS ///////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Instances of this class are used to participate in the UNISYS lifecycle.\n    Constructor receives the value of module.id, which is used to help scope\n    what lifecycle hooks are distributed to which module\n */\nclass UnisysModule {\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** initializer is the value module.id or another instance of UnisysModule,\n      which is used to create a derivative name of form 'initializer name:0'\n   */\n  constructor(module) {\n    if (module === undefined) throw Error(BAD_NAME);\n    // can pass another unisys modules to create derived name\n    if (module instanceof UnisysModule) {\n      this.module_id = module.AutoName();\n    } else if (typeof module === 'string') {\n      // otherwise, copy the initializer\n      this.module_id = module;\n    }\n    if (MODULES.has(this.name)) throw Error(NOT_UNIQUE);\n\n    // save unique information\n    this.uid = `UMOD_${MODULES_COUNTER++}`;\n\n    // save derivative subname counter\n    this.subnameCounter = 0;\n\n    // save module in the global module list\n    MODULES.set(this.module_id, this);\n  }\n\n  /// PROPERTIES //////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** this is used for identifying the module. It must be unique across all\n   */\n  ModuleID() {\n    return this.module_id;\n  }\n  /** utility method to return a short name\n   */\n  ModuleName() {\n    return PATH.Basename(this.module_id);\n  }\n\n  /// UTILITIES ///////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** used to create a derivative name\n   */\n  AutoName() {\n    return `${this.module_id}:${this.subnameCounter++}`;\n  }\n  /** check if the name already exists in the MODULES collection\n   */\n  HasModule(name) {\n    return MODULES.has(name);\n  }\n\n  /// LIFECYCLE /////////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** wrap Hook function to include the ModuleID\n   */\n  Hook(phase, f) {\n    LIFECYCLE.Hook(phase, f, this.ModuleID());\n  }\n} // end UnisysModule\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = UnisysModule;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  UNISYS NETWORK implements network controls and synchronization.\n  It initializes a network connection on the CONNECT lifecycle.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/* added for pull request #81 so 'npm run lint' test appears clean */\n/* eslint-disable no-unused-vars */\n\nconst SETTINGS = require('settings');\nconst NetMessage = require('unisys/common-netmessage-class');\nconst DEFS = require('./common-defs');\nconst PROMPTS = require('system/util/prompts');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = { connect: true, handle: false };\nconst PR = PROMPTS.Pad('NETWORK');\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst WARN = PROMPTS.Pad('!!!');\nconst ERR_NM_REQ = 'arg1 must be NetMessage instance';\nconst ERR_NO_SOCKET = 'Network socket has not been established yet';\nconst ERR_BAD_UDATA = \"An instance of 'client-datalink-class' is required\";\n\n/// GLOBAL NETWORK INFO (INJECTED ON INDEX) ///////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar NETSOCK = SETTINGS.EJSProp('socket');\nvar NETCLIENT = SETTINGS.EJSProp('client');\nvar NETSERVER = SETTINGS.EJSProp('server');\n\n/// NETWORK ID VALUES /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst M0_INIT = 0;\nconst M1_CONNECTING = 1;\nconst M2_CONNECTED = 2;\nconst M3_REGISTERED = 3;\nconst M4_READY = 4;\nconst M_STANDALONE = 5;\nconst M_NOCONNECT = 6;\nvar m_status = M0_INIT;\nvar m_options = {};\n\n// heartbeat\nvar m_hearbeat_timer;\n\n/// API METHODS ///////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar NETWORK = {};\nvar UDATA = null; // assigned during NETWORK.Connect()\n\n/// CONNECT ///////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Establish connection to UNISYS server. This is called by client.js during\n    NetworkInitialize(), which itself fires after the application has rendered\n    completely.\n */\nNETWORK.Connect = function (datalink, opt) {\n  // special case: STANDALONE mode is set by a different set of magical\n  // window.NC_UNISYS properties\n  if (window.NC_UNISYS.server.ip === 'standalone') {\n    m_status = M_STANDALONE;\n    console.warn(PR, 'STANDALONE MODE: NETWORK.Connect() suppressed!');\n    NetMessage.GlobalOfflineMode();\n    if (typeof opt.success === 'function') opt.success();\n    return;\n  }\n  // if multiple network connections occur, emit warning\n  // warning: don't modify this unless you have a deep knowledge of how\n  // the webapp system works or you might break something\n  if (m_status > 0) {\n    let err = 'called twice...other views may be calling UNISYS outside of lifecycle';\n    console.error(WARN, err);\n    return;\n  }\n  m_status = M1_CONNECTING;\n\n  // check and save parms\n  if (datalink.constructor.name !== 'UnisysDataLink') {\n    throw Error(ERR_BAD_UDATA);\n  }\n  if (!UDATA) UDATA = datalink;\n  m_options = opt || {};\n\n  // create websocket\n  // uses values that were embedded in index.ejs on load\n  let wsURI = `ws://${NETSOCK.uaddr}:${NETSOCK.uport}`;\n  NETSOCK.ws = new WebSocket(wsURI);\n  if (DBG.connect) console.log(PR, 'OPEN SOCKET TO', wsURI);\n\n  // create listeners\n  NETWORK.AddListener('open', function (event) {\n    if (DBG.connect) console.log(PR, '..OPEN', event.target.url);\n    m_status = M2_CONNECTED;\n    // message handling continues in 'message' handler\n    // the first message is assumed to be registration data\n  });\n  NETWORK.AddListener('close', function (event) {\n    if (DBG.connect) console.log(PR, '..CLOSE', event.target.url);\n    NetMessage.GlobalOfflineMode();\n    m_status = M_STANDALONE;\n  });\n  // handle socket errors\n  NETWORK.AddListener('error', function (event) {\n    /** DSHACK: For Spring 2019, adding manifest support to try to\n        avoid rewriting the app with service workers\n     */\n    let appCache = window.applicationCache;\n    switch (appCache.status) {\n      case appCache.UNCACHED:\n        // this occurs if there is not a cached page\n        console.warn(WARN, 'ERROR opening command socket', event);\n        throw Error('error with command socket');\n      case appCache.IDLE: /* falls-through */\n      case appCache.CHECKING: /* falls-through */\n      case appCache.DOWNLOADING: /* falls-through */\n      case appCache.UPDATEREADY: /* falls-through */\n      case appCache.OBSOLETE:\n        // this occurs\n        console.info(WARN, 'STANDALONE MODE. USING CACHED DATA');\n        m_status = M_STANDALONE;\n        NetMessage.GlobalOfflineMode(); // deregister socket\n        // force promise to succeed\n        if (typeof m_options.success === 'function') m_options.success();\n        break;\n      default:\n        m_status = M_NOCONNECT;\n        throw Error('unknown appcache status. dumping', appCache);\n    }\n  });\n  // handle incoming messages\n  NETWORK.AddListener('message', m_HandleRegistrationMessage);\n}; // Connect()\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** After 'open' event, we expect the first message on the socket to contain\n    network session-related messages\n */\nfunction m_HandleRegistrationMessage(msgEvent) {\n  let regData = JSON.parse(msgEvent.data);\n  let { HELLO, UADDR } = regData;\n  // (1) after receiving the initial message, switch over to regular\n  // message handler\n  NETWORK.RemoveListener('message', m_HandleRegistrationMessage);\n  m_status = M3_REGISTERED;\n  // (2) initialize global settings for netmessage\n  if (DBG.connect) console.log(PR, `connected to ${UADDR}`, NETSOCK);\n  NETSOCK.ws.UADDR = NetMessage.DefaultServerUADDR();\n  NetMessage.GlobalSetup({ uaddr: UADDR, netsocket: NETSOCK.ws });\n  // (3) connect regular message handler\n  NETWORK.AddListener('message', m_HandleMessage);\n  m_status = M4_READY;\n  // (4) network is initialized\n  if (typeof m_options.success === 'function') m_options.success();\n  // (5) initialize heartbeat timer\n  m_ResetHearbeatTimer();\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** When a heartbeat ping is received, respond with a pong to let the server\n    know that we're still alive.\n */\nfunction m_RespondToHeartbeat() {\n  if (NETSOCK.ws.readyState === NETSOCK.ws.OPEN) {\n    NETSOCK.ws.send('pong', err => {\n      if (err) console.log(PR, 'error \"', err, '\" while sending response pong');\n    });\n  }\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** If a 'hearbeat' message is not received from the server every 5 seconds\n    we assume the network connection has gone down.  The timeout should be\n    greater than the server heartbeat interval set in\n    server-network.js:m_StartHeartbeat()\n\n    The UNISYSDisconnect handler only goes down when the server closes the\n    connection.  In order to detect the internet connection going down\n    (e.g. wifi) we need to check to see if we are peridically receiving\n    a heartbeat message from the server.\n */\nfunction m_ResetHearbeatTimer() {\n  clearTimeout(m_hearbeat_timer);\n  m_hearbeat_timer = setTimeout(function heartbeatStopped() {\n    if (DBG.handle)\n      console.log(\n        PR,\n        'ping heartbeat not received from server before time ran out -- YOURE DEAD!'\n      );\n    NetMessage.GlobalOfflineMode({ message: 'Client Disconnected' });\n  }, DEFS.SERVER_HEARTBEAT_INTERVAL * 2);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_HandleMessage(msgEvent) {\n  // Check Hearbeat\n  if (msgEvent.data === 'ping') {\n    if (DBG.handle) console.log(PR, '...got hearbeat!  Reset timer');\n    m_RespondToHeartbeat();\n    m_ResetHearbeatTimer();\n    return;\n  }\n\n  // Handle Regular Message\n  let pkt = new NetMessage(msgEvent.data);\n  let msg = pkt.Message();\n  if (pkt.IsOwnResponse()) {\n    if (DBG.handle) console.log(PR, 'completing transaction', msg);\n    pkt.CompleteTransaction();\n    return;\n  }\n  let data = pkt.Data();\n  let type = pkt.Type();\n  let dbgout = DBG.handle && !msg.startsWith('SRV_');\n  /// otherwise, incoming invocation from network\n  switch (type) {\n    case 'state':\n      if (dbgout) console.log(PR, 'received state change', msg);\n      break;\n    case 'msig':\n      if (dbgout) {\n        console.warn(\n          PR,\n          `ME_${NetMessage.SocketUADDR()} received msig '${msg}' from ${pkt.SourceAddress()}`,\n          data\n        );\n      }\n      UDATA.LocalSignal(msg, data);\n      pkt.ReturnTransaction();\n      break;\n    case 'msend':\n      if (dbgout) {\n        console.warn(\n          PR,\n          `ME_${NetMessage.SocketUADDR()} received msend '${msg}' from ${pkt.SourceAddress()}`,\n          data\n        );\n      }\n      UDATA.LocalSend(msg, data);\n      pkt.ReturnTransaction();\n      break;\n    case 'mcall':\n      if (dbgout) {\n        console.warn(\n          PR,\n          `ME_${NetMessage.SocketUADDR()} received mcall '${msg}' from ${pkt.SourceAddress()}`\n        );\n      }\n      UDATA.LocalCall(msg, data).then(result => {\n        if (dbgout) {\n          console.log(\n            `ME_${NetMessage.SocketUADDR()} forwarded '${msg}', returning ${JSON.stringify(\n              result\n            )}`\n          );\n        }\n        // now return the packet\n        pkt.SetData(result);\n        pkt.ReturnTransaction();\n      });\n      break;\n    default:\n      throw Error('unknown packet type', type);\n  }\n}\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Send a packet on socket connection, assuming it is valid\n */\nNETWORK.Send = function (pkt) {\n  if (!(pkt instanceof NetMessage)) throw Error(ERR_NM_REQ);\n  if (NETSOCK.ws.readyState === 1) {\n    let json = pkt.JSON();\n    if (DBG) console.log('SENDING', pkt.Message(), pkt.Data(), pkt.SeqNum());\n    NETSOCK.ws.send(json);\n  } else {\n    console.log('Socket not ReadyState 1, is', NETSOCK.ws.readyState);\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Send a packet on socket connection, return Promise\n */\nNETWORK.Call = function (pkt) {\n  if (!(pkt instanceof NetMessage)) throw Error(ERR_NM_REQ);\n  if (NETSOCK.ws.readyState === 1) {\n    let json = pkt.JSON();\n    if (DBG) console.log('CALLING', pkt.Message(), json);\n    NETSOCK.ws.send(json);\n  } else {\n    console.log('Socket not ReadyState 1, is', NETSOCK.ws.readyState);\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Force close of connection, for example if UNISYS.AppReady() fails\n */\nNETWORK.Close = function (code, reason) {\n  code = code || 1000;\n  reason = reason || 'unisys forced close';\n  NETSOCK.ws.close(code, reason);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNETWORK.AddListener = function (event, handlerFunction) {\n  if (NETSOCK.ws instanceof WebSocket) {\n    NETSOCK.ws.addEventListener(event, handlerFunction);\n  } else {\n    throw Error(ERR_NO_SOCKET);\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNETWORK.RemoveListener = function (event, handlerFunction) {\n  if (NETSOCK.ws instanceof WebSocket) {\n    NETSOCK.ws.removeEventListener(event, handlerFunction);\n  } else {\n    throw Error(ERR_NO_SOCKET);\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNETWORK.LocalInfo = function () {\n  return NETCLIENT;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNETWORK.ServerInfo = function () {\n  return NETSERVER;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNETWORK.ServerSocketInfo = function () {\n  return NETSOCK;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNETWORK.SocketUADDR = function () {\n  return NetMessage.SocketUADDR();\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNETWORK.IsStandaloneMode = function () {\n  return m_status === M_STANDALONE;\n};\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NETWORK;\n","/* eslint-disable no-debugger */\n/* eslint-disable no-alert */\nif (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Add UNISYS functions to REACT component to hide UDATA and UMODULE details\n  To use, extend components from UNISYS.Component instead of REACT.Component\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst UDATA = require('unisys/client-datalink-class');\nconst UMODULE = require('unisys/client-module-class');\nconst REFLECT = require('system/util/reflection');\n\n/// CLASS DECLARATION /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass UnisysComponent extends React.Component {\n  constructor() {\n    super();\n    this.UMODULE = new UMODULE(module.id);\n    this.UDATA = new UDATA(this.UMODULE);\n  }\n\n  /// MESSAGE HANDLING API METHODS\n  HandleMessage(m, lis) {\n    this.UDATA.HandleMessage(m, lis);\n  }\n  UnhandleMessage(m, lis) {\n    f_deprecated('DropMessage');\n    this.UDATA.UnhandleMessage(m, lis);\n  }\n  DropMessage(m, lis) {\n    this.UDATA.UnhandleMessage(m, lis);\n  }\n\n  /// SPECIAL EVENTS\n  OnDOMReady(lis) {\n    this.UMODULE.Hook('DOM_READY', lis);\n  }\n  OnReset(lis) {\n    this.UMODULE.Hook('RESET', lis);\n  }\n  OnStart(lis) {\n    this.UMODULE.Hook('START', lis);\n  }\n  OnAppReady(lis) {\n    this.UMODULE.Hook('APP_READY', lis);\n  }\n  OnRun(lis) {\n    this.UMODULE.Hook('RUN', lis);\n  }\n  OnDisconnect(lis) {\n    this.UMODULE.Hook('DISCONNECT', lis);\n  }\n\n  /// MESSAGE INVOCATION API METHODS\n  Call(m, d, o) {\n    return this.UDATA.Call(m, d, o);\n  }\n  Send(m, d, o) {\n    this.UDATA.Send(m, d, o);\n  }\n  Signal(m, d, o) {\n    this.UDATA.Signal(m, d, o);\n  }\n  AppCall(m, d, o) {\n    return this.UDATA.LocalCall(m, d, o);\n  }\n  AppSend(m, d, o) {\n    this.UDATA.LocalSend(m, d, o);\n  }\n  AppSignal(m, d, o) {\n    this.UDATA.LocalSignal(m, d, o);\n  }\n  NetSend(m, d, o) {\n    this.UDATA.NetSend(m, d, o);\n  }\n  NetCall(m, d, o) {\n    return this.UDATA.NetCall(m, d, o);\n  }\n  NetSignal(m, d, o) {\n    this.UDATA.NetSignal(m, d, o);\n  }\n  LocalCall(m, d, o) {\n    f_deprecated('AppCall');\n    return this.UDATA.LocalCall(m, d, o);\n  }\n  LocalSend(m, d, o) {\n    f_deprecated('AppSend');\n    this.UDATA.LocalSend(m, d, o);\n  }\n  LocalSignal(m, d, o) {\n    f_deprecated('AppSignal');\n    this.UDATA.LocalSignal(m, d, o);\n  }\n  /// STATE API METHODS\n  State(ns) {\n    f_deprecated('AppState');\n    return this.AppState(ns);\n  }\n  SetState(ns, so) {\n    f_deprecated('SetAppState');\n    this.SetAppState(ns, so);\n  }\n  OnStateChange(ns, lis) {\n    f_deprecated('OnAppStateChange');\n    this.OnAppStateChange(ns, lis);\n  }\n  OffStateChange(ns, lis) {\n    f_deprecated('AppStateChangeOff');\n    this.AppStateChangeOff(ns, lis);\n  }\n  /// NEW STATE API METHODS\n  AppState(ns) {\n    return this.UDATA.AppState(ns);\n  }\n  SetAppState(ns, so) {\n    this.UDATA.SetAppState(ns, so);\n  }\n  OnAppStateChange(ns, lis) {\n    this.UDATA.OnAppStateChange(ns, lis);\n  }\n  AppStateChangeOff(ns, lis) {\n    this.UDATA.AppStateChangeOff(ns, lis);\n  }\n  NetState(ns) {\n    f_unimplemented();\n  }\n  SetNetState(ns, so) {\n    f_unimplemented();\n  }\n  OnNetStateChange(ns, lis) {\n    f_unimplemented();\n  }\n  NetStateChangeOff(ns, lis) {\n    f_unimplemented();\n  }\n  /// LIFECYCLE API\n  Hook(p, f) {\n    f_unsupported('is not available for UNISYS.Component');\n  }\n} // UnisysComponent\n\nfunction f_deprecated(repl) {\n  let out = `${REFLECT.FunctionName(2)} is deprecated.`;\n  if (typeof repl === 'string') out += ` Use ${repl}() instead.`;\n  console.warn(out);\n}\n\nfunction f_unimplemented() {\n  let out = `${REFLECT.FunctionName(2)} is not yet implemented.`;\n  alert(`${out}\\n\\nCrashing now! Use javascript console to debug`);\n  console.error(out);\n  debugger;\n}\n\nfunction f_unsupported(reason) {\n  let out = `${REFLECT.FunctionName(2)} ${reason}`;\n  alert(`${out}\\n\\nCrashing now! Use javascript console to debug`);\n  console.error(out);\n  debugger;\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = UnisysComponent;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  UNISYS STATE CLASS\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/* added for pull request #81 so 'npm run lint' test appears clean */\n/* eslint-disable no-unused-vars */\n\nconst REACT = require('react');\nconst TYPEOF = require('type-detect');\nconst Messager = require('unisys/client-messager-class');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst BAD_NSPACE = 'namespace must be string without _ chars';\nconst BAD_LISTENR = 'listener must be function';\nconst NO_UID_FLTR =\n  'UNISYS.OnStateChange: pass DST_UID parameter to enable echo cancellation';\nconst WARN_PROP_MISMATCH = 'MergeState is changing a property type';\n\n/// MODULE DECLARATIONS ///////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar USTATE = {};\nvar STATES = new Map(); // namespace str => shallow state object\nvar STATES_LISTEN = new Map(); // namespace str => emitter\n\n/// STATE /////////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** UNISYS namespaces are transformed to uppercase.\n    A namespace must be a string that does not contain reserved char '_'\n */\nfunction m_ConformNamespace(namespace) {\n  // must be a string\n  if (typeof namespace !== 'string') return undefined;\n  // disallow empty string\n  if (!namespace) return undefined;\n  // always uppercase\n  namespace = namespace.toUpperCase();\n  // expand * shortcut to _ROOT\n  if (namespace === '*') return '_ROOT';\n  // disallow _ reserved names\n  if (namespace.indexOf('_') > -1) return undefined;\n  // ok we're good\n  return namespace;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Used for merging and concatenating state, when a simple copy-overwrite\n    simply will not do.\n */\nfunction m_ConformState(namespace, newState, opt) {\n  opt = opt || { merge: true };\n  // make a copy of the old state\n  let state = Object.assign({}, STATES.get(namespace));\n  if (DBG) console.log(`merging state namespace '${namespace}' with`, newState);\n\n  // iterate over all properties in newState and merge them\n  // accordingly. This is *NOT* a deep merge.\n  Object.entries(newState).forEach(entry => {\n    let k = entry[0]; // current prop name in newstate\n    let v = entry[1]; // current prop value in newstate\n    let prop = state[k], // old prop value\n      nprop = v, // new prop value\n      t_old, // type to be filled-in\n      t_new;\n\n    // use type-detect library to get type\n    t_old = TYPEOF(prop);\n    t_new = TYPEOF(nprop);\n\n    // A BUNCH OF SPECIAL CASE CHECKS //\n    if (t_old === 'undefined' || t_old === 'null') {\n      // if the value doesn't exist in current state\n      // just update with new prop\n      prop = nprop;\n    } else if (t_old === t_new) {\n      // if there is a type match, then figure\n      // out how to merge based on type\n      switch (t_old) {\n        case 'Object':\n          if (DBG) console.log(`merge objects`);\n          // merge object props\n          prop = Object.assign(prop, nprop);\n          break;\n        case 'Array': // note uppercase (type-detect)\n          if (DBG) console.log(`merge arrays`);\n          // merge arrays no dupes (https://stackoverflow.com/a/36469404)\n          // ES6 fanciness using destructuring (...) and Sets\n          if (opt.merge) prop = [...new Set([...prop, ...nprop])];\n          else if (opt.concat) prop = prop.concat(nprop);\n          break;\n        default:\n          if (DBG) console.log(`copy values`);\n          // just overwrite otherwise\n          prop = nprop;\n      } // end switch t_old\n    } else {\n      // if there is a type mismatch, write\n      console.warn(\n        `${WARN_PROP_MISMATCH} key:${k}\\n type '${t_new}' overwriting '${t_old}'`\n      );\n      prop = nprop;\n    }\n    // update state place\n    state[k] = prop;\n  }); // end Object.entries\n\n  return state;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Retrieve the emitter associated with a namespace, which contains handles\n    all the listeners associated with a namespace. Always returns a valid\n    emitter, creating it if the passed namespace is valid.\n */\nfunction m_GetStateMessager(nspace) {\n  nspace = m_ConformNamespace(nspace);\n  if (!nspace) throw Error(BAD_NSPACE);\n  let msgr = STATES_LISTEN.get(nspace);\n  if (!msgr) {\n    msgr = new Messager();\n    STATES_LISTEN.set(nspace, msgr);\n  }\n  return msgr;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: update the selected namespace state with new state\n */\nUSTATE.SetState = (namespace, newState, src_uid) => {\n  namespace = m_ConformNamespace(namespace);\n  if (!namespace) throw Error(BAD_NSPACE);\n  // update old state by partially overwrite of state\n  if (!STATES.has(namespace)) STATES.set(namespace, {});\n  // NOTE Because we're using Object.assign:\n  // * Objects already in the state will remain in the state\n  //   if not overwritten by newState.  This can result in\n  //   the mysterious re-appearance of old paramters.\n  // * No deep clones\n  Object.assign(STATES.get(namespace), newState);\n  // forward new state to namespace listeners\n  let msgr = m_GetStateMessager(namespace);\n  // don't pass with source_id because state should go everywhere\n  // a register exists, even if it's the originating module\n  msgr.Send(namespace, newState, { type: 'state', toLocal: true, toNet: false });\n  // future: forward also to network\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: merge objects and arrays in state\n */\nUSTATE.MergeState = (namespace, newState, src_uid) => {\n  namespace = m_ConformNamespace(namespace);\n  if (!namespace) throw Error(BAD_NSPACE);\n  // update old state by partially overwrite of state\n  if (!STATES.has(namespace)) STATES.set(namespace, {});\n\n  // merge the states with no duplicates in arrays\n  let state = m_ConformState(namespace, newState, { merge: true });\n\n  // update the namespace\n  STATES.set(namespace, state);\n\n  // forward new state to namespace listeners\n  let msgr = m_GetStateMessager(namespace);\n  // don't pass with source_id because state should go everywhere\n  // a register exists, even if it's the originating module\n  msgr.Send(namespace, newState, { type: 'state', toLocal: true, toNet: false });\n  // future: forward also to network\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: merge objects and concat arrays in state\n */\nUSTATE.ConcatState = (namespace, newState, src_uid) => {\n  namespace = m_ConformNamespace(namespace);\n  if (!namespace) throw Error(BAD_NSPACE);\n  // update old state by partially overwrite of state\n  if (!STATES.has(namespace)) STATES.set(namespace, {});\n\n  // merge the states with no duplicates in arrays\n  let state = m_ConformState(namespace, newState, { concat: true });\n\n  // update the namespace\n  STATES.set(namespace, state);\n\n  // forward new state to namespace listeners\n  let msgr = m_GetStateMessager(namespace);\n  // don't pass with source_id because state should go everywhere\n  // a register exists, even if it's the originating module\n  msgr.Send(namespace, newState, { type: 'state', toLocal: true, toNet: false });\n  // future: forward also to network\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: retrieve a COPY of state object of namespace\n */\nUSTATE.State = namespace => {\n  namespace = m_ConformNamespace(namespace);\n  if (!namespace) throw Error(BAD_NSPACE);\n  return Object.assign({}, STATES.get(namespace));\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: subscribe to namestate updates\n */\nUSTATE.OnStateChange = (namespace, listener, src_uid) => {\n  namespace = m_ConformNamespace(namespace);\n  if (!namespace) throw Error(BAD_NSPACE);\n  if (typeof listener !== 'function') throw Error(BAD_LISTENR);\n  if (src_uid === undefined) console.warn(NO_UID_FLTR);\n  let namespaceMessager = m_GetStateMessager(namespace);\n  namespaceMessager.HandleMessage(namespace, listener, { handlerUID: src_uid });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: unsubscribe to namestate updates\n */\nUSTATE.OffStateChange = (namespace, listener) => {\n  namespace = m_ConformNamespace(namespace);\n  if (!namespace) throw Error(BAD_NSPACE);\n  if (typeof listener !== 'function') throw Error(BAD_LISTENR);\n  let namespaceMessager = m_GetStateMessager(namespace);\n  namespaceMessager.UnhandleMessage(namespace, listener);\n};\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = USTATE;\n","/* eslint-disable no-debugger */\nif (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  This is the main browser client UNISYS module, which implements:\n\n    LIFECYCLE - a promise-based hooked run order system\n    MESSAGING - a networked remote procedure call/event system\n    STATE     - a networked global application state system\n\n  UNISYS is designed to work with React or our own module system:\n  for modules:\n    UMOD = UNISYS.NewModule()\n    UDATA = UNISYS.NewDataLink(UMOD)\n  for React:\n    COMPONENT = class MyComponent extends UNISYS.Component\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/* added for pull request #81 so 'npm run lint' test appears clean */\n/* eslint-disable no-unused-vars */\n\n/// CLASSES ///////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst UniData = require('unisys/client-datalink-class');\nconst UniModule = require('unisys/client-module-class');\nconst UniComponent = require('unisys/client-react-component');\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst SETTINGS = require('settings');\nconst LIFECYCLE = require('unisys/client-lifecycle');\nconst STATE = require('unisys/client-state');\nconst NETWORK = require('unisys/client-network');\nconst PROMPTS = require('system/util/prompts');\nconst PR = PROMPTS.Pad('UNISYS');\n\n/// INITIALIZE MAIN MODULE ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UNISYS = new UniModule(module.id);\nvar UDATA = new UniData(UNISYS);\n\n/// UNISYS MODULE MAKING //////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Make new module with UNISYS convenience methods\n */\nUNISYS.NewModule = uniqueName => {\n  return new UniModule(uniqueName);\n};\n\n/// UNISYS CONNECTOR //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Make new module with UNISYS convenience methods\n */\nUNISYS.NewDataLink = (module, optName) => {\n  return new UniData(module, optName);\n};\n\n/// UNISYS MESSAGE REGISTRATION ///////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nUNISYS.RegisterMessagesPromise = (messages = []) => {\n  if (NETWORK.IsStandaloneMode()) {\n    console.warn(PR, 'STANDALONE MODE: RegisterMessagesPromise() suppressed!');\n    return Promise.resolve();\n  }\n  if (messages.length) {\n    try {\n      messages = UniData.ValidateMessageNames(messages);\n    } catch (e) {\n      console.error(e);\n    }\n  } else {\n    messages = UniData.MessageNames();\n  }\n  return new Promise((resolve, reject) => {\n    UDATA.Call('SRV_REG_HANDLERS', { messages }).then(data => {\n      resolve(data);\n    });\n  });\n};\n\n/// LIFECYCLE METHODS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: LIFECYCLE Hook() functions\n */\nUNISYS.Hook = (phase, f) => {\n  if (typeof phase !== 'string') throw Error('arg1 is phase as string');\n  if (typeof f !== 'function') throw Error('arg2 is function callback');\n  LIFECYCLE.Hook(phase, f, UNISYS.ModuleID()); // pass phase and hook function\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: System Initialize\n */\nUNISYS.SystemInitialize = module_id => {\n  UNISYS.SetScope(module_id);\n  SETTINGS.ForceReloadSingleApp();\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API HELPER: LIFECYCLE Scope() functions\n    The 'scope' is used by LIFECYCLE to determine what modules implementing\n    various HOOKS will be called. The root_module_id is a path that will\n    be considered the umbrella of \"allowed to hook\" modules. For REACT apps,\n    this is the root directory of the root view component. Additionally,\n    the unisys and system directories are allowed to run their hooks\n */\nUNISYS.SetScope = root_module_id => {\n  LIFECYCLE.SetScope(root_module_id); // pass phase and hook function\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API HELPER: SETTINGS ForceReloadSingleApp\n    checks to see if settings flag is \"dirty\"; if it is, then reload the\n    location to ensure no linger apps are running in the background. Yes\n    this is a bit of a hack.\n */\n\nUNISYS.ForceReloadOnNavigation = () => {\n  SETTINGS.ForceReloadOnNavigation();\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API HELPER: return TRUE if passed module.id is within the current set\n    scope\n */\nUNISYS.InScope = module_id => {\n  let currentScope = LIFECYCLE.Scope();\n  return module_id.includes(currentScope);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: application startup\n */\nUNISYS.EnterApp = async () => {\n  try {\n    await LIFECYCLE.Execute('TEST_CONF'); // TESTCONFIG hook\n    await LIFECYCLE.Execute('INITIALIZE'); // INITIALIZE hook\n    await LIFECYCLE.Execute('LOADASSETS'); // LOADASSETS hook\n    await LIFECYCLE.Execute('CONFIGURE'); // CONFIGURE support modules\n  } catch (e) {\n    console.error(\n      'EnterApp() Lifecycle Error. Check phase execution order effect on data validity.\\n',\n      e\n    );\n    debugger;\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: call this when the view system's DOM has stabilized and is ready\n    for manipulation by other code\n */\nUNISYS.SetupDOM = async () => {\n  try {\n    await LIFECYCLE.Execute('DOM_READY'); // GUI layout has finished composing\n  } catch (e) {\n    console.error(\n      'SetupDOM() Lifecycle Error. Check phase execution order effect on data validity.\\n',\n      e\n    );\n    debugger;\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: network startup\n */\nUNISYS.JoinNet = () => {\n  return new Promise((resolve, reject) => {\n    try {\n      NETWORK.Connect(UDATA, { success: resolve, failure: reject });\n    } catch (e) {\n      console.error(\n        'EnterNet() Lifecycle Error. Check phase execution order effect on data validity.\\n',\n        e\n      );\n      debugger;\n    }\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: configure system before run\n */\nUNISYS.SetupRun = async () => {\n  try {\n    await LIFECYCLE.Execute('RESET'); // RESET runtime datastructures\n    await LIFECYCLE.Execute('START'); // START running\n    await LIFECYCLE.Execute('APP_READY'); // tell network APP_READY\n    await LIFECYCLE.Execute('RUN'); // tell network APP_READY\n  } catch (e) {\n    console.error(\n      'SetupRun() Lifecycle Error. Check phase execution order effect on data validity.\\n',\n      e\n    );\n    debugger;\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: handle periodic updates for a simulation-driven timestep\n */\nUNISYS.Run = async () => {\n  try {\n    await LIFECYCLE.Execute('UPDATE');\n  } catch (e) {\n    console.error(e);\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: do the Shutdown lifecycle\n    NOTE ASYNC ARROW FUNCTION (necessary?)\n */\nUNISYS.BeforePause = async () => {\n  await LIFECYCLE.Execute('PREPAUSE');\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: do the Shutdown lifecycle\n    NOTE ASYNC ARROW FUNCTION (necessary?)\n */\nUNISYS.Paused = async () => {\n  await LIFECYCLE.Execute('PAUSE');\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: do the Shutdown lifecycle\n    NOTE ASYNC ARROW FUNCTION (necessary?)\n */\n\nUNISYS.PostPause = async () => {\n  await LIFECYCLE.Execute('POSTPAUSE');\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: do the Shutdown lifecycle\n    NOTE ASYNC ARROW FUNCTION (necessary?)\n */\nUNISYS.CleanupRun = async () => {\n  await LIFECYCLE.Execute('STOP');\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: application offline\n    NOTE ASYNC ARROW FUNCTION (necessary?)\n */\nUNISYS.ServerDisconnect = async () => {\n  await LIFECYCLE.Execute('DISCONNECT');\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: application shutdown\n    NOTE ASYNC ARROW FUNCTION (necessary?)\n */\nUNISYS.ExitApp = async () => {\n  await LIFECYCLE.Execute('UNLOADASSETS');\n  await LIFECYCLE.Execute('SHUTDOWN');\n};\n\n/// NETWORK INFORMATION ///////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** return the current connected Socket Address (e.g. UADDR_12)\n */\n\nUNISYS.SocketUADDR = () => {\n  return NETWORK.SocketUADDR();\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nUNISYS.IsStandaloneMode = () => {\n  return NETWORK.IsStandaloneMode();\n};\n\n/// DATA LOGGING //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** send a logging message\n */\nUNISYS.Log = (event, ...items) => {\n  if (typeof event !== 'string') {\n    console.error(\"UNISYS.Log( 'eventString', value, value, value... )\");\n  }\n  UDATA.NetSignal('SRV_LOG_EVENT', { event, items });\n};\n\n/// REACT INTEGRATION /////////////////////////////////////////////////////////\n/** return the referene to the UNISYS extension of React.Component\n */\nUNISYS.Component = UniComponent;\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = UNISYS;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Store common system definitions here between client and server modules.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar DEFS = {};\nDEFS.SERVER_HEARTBEAT_INTERVAL = 5000; // ms\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = DEFS;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  NetMessage objects are sent between the browser and server as part of the\n  UNISYS messaging system. Unlike NetMessages of the previous version of STEP,\n  a NetMessage does not require addressing since the SERVER distributes\n  messages to UNISYS addresses that have registered for them.\n\n  The NetMessage declaration is SHARED in both node and browser javascript\n  codebases.\n\n  NetMessages also provide the data context for \"transactions\" of calls.\n  The netmessage_id and data packet are used by the originating webapp\n  to remember a sequence of callback functions. When a NetMessage is\n  received with a seq_num > 0, it's assumed to be a return transaction,\n  and its callback chain can be invoked. The data is forwarded to the\n  callback. For more details, see the CallSequence class that manages\n  the passing of data.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = { send: false, transact: false };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar m_id_counter = 0;\nvar m_id_prefix = 'PKT';\nvar m_transactions = {};\nvar m_netsocket = null;\nvar m_group_id = null;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst M_INIT = 'init';\nconst M_ONLINE = 'online';\nconst M_STANDALONE = 'offline';\nconst M_CLOSED = 'closed';\n// const M_ERROR = 'error';\nvar m_mode = M_INIT;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst PROMPTS = require('../system/util/prompts');\nconst PR = PROMPTS.Pad('PKT');\nconst ERR = ':ERR:';\nconst ERR_NOT_NETMESG = ERR + PR + 'obj does not seem to be a NetMessage';\nconst ERR_BAD_PROP = ERR + PR + 'property argument must be a string';\nconst ERR_ERR_BAD_CSTR = ERR + PR + 'constructor args are string, object';\nconst ERR_BAD_SOCKET = ERR + PR + 'sender object must implement send()';\nconst ERR_DUPE_TRANS = ERR + PR + 'this packet transaction is already registered!';\n// const ERR_NO_GLOB_UADDR = ERR + PR + 'packet sending attempted before UADDR is set!';\nconst ERR_UNKNOWN_TYPE = ERR + PR + 'packet type is unknown:';\nconst ERR_NOT_PACKET = ERR + PR + 'passed object is not a NetMessage';\nconst ERR_UNKNOWN_RMODE = ERR + PR + 'packet routine mode is unknown:';\nconst KNOWN_TYPES = ['msend', 'msig', 'mcall', 'state'];\nconst ROUTING_MODE = ['req', 'res'];\n\n/// UNISYS NETMESSAGE CLASS ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** A UNetMessage encapsulates a specific message and data payload for sending\n    across the network.\n */\nclass NetMessage {\n  constructor(msg, data, type) {\n    // OPTION 1\n    // create NetMessage from (generic object)\n    if (typeof msg === 'object' && data === undefined) {\n      // make sure it has a msg and data obj\n      if (typeof msg.msg !== 'string' || typeof msg.data !== 'object') {\n        console.log('bad message object', JSON.stringify(msg));\n        throw ERR_NOT_NETMESG;\n      }\n      // merge properties into this new class instance and return it\n      Object.assign(this, msg);\n      m_SeqIncrement(this);\n      return this;\n    }\n    // OPTION 2\n    // create NetMessage from JSON-encoded string\n    if (typeof msg === 'string' && data === undefined) {\n      let obj = JSON.parse(msg);\n      Object.assign(this, obj);\n      m_SeqIncrement(this);\n      return this;\n    }\n    // OPTION 3\n    // create new NetMessage from scratch (mesg,data)\n    // unique id for every NetMessage\n    if (typeof type === 'string') m_CheckType(type);\n    if (typeof msg !== 'string' || typeof data !== 'object') {\n      throw ERR_ERR_BAD_CSTR;\n    }\n    // allow calls with null data by setting to empty object\n    this.data = data || {};\n    this.msg = msg;\n    // id and debugging memo support\n    this.id = this.MakeNewID();\n    this.rmode = ROUTING_MODE[0]; // is default 't_req' (trans request)\n    this.type = type || KNOWN_TYPES[0]; // is default 'msend' (no return)\n    this.memo = '';\n    // transaction support\n    this.seqnum = 0; // positive when part of transaction\n    this.seqlog = []; // transaction log\n    // addressing support\n    this.s_uaddr = NetMessage.SocketUADDR() || null; // first originating uaddr set by SocketSend()\n    this.s_group = null; // session groupid is set by external module once validated\n    this.s_uid = null; // first originating UDATA srcUID\n    // filtering support\n  } // constructor\n\n  /// ACCESSSOR METHODS ///////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** returns the type\n   */\n  Type() {\n    return this.type;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** returns true if type matches\n   */\n  IsType(type) {\n    return this.type === type;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** returns the type\n   */\n  SetType(type) {\n    this.type = m_CheckType(type);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** returns the message\n   */\n  Message() {\n    return this.msg;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** sets the message field\n   */\n  SetMessage(msgstr) {\n    this.msg = msgstr;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** returns the entire data payload or the property within the data payload\n      (can return undefined if property doesn't exist)\n   */\n  Data(prop) {\n    if (!prop) return this.data;\n    if (typeof prop === 'string') return this.data[prop];\n    throw ERR_BAD_PROP;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** convenience method to set data object entirely\n   */\n  SetData(propOrVal, val) {\n    if (typeof propOrVal === 'object') {\n      this.data = propOrVal;\n      return;\n    }\n    if (typeof propOrVal === 'string') {\n      this.data[propOrVal] = val;\n      return;\n    }\n    throw ERR_BAD_PROP;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** returns truthy value (this.data) if the passed msgstr matches the\n      message associated with this NetMessage\n   */\n  Is(msgstr) {\n    return msgstr === this.msg ? this.data : undefined;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** convenience function return true if server message\n   */\n  IsServerMessage() {\n    return this.msg.startsWith('SRV_');\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** getter/setter for the memo description field\n   */\n  Memo() {\n    return this.memo;\n  }\n  SetMemo(memo) {\n    this.memo = memo;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** convenience function to return JSON version of this object\n   */\n  JSON() {\n    return JSON.stringify(this);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** return the session groupid (CLASS-PROJ-HASH) that's been set globally\n   */\n  SourceGroupID() {\n    return this.s_group;\n  }\n\n  /// TRANSACTION SUPPORT /////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** The sequence number is positive if this packet is reused\n   */\n  SeqNum() {\n    return this.seqnum;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Return the originating address of this netmessage packet. It is valid\n      only after the packet has been sent at least once.\n   */\n  SourceAddress() {\n    // is this packet originating from server to a remote?\n    if (\n      this.s_uaddr === NetMessage.DefaultServerUADDR() &&\n      !this.msg.startsWith('SVR_')\n    ) {\n      return this.s_uaddr;\n    }\n    // this is a regular message forward to remote handlers\n    return this.IsTransaction() ? this.seqlog[0] : this.s_uaddr;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  CopySourceAddress(pkt) {\n    if (pkt.constructor.name !== 'NetMessage') throw Error(ERR_NOT_PACKET);\n    this.s_uaddr = pkt.SourceAddress();\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** return an informational string about the packet useful for logging\n   */\n  Info(key) {\n    switch (key) {\n      case 'src': /* falls-through */\n      default:\n        return this.SourceGroupID()\n          ? `${this.SourceAddress()} [${this.SourceGroupID()}]`\n          : `${this.SourceAddress()}`;\n    }\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** return an informational Object about the packet useful for logging\n   *  Used to provide a predictable format for Research Logging\n   */\n  InfoObj(key) {\n    switch (key) {\n      case 'src': /* falls-through */\n      default:\n        return this.SourceGroupID()\n          ? { uaddr: this.SourceAddress(), group: this.SourceGroupID() }\n          : { uaddr: this.SourceAddress(), group: undefined };\n    }\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  MakeNewID() {\n    let idStr = (++m_id_counter).toString();\n    this.id = m_id_prefix + idStr.padStart(5, '0');\n    return this.id;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Send packet on either provided socket or default socket. Servers provide\n      the socket because it's handling multiple sockets from different clients.\n   */\n  SocketSend(socket = m_netsocket) {\n    if (m_mode === M_ONLINE || m_mode === M_INIT) {\n      this.s_group = NetMessage.GlobalGroupID();\n      let dst = socket.UADDR || 'unregistered socket';\n      if (!socket) throw Error('SocketSend(sock) requires a valid socket');\n      if (DBG.send) {\n        let status = `sending '${this.Message()}' to ${dst}`;\n        console.log(PR, status);\n      }\n      // for server-side ws library, send supports a function callback\n      // for WebSocket, this is ignored\n      socket.send(this.JSON(), err => {\n        if (err) console.error(`\\nsocket ${socket.UADDR} reports error ${err}\\n`);\n      });\n    } else if (m_mode !== M_STANDALONE) {\n      console.log(PR, \"SocketSend: Can't send because NetMessage mode is\", m_mode);\n    } else {\n      console.warn(PR, 'STANDALONE MODE: SocketSend() suppressed!');\n    }\n    // FYI: global m_netsocket is not defined on server, since packets arrive on multiple sockets\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Create a promise to resolve when packet returns\n   */\n  QueueTransaction(socket = m_netsocket) {\n    if (m_mode === M_STANDALONE) {\n      console.warn(PR, 'STANDALONE MODE: QueueTransaction() suppressed!');\n      return Promise.resolve();\n    }\n    // global m_netsocket is not defined on server, since packets arrive on multiple sockets\n    if (!socket) throw Error('QueueTransaction(sock) requires a valid socket');\n    // save our current UADDR\n    this.seqlog.push(NetMessage.UADDR);\n    let dbg = DBG.transact && !this.IsServerMessage();\n    let p = new Promise((resolve, reject) => {\n      var hash = m_GetHashKey(this);\n      if (m_transactions[hash]) {\n        reject(Error(ERR_DUPE_TRANS + ':' + hash));\n      } else {\n        // save the resolve function in transactions table;\n        // promise will resolve on remote invocation with data\n        m_transactions[hash] = function (data) {\n          if (dbg) {\n            console.log(PR, 'resolving promise with', JSON.stringify(data));\n          }\n          resolve(data);\n        };\n        this.SocketSend(socket);\n      }\n    });\n    return p;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** return the 'routing mode':\n        req/res is request/reply (message requests and optional response)\n        f_req/f_res is forwarded request/reply (forwarded messages and optional return)\n        the f_res is converted to res and sent back to original requester\n   */\n  RoutingMode() {\n    return this.rmode;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  IsRequest() {\n    return this.rmode === 'req';\n  }\n  IsOwnResponse() {\n    return this.rmode === 'res';\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  /** If this packet is a returned transaction, then return true\n   */\n  IsTransaction() {\n    return (\n      this.rmode !== ROUTING_MODE[0] &&\n      this.seqnum > 0 &&\n      this.seqlog[0] === NetMessage.UADDR\n    );\n  }\n  ///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\tupdate the sequence metadata and return on same socket\n   */\n  ReturnTransaction(socket = m_netsocket) {\n    // global m_netsocket is not defined on server, since packets arrive on multiple sockets\n    if (!socket) throw Error('ReturnTransaction(sock) requires a valid socket');\n    // note: seqnum is already incremented by the constructor if this was\n    // a received packet\n    // add this to the sequence log\n    this.seqlog.push(NetMessage.UADDR);\n    this.rmode = m_CheckRMode('res');\n    this.SocketSend(socket);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** If this is a transaction packet that is returned, then execute the stored\n      resolver function from the promise stored in m_transactions, which will\n      then trigger .then() following any calls\n   */\n  CompleteTransaction() {\n    let dbg = DBG.transact && !this.IsServerMessage();\n    var hash = m_GetHashKey(this);\n    var resolverFunc = m_transactions[hash];\n    if (dbg) console.log(PR, 'CompleteTransaction', hash);\n    if (typeof resolverFunc !== 'function') {\n      throw Error(\n        `transaction [${hash}] resolverFunction is type ${typeof resolverFunc}`\n      );\n    } else {\n      resolverFunc(this.data);\n      Reflect.deleteProperty(m_transactions[hash]);\n    }\n  }\n} // class NetMessage\n\n/// STATIC CLASS METHODS //////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** set the NETWORK interface object that implements Send()\n    This class operates both under the server and the client.\n    This is a client feature.\n */\nNetMessage.GlobalSetup = function (config) {\n  let { netsocket, uaddr } = config;\n  if (uaddr) NetMessage.UADDR = uaddr;\n  // NOTE: m_netsocket is set only on clients since on server, there are multiple sockets\n  if (netsocket) {\n    if (typeof netsocket.send !== 'function') throw ERR_BAD_SOCKET;\n    console.log(PR, 'GlobalSetup: netsocket set, mode online');\n    m_netsocket = netsocket;\n    m_mode = M_ONLINE;\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** cleanup any allocated storage. This class operates both under the\n    server and the client. This is a client feature.\n */\nNetMessage.GlobalCleanup = function () {\n  if (m_netsocket) {\n    console.log(PR, 'GlobalCleanup: deallocating netsocket, mode closed');\n    m_netsocket = null;\n    m_mode = M_CLOSED;\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** cleanup any allocated storage internally. This class operates both under the\n    server and the client. This is a client feature.\n */\nNetMessage.GlobalOfflineMode = function (data) {\n  m_mode = M_STANDALONE;\n  if (m_netsocket) {\n    console.warn(PR, 'STANDALONE MODE: NetMessage disabling network');\n    m_netsocket = null;\n    // The disconnect is detected by client-network.js.\n    // If the disconnect is due to a missing ping heartbeat from the server\n    // (usually as a result of wifi/internet connection going down)\n    // it will include a data.message explaining 'Client Disconnect'.\n    // If there's no data.message, then this request came from\n    // either a standalone connect, a server \"close\" event,\n    // or a server \"error\" event.\n    let event = new CustomEvent('UNISYSDisconnect', {\n      detail: {\n        message: data ? data.message : 'Server Disconnected'\n      }\n    });\n    console.log('dispatching event to', document, event);\n    document.dispatchEvent(event);\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** return the address (socket_id) assigned to this app instance\n */\nNetMessage.SocketUADDR = function () {\n  return NetMessage.UADDR;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Return a default server UADDR\n */\nNetMessage.DefaultServerUADDR = function () {\n  return 'SVR_01';\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Return current SessionID string\n */\nNetMessage.GlobalGroupID = function () {\n  return m_group_id;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNetMessage.GlobalSetGroupID = function (token) {\n  m_group_id = token;\n};\n\n/// PRIVATE CLASS HELPERS /////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** when a packet is reconstructed from an existing object or json string,\n    its sequence number is incremented, and the old source uaddr is pushed\n    onto the seqlog stack.\n */\nfunction m_SeqIncrement(pkt) {\n  pkt.seqnum++;\n  return pkt;\n}\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/**\treturn the hash used for storing transaction callbacks\n */\nfunction m_GetHashKey(pkt) {\n  let hash = `${pkt.SourceAddress()}:${pkt.id}`;\n  return hash;\n}\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** is this an allowed type? throw error if not\n */\nfunction m_CheckType(type) {\n  if (type === undefined) {\n    throw new Error('must pass a type string, not ' + type);\n  }\n  if (!KNOWN_TYPES.includes(type)) throw `${ERR_UNKNOWN_TYPE} '${type}'`;\n  return type;\n}\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** is this an allowed mode? throw error if not\n */\nfunction m_CheckRMode(mode) {\n  if (mode === undefined) {\n    throw new Error('must pass a mode string, not ' + mode);\n  }\n  if (!ROUTING_MODE.includes(mode)) throw `${ERR_UNKNOWN_RMODE} '${mode}'`;\n  return mode;\n}\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NetMessage;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Session Utilities\n  collection of session-related data structures\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/* added for pull request #81 so 'npm run lint' test appears clean */\n/* eslint-disable no-unused-vars */\n\n/// DEBUGGING /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\n//\n\n/// SYSTEM LIBRARIES //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst HashIds = require('hashids');\n\n/// MODULE DEFS ///////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet SESUTIL = {};\nconst HASH_ABET = 'ABCDEFGHIJKLMNPQRSTVWXYZ23456789';\nconst HASH_MINLEN = 3;\nvar m_current_groupid = null;\n\n/// SESSION ///////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Given a token of form CLASS-PROJECT-HASHEDID, return an object\n    containing as many decoded values as possible. Check isValid for\n    complete decode succes. groupId is also set if successful\n\n    `dataset` is not currently being used, but is retained for future use.\n */\nSESUTIL.DecodeToken = function (token, dataset) {\n  const DELIMITER = '-';\n  if (token === undefined) return {};\n  // 2024/08 Allow optional `dataset` so tokens can be shared across graphs\n  // if (dataset === undefined) {\n  //   console.error('SESUTIL.DecodeToken called without \"dataset\" parameter.');\n  //   return {};\n  // }\n  let tokenBits = token.split(DELIMITER);\n  let classId, projId, hashedId, groupId, subId, isValid;\n  // optimistically set valid flag to be negated on failure\n  isValid = true;\n  // check for superficial issues\n  if (token.substr(-1) === DELIMITER) {\n    isValid = false;\n  }\n  // token is of form CLS-PRJ-HASHEDID\n  // classId, etc will be partially set and returned\n  if (tokenBits[0]) classId = tokenBits[0].toUpperCase();\n  if (tokenBits[1]) projId = tokenBits[1].toUpperCase();\n  if (tokenBits[2]) hashedId = tokenBits[2].toUpperCase();\n  if (tokenBits[3]) subId = tokenBits[3].toUpperCase();\n  // initialize hashid structure\n  // 2024/08 Allow optional `dataset` so tokens can be shared across graphs\n  // Orig code: let salt = `${classId}${projId}${dataset}`;\n  let salt = `${classId}${projId}`; // skips `dataset`\n  if (DBG) console.warn('commen-session ignoring \"dataset\" to allow decoding of shared tokens');\n  try {\n    let hashids = new HashIds(salt, HASH_MINLEN, HASH_ABET);\n    // try to decode the groupId\n    groupId = hashids.decode(hashedId)[0];\n  } catch (err) {\n    console.log('SESUTIL.DecodeToken: invalid token');\n  }\n  // invalidate if groupId isn't an integer\n  if (!Number.isInteger(groupId)) {\n    if (DBG) console.error('invalid token');\n    isValid = false;\n    groupId = 0;\n  }\n  // invalidate if groupId isn't non-negative integer\n  if (groupId < 0) {\n    if (DBG) console.error('decoded token, but value out of range <0');\n    isValid = false;\n    groupId = 0;\n  }\n\n  // at this point groupId is valid (begins with ID, all numeric)\n  // check for valid subgroupId\n  if (subId) {\n    if (\n      subId.length > 2 &&\n      subId.indexOf('ID') === 0 &&\n      /^\\d+$/.test(subId.substring(2))\n    ) {\n      if (DBG) console.log('detected subid', subId.substring(2));\n      // subId contains a string \"ID<N>\" where <N> is an integer\n    } else {\n      // subId exists but didn't match subid format\n      if (DBG) console.log('invalid subId string', subId);\n      isValid = false; // groupId is still valid,\n      subId = 0;\n    }\n  }\n\n  // reconstruct user id for use with author data for nodes, edges, comments\n  const userId = [classId, projId, hashedId].join(DELIMITER);\n  // if isValid is false, check groupId is 0 or subId is 0, indicating error\n  let decoded = { token, isValid, classId, projId, hashedId, groupId, subId, userId };\n  return decoded;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Return TRUE if the token decodes into an expected range of values\n */\nSESUTIL.IsValidToken = function (token, dataset) {\n  let decoded = SESUTIL.DecodeToken(token, dataset);\n  return decoded && Number.isInteger(decoded.groupId);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Returns a token string of form CLASS-PROJECT-HASHEDID\n    classId and projId should be short and are case-insensitive.\n    groupId must be a non-negative integer\n\n    `dataset` is not currently being used, but is retained for future use.\n*/\nSESUTIL.MakeToken = function (classId, projId, groupId, dataset) {\n  // type checking\n  if (typeof classId !== 'string')\n    throw Error(`classId arg1 '${classId}' must be string`);\n  if (typeof projId !== 'string')\n    throw Error(`projId arg2 '${projId}' must be string`);\n  if (classId.length < 1) throw Error(`classId arg1 length should be 1 or more`);\n  if (projId.length < 1) throw Error(`projId arg2 length should be 1 or more`);\n  if (!Number.isInteger(groupId))\n    throw Error(`groupId arg3 '${groupId}' must be integer`);\n  if (groupId < 0) throw Error(`groupId arg3 must be non-negative integer`);\n  if (groupId > Number.MAX_SAFE_INTEGER)\n    throw Error(`groupId arg3 value exceeds MAX_SAFE_INTEGER`);\n  // initialize hashid structure\n  classId = classId.toUpperCase();\n  projId = projId.toUpperCase();\n  // 2024/08 Allow optional `dataset` so tokens can be shared across graphs\n  // Orig code: let salt = `${classId}${projId}${dataset}`;\n  let salt = `${classId}${projId}`; // skips `dataset`\n  if (DBG) console.warn('commen-session ignoring \"dataset\" to allow creation of shared tokens');\n  let hashids = new HashIds(salt, HASH_MINLEN, HASH_ABET);\n  let hashedId = hashids.encode(groupId);\n  return `${classId}-${projId}-${hashedId}`;\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Set the global GROUPID, which is included in all NetMessage\n    packets that are sent to server.\n */\n// REVIEW/FIXME\n// `SetGroupID` isn't being called by anyone?\n// If it is, the DecodeToken call needs to add a 'dataset' parameter or it will\n// fail.\nSESUTIL.SetGroupID = function (token) {\n  console.error('SetGroupID calling decodeToken NC_CONFIG IS', window.NC_CONFIG);\n  let good = SESUTIL.DecodeToken(token).isValid;\n  if (good) m_current_groupid = token;\n  return good;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nSESUTIL.GroupID = function () {\n  return m_current_groupid;\n};\n\n/// EXPORT MODULE /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = SESUTIL;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    SessionShell handles route-based parameters, updating the SESSION manager\n    with pertinent information\n\n    The component stores the credentials\n      classId  : null,\n      projId   : null,\n      hashedId : null,\n      groupId  : null,\n      isValid  : false\n\n    render() calls one of the following depending on the state of\n    SESSION.DecodeToken( token ). It returns an object is isValid prop set.\n    The token is by decoding the URL in location.href.\n\n      renderLoggedIn( decoded ) contains an object with the decoded properties\n      from the original string, and displays the login state\n\n      renderLogin() shows the login text field.\n\n    When text is changing in Login Field, this.handleChange() is called.\n    It gets the value and runs SESSION.DecodeToken() on it.\n    It then uses Unisys.SetAppState to set \"SESSION\" to the decoded value.\n    if a groupId is detected, then it forces a redirect.\n\n\n    A change in logged in status can come from four places:\n\n    1. User has typed in login field.\n       => This is handled by `handleChange()`\n    2. User has hit the \"Login\" submit button.\n       => This is handled by `onSubmit()`\n    3. User has entered a full URL for the first time\n       => This is handled by `componentWillMount()`\n    4. User has changed an existing URL\n       => This does not trigger `compomentWillMount()`\n          so it needs special handling.\n       Changing the url does trigger:\n       * render()\n          render is triggered because the props for the token\n          passed by the route change.\n          And render does detect the correct login state.\n          However, if this represents a change in login state,\n          the change in state needs to be broadcast.\n       * componentDidUpdate()\n          componentDidUpdate checks for the change in loggedinIn\n          status and sends an AppStateChanged event as needed.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst SETTINGS = require('settings');\nconst React = require('react');\nconst PROMPTS = require('system/util/prompts');\nconst SESSION = require('unisys/common-session');\nconst PR = PROMPTS.Pad('SessionShell');\nconst ReactStrap = require('reactstrap');\nconst {\n  InputGroup,\n  InputGroupAddon,\n  Button,\n  Col,\n  Row,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Input,\n  Label\n} = ReactStrap;\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// these styles are copied from AutoComplete.css\nconst INPUT_STYLE = {\n  border: '1px solid #aaa',\n  fontFamily: 'Helvetica, sans-serif',\n  fontWeight: 300,\n  fontSize: '10px',\n  textAlign: 'right',\n  textTransform: 'uppercase'\n};\nconst GROUP_STYLE = {\n  backgroundColor: '#777',\n  color: 'white',\n  marginTop: '-10px'\n};\nconst LABEL_STYLE = {\n  verticalAlign: 'top',\n  marginBottom: '0.15rem',\n  marginTop: '0.15rem'\n};\n/// Move login to navbar\nconst NAV_LOGIN_STYLE = {\n  margin: '8px 10px 0 20px',\n  zIndex: '2000'\n};\nconst NAV_LOGIN_FEEDBACK_STYLE = {\n  position: 'absolute',\n  right: '210px'\n};\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass SessionShell extends UNISYS.Component {\n  constructor() {\n    super();\n    this.renderLogin = this.renderLogin.bind(this);\n    this.renderLoggedIn = this.renderLoggedIn.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      // `state` tracks the login input field\n      token: null,\n      classId: null,\n      projId: null,\n      hashedId: null,\n      subId: null,\n      groupId: null,\n      isValid: false\n    };\n    this.previousIsValid = false; // to track changes in loggedIn status\n\n    // This will invalidate the token when the server is disconnected\n    // but this can be a problem for projects that require login\n    // to view the graph.\n    // this.OnDisconnect(() => {\n    //   const token = this.props.match.params.token;\n    //   const decoded = SESSION.DecodeToken(token, window.NC_CONFIG.dataset);\n    //   // invalidate the token and announce it\n    //   decoded.isValid = false;\n    //   this.SetAppState(\"SESSION\", decoded);\n    // });\n  }\n\n  /// ROUTE RENDER FUNCTIONS ////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** render successful logged-in\n   */\n  renderLoggedIn(decoded) {\n    if (decoded) {\n      let classproj = `${decoded.classId}-${decoded.projId}`;\n      // prefix with unicode non-breaking space\n      let gid = `\\u00A0${decoded.groupId}`;\n      let subid = decoded.subId ? `USER\\u00A0${decoded.subId}` : '';\n      return (\n        <div style={NAV_LOGIN_STYLE}>\n          <Label style={LABEL_STYLE} className=\"small\">\n            GROUP{gid}:&nbsp;\n            <br />\n            {subid}\n          </Label>\n          <Label style={LABEL_STYLE} className=\"small\">\n            {classproj}-<strong>{decoded.hashedId}</strong>\n          </Label>\n        </div>\n      );\n\n      // Old Form above NodeSelector\n      // return (\n      //   <FormGroup row style={GROUP_STYLE} style={{position:'fixed',top:'5px',right:'5px',zIndex:'2000'}}>\n      //     <Col sm={3}>\n      //       <Label style={LABEL_STYLE} className=\"small\">\n      //         GROUP{gid}\n      //         <br />\n      //         {subid}\n      //       </Label>\n      //     </Col>\n      //     <Col sm={9} className=\"text-right\">\n      //       <Label style={LABEL_STYLE} className=\"small\">\n      //         {classproj}-<strong>{decoded.hashedId}</strong>\n      //       </Label>\n      //     </Col>\n      //   </FormGroup>\n      // );\n    } else {\n      return <p>ERROR:renderLoggedIn didn&apos;t get valid decoded object</p>;\n    }\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** render must login (readonly)\n   *  see common-session.DecodeToken() for details on:\n   *    classId, projId, and hashedId are provided by the token\n   *    groupId is _calculated_ when all three parts are valid\n   *    subId is a string ID<NNN> where <NNN> are digits\n   */\n  renderLogin() {\n    let { token, classId, projId, groupId, subId, hashedId, isValid } = this.state;\n    if (token) token = token.toUpperCase();\n    let formFeedback, tip, input;\n    tip = 'type your login token';\n    if (classId) tip = 'token part [1/3]...';\n    if (projId) tip = 'token part [2/3]...';\n    // groupId isn't part of the token\n    // if (groupId) tip = 'Waiting for extra ID...';\n    if (hashedId) tip = 'token part [3/3]...';\n    // if groupId is defined, then the token is valid\n    if (groupId) {\n      //\n      if (subId === 0) {\n        tip = `...optional ID number`;\n        input = (\n          <Input\n            invalid\n            name=\"sessionToken\"\n            id=\"sessionToken\"\n            bsSize=\"sm\"\n            style={INPUT_STYLE}\n            className=\"text-right\"\n            placeholder=\"CLASSID-PROJID-CODE\"\n            onChange={this.handleChange}\n          />\n        );\n        formFeedback = (\n          <FormFeedback style={NAV_LOGIN_FEEDBACK_STYLE} className=\"text-right\">\n            <small>{tip}</small>\n          </FormFeedback>\n        );\n      } /* if subId!==0 */ else {\n        tip = 'CLICK LOGIN BUTTON';\n        input = (\n          <Input\n            valid\n            name=\"sessionToken\"\n            id=\"sessionToken\"\n            bsSize=\"sm\"\n            style={INPUT_STYLE}\n            className=\"text-right\"\n            placeholder=\"CLASSID-PROJID-CODE\"\n            onChange={this.handleChange}\n          />\n        );\n        formFeedback = (\n          <FormFeedback valid style={NAV_LOGIN_FEEDBACK_STYLE} className=\"text-right\">\n            <small>{tip}</small>\n          </FormFeedback>\n        );\n      }\n    } /* if not groupId*/ else {\n      input = (\n        <Input\n          invalid\n          name=\"sessionToken\"\n          id=\"sessionToken\"\n          bsSize=\"sm\"\n          style={INPUT_STYLE}\n          className=\"text-right\"\n          placeholder=\"CLASSID-PROJID-CODE\"\n          onChange={this.handleChange}\n        />\n      );\n      formFeedback = (\n        <FormFeedback style={NAV_LOGIN_FEEDBACK_STYLE} className=\"text-right\">\n          <small>{tip}</small>\n        </FormFeedback>\n      );\n    }\n\n    return (\n      <Form\n        className=\"--SessionShell_Login\"\n        onSubmit={this.onSubmit}\n        style={NAV_LOGIN_STYLE}\n      >\n        <FormGroup row style={{ marginRight: '-5px' }}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <Button\n                style={{ fontSize: '10px' }}\n                color=\"secondary\"\n                size=\"sm\"\n                disabled={!isValid}\n                onSubmit={this.onSubmit}\n              >\n                LOGIN\n              </Button>\n            </InputGroupAddon>\n            {input}\n            {formFeedback}\n          </InputGroup>\n        </FormGroup>\n      </Form>\n    );\n\n    // Old Form above NodeSelector\n    // return (\n    //   <Form onSubmit={this.onSubmit} style={{position:'fixed',top:'5px',right:'5px',zIndex:'2000'}}>\n    //   <FormGroup row>\n    //     <Col>\n    //       <InputGroup>\n    //         {formFeedback}\n    //         <InputGroupAddon addonType=\"prepend\"><Button style={{fontSize:'10px'}} color=\"secondary\" size=\"sm\" disabled={!isValid} onSubmit={this.onSubmit}>LOGIN</Button></InputGroupAddon>\n    //         {input}\n    //       </InputGroup>\n    //     </Col>\n    //   </FormGroup>\n    //   </Form>\n    // );\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  componentDidMount() {\n    // the code below reads a pre-existing matching path, which may be set\n    // to a valid token string AFTER the changeHandler() detected a valid\n    // login after a ForceReload. This is a bit hacky and the app would benefit\n    // from not relying on forced reloads. See handleChange().\n    //\n    // This is only called with the initial page load.\n    // Subsequent changes to the URL (e.g. changing token directly in the url)\n    // do not result in a second componentWillMount call.  These are handled\n    // by the componentDidUpdate() call.\n\n    const { routeProps } = SETTINGS.GetRouteInfoFromURL();\n    let { token } = routeProps;\n    let decoded = SESSION.DecodeToken(token, window.NC_CONFIG.dataset) || {};\n    this.SetAppState('SESSION', decoded);\n    this.previousIsValid = decoded.isValid;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  componentDidUpdate(prevProps) {\n    // SIDE EFFECT\n    // Check for changes in logged in status and\n    // trigger AppStateChange if necessary\n    const { routeProps } = SETTINGS.GetRouteInfoFromURL();\n    let { token } = routeProps;\n\n    if (!token) return; // don't bother to check if this was a result of changes from the form\n    let decoded = SESSION.DecodeToken(token, window.NC_CONFIG.dataset);\n    if (decoded.isValid !== this.previousIsValid) {\n      this.SetAppState('SESSION', decoded);\n      this.previousIsValid = decoded.isValid;\n    }\n  }\n\n  /// EVENT HANDLERS ////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  handleChange(event) {\n    let token = event.target.value;\n    let decoded = SESSION.DecodeToken(token, window.NC_CONFIG.dataset);\n    let { classId, projId, hashedId, subId, groupId } = decoded;\n    this.setState(decoded);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  onSubmit(event) {\n    event.preventDefault();\n    if (this.state.isValid) {\n      // force a page URL change\n      const redirect = `./#/edit/${this.state.token}`;\n      window.location.replace(redirect);\n      window.location.reload();\n    }\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Main Render Function\n   */\n  render() {\n    // FUN FACTS\n    // this.state set in constructor\n    // this.props.history, location, match added by withRouter(AppShell)\n    // way back in init-appshell.jsx\n\n    // if standalone mode, no login possible\n    if (UNISYS.IsStandaloneMode()) {\n      const { prompt, timestamp } = window.NC_UNISYS.standalone;\n      return (\n        <div style={NAV_LOGIN_STYLE}>\n          <Col sm={16}>\n            <Label style={LABEL_STYLE} className=\"small\">\n              {prompt}\n            </Label>\n          </Col>\n        </div>\n      );\n    }\n\n    const { routeProps } = SETTINGS.GetRouteInfoFromURL();\n    let { token } = routeProps;\n    // no token so just render login\n    if (!token) return this.renderLogin();\n\n    // try to decode token\n    let decoded = SESSION.DecodeToken(token, window.NC_CONFIG.dataset);\n    if (decoded.isValid) {\n      return this.renderLoggedIn(decoded);\n    } else {\n      return this.renderLogin(token);\n    }\n  }\n} // UNISYS.Component SessionShell\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = SessionShell;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  DATABASE SERVER\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/* eslint-disable newline-per-chained-call */\n/* eslint-disable nonblock-statement-body-position */\n\n/* added for pull request #81 so 'npm run lint' test appears clean */\n/* eslint-disable no-unused-vars */\n\nconst DBG = false;\n\n/// LOAD LIBRARIES ////////////////////////////////////////////////////////////\n/// = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\nconst Loki = require('lokijs');\nconst PATH = require('path');\nconst FS = require('fs-extra');\nconst TOML = require('@iarna/toml');\n\n/// CONSTANTS /////////////////////////////////////////////////////////////////\n/// = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\nconst SESSION = require('./common-session');\nconst LOGGER = require('./server-logger');\nconst PROMPTS = require('../system/util/prompts');\nconst TEMPLATE_SCHEMA = require('../view/netcreate/template-schema');\nconst FILTER = require('../view/netcreate/components/filter/FilterEnums');\nconst { EDITORTYPE } = require('../system/util/enum');\n\nconst PR = PROMPTS.Pad('ServerDB');\nconst RUNTIMEPATH = './runtime/';\nconst TEMPLATEPATH = './app-templates/';\nconst TEMPLATE_EXT = '.template.toml';\nconst BACKUPPATH = 'backups/'; // combined with RUNTIMEPATH, so no leading './'\nconst DB_CLONEMASTER = 'blank.loki';\nconst NC_CONFIG = require('../../app-config/netcreate-config');\n\n/// MODULE-WIDE VARS //////////////////////////////////////////////////////////\n/// = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\nlet db_file;\nlet m_options; // saved initialization options\nlet m_db; // loki database\nlet m_max_edgeID;\nlet m_max_nodeID;\nlet m_max_commentID;\nlet m_dupe_set; // set of nodeIDs for determine whether there are duplicates\nlet NODES; // loki \"nodes\" collection\nlet EDGES; // loki \"edges\" collection\nlet COMMENTS; // loki \"comments\" collection\nlet READBY; // loki \"readby\" collection\nlet m_locked_nodes; // map key = nodeID, value = uaddr initiating the lock\nlet m_locked_edges; // map key = edgeID, value = uaddr initiating the lock\nlet m_locked_comments; // map key = commentID, value = uaddr initiating the lock\nlet TEMPLATE;\nlet m_open_editors = []; // array of template, node, or edge editors\n/// formatting\nconst BL = s => `\\x1b[1;34m${s}\\x1b[0m`;\nconst YL = s => `\\x1b[1;33m${s}\\x1b[0m`;\n\n/// API METHODS ///////////////////////////////////////////////////////////////\n/// = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\nlet DB = {};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Backup Database File Utility\n    Used by PKT_MergeDatabase to clone the db before importing.\n    Saves the db in the runtime folder with a timestamp suffix.\n */\nfunction m_BackupDatabase() {\n  FS.ensureDirSync(PATH.dirname(db_file));\n  if (FS.existsSync(db_file)) {\n    const timestamp = new Date().toISOString().replace(/:/g, '.');\n    const backupDBFilePath = m_GetValidDBFilePath(\n      BACKUPPATH + NC_CONFIG.dataset + '_' + timestamp\n    );\n    console.log(PR, 'Saving database backup to', backupDBFilePath);\n    FS.copySync(db_file, backupDBFilePath);\n  }\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Default Template Path\n */\nfunction m_DefaultTemplatePath() {\n  return TEMPLATEPATH + '_default' + TEMPLATE_EXT;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Initialize the database\n */\nDB.InitializeDatabase = function (options = {}) {\n  let dataset = NC_CONFIG.dataset;\n  db_file = m_GetValidDBFilePath(dataset);\n  FS.ensureDirSync(PATH.dirname(db_file));\n  if (!FS.existsSync(db_file)) {\n    console.log(\n      PR,\n      YL(`NOTICE: NO EXISTING DATABASE ${db_file}, so creating BLANK DATABASE...`)\n    );\n  }\n  // console.log(PR, YL(`loading dataset`), `${BL(db_file)}...`);\n  let ropt = {\n    autoload: true,\n    autoloadCallback: f_DatabaseInitialize,\n    autosave: true,\n    autosaveCallback: f_AutosaveStatus,\n    autosaveInterval: 4000 // save every four seconds\n  };\n  ropt = Object.assign(ropt, options);\n  m_db = new Loki(db_file, ropt);\n  m_options = ropt;\n  m_options.db_file = db_file; // store for use by DB.WriteJSON\n\n  // callback on load\n  async function f_DatabaseInitialize() {\n    // on the first load of (non-existent database), we will have no\n    // collections so we can detect the absence of our collections and\n    // add (and configure) them now.\n    NODES = m_db.getCollection('nodes');\n    if (NODES === null) NODES = m_db.addCollection('nodes');\n    m_locked_nodes = new Map();\n    EDGES = m_db.getCollection('edges');\n    if (EDGES === null) EDGES = m_db.addCollection('edges');\n    m_locked_edges = new Map();\n    COMMENTS = m_db.getCollection('comments');\n    if (COMMENTS === null) COMMENTS = m_db.addCollection('comments');\n    READBY = m_db.getCollection('readby');\n    if (READBY === null) READBY = m_db.addCollection('readby');\n    m_locked_comments = new Map();\n\n    // initialize unique set manager\n    m_dupe_set = new Set();\n    let dupeNodes = [];\n\n    // find highest NODE ID\n    if (NODES.count() > 0) {\n      m_max_nodeID = NODES.mapReduce(\n        obj => {\n          // side-effect: make sure ids are numbers\n          m_CleanObjID('node.id', obj);\n          // side-effect: check for duplicate ids\n          if (m_dupe_set.has(obj.id)) {\n            dupeNodes.push(obj);\n          } else {\n            m_dupe_set.add(obj.id);\n          }\n          // return value\n          return obj.id;\n        },\n        arr => {\n          return Math.max(...arr);\n        }\n      );\n    } else {\n      m_max_nodeID = 0;\n    }\n    // remap duplicate NODE IDs\n    dupeNodes.forEach(obj => {\n      m_max_nodeID += 1;\n      LOGGER.WriteRLog({}, PR, `# rewriting duplicate nodeID ${obj.id} to ${m_max_nodeID}`);\n      obj.id = m_max_nodeID;\n    });\n\n    // find highest EDGE ID\n    if (EDGES.count() > 0) {\n      m_max_edgeID = EDGES.mapReduce(\n        obj => {\n          m_CleanObjID('edge.id', obj);\n          m_CleanEdgeEndpoints(obj.id, obj);\n          return obj.id;\n        },\n        arr => {\n          return Math.max(...arr);\n        }\n      ); // end mapReduce edge ids\n    } else {\n      m_max_edgeID = 0;\n    }\n    console.log(\n      PR,\n      'dataset loaded',\n      BL(db_file),\n      `m_max_nodeID '${m_max_nodeID}', m_max_edgeID '${m_max_edgeID}'`\n    );\n\n    // find highest COMMENT ID\n    if (COMMENTS.count() > 0) {\n      m_max_commentID = COMMENTS.mapReduce(\n        obj => {\n          // side-effect: make sure ids are numbers\n          m_CleanObjID('comment.id', obj);\n          return obj.comment_id;\n        },\n        arr => {\n          return Math.max(...arr);\n        }\n      );\n    } else {\n      m_max_commentID = 0;\n    }\n\n    m_db.saveDatabase();\n\n    await m_LoadTemplate();\n    m_MigrateTemplate();\n    m_ValidateTemplate();\n  } // end f_DatabaseInitialize\n\n  // UTILITY FUNCTION\n  function f_AutosaveStatus() {\n    let nodeCount = NODES.count();\n    let edgeCount = EDGES.count();\n    let commentCount = COMMENTS.count();\n    let readbyCount = READBY.count();\n    console.log(PR, `AUTOSAVING! ${nodeCount} NODES / ${edgeCount} EDGES / ${commentCount} COMMENTS / ${readbyCount} READBY <3`);\n  }\n}; // InitializeDatabase()\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// utility function for loading template\n/** Converts a version 1.3 JSON template to a version 1.4 TOML template\n */\n// eslint-disable-next-line complexity\nfunction m_MigrateJSONtoTOML(JSONtemplate) {\n  console.log(PR, 'Converting JSON to TOML...');\n  const jt = JSONtemplate;\n  const SCHEMA = TEMPLATE_SCHEMA.TEMPLATE.properties;\n  const TOMLtemplate = {\n    name: jt.name,\n    description: jt.description,\n    requireLogin: jt.requireLogin || SCHEMA.requireLogin.default,\n    hideDeleteNodeButton:\n      (jt.nodePrompts && jt.nodePrompts.delete && jt.nodePrompts.delete.hidden) ||\n      SCHEMA.hideDeleteNodeButton.default,\n    allowLoggedInUserToImport: SCHEMA.allowLoggedInUserToImport.default, // new parameter not in old json template\n    duplicateWarning:\n      (jt.nodePrompts &&\n        jt.nodePrompts.label &&\n        jt.nodePrompts.label.duplicateWarning) ||\n      SCHEMA.duplicateWarning.default,\n    nodeIsLockedMessage:\n      (jt.nodePrompts &&\n        jt.nodePrompts.label &&\n        jt.nodePrompts.label.sourceNodeIsLockedMessage) ||\n      SCHEMA.nodeIsLockedMessage.default,\n    edgeIsLockedMessage:\n      (jt.edgePrompts && jt.edgePrompts.edgeIsLockedMessage) ||\n      SCHEMA.edgeIsLockedMessage.default,\n    templateIsLockedMessage: SCHEMA.templateIsLockedMessage.default,\n    nodeDefaultTransparency:\n      (jt.nodePrompts && jt.nodePrompts.defaultTransparency) ||\n      SCHEMA.nodeDefaultTransparency.default,\n    edgeDefaultTransparency:\n      (jt.edgePrompts && jt.edgePrompts.defaultTransparency) ||\n      SCHEMA.edgeDefaultTransparency.default,\n    searchColor: jt.searchColor || SCHEMA.searchColor.default,\n    sourceColor: jt.sourceColor || SCHEMA.sourceColor.default,\n    citation: {\n      text: (jt.citationPrompts && jt.citationPrompts.citation) || jt.name,\n      hidden:\n        (jt.citationPrompts && jt.citationPrompts.hidden) ||\n        SCHEMA.citation.properties.hidden.default\n    }\n  };\n  // convert nodePrompts\n  const nodeDefs = {};\n  // 1. Add fields\n  Object.keys(JSONtemplate.nodePrompts).forEach(k => {\n    const field = JSONtemplate.nodePrompts[k];\n    nodeDefs[k] = {\n      type: field.type || 'string', // default to 'string'\n      displayLabel: field.label,\n      exportLabel: field.label,\n      help: field.help,\n      includeInGraphTooltip: field.includeInGraphTooltip || true, // default to show tool tip\n      hidden: field.hidden || false // default to not hidden\n    };\n    if (k === 'type') {\n      // special handling for type options\n      const options = field.options.map(o => {\n        return {\n          label: o.label,\n          color: o.color\n        };\n      });\n      // make sure field type is set to \"select\" -- older templates do not set type\n      nodeDefs[k].type = 'select';\n      console.log(\n        PR,\n        '...migrating nodeDefs field',\n        k,\n        'with options, forcing type to \"select\"'\n      );\n      nodeDefs[k].options = options;\n    }\n  });\n  // 2. Add id -- clobbers any existing id\n  nodeDefs.id = {\n    type: 'number',\n    displayLabel: 'id',\n    exportLabel: 'ID',\n    help: 'System-generated unique id number'\n  };\n  // 3. remove deprecated fields\n  Reflect.deleteProperty(nodeDefs, 'delete'); // `delete` -- mapped to hideDeleteNodeButton\n  Reflect.deleteProperty(nodeDefs, 'defaultTransparency'); // `nodeDefaultTransparency` -- moved to root\n\n  // 4. Add other built-ins\n  nodeDefs.updated = {\n    displayLabel: 'Last Updated',\n    exportLabel: 'Last Updated',\n    help: 'Date and time of last update',\n    includeInGraphTooltip: true // default to show tool tip\n  };\n  nodeDefs.created = {\n    displayLabel: 'Created',\n    exportLabel: 'Created',\n    help: 'Date and time node was created',\n    includeInGraphTooltip: true // default to show tool tip\n  };\n\n  // convert edgePrompts\n  const edgeDefs = {};\n  // 1. Add fields\n  Object.keys(JSONtemplate.edgePrompts).forEach(k => {\n    const field = JSONtemplate.edgePrompts[k];\n    edgeDefs[k] = {\n      type: field.type || 'string', // default to 'string'\n      displayLabel: field.label,\n      exportLabel: field.label,\n      help: field.help,\n      hidden: field.hidden || false // default to not hidden\n      // If necessary, user can edit template to hide it again.\n      // We want it visible by default, because of migrations\n      // the original field may not be defined.\n      // e.g. orig template uses \"Relationship\" not \"type\"\n    };\n    if (k === 'type') {\n      // special handling for type options\n      const options = field.options.map(o => {\n        return {\n          label: o.label,\n          color: o.color\n        };\n      });\n      // make sure field type is set to \"select\" -- older templates do not set type\n      edgeDefs[k].type = 'select';\n      console.log(\n        PR,\n        '...migrating edgeDefs field',\n        k,\n        'with options, forcing type to \"select\"'\n      );\n      edgeDefs[k].options = options;\n    }\n  });\n  // 2. Add id\n  edgeDefs.id = {\n    // will clobber any existing id\n    type: 'number',\n    displayLabel: 'id',\n    exportLabel: 'ID',\n    help: 'System-generated unique id number'\n  };\n  // 3. remove deprecated fields\n  Reflect.deleteProperty(edgeDefs, 'edgeIsLockedMessage'); // `edgeIsLockedMessage` -- moved to root\n  Reflect.deleteProperty(edgeDefs, 'defaultTransparency'); // `edgeDefaultTransparency` -- moved to root\n\n  TOMLtemplate.nodeDefs = nodeDefs;\n  TOMLtemplate.edgeDefs = edgeDefs;\n  if (DBG) console.log(PR, 'Imported TOML TEMPLATE', TOMLtemplate);\n\n  return TOMLtemplate;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Loads an original circa version 1.3 JSON template\n    and converts it to a TOML template\n */\nfunction m_LoadJSONTemplate(templatePath) {\n  return new Promise((resolve, reject) => {\n    // 1. Load JSON\n    console.log(PR, `LOADING JSON TEMPLATE ${templatePath}`);\n    const JSONTEMPLATE = FS.readJsonSync(templatePath);\n    // 2. Convert to TOML\n    TEMPLATE = m_MigrateJSONtoTOML(JSONTEMPLATE);\n    // 3. Save it (and load)\n    DB.WriteTemplateTOML({ data: { template: TEMPLATE } }).then(() => {\n      console.log(PR, '...converted JSON template saved!');\n      resolve({ Loaded: true });\n    });\n  });\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Loads a *.template.toml file from the server.\n */\nfunction m_LoadTOMLTemplate(templateFilePath) {\n  return new Promise((resolve, reject) => {\n    const templateFile = FS.readFile(templateFilePath, 'utf8', (err, data) => {\n      if (err) throw err;\n      const json = TOML.parse(data);\n      TEMPLATE = json;\n      console.log(PR, 'template loaded', BL(templateFilePath));\n      resolve({ Loaded: true });\n    });\n  });\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Load Template\n    1. Tries to load a TOML template\n    2. If it can't be found, tries to load the JSON template and convert it\n    3. If that fails, clone the default TOML template and load it\n    Called by\n    * DB.InitializeDatabase\n    * DB.WriteTemplateTOML\n */\nasync function m_LoadTemplate() {\n  const TOMLtemplateFilePath = m_GetTemplateTOMLFilePath();\n  FS.ensureDirSync(PATH.dirname(TOMLtemplateFilePath));\n  // Does the TOML template exist?\n  if (FS.existsSync(TOMLtemplateFilePath)) {\n    // 1. If TOML exists, load it\n    await m_LoadTOMLTemplate(TOMLtemplateFilePath);\n  } else {\n    // 2. Try falling back to JSON template\n    const JSONTemplatePath = RUNTIMEPATH + NC_CONFIG.dataset + '.template';\n    // Does the JSON template exist?\n    if (FS.existsSync(JSONTemplatePath)) {\n      await m_LoadJSONTemplate(JSONTemplatePath);\n    } else {\n      // 3. Else, no existing template, clone _default.template.toml\n      console.log(\n        PR,\n        `NO EXISTING TEMPLATE ${TOMLtemplateFilePath}, so cloning default template...`\n      );\n      FS.copySync(m_DefaultTemplatePath(), TOMLtemplateFilePath);\n      // then load it\n      await m_LoadTOMLTemplate(TOMLtemplateFilePath);\n    }\n  }\n}\n\n/// REVIEW: Should this be moved to a separate server-template module?\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Migrate Template File\n    Updates older templates to the current template-schema specification by\n    inserting missing properties needed by the UI.\n    Any changes to template-schema should be reflected here.\n */\nfunction m_MigrateTemplate() {\n  // Ensure key fields are present, else default to schema\n  // NOTE: We are not modifying the template permanently, only temporarily inserting definitions so the system can validate\n  const SCHEMA = TEMPLATE_SCHEMA.TEMPLATE.properties;\n  const DEFAULT_TEMPLATE = TEMPLATE_SCHEMA.ParseTemplateSchema();\n  const NODEDEFS = DEFAULT_TEMPLATE.nodeDefs;\n  const EDGEDEFS = DEFAULT_TEMPLATE.edgeDefs;\n\n  // Migrate 1.0 to 1.1\n  // -- Make sure required core preferences have been created\n  TEMPLATE.duplicateWarning = TEMPLATE.duplicateWarning || SCHEMA.duplicateWarning.default;\n  TEMPLATE.nodeIsLockedMessage = TEMPLATE.nodeIsLockedMessage || SCHEMA.nodeIsLockedMessage.default;\n  TEMPLATE.edgeIsLockedMessage = TEMPLATE.edgeIsLockedMessage || SCHEMA.edgeIsLockedMessage.default;\n  TEMPLATE.templateIsLockedMessage = TEMPLATE.templateIsLockedMessage || SCHEMA.templateIsLockedMessage.default;\n  TEMPLATE.importIsLockedMessage = TEMPLATE.importIsLockedMessage || SCHEMA.importIsLockedMessage.default;\n\n  // Migrate v1.4 to 1.5 Core Preferences\n  // -- v1.5 core defaults -- added 2023-0628 #31\n  if (TEMPLATE.searchColor === undefined)\n    TEMPLATE.searchColor = TEMPLATE_SCHEMA.TEMPLATE.properties.searchColor.default;\n  if (TEMPLATE.sourceColor === undefined)\n    TEMPLATE.sourceColor = TEMPLATE_SCHEMA.TEMPLATE.properties.sourceColor.default;\n  // -- v1.5 Filter Labels -- added 2023-0602 #117\n  // See branch `dev-bl/template-filter-labels`, and fb28fa68ee42deffc778c1be013acea7dae85258\n  if (TEMPLATE.filterFade === undefined)\n    TEMPLATE.filterFade = TEMPLATE_SCHEMA.TEMPLATE.properties.filterFade.default;\n  if (TEMPLATE.filterReduce === undefined)\n    TEMPLATE.filterReduce = TEMPLATE_SCHEMA.TEMPLATE.properties.filterReduce.default;\n  if (TEMPLATE.filterFocus === undefined)\n    TEMPLATE.filterFocus = TEMPLATE_SCHEMA.TEMPLATE.properties.filterFocus.default;\n  if (TEMPLATE.filterFadeHelp === undefined)\n    TEMPLATE.filterFadeHelp = TEMPLATE_SCHEMA.TEMPLATE.properties.filterFadeHelp.default;\n  if (TEMPLATE.filterReduceHelp === undefined)\n    TEMPLATE.filterReduceHelp = TEMPLATE_SCHEMA.TEMPLATE.properties.filterReduceHelp.default;\n  if (TEMPLATE.filterFocusHelp === undefined)\n    TEMPLATE.filterFocusHelp = TEMPLATE_SCHEMA.TEMPLATE.properties.filterFocusHelp.default;\n  // -- v1.5 max sizes -- added 2023-0605 #117\n  // See branch `dev-bl/max-size\n  if (TEMPLATE.nodeSizeDefault === undefined)\n    TEMPLATE.nodeSizeDefault = TEMPLATE_SCHEMA.TEMPLATE.properties.nodeSizeDefault.default;\n  if (TEMPLATE.nodeSizeMax === undefined)\n    TEMPLATE.nodeSizeMax = TEMPLATE_SCHEMA.TEMPLATE.properties.nodeSizeMax.default;\n  if (TEMPLATE.edgeSizeDefault === undefined)\n    TEMPLATE.edgeSizeDefault = TEMPLATE_SCHEMA.TEMPLATE.properties.edgeSizeDefault.default;\n  if (TEMPLATE.edgeSizeMax === undefined)\n    TEMPLATE.edgeSizeMax = TEMPLATE_SCHEMA.TEMPLATE.properties.edgeSizeMax.default;\n\n  // Migrate v1.4 to v1.5 Nodes and Edges\n  // -- hides them by default if they were not previously added\n  //\n  // -- Built-in Fields\n  // -- v1.5 added 'weight\n  if (TEMPLATE.edgeDefs.weight === undefined) {\n    TEMPLATE.edgeDefs.weight = EDGEDEFS.weight;\n    TEMPLATE.edgeDefs.weight.hidden = true;\n  }\n  //\n  // -- v1.5 added `provenance` and `comments` -- so we add the template definitions if the toml template does not already have them\n  if (TEMPLATE.nodeDefs.provenance === undefined && NODEDEFS.provenance) {\n    TEMPLATE.nodeDefs.provenance = NODEDEFS.provenance;\n    TEMPLATE.nodeDefs.provenance.hidden = true;\n  }\n  if (TEMPLATE.nodeDefs.comments === undefined && NODEDEFS.coments) {\n    TEMPLATE.nodeDefs.comments = NODEDEFS.comments;\n    TEMPLATE.nodeDefs.comments.hidden = true;\n  }\n  if (TEMPLATE.edgeDefs.provenance === undefined && EDGEDEFS.provenance) {\n    TEMPLATE.edgeDefs.provenance = EDGEDEFS.provenance;\n    TEMPLATE.edgeDefs.provenance.hidden = true;\n  }\n  if (TEMPLATE.edgeDefs.comments === undefined && EDGEDEFS.comments) {\n    TEMPLATE.edgeDefs.comments = EDGEDEFS.comments;\n    TEMPLATE.edgeDefs.comments.hidden = true;\n  }\n\n  // Migrate 1.5 to 2.0 Template Version\n  TEMPLATE.version = TEMPLATE.version || SCHEMA.version;\n\n  // TO DO\n  // Make sure built-in fields are not being defined in the template.\n  // e.g. it's easy to define another \"Source\" field for \"Provenance\" but that conflicts with\n  // the edge's \"Source\" field.\n\n}\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Validate Template File\n    Lazy check of template object definitions to make sure they are of\n    expected types and values so the UI doesn't choke and die. Throws an error\n    if property is missing.\n */\n// eslint-disable-next-line complexity\nfunction m_ValidateTemplate() {\n  try {\n    // 1. Validate built-in fields\n    // nodeDefs\n    let nodeDefs = TEMPLATE.nodeDefs;\n    if (nodeDefs === undefined) {\n      throw 'Missing `nodeDefs` nodeDefs=' + nodeDefs;\n    }\n    if (nodeDefs.label === undefined)\n      throw 'Missing `nodeDefs.label` label=' + nodeDefs.label;\n    // edgeDefs\n    let edgeDefs = TEMPLATE.edgeDefs;\n    if (edgeDefs === undefined) throw 'Missing `edgeDefs` edgeDefs=' + edgeDefs;\n    if (edgeDefs.source === undefined)\n      throw 'Missing `edgeDefs.source` source=' + edgeDefs.source;\n    if (edgeDefs.target === undefined)\n      throw 'Missing `edgeDefs.target` label=' + edgeDefs.target;\n\n    // 2. Validate deprecated fields\n    //    `TEMPLATE.version` was added after 2.0.\n    if (!TEMPLATE.version) {\n\n      // nodeDefs\n    if (nodeDefs.type === undefined)\n      throw 'Missing `nodeDefs.type` type= ' + nodeDefs.type;\n    if (\n      nodeDefs.type.options === undefined ||\n      !Array.isArray(nodeDefs.type.options)\n    ) {\n      throw 'Missing or bad `nodeDefs.type.options` options=' + nodeDefs.type.options;\n    }\n    if (nodeDefs.notes === undefined)\n      throw 'Missing `nodeDefs.notes` notes=' + nodeDefs.notes;\n    if (nodeDefs.info === undefined)\n      throw 'Missing `nodeDefs.info` info=' + nodeDefs.info;\n      // Version 1.5+ Fields\n    if (nodeDefs.provenance === undefined)\n      throw 'Missing `nodeDefs.provenance` provenance=' + nodeDefs.provenance;\n    if (nodeDefs.comments === undefined)\n      throw 'Missing `nodeDefs.comments` comments=' + nodeDefs.comments;\n\n    // edgeDefs\n    if (edgeDefs.type === undefined)\n      throw 'Missing `edgeDefs.type` type= ' + edgeDefs.type;\n    if (\n      edgeDefs.type.options === undefined ||\n      !Array.isArray(edgeDefs.type.options)\n    ) {\n      throw 'Missing or bad `edgeDefs.type.options` options=' + edgeDefs.type.options;\n    }\n    if (edgeDefs.notes === undefined)\n      throw 'Missing `edgeDefs.notes` notes=' + edgeDefs.notes;\n    if (edgeDefs.info === undefined)\n      throw 'Missing `edgeDefs.info` info=' + edgeDefs.info;\n      // Version 1.5+ Fields\n    if (edgeDefs.provenance === undefined)\n      throw 'Missing `edgeDefs.provenance` provenance=' + edgeDefs.provenance;\n    if (edgeDefs.comments === undefined)\n      throw 'Missing `edgeDefs.comments` comments=' + edgeDefs.comments;\n      // -- End 1.5+\n    if (edgeDefs.citation === undefined)\n      throw 'Missing `edgeDefs.citation` info=' + edgeDefs.citation;\n    if (edgeDefs.category === undefined)\n      throw 'Missing `edgeDefs.category` info=' + edgeDefs.category;\n\n    } else {\n      // Placeholder for future version checks\n      // if (TEMPLATE.version <= \"2.0\") {\n      //   // do something\n      // }\n    }\n\n  } catch (error) {\n    const templateFileName = m_GetTemplateTOMLFilePath();\n    console.error('Error loading template `', templateFileName, '`::::', error);\n  }\n}\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: load database\n    note: InitializeDatabase() was already called on system initialization\n    to populate the NODES and EDGES structures.\n */\nDB.PKT_GetDatabase = function (pkt) {\n  let nodes = NODES.chain().data({ removeMeta: false });\n  let edges = EDGES.chain().data({ removeMeta: false });\n  let comments = COMMENTS.chain().data();\n  let readby = READBY.chain().data();\n  if (DBG)\n    console.log(\n      PR,\n      `PKT_GetDatabase ${pkt.Info()} (loaded ${nodes.length} nodes, ${edges.length\n      } edges)`\n    );\n  m_MigrateNodes(nodes);\n  m_MigrateEdges(edges);\n  LOGGER.WriteRLog(pkt.InfoObj(), `getdatabase`);\n  return { d3data: { nodes, edges }, template: TEMPLATE, comments, readby };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: reset database from scratch\n */\nDB.PKT_SetDatabase = function (pkt) {\n  if (DBG) console.log(PR, `PKT_SetDatabase`);\n  let { nodes = [], edges = [], comments = [], readby = [] } = pkt.Data();\n  if (!nodes.length) console.log(PR, 'WARNING: empty nodes array');\n  else console.log(PR, `setting ${nodes.length} nodes...`);\n  if (!edges.length) console.log(PR, 'WARNING: empty edges array');\n  else console.log(PR, `setting ${edges.length} edges...`);\n  if (!comments.length) console.log(PR, 'WARNING: empty comments array');\n  else console.log(PR, `setting ${comments.length} comments...`);\n  if (!readby.length) console.log(PR, 'WARNING: empty readby array');\n  else console.log(PR, `setting ${readby.length} readby...`);\n  NODES.clear();\n  NODES.insert(nodes);\n  EDGES.clear();\n  EDGES.insert(edges);\n  COMMENTS.clear();\n  COMMENTS.insert(comments);\n  READBY.clear();\n  READBY.insert(readby);\n  console.log(PR, `PKT_SetDatabase complete. Data available on next get.`);\n  m_db.close();\n  DB.InitializeDatabase();\n  LOGGER.WriteRLog(pkt.InfoObj(), `setdatabase`);\n  return { OK: true };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Add nodes/edges to an existing db\n */\nDB.PKT_InsertDatabase = function (pkt) {\n  if (DBG) console.log(PR, `PKT_InsertDatabase`);\n  let { nodes = [], edges = [], comments = [], readby = [] } = pkt.Data();\n  if (!nodes.length) console.log(PR, 'WARNING: empty nodes array');\n  else console.log(PR, `setting ${nodes.length} nodes...`);\n  if (!edges.length) console.log(PR, 'WARNING: empty edges array');\n  else console.log(PR, `setting ${edges.length} edges...`);\n  if (!comments.length) console.log(PR, 'WARNING: empty comments array');\n  else console.log(PR, `setting ${comments.length} comments...`);\n  if (!readby.length) console.log(PR, 'WARNING: empty readby array');\n  else console.log(PR, `setting ${readby.length} readby...`);\n  NODES.insert(nodes);\n  EDGES.insert(edges);\n  COMMENTS.insert(comments);\n  READBY.insert(readby);\n  console.log(PR, `PKT_InsertDatabase complete. Data available on next get.`);\n  m_db.close();\n  DB.InitializeDatabase();\n  LOGGER.WriteRLog(pkt.InfoObj(), `setdatabase`);\n  return { OK: true };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Update or add nodes/edges to an existing db\n    If the node/edge exists, update it.\n    Otherwise, insert it.\n    This walks down the node and edge arrays one by one,\n    using PKT_Update to decide whether to insert or update the data.\n    REVIEW: Consider batch operations ala `NODES.insert(nodes)`?\n */\nDB.PKT_MergeDatabase = function (pkt) {\n  if (DBG) console.log(PR, `PKT_MergeDatabase`);\n  let { nodes = [], edges = [], comments = [], readby = [] } = pkt.Data();\n\n  // Save Backup First!\n  m_BackupDatabase();\n\n  // insert nodes one by one\n  nodes.forEach(n => {\n    pkt.data.node = n;\n    DB.PKT_Update(pkt);\n  });\n  pkt.data.node = undefined; // clear, no longer needed\n\n  edges.forEach(e => {\n    pkt.data.edge = e;\n    DB.PKT_Update(pkt);\n  });\n  pkt.data.edge = undefined; // clear, no longer needed\n\n  comments.forEach(c => {\n    pkt.data.comments = c;\n    DB.PKT_Update(pkt);\n  });\n  pkt.data.comment = undefined; // clear, no longer needed\n\n  readby.forEach(r => {\n    pkt.data.readby = r;\n    DB.PKT_Update(pkt);\n  });\n  pkt.data.readby = undefined; // clear, no longer needed\n\n  return new Promise((resolve, reject) =>\n    m_db.saveDatabase(err => {\n      if (err) reject(new Error('rejected'));\n      DB.InitializeDatabase();\n      LOGGER.WriteRLog(pkt.InfoObj(), `mergedatabase`);\n      resolve({ OK: true });\n    })\n  );\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Update all data in existing database.\n    Used to update node/edge types after template edit\n */\nDB.PKT_UpdateDatabase = function (pkt) {\n  if (DBG) console.log(PR, `PKT_UpdateDatabase`);\n  let { nodes = [], edges = [], comments = [], readby = [] } = pkt.Data();\n  if (!nodes.length) console.log(PR, 'WARNING: empty nodes array');\n  else console.log(PR, `updating ${nodes.length} nodes...`);\n  if (!edges.length) console.log(PR, 'WARNING: empty edges array');\n  else console.log(PR, `updating ${edges.length} edges...`);\n  if (!comments.length) console.log(PR, 'WARNING: empty comments array');\n  else console.log(PR, `updating ${comments.length} comments...`);\n  if (!readby.length) console.log(PR, 'WARNING: empty readby array');\n  else console.log(PR, `updating ${readby.length} readby...`);\n  NODES.update(nodes);\n  EDGES.update(edges);\n  COMMENTS.update(comments);\n  READBY.update(readby);\n  console.log(PR, `PKT_UpdateDatabase complete. Disk db file updated.`);\n  m_db.saveDatabase();\n  LOGGER.WriteRLog(pkt.InfoObj(), `updatedatabase`);\n  return { OK: true };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Side Effect: Changes `m_max_nodeID`\nfunction m_CalculateMaxNodeID() {\n  if (NODES.count() > 0) {\n    m_max_nodeID = NODES.mapReduce(\n      obj => obj.id,\n      arr => Math.max(...arr)\n    );\n  } else {\n    m_max_nodeID = 0;\n  }\n  return m_max_nodeID;\n}\nDB.PKT_CalculateMaxNodeID = function (pkt) {\n  if (DBG) console.log(PR, `PKT_CalculateMaxNodeID ${pkt.Info()}`);\n  return { maxNodeID: m_CalculateMaxNodeID() };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_GetNewNodeID() {\n  m_max_nodeID += 1;\n  return m_max_nodeID;\n}\nDB.PKT_GetNewNodeID = function (pkt) {\n  if (DBG) console.log(PR, `PKT_GetNewNodeID ${pkt.Info()} nodeID ${m_max_nodeID}`);\n  return { nodeID: m_GetNewNodeID() };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_GetNewNodeIDs = function (pkt) {\n  const count = Number(pkt.Data().count);\n  const firstId = m_max_nodeID + 1;\n  const nodeIDs = [];\n  for (let i = 0; i < count; i++) nodeIDs.push(firstId + i);\n  m_max_nodeID += count;\n  if (DBG) console.log(PR, `PKT_GetNewNodeIDS ${pkt.Info()} nodeIDs ${nodeIDs}`);\n  return { nodeIDs };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_CalculateMaxEdgeID() {\n  if (EDGES.count() > 0) {\n    m_max_edgeID = EDGES.mapReduce(\n      obj => obj.id,\n      arr => Math.max(...arr)\n    );\n  } else {\n    m_max_edgeID = 0;\n  }\n  return m_max_edgeID;\n}\nDB.PKT_CalculateMaxEdgeID = function (pkt) {\n  if (DBG) console.log(PR, `PKT_CalculateMaxEdgeID ${pkt.Info()}`);\n  return { maxEdgeID: m_CalculateMaxEdgeID() };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_GetNewEdgeID() {\n  m_max_edgeID += 1;\n  return m_max_edgeID;\n}\nDB.PKT_GetNewEdgeID = function (pkt) {\n  if (DBG) console.log(PR, `PKT_GetNewEdgeID ${pkt.Info()} edgeID ${m_max_edgeID}`);\n  return { edgeID: m_GetNewEdgeID() };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_GetNewEdgeIDs = function (pkt) {\n  const count = Number(pkt.Data().count);\n  const firstId = m_max_edgeID + 1;\n  const edgeIDs = [];\n  for (let i = 0; i < count; i++) edgeIDs.push(firstId + i);\n  m_max_edgeID += count;\n  if (DBG) console.log(PR, `PKT_GetNewEdgeIDs ${pkt.Info()} edgeIDs ${edgeIDs}`);\n  return { edgeIDs };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_GetNewCommentID() {\n  m_max_commentID += 1;\n  return m_max_commentID;\n}\nDB.PKT_GetNewCommentID = function (pkt) {\n  if (DBG) console.log(PR, `PKT_GetNewCommentID ${pkt.Info()} commentID ${m_max_commentID}`);\n  return { comment_id: m_GetNewCommentID() };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Side Effect: Changes `m_max_nodeID`\nfunction m_CalculateMaxCommentID() {\n  if (COMMENTS.count() > 0) {\n    m_max_commentID = COMMENTS.mapReduce(\n      obj => obj.comment_id,\n      arr => Math.max(...arr)\n    );\n  } else {\n    m_max_commentID = 0;\n  }\n  return m_max_commentID;\n}\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_RequestLockNode = function (pkt) {\n  let { nodeID } = pkt.Data();\n  const uaddr = pkt.s_uaddr;\n  let errcode = m_IsInvalidNode(nodeID);\n  if (errcode) return errcode;\n  // check if node is already locked\n  if (m_locked_nodes.has(nodeID))\n    return m_MakeLockError(`nodeID ${nodeID} is already locked`);\n  // SUCCESS\n  // single matching node exists and is not yet locked, so lock it\n  m_locked_nodes.set(nodeID, uaddr);\n  return { nodeID, locked: true };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_RequestUnlockNode = function (pkt) {\n  let { nodeID } = pkt.Data();\n  const uaddr = pkt.s_uaddr;\n  let errcode = m_IsInvalidNode(nodeID);\n  if (errcode) return errcode;\n  // check that node is already locked\n  if (m_locked_nodes.has(nodeID)) {\n    m_locked_nodes.delete(nodeID);\n    return { nodeID, unlocked: true };\n  }\n  // this is an error because nodeID wasn't in the lock table\n  return m_MakeLockError(`nodeID ${nodeID} was not locked so can't unlock`);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_IsNodeLocked = function (pkt) {\n  let { nodeID } = pkt.Data();\n  const uaddr = pkt.s_uaddr;\n  let errcode = m_IsInvalidNode(nodeID);\n  if (errcode) return errcode;\n  const isLocked = m_locked_nodes.has(nodeID);\n  return { nodeID, locked: isLocked };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_IsInvalidNode(nodeID) {\n  if (!nodeID) return m_MakeLockError(`undefined nodeID`);\n  nodeID = Number.parseInt(nodeID, 10);\n  if (isNaN(nodeID)) return m_MakeLockError(`nodeID was not a number`);\n  if (nodeID < 0) return m_MakeLockError(`nodeID ${nodeID} must be positive integer`);\n  if (nodeID > m_max_nodeID)\n    return m_MakeLockError(`nodeID ${nodeID} is out of range`);\n  // find if the node exists\n  let matches = NODES.find({ id: nodeID });\n  if (matches.length === 0) return m_MakeLockError(`nodeID ${nodeID} not found`);\n  if (matches.length > 1)\n    return m_MakeLockError(\n      `nodeID ${nodeID} matches multiple entries...critical error!`\n    );\n  // no retval is no error!\n  return undefined;\n}\nfunction m_MakeLockError(info) {\n  return { NOP: `ERR`, INFO: info };\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_RequestLockEdge = function (pkt) {\n  let { edgeID } = pkt.Data();\n  const uaddr = pkt.s_uaddr;\n  let errcode = m_IsInvalidEdge(edgeID);\n  if (errcode) return errcode;\n  // check if edge is already locked\n  if (m_locked_edges.has(edgeID))\n    return m_MakeLockError(`edgeID ${edgeID} is already locked`);\n  // SUCCESS\n  // single matching edge exists and is not yet locked, so lock it\n  m_locked_edges.set(edgeID, uaddr);\n  return { edgeID, locked: true };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_RequestUnlockEdge = function (pkt) {\n  let { edgeID } = pkt.Data();\n  const uaddr = pkt.s_uaddr;\n  let errcode = m_IsInvalidEdge(edgeID);\n  if (errcode) return errcode;\n  // check that edge is already locked\n  if (m_locked_edges.has(edgeID)) {\n    m_locked_edges.delete(edgeID);\n    return { edgeID, unlocked: true };\n  }\n  // this is an error because nodeID wasn't in the lock table\n  return m_MakeLockError(`edgeID ${edgeID} was not locked so can't unlock`);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_IsEdgeLocked = function (pkt) {\n  let { edgeID } = pkt.Data();\n  const uaddr = pkt.s_uaddr;\n  let errcode = m_IsInvalidEdge(edgeID);\n  if (errcode) return errcode;\n  const isLocked = m_locked_edges.has(edgeID);\n  return { edgeID, locked: isLocked };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_IsInvalidEdge(edgeID) {\n  if (!edgeID) return m_MakeLockError(`undefined edgeID`);\n  edgeID = Number.parseInt(edgeID, 10);\n  if (isNaN(edgeID)) return m_MakeLockError(`edgeID was not a number`);\n  if (edgeID < 0) return m_MakeLockError(`edgeID ${edgeID} must be positive integer`);\n  if (edgeID > m_max_edgeID)\n    return m_MakeLockError(`edgeID ${edgeID} is out of range`);\n  // find if the node exists\n  let matches = EDGES.find({ id: edgeID });\n  if (matches.length === 0) return m_MakeLockError(`edgeID ${edgeID} not found`);\n  if (matches.length > 1)\n    return m_MakeLockError(\n      `edgeID ${edgeID} matches multiple entries...critical error!`\n    );\n  // no retval is no error!\n  return undefined;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_RequestLockComment = function (pkt) {\n  let { commentID } = pkt.Data();\n  const uaddr = pkt.s_uaddr;\n  // check if comment is already locked\n  if (m_locked_comments.has(commentID))\n    return m_MakeLockError(`commentID ${commentID} is already locked`);\n  // SUCCESS\n  // single matching comment exists and is not yet locked, so lock it\n  m_locked_comments.set(commentID, uaddr);\n  return { commentID, locked: true };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_RequestUnlockComment = function (pkt) {\n  let { commentID } = pkt.Data();\n  const uaddr = pkt.s_uaddr;\n  // check that comment is already locked\n  if (m_locked_comments.has(commentID)) {\n    m_locked_comments.delete(commentID);\n    return { commentID, unlocked: true };\n  }\n  // this is an error because commentID wasn't in the lock table\n  return m_MakeLockError(`commentID ${commentID} was not locked so can't unlock`);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_IsCommentLocked = function (pkt) {\n  let { commentID } = pkt.Data();\n  const uaddr = pkt.s_uaddr;\n  const isLocked = m_locked_comments.has(commentID);\n  return { commentID, locked: isLocked };\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nDB.PKT_RequestUnlockAllNodes = function (pkt) {\n  m_locked_nodes = new Map();\n  return { unlocked: true };\n};\nDB.PKT_RequestUnlockAllEdges = function (pkt) {\n  m_locked_edges = new Map();\n  return { unlocked: true };\n};\nDB.PKT_RequestUnlockAllComments = function (pkt) {\n  m_locked_comments = new Map();\n  return { unlocked: true };\n};\nDB.PKT_RequestUnlockAll = function (pkt) {\n  m_locked_nodes = new Map();\n  m_locked_edges = new Map();\n  m_locked_comments = new Map();\n  m_open_editors = [];\n  return { unlocked: true };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** called by server-network when a client disconnects we want to unlock any\n    nodes and edges they had locked.\n */\nDB.RequestUnlock = function (uaddr) {\n  m_locked_nodes.forEach((value, key) => {\n    if (value === uaddr) m_locked_nodes.delete(key);\n  });\n  m_locked_edges.forEach((value, key) => {\n    if (value === uaddr) m_locked_edges.delete(key);\n  });\n  m_locked_comments.forEach((value, key) => {\n    if (value === uaddr) m_locked_comments.delete(key);\n  })\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// eslint-disable-next-line complexity\nDB.PKT_Update = function (pkt) {\n  let { node, edge, nodeID, replacementNodeID, edgeID, comment, readbys } = pkt.Data();\n  let retval = {};\n  // PROCESS NODE INSERT/UPDATE\n  if (node) {\n    m_CleanObjID(`${pkt.Info()} node.id`, node);\n    let matches = NODES.find({ id: node.id });\n    if (matches.length === 0) {\n      // if there was no node, then this is an insert new operation\n      if (DBG)\n        console.log(\n          PR,\n          `PKT_Update ${pkt.Info()} INSERT nodeID ${JSON.stringify(node)}`\n        );\n\n      // Handle different id types\n      if (isNaN(node.id)) {\n        // If the node id has NOT been defined, generate a new node id\n        node.id = m_GetNewNodeID();\n      }\n\n      LOGGER.WriteRLog(pkt.InfoObj(), `insert node`, node.id, JSON.stringify(node));\n      DB.AppendNodeLog(node, pkt); // log GroupId to node stored in database\n      NODES.insert(node);\n      // Return the updated record -- needed to update metadata\n      let updatedNode = NODES.findOne({ id: node.id });\n      if (!updatedNode)\n        console.log(\n          PR,\n          `PKT_Update ${pkt.Info()} could not find node after update!  This should not happen! ${node.id\n          } ${JSON.stringify(node)}`\n        );\n      retval = { op: 'insert', node: updatedNode };\n    } else if (matches.length === 1) {\n      // there was one match to update\n      NODES.findAndUpdate({ id: node.id }, n => {\n        if (DBG)\n          console.log(\n            PR,\n            `PKT_Update ${pkt.Info()} UPDATE nodeID ${node.id} ${JSON.stringify(\n              node\n            )}`\n          );\n        LOGGER.WriteRLog(pkt.InfoObj(), `update node`, node.id, JSON.stringify(node));\n        DB.AppendNodeLog(n, pkt); // log GroupId to node stored in database\n        Object.assign(n, node);\n      });\n      // Return the updated record -- needed to update metadata\n      let updatedNode = NODES.findOne({ id: node.id });\n      if (!updatedNode)\n        console.log(\n          PR,\n          `PKT_Update ${pkt.Info()} could not find node after update!  This should not happen! ${node.id\n          } ${JSON.stringify(node)}`\n        );\n      retval = { op: 'update', node: updatedNode };\n    } else {\n      if (DBG)\n        console.log(PR, `WARNING: multiple nodeID ${node.id} x${matches.length}`);\n      LOGGER.WriteRLog(pkt.InfoObj(), `ERROR`, node.id, 'duplicate node id');\n      retval = { op: 'error-multinodeid' };\n    }\n    // Always update m_max_nodeID\n    m_CalculateMaxNodeID();\n    return retval;\n  } // if node\n\n  // PROCESS EDGE INSERT/UPDATE\n  if (edge) {\n    m_CleanObjID(`${pkt.Info()} edge.id`, edge);\n    let matches = EDGES.find({ id: edge.id });\n    if (matches.length === 0) {\n      // this is a new edge\n      if (DBG)\n        console.log(\n          PR,\n          `PKT_Update ${pkt.Info()} INSERT edgeID ${edge.id} ${JSON.stringify(edge)}`\n        );\n\n      // Handle different id types\n      if (isNaN(edge.id)) {\n        // If the edge id has NOT been defined, generate a new edge id\n        edge.id = m_GetNewEdgeID();\n      }\n\n      LOGGER.WriteRLog(pkt.InfoObj(), `insert edge`, edge.id, JSON.stringify(edge));\n      DB.AppendEdgeLog(edge, pkt); // log GroupId to edge stored in database\n      EDGES.insert(edge);\n      // Return the updated record -- needed to update metadata\n      let updatedEdge = EDGES.findOne({ id: edge.id });\n      if (!updatedEdge)\n        console.log(\n          PR,\n          `PKT_Update ${pkt.Info()} could not find edge after update!  This should not happen! ${edge.id\n          } ${JSON.stringify(edge)}`\n        );\n      retval = { op: 'insert', edge: updatedEdge };\n    } else if (matches.length === 1) {\n      // update this edge\n      EDGES.findAndUpdate({ id: edge.id }, e => {\n        if (DBG)\n          console.log(\n            PR,\n            `PKT_Update ${pkt.SourceGroupID()} UPDATE edgeID ${edge.id\n            } ${JSON.stringify(edge)}`\n          );\n        LOGGER.WriteRLog(pkt.InfoObj(), `update edge`, edge.id, JSON.stringify(edge));\n        DB.AppendEdgeLog(e, pkt); // log GroupId to edge stored in database\n        Object.assign(e, edge);\n      });\n      // Return the updated record -- needed to update metadata\n      let updatedEdge = EDGES.findOne({ id: edge.id });\n      if (!updatedEdge)\n        console.log(\n          PR,\n          `PKT_Update ${pkt.Info()} could not find edge after update!  This should not happen! ${edge.id\n          } ${JSON.stringify(edge)}`\n        );\n      retval = { op: 'update', edge: updatedEdge };\n    } else {\n      console.log(PR, `WARNING: multiple edgeID ${edge.id} x${matches.length}`);\n      LOGGER.WriteRLog(pkt.InfoObj(), `ERROR`, node.id, 'duplicate edge id');\n      retval = { op: 'error-multiedgeid' };\n    }\n    // Always update m_max_edgeID\n    m_CalculateMaxEdgeID();\n    return retval;\n  } // if edge\n\n  // DELETE NODE\n  if (nodeID !== undefined) {\n    nodeID = m_CleanID(`${pkt.Info()} nodeID`, nodeID);\n    if (DBG) console.log(PR, `PKT_Update ${pkt.Info()} DELETE nodeID ${nodeID}`);\n    // Log first so it's apparent what is triggering the edge changes\n    LOGGER.WriteRLog(pkt.InfoObj(), `delete node`, nodeID);\n\n    // handle edges\n    let edgesToProcess = EDGES.where(e => {\n      return e.source === nodeID || e.target === nodeID;\n    });\n\n    // handle linked nodes\n    replacementNodeID = m_CleanID(\n      `${pkt.Info()} replacementNodeID`,\n      replacementNodeID\n    );\n    if (replacementNodeID !== -1) {\n      // re-link edges to replacementNodeID...\n      EDGES.findAndUpdate({ source: nodeID }, e => {\n        LOGGER.WriteRLog(pkt.InfoObj(), `relinking edge`, e.id, `to`, replacementNodeID);\n        e.source = replacementNodeID;\n      });\n      EDGES.findAndUpdate({ target: nodeID }, e => {\n        LOGGER.WriteRLog(pkt.InfoObj(), `relinking edge`, e.id, `to`, replacementNodeID);\n        e.target = replacementNodeID;\n      });\n    } else {\n      // ... or delete edges completely\n      let sourceEdges = EDGES.find({ source: nodeID });\n      EDGES.findAndRemove({ source: nodeID });\n      if (sourceEdges.length)\n        LOGGER.WriteRLog(\n          pkt.InfoObj(),\n          `deleting ${sourceEdges.length} sources matching ${nodeID}`\n        );\n      let targetEdges = EDGES.find({ target: nodeID });\n      EDGES.findAndRemove({ target: nodeID });\n      if (targetEdges.length)\n        LOGGER.WriteRLog(\n          pkt.InfoObj(),\n          `deleting ${targetEdges.length} targets matching ${nodeID}`\n        );\n    }\n    // ...finally remove the node itself\n    NODES.findAndRemove({ id: nodeID });\n    return { op: 'delete', nodeID, replacementNodeID };\n  }\n\n  // DELETE EDGES\n  if (edgeID !== undefined) {\n    edgeID = m_CleanID(`${pkt.Info()} edgeID`, edgeID);\n    if (DBG) console.log(PR, `PKT_Update ${pkt.Info()} DELETE edgeID ${edgeID}`);\n    LOGGER.WriteRLog(pkt.InfoObj(), `delete edge`, edgeID);\n    EDGES.findAndRemove({ id: edgeID });\n    return { op: 'delete', edgeID };\n  }\n\n  // PROCESS COMMENT INSERT/UPDATE\n  if (comment) {\n    m_CleanObjID(`${pkt.Info()} comment.id`, comment);\n    let matches = COMMENTS.find({ comment_id: comment.comment_id });\n    if (matches.length === 0) {\n      // if there was no comment, then this is an insert new operation\n      if (DBG)\n        console.log(\n          PR,\n          `PKT_Update ${pkt.Info()} INSERT comment_id ${JSON.stringify(comment)}`\n        );\n\n      // Handle different id types\n      if (isNaN(comment.comment_id)) {\n        // If the node id has NOT been defined, generate a new node id\n        comment.comment_id = m_GetNewCommentID();\n      }\n\n      LOGGER.WriteRLog(pkt.InfoObj(), `insert comment`, comment.comment_id, JSON.stringify(comment));\n      DB.AppendCommentLog(comment, pkt); // log GroupId to node stored in database\n      COMMENTS.insert(comment);\n      // Return the updated record -- needed to update metadata\n      let updatedComment = COMMENTS.findOne({ comment_id: comment.comment_id });\n      if (!updatedComment)\n        console.log(\n          PR,\n          `PKT_Update ${pkt.Info()} could not find new comment after update!  This should not happen! ${comment.comment_id\n          } ${JSON.stringify(comment)}`\n        );\n      retval = { op: 'insert', comment: updatedComment };\n    } else if (matches.length === 1) {\n      // there was one match to, so update the comment\n      COMMENTS.findAndUpdate({ comment_id: comment.comment_id }, c => {\n        if (DBG)\n          console.log(\n            PR,\n            `PKT_Update ${pkt.Info()} UPDATE comment_id ${comment.comment_id} ${JSON.stringify(\n              comment\n            )}`\n          );\n        LOGGER.WriteRLog(pkt.InfoObj(), `update comment`, comment.comment_id, JSON.stringify(comment));\n        DB.AppendCommentLog(c, pkt); // log GroupId to node stored in database\n        Object.assign(c, comment);\n      });\n      // Return the updated record -- needed to update metadata\n\n      let updatedComment = COMMENTS.findOne({ comment_id: comment.comment_id });\n      if (!updatedComment)\n        console.log(\n          PR,\n          `PKT_Update ${pkt.Info()} could not find updated comment after update!  This should not happen! ${comment.comment_id\n          } ${JSON.stringify(comment)}`\n        );\n      retval = { op: 'update', comment: updatedComment };\n    } else {\n      if (DBG)\n        console.log(PR, `WARNING: multiple comment_id ${comment.comment_id} x${matches.length}`);\n      LOGGER.WriteRLog(pkt.InfoObj(), `ERROR`, comment.comment_id, 'duplicate comment id');\n      retval = { op: 'error-multinodeid' };\n    }\n    return retval;\n  } // if comment\n\n  // PROCESS READBY INSERT/UPDATE\n  // NOTE this is a little different than the others because `readbys` is an array of readby objects.\n  if (readbys) {\n    const retvals = [];\n    readbys.forEach(readby => {\n      m_CleanObjID(`${pkt.Info()} readby.id`, readby);\n      let matches = READBY.find({ comment_id: readby.comment_id });\n      if (matches.length === 0) {\n        // if there was no readby, then this is an insert new operation\n        if (DBG)\n          console.log(\n            PR,\n            `PKT_Update ${pkt.Info()} INSERT comment_id ${JSON.stringify(readby)}`\n          );\n\n        // Handle different id types\n        if (isNaN(readby.comment_id)) {\n          // If the node id has NOT been defined, generate a new node id\n          throw new Error(`server-database.PKT_Update called with invalid comment_id ${JSON.stringify(readby)}. This should not happen.`);\n        }\n\n        LOGGER.WriteRLog(pkt.InfoObj(), `insert readby`, readby.comment_id, JSON.stringify(readby));\n        DB.AppendReadbyLog(readby, pkt); // log GroupId to node stored in database\n        READBY.insert(readby);\n        // Return the updated record -- needed to update metadata\n        let updatedReadby = READBY.findOne({ comment_id: readby.comment_id });\n        if (!updatedReadby)\n          console.log(\n            PR,\n            `PKT_Update ${pkt.Info()} could not find new readby after update!  This should not happen! ${readby.comment_id\n            } ${JSON.stringify(readby)}`\n          );\n        retval = { op: 'insert', readby: updatedReadby };\n      } else if (matches.length === 1) {\n        // there was one match to, so update the comment\n        READBY.findAndUpdate({ comment_id: readby.comment_id }, r => {\n          if (DBG)\n            console.log(\n              PR,\n              `PKT_Update ${pkt.Info()} UPDATE comment_id ${readby.comment_id} ${JSON.stringify(\n                readby\n              )}`\n            );\n          LOGGER.WriteRLog(pkt.InfoObj(), `update readby`, readby.comment_id, JSON.stringify(readby));\n          DB.AppendReadbyLog(r, pkt); // log GroupId to node stored in database\n          Object.assign(r, readby);\n        });\n        // Return the updated record -- needed to update metadata\n\n        let updatedReadby = READBY.findOne({ comment_id: readby.comment_id });\n        if (!updatedReadby)\n          console.log(\n            PR,\n            `PKT_Update ${pkt.Info()} could not find updated readby after update!  This should not happen! ${readby.comment_id\n            } ${JSON.stringify(readby)}`\n          );\n        retval = { op: 'update', readby: updatedReadby };\n      } else {\n        if (DBG)\n          console.log(PR, `WARNING: multiple comment_id ${readby.comment_id} x${matches.length}`);\n        LOGGER.WriteRLog(pkt.InfoObj(), `ERROR`, readby.comment_id, 'duplicate comment id');\n        retval = { op: 'error-multinodeid' };\n      }\n      // NOTE returns an array of retvals for multiple replies\n      retvals.push(retval);\n    });\n    return retvals;\n  } // if readby\n\n  // return update value\n  return { op: 'error-noaction' };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** NOTE: Unlike PKT_Update, the return value is an array with multiple results */\nDB.PKT_BatchUpdate = function (pkt) {\n  let { items } = pkt.Data();\n  let retvals = [];\n  items.forEach(item => {\n    const { comment, commentID, collection_ref } = item;\n    // PROCESS COMMENT INSERT/UPDATE\n    if (comment) retvals.push(m_CommentUpdate(comment, pkt));\n    // DELETE SINGLE COMMENT\n    if (commentID !== undefined) retvals.push(m_CommentRemove(commentID, pkt));\n    // Trigger derived value update after removal\n    if (collection_ref) retvals.push({ op: 'refresh', collection_ref });\n  })\n  return retvals;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_CommentUpdate(comment, pkt) {\n  m_CleanObjID(`${pkt.Info()} comment.id`, comment);\n  let matches = COMMENTS.find({ comment_id: comment.comment_id });\n  if (matches.length === 0) {\n    // if there was no comment, then this is an insert new operation\n    if (DBG)\n      console.log(\n        PR,\n        `PKT_Update ${pkt.Info()} INSERT comment_id ${JSON.stringify(comment)}`\n      );\n    // Handle different id types\n    if (isNaN(comment.comment_id)) {\n      // If the comment id has NOT been defined, generate a new comment id\n      comment.comment_id = m_GetNewCommentID();\n    }\n    LOGGER.WriteRLog(pkt.InfoObj(), `insert comment`, comment.comment_id, JSON.stringify(comment));\n    DB.AppendCommentLog(comment, pkt); // log GroupId to node stored in database\n    COMMENTS.insert(comment);\n    // Return the updated record -- needed to update metadata\n    let updatedComment = COMMENTS.findOne({ comment_id: comment.comment_id });\n    if (!updatedComment)\n      console.log(\n        PR,\n        `PKT_Update ${pkt.Info()} could not find new comment after update!  This should not happen! ${comment.comment_id\n        } ${JSON.stringify(comment)}`\n      );\n    retval = { op: 'insert', comment: updatedComment };\n  } else if (matches.length === 1) {\n    // there was one match to, so update the comment\n    COMMENTS.findAndUpdate({ comment_id: comment.comment_id }, c => {\n      if (DBG)\n        console.log(\n          PR,\n          `PKT_Update ${pkt.Info()} UPDATE comment_id ${comment.comment_id} ${JSON.stringify(\n            comment\n          )}`\n        );\n      LOGGER.WriteRLog(pkt.InfoObj(), `update comment`, comment.comment_id, JSON.stringify(comment));\n      DB.AppendCommentLog(c, pkt); // log GroupId to node stored in database\n      Object.assign(c, comment);\n    });\n    // Return the updated record -- needed to update metadata\n\n    let updatedComment = COMMENTS.findOne({ comment_id: comment.comment_id });\n    if (!updatedComment)\n      console.log(\n        PR,\n        `PKT_Update ${pkt.Info()} could not find updated comment after update!  This should not happen! ${comment.comment_id\n        } ${JSON.stringify(comment)}`\n      );\n    retval = { op: 'update', comment: updatedComment };\n  } else {\n    if (DBG)\n      console.log(PR, `WARNING: multiple comment_id ${comment.comment_id} x${matches.length}`);\n    LOGGER.WriteRLog(pkt.InfoObj(), `ERROR`, comment.comment_id, 'duplicate comment id');\n    retval = { op: 'error-multinodeid' };\n  }\n  return retval;\n} // if comment\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_CommentRemove(commentID, pkt) {\n  if (DBG) console.log(PR, `PKT_Update ${pkt.Info()} DELETE commentID ${commentID}`);\n  // Log first so it's apparent what is triggering the changes\n  LOGGER.WriteRLog(pkt.InfoObj(), `delete comment`, commentID);\n  COMMENTS.findAndRemove({ comment_id: commentID });\n  return { op: 'delete', commentID };\n}\n\n/// NODE ANNOTATION ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** write/remove packet SourceGroupID() information into the node before writing\n    the first entry is the insert, subsequent operations are updates\n */\nDB.AppendNodeLog = function (node, pkt) {\n  if (!node._nlog) node._nlog = [];\n  let gid = pkt.SourceGroupID() || pkt.SourceAddress();\n  node._nlog.push(gid);\n  if (DBG) {\n    let out = '';\n    node._nlog.forEach(el => {\n      out += `[${el}] `;\n    });\n    console.log(PR, 'nodelog', out);\n  }\n};\nDB.FilterNodeLog = function (node) {\n  let newNode = Object.assign({}, node);\n  Reflect.deleteProperty(newNode, '_nlog');\n  return newNode;\n};\n/// EDGE ANNOTATION ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** write/remove packet SourceGroupID() information into the node before writing\n    the first entry is the insert, subsequent operations are updates\n */\nDB.AppendEdgeLog = function (edge, pkt) {\n  if (!edge._elog) edge._elog = [];\n  let gid = pkt.SourceGroupID() || pkt.SourceAddress();\n  edge._elog.push(gid);\n  if (DBG) {\n    let out = '';\n    edge._elog.forEach(el => {\n      out += `[${el}] `;\n    });\n    console.log(PR, 'edgelog', out);\n  }\n};\nDB.FilterEdgeLog = function (edge) {\n  let newEdge = Object.assign({}, edge);\n  Reflect.deleteProperty(newEdge, '_elog');\n  return newEdge;\n};\n/// COMMENT ANNOTATION ////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** write/remove packet SourceGroupID() information into the comment before writing\n    the first entry is the insert, subsequent operations are updates\n */\nDB.AppendCommentLog = function (comment, pkt) {\n  if (!comment._nlog) comment._nlog = [];\n  let gid = pkt.SourceGroupID() || pkt.SourceAddress();\n  comment._nlog.push(gid);\n  if (DBG) {\n    let out = '';\n    comment._nlog.forEach(el => {\n      out += `[${el}] `;\n    });\n    console.log(PR, 'commentlog', out);\n  }\n};\nDB.FilterCommentLog = function (comment) {\n  let newComment = Object.assign({}, comment);\n  Reflect.deleteProperty(newComment, '_nlog');\n  return newComment;\n};\n/// READBY ANNOTATION ////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** write/remove packet SourceGroupID() information into the readby before writing\n    the first entry is the insert, subsequent operations are updates\n */\nDB.AppendReadbyLog = function (readby, pkt) {\n  if (!readby._nlog) readby._nlog = [];\n  let gid = pkt.SourceGroupID() || pkt.SourceAddress();\n  readby._nlog.push(gid);\n  if (DBG) {\n    let out = '';\n    readby._nlog.forEach(el => {\n      out += `[${el}] `;\n    });\n    console.log(PR, 'readbylog', out);\n  }\n};\nDB.FilterReadbyLog = function (readby) {\n  let newReadby = Object.assign({}, readby);\n  Reflect.deleteProperty(newReadby, '_nlog');\n  return newReadby;\n};\n\n/// JSON EXPORT ///////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** called by brunch to generate an up-to-date JSON file to path.\n    creates the path if it doesn't exist\n */\nDB.WriteDbJSON = function (filePath) {\n  let dataset = NC_CONFIG.dataset;\n\n  // Ideally we should use m_otions value, but in standlone mode,\n  // m_options might not be defined.\n  db_file = m_options ? m_options.db_file : m_GetValidDBFilePath(dataset);\n  let db = new Loki(db_file, {\n    autoload: true,\n    autoloadCallback: () => {\n      if (typeof filePath === 'string') {\n        if (DBG) console.log(PR, `writing { nodes, edges } to '${filePath}'`);\n        let nodes = db.getCollection('nodes').chain().data({ removeMeta: false });\n        let edges = db.getCollection('edges').chain().data({ removeMeta: false });\n        const comments = db.getCollection('comments').chain().data({ removeMeta: false });\n        const readby = db.getCollection('readby').chain().data({ removeMeta: false });\n        let data = { nodes, edges, comments, readby };\n        let json = JSON.stringify(data);\n        if (DBG) console.log(PR, `ensuring DIR ${PATH.dirname(filePath)}`);\n        FS.ensureDirSync(PATH.dirname(filePath));\n        if (DBG) console.log(PR, `writing file ${filePath}`);\n        FS.writeFileSync(filePath, json);\n        console.log(PR, `*** WROTE JSON DATABASE ${filePath}`);\n      } else {\n        console.log(PR, `ERR path ${filePath} must be a pathname`);\n      }\n    }\n  });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** DEPRECATED.  Replaced by WriteTemplateTOML\n    called by brunch to generate an up-to-date Template file to path.\n    creates the path if it doesn't exist\n */\nDB.WriteTemplateJSON = function (filePath) {\n  let templatePath = RUNTIMEPATH + NC_CONFIG.dataset + '.template';\n  FS.ensureDirSync(PATH.dirname(templatePath));\n  // Does the template exist?\n  if (!FS.existsSync(templatePath)) {\n    console.error(PR, `ERR could not find template ${templatePath}`);\n  } else {\n    FS.copySync(templatePath, filePath);\n    console.log(PR, `*** COPIED TEMPLATE ${templatePath} to ${filePath}`);\n  }\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** called by Template Editor and DB.WriteTemplateTOML\n */\nfunction m_GetTemplateTOMLFileName() {\n  return NC_CONFIG.dataset + TEMPLATE_EXT;\n}\nfunction m_GetTemplateTOMLFilePath() {\n  return RUNTIMEPATH + m_GetTemplateTOMLFileName();\n}\nDB.GetTemplateTOMLFileName = () => {\n  return { filename: m_GetTemplateTOMLFileName() };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** called by Template Editor to save TOML template changes to disk.\n    parm {object} pkt.data.template\n                  pkt.data.path      Will override the current template path in NC_CONFIG.dataset\n                                     Use this to write to the _default template or\n                                     other specific template.\n    Loads the template after saving!\n */\nDB.WriteTemplateTOML = pkt => {\n  if (pkt.data === undefined)\n    throw 'DB.WriteTemplateTOML pkt received with no `data`';\n  const templateFilePath = pkt.data.path || m_GetTemplateTOMLFilePath();\n  FS.ensureDirSync(PATH.dirname(templateFilePath));\n  // Does the template exist?  If so, rename the old version with curren timestamp.\n  if (FS.existsSync(templateFilePath)) {\n    const timestamp = new Date().toISOString().replace(/:/g, '.');\n    const backupFilePath =\n      RUNTIMEPATH + NC_CONFIG.dataset + '_' + timestamp + TEMPLATE_EXT;\n    FS.copySync(templateFilePath, backupFilePath);\n    console.log(PR, 'Backed up template to', backupFilePath);\n  }\n  const toml = TOML.stringify(pkt.data.template);\n  return FS.outputFile(templateFilePath, toml)\n    .then(data => {\n      console.log(PR, 'Saved template to', templateFilePath);\n      // reload template\n      m_LoadTemplate();\n      return { OK: true, info: templateFilePath };\n    })\n    .catch(err => {\n      console.log(PR, 'Failed trying to save', templateFilePath, err);\n      return { OK: false, info: 'Failed trying to save', templateFilePath };\n    });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Clones the existing toml template\n    called by brunch to generate an up-to-date Template file to path\n    for standalone mode.\n    creates the path if it doesn't exist\n */\nDB.CloneTemplateTOML = function (filePath) {\n  const TOMLtemplateFilePath = m_GetTemplateTOMLFilePath();\n  FS.ensureDirSync(PATH.dirname(TOMLtemplateFilePath));\n  // Does the template exist?\n  if (!FS.existsSync(TOMLtemplateFilePath)) {\n    console.error(PR, `ERR could not find template ${TOMLtemplateFilePath}`);\n  } else {\n    FS.copySync(TOMLtemplateFilePath, filePath);\n    console.log(PR, `*** COPIED TEMPLATE ${TOMLtemplateFilePath} to ${filePath}`);\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Regenerate Default Template from Template Schema\n    Call this when `template-schema.js` changes so that _default.template.toml will\n    match the schema defined in `template-schema.js`.\n    Use JSCLI `ncRegenerateDefaultTemplate` in the dev console to call this.\n */\nDB.RegenerateDefaultTemplate = () => {\n  const pkt = {\n    data: {\n      template: TEMPLATE_SCHEMA.ParseTemplateSchema(),\n      path: m_DefaultTemplatePath()\n    }\n  };\n  const toml = TOML.stringify(pkt.data.template);\n  return DB.WriteTemplateTOML(pkt);\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ OPENEDITORS\n\n    Used to coordinate Template editing, Importing, and Node/Edge editing.\n    They are mutually exclusive: if one is active, the others should be disabled\n    to prevent overwriting data.\n\n    Since Nodes and Edges should not be edited while the Template is being\n    edited or data is being imported, any editor that is opened registers\n    as an OPENEDITOR.  The UI will also pre-emptively disable edit buttons\n    whenever the open editors have been updated via a broacast of the\n    `EDIT_PERMISSIONS_UPDATE` message by server.js.\n\n    * When a Template editor is open, \"Import\", \"Node Edit\", \"Edge Edit\",\n      \"Add New Node\", and \"Add New Edge\" buttons are all disabled.\n    * When an Import file has been successfully selected and validated,\n      \"Template\", \"Node Edit\", \"Edge Edit\", \"Add New Node\", and\n      \"Add New Edge\" buttons are disabled.\n    * When \"Node Edit\", \"Edge Edit\", \"Add New Node\" or \"Add New Edge\" has\n      been triggered, the Template buttons on the Template panel and the\n      \"Import\" pane on the \"More\" panel are disabled.\n\n    m_open_editors is an array of all the editors (node, edge, template,\n    importer) that are currently open.\n\n    Whenever a template is being edited, import is requested, or a node or\n    edge is being edited:\n    1. They will register with `RequestEditLock`.\n    2. When they are finished, they will deregister using `ReleaseEditLock`.\n    3. `GetEditStatus` returns the current state of `m_open_editors`.\n\n    UI elements query `GetEditStatus` to figure out what they should\n    enable or disable.\n\n    UI elements should also listen to `EDIT_PERMISSIONS_UPDATE` to\n    enable or disable elements.\n\n    Note that multiple `node` and `edge` editors can be open at the same\n    time and ALL must be closed before the lock is released.  We support\n    this because each node or edge will have its own entry in m_open_editors,\n    though we do not distinguish between the individual nodes/edges.\n\n    Note that this is a different system from the instance-specific Node/Edge\n    lock that locks out individual node/edge objects for editing used with\n    `PKT_RequestLockNode` and `PKT_RequestLockEdge`.  m_open_editors focuses\n    on categories of editor types rather than locking out individual nodes\n    and edges to prevent others from editing the same node or edge.\n\n/*/\n/**\n * Returns object with flags indicating whether the template is being edited,\n * data is being imported, or node or edge are being edited\n * @returns {templateBeingEdited:boolean, importActive:boolean, nodeOrEdgeBeingEdited:boolean,\n *           lockedNodes:array, lockedEdges:array }\n */\nDB.GetEditStatus = pkt => {\n  const my_uaddr = pkt.s_uaddr;\n  // If there are any 'template' open editors, then templateBeingEdited is true\n  const templateBeingEdited = m_open_editors.includes(EDITORTYPE.TEMPLATE);\n  // If there are any 'importers' open editors, then importActive is true\n  const importActive = m_open_editors.includes(EDITORTYPE.IMPORTER);\n  // If there are any 'node' or 'edge' open editors, then nodeOrEdgeBeingEdited is true\n  const nodeOrEdgeBeingEdited =\n    m_open_editors.length > 0 &&\n    (m_open_editors.includes(EDITORTYPE.NODE) ||\n      m_open_editors.includes(EDITORTYPE.EDGE));\n  // Used to disable local editing if a comment is being edited, but ignores network comment edits\n  const commentBeingEditedByMe = [...m_locked_comments.values()].find(comment_uaddr => comment_uaddr === my_uaddr);\n  return {\n    templateBeingEdited,\n    importActive,\n    nodeOrEdgeBeingEdited,\n    commentBeingEditedByMe,\n    lockedNodes: [...m_locked_nodes.keys()],\n    lockedEdges: [...m_locked_edges.keys()],\n    lockedComments: [...m_locked_comments.keys()]\n  };\n};\n/**\n * Register a template, import, node or edge as being actively edited.\n * @param {Object} pkt\n * @param {string} pkt.editor - 'template', 'importer', 'node', 'edge', or 'comment'\n * @returns { templateBeingEdited: boolean, importActive: boolean, nodeOrEdgeBeingEdited: boolean, commentBeingEdited: boolean }\n */\nDB.RequestEditLock = pkt => {\n  m_open_editors.push(pkt.Data().editor);\n  return DB.GetEditStatus(pkt);\n};\n/**\n * Deregister a template, import, node or edge as being actively edited.\n * @param {Object} pkt\n * @param {string} pkt.editor - 'template', 'importer', 'node', 'edge', or 'comment'\n * @returns { templateBeingEdited: boolean, importActive: boolean, nodeOrEdgeBeingEdited: boolean, commentBeingEdited: boolean }\n */\nDB.ReleaseEditLock = pkt => {\n  const i = m_open_editors.findIndex(e => e === pkt.Data().editor);\n  if (i > -1) m_open_editors.splice(i, 1);\n  return DB.GetEditStatus(pkt);\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// utility functions for loading data\n/*/ Migrates old network data to new formats based on the template defintion.\n    This will automatically migrate any field/property that is marked `isRequired`\n    and has a `defaultValue` defined.\n\n    The basic check is this:\n    1. If the TEMPLATE property `isRequired`\n    2. ...and the TEMPLATE propert has `defaultValue` defined\n    2. ...and the node/edge property is currently undefined or ``\n    3. ...then we set the property to the defaultValue\n\n    The key parameters:\n      property.isRequired\n      property.defaultValue\n\n    If `isRequired` or `defaultValue` is not defined on the property, we skip migration.\n\n    REVIEW: We might consider also adding type coercion.\n/*/\nfunction m_MigrateNodes(nodes) {\n  // modifies `nodes` by reference\n  // Migrate v1.4 to v2.0\n  for (const [propertyName, property] of Object.entries(TEMPLATE.nodeDefs)) {\n    if (property.isRequired && property.defaultValue !== undefined) {\n      nodes.forEach(n => {\n        if (n[propertyName] === undefined || n[propertyName] === '')\n          n[propertyName] = property.defaultValue;\n      });\n    }\n  }\n}\nfunction m_MigrateEdges(edges) {\n  // modifies `edges` by reference\n  // Migrate v1.4 to v2.0\n  for (const [propertyName, property] of Object.entries(TEMPLATE.edgeDefs)) {\n    if (property.isRequired && property.defaultValue !== undefined) {\n      edges.forEach(e => {\n        if (e[propertyName] === undefined || e[propertyName] === '')\n          e[propertyName] = property.defaultValue;\n      });\n    }\n  }\n}\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// utility function for cleaning nodes with numeric id property\nfunction m_CleanObjID(prompt, obj) {\n  if (typeof obj.id === 'string') {\n    let int = parseInt(obj.id, 10);\n    LOGGER.WriteRLog({}, PR, `! ${prompt} \"${obj.id}\" is string; converting to ${int}`);\n    obj.id = int;\n  }\n  return obj;\n}\nfunction m_CleanEdgeEndpoints(prompt, edge) {\n  if (typeof edge.source === 'string') {\n    let int = parseInt(edge.source, 10);\n    LOGGER.WriteRLog(\n      {}, PR,\n      `  edge ${prompt} source \"${edge.source}\" is string; converting to ${int}`\n    );\n    edge.source = int;\n  }\n  if (typeof edge.target === 'string') {\n    let int = parseInt(edge.target, 10);\n    LOGGER.WriteRLog(\n      {}, PR,\n      `  edge ${prompt} target \"${edge.target}\" is string; converting to ${int}`\n    );\n    edge.target = int;\n  }\n  return edge;\n}\nfunction m_CleanID(prompt, id) {\n  if (typeof id === 'string') {\n    let int = parseInt(id, 10);\n    LOGGER.WriteRLog({}, PR, `! ${prompt} \"${id}\" is string; converting to number ${int}`);\n    id = int;\n  }\n  return id;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// utility function for getting a valid file path\nfunction m_GetValidDBFilePath(dataset) {\n  // validate dataset name\n  let regex = /^([A-z0-9-_+./])*$/; // Allow _ - + . /, so nested pathways are allowed\n  if (!regex.test(dataset)) {\n    console.error(\n      PR,\n      `Trying to initialize database with bad dataset name: ${dataset}`\n    );\n  }\n\n  return RUNTIMEPATH + dataset + '.loki';\n}\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\nmodule.exports = DB;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  LOGGER - WIP\n  porting PLAE logger for now to get it minimally working\n\n  SUPER UGLY PORT WILL CLEAN UP LATER AVERT YOUR EYES OMG\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/* eslint-disable newline-per-chained-call */\n/* eslint-disable nonblock-statement-body-position */\n\n/* added for pull request #81 so 'npm run lint' test appears clean */\n/* eslint-disable no-unused-vars */\n\nconst PATH = require('path');\nconst FSE = require('fs-extra');\n///\nconst NC_CONFIG = require('../../app-config/netcreate-config');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PROMPTS = require('../system/util/prompts');\nconst PR = PROMPTS.Pad('SRV-LOG');\n\n/// MODULE-WIDE VARS //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst LOG_DIR = '../../runtime/logs';\nconst Tracer = require('tracer');\nconst LOG_DELIMITER = '\\t';\nconst LOG_CONFIG = {\n  format: '{{line}}  {{message}}',\n  dateformat: 'HH:MM:ss.L',\n  preprocess: function (data) {\n    data.line = 'C ' + Number(data.line).zeroPad(4);\n  }\n};\nconst LOGGER = Tracer.colorConsole(LOG_CONFIG);\nlet fs_log = null;\n// enums for outputing dates\nconst e_weekday = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday'\n];\n\n/// RUNTIME INITIALIZATION ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// initialize event logger\nvar dir = PATH.resolve(PATH.join(__dirname, LOG_DIR));\nFSE.ensureDir(dir, function (err) {\n  if (err) throw new Error('could not make ' + dir + ' directory');\n  var logname = str_TimeDatedFilename('log') + '.txt';\n  var pathname = dir + '/' + logname;\n  fs_log = FSE.createWriteStream(pathname);\n\n  // Show Research Log Field Names\n  const fieldnames = [\n    'Date', 'Time', 'NetName', 'Addr', 'Token', 'Action', 'DataID', 'DataDetail'\n  ];\n  let fields = fieldnames.join(LOG_DELIMITER);\n  fields += '\\n';\n  fs_log.write(fields);\n\n  LogResearchLine({},\n    `NETCREATE APPSERVER SESSION LOG for ${str_DateStamp()} ${str_TimeStamp()}`\n  );\n  LogResearchLine({}, '---');\n});\n\n/// LOGGING FUNCTIONS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Log a standard system log message\n */\nfunction LogLine(...args) {\n  if (!fs_log) return;\n\n  var out = str_ShortDateStamp() + LOG_DELIMITER;\n  out += str_TimeStamp() + LOG_DELIMITER;\n  out += NC_CONFIG.dataset + LOG_DELIMITER;\n  var c = args.length;\n  // arguments are delimited\n  if (c) {\n    for (let i = 0; i < c; i++) {\n      if (i > 0) out += LOG_DELIMITER;\n      out += args[i];\n    }\n  }\n  out += '\\n';\n  fs_log.write(out);\n}\n\n/** Log a standard structured log message for research\n *  Guarantees a predictable column order with\n *    date, time, network, uaddr, group\n */\nfunction LogResearchLine(info = { uaddr: '', group: '' }, ...args) {\n  if (!fs_log) return;\n\n  var out = str_ShortDateStamp() + LOG_DELIMITER;\n  out += str_TimeStamp() + LOG_DELIMITER;\n  out += NC_CONFIG.dataset + LOG_DELIMITER;\n  out += (info.uaddr || '-') + LOG_DELIMITER;\n  out += (info.group || '-') + LOG_DELIMITER;\n  var c = args.length;\n  // arguments are delimited\n  if (c) {\n    for (let i = 0; i < c; i++) {\n      if (i > 0) out += LOG_DELIMITER;\n      out += args[i];\n    }\n  }\n  out += '\\n';\n  fs_log.write(out);\n}\n\n/// UTILITY FUNCTIONS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction str_TimeStamp() {\n  var date = new Date();\n  var hh = ('0' + date.getHours()).slice(-2);\n  var mm = ('0' + date.getMinutes()).slice(-2);\n  var ss = ('0' + date.getSeconds()).slice(-2);\n  return hh + ':' + mm + ':' + ss;\n}\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction str_DateStamp() {\n  var date = new Date();\n  var mm = ('0' + (date.getMonth() + 1)).slice(-2);\n  var dd = ('0' + date.getDate()).slice(-2);\n  var day = e_weekday[date.getDay()];\n  var yyyy = date.getFullYear();\n  return yyyy + '/' + mm + '/' + dd + ' ' + day;\n}\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction str_ShortDateStamp() {\n  var date = new Date();\n  var mm = ('0' + (date.getMonth() + 1)).slice(-2);\n  var dd = ('0' + date.getDate()).slice(-2);\n  var day = e_weekday[date.getDay()];\n  var yyyy = date.getFullYear();\n  return yyyy + '/' + mm + '/' + dd;\n}\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction str_TimeDatedFilename(...args) {\n  // construct filename\n  var date = new Date();\n  var dd = ('0' + date.getDate()).slice(-2);\n  var mm = ('0' + (date.getMonth() + 1)).slice(-2);\n  var hms = ('0' + date.getHours()).slice(-2);\n  hms += ('0' + date.getMinutes()).slice(-2);\n  hms += ('0' + date.getSeconds()).slice(-2);\n  var filename;\n  filename = date.getFullYear().toString();\n  filename += '-' + mm + dd;\n  var c = arguments.length;\n  if (c) filename += filename.concat('-', ...args);\n  filename += '-' + hms;\n  return filename;\n}\n\n/// API METHODS ///////////////////////////////////////////////////////////////\n/// = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\nlet LOG = {};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Handle incoming log events\n */\nLOG.PKT_LogEvent = function (pkt) {\n  let { event, items } = pkt.Data();\n  const uaddr = pkt.SourceAddress();\n  const group = pkt.SourceGroupID(); // leave blank if empty for network events\n  if (DBG) console.log(PR, pkt.Info(), event, ...items);\n  LogResearchLine({ uaddr, group }, event || '-', ...items);\n  return { OK: true };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API: Write to log as delimited arguments\n */\nLOG.Write = LogLine;\n/** API: Write to Researcher log as delimited arguments\n *  Research logs alway start with date, time, network, uaddr, group\n */\nLOG.WriteRLog = function (info = { uaddr: '', group: '' }, ...args) {\n  LogResearchLine(info, ...args);\n}\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = LOG;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  WebSocketServer and Network Management for UNISYS\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/* eslint-disable newline-per-chained-call */\n/* eslint-disable nonblock-statement-body-position */\n\n/* added for pull request #81 so 'npm run lint' test appears clean */\n/* eslint-disable no-unused-vars */\n\nconst DBG = false;\nconst STAT = true;\n\n///\tLOAD LIBRARIES ////////////////////////////////////////////////////////////\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar WSS = require('ws').Server;\nvar FSE = require('fs-extra');\nvar NetMessage = require('./common-netmessage-class');\nconst LOGGER = require('./server-logger');\nvar DB = require('./server-database');\nvar DEFS = require('./common-defs');\n\n/// CONSTANTS /////////////////////////////////////////////////////////////////\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst PROMPTS = require('../system/util/prompts');\nconst PR = PROMPTS.Pad('SRV_NET');\nconst ERR = PROMPTS.Pad('!!!');\nconst ERR_SS_EXISTS = 'socket server already created';\nconst ERR_NULL_SOCKET = 'require valid socket';\nconst DBG_SOCK_BADCLOSE = 'closing socket is not in mu_sockets';\nconst ERR_INVALID_DEST = \"couldn't find socket with provided address\";\nconst ERR_UNKNOWN_PKT = 'unrecognized netmessage packet type';\nconst DEFAULT_NET_PORT = 2929;\nconst DEFAULT_NET_ADDR = '127.0.0.1';\n\n/// MODULE-WIDE VARS //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// sockets\nvar mu_wss; // websocket server\nvar mu_options; // websocket options\nvar mu_sockets = new Map(); // sockets mapped by socket id\nvar mu_sid_counter = 0; // for generating  unique socket ids\n// storage\nvar m_server_handlers = new Map(); // message map storing sets of functions\nvar m_message_map = new Map(); // message map storing other handlers\nvar m_socket_msgs_list = new Map(); // message map by uaddr\n// heartbeat\nvar m_heartbeat_interval;\nvar m_pong_timer = [];\n\n/// API MEHTHODS //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UNET = {};\nconst SERVER_UADDR = NetMessage.DefaultServerUADDR(); // is 'SVR_01'\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Initialize() is called by brunch-server.js to define the default UNISYS\n    network values, so it can embed them in the index.ejs file for webapps\n */\nUNET.InitializeNetwork = options => {\n  options = options || {};\n  options.port = options.port || DEFAULT_NET_PORT;\n  options.uaddr = options.uaddr || SERVER_UADDR;\n  if (mu_wss !== undefined) throw Error(ERR_SS_EXISTS);\n  NetMessage.GlobalSetup({ uaddr: options.uaddr });\n  mu_options = options;\n  return mu_options;\n}; // end InitializeNetwork()\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/**\tCreateNetwork() is called by brunch-server after the Express webserver\n    has started listening, initializing the UNISYS NETWORK socket listener.\n */\nUNET.StartNetwork = () => {\n  // create listener\n  mu_wss = new WSS(mu_options);\n  mu_wss.on('listening', function () {\n    if (STAT) console.log(PR, `unisys network is active on port ${mu_options.port}`);\n    mu_wss.on('connection', m_NewSocketConnected);\n  });\n}; // end CreateNetwork()\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** HandleMessage() registers a server-implemented handler.\n    The handlerFunc receives a NetMessage and should return one as well.\n    It can also return a non-object if there is an error.\n    Logic is similar to client-datalink-class.js equivalent\n */\nUNET.HandleMessage = function (mesgName, handlerFunc) {\n  if (typeof handlerFunc !== 'function') {\n    throw 'arg2 must be a function';\n  }\n  let handlers = m_server_handlers.get(mesgName);\n  if (!handlers) {\n    handlers = new Set();\n    m_server_handlers.set(mesgName, handlers);\n  }\n  handlers.add(handlerFunc);\n  return this;\n}; // end HandleMessage()\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** UnhandleMessage() de-registers a server-implemented handler, in case you\n    ever want to do that.\n    Logic is similar to client-datalink-class.js equivalent\n */\nUNET.UnhandleMessage = function (mesgName, handlerFunc) {\n  if (!arguments.length) {\n    m_server_handlers.clear();\n  } else if (arguments.length === 1) {\n    m_server_handlers.delete(mesgName);\n  } else {\n    const handlers = m_server_handlers.get(mesgName);\n    if (handlers) {\n      handlers.delete(handlerFunc);\n    }\n  }\n  return this;\n}; // end UnhandleMessage()\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Call remote handler, with possible return value\n */\nUNET.NetCall = async function (mesgName, data) {\n  let pkt = new NetMessage(mesgName, data);\n  let promises = m_PromiseRemoteHandlers(pkt);\n  if (DBG)\n    console.log(\n      PR,\n      `${pkt.Info()} NETCALL ${pkt.Message()} to ${promises.length} remotes`\n    );\n  /// MAGICAL ASYNC/AWAIT BLOCK ///////\n  let resArray = await Promise.all(promises);\n  /// END MAGICAL ASYNC/AWAIT BLOCK ///\n  let resObj = Object.assign({}, ...resArray);\n  return resObj;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Send data to remote handler, no expected return value\n */\nUNET.NetSend = function (mesgName, data) {\n  let pkt = new NetMessage(mesgName, data);\n  let promises = m_PromiseRemoteHandlers(pkt);\n  // we don't care about waiting for the promise to complete\n  if (DBG)\n    console.log(\n      PR,\n      `${pkt.Info()} NETSEND ${pkt.Message()} to ${promises.length} remotes`\n    );\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Send signal to remote handler, no expected return value\n */\nUNET.NetSignal = function (mesgName, data) {\n  console.warn(\n    PR,\n    'NOTE: Use NetSend(), not NetSignal() since the server doesnt care.'\n  );\n  UNET.NetSend(mesgName, data);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** RegisterRemoteHandlers() accepts a RegistrationPacket with data = { messages }\n    and writes to the two main maps for handling incoming messages\n */\nUNET.RegisterRemoteHandlers = function (pkt) {\n  if (pkt.Message() !== 'SRV_REG_HANDLERS') throw Error('not a registration packet');\n  let uaddr = pkt.SourceAddress();\n  let { messages = [] } = pkt.Data();\n  let regd = [];\n  // save message list, for later when having to delete\n  m_socket_msgs_list.set(uaddr, messages);\n  // add uaddr for each message in the list\n  // m_message_map[mesg] contains a Set\n  messages.forEach(msg => {\n    let entry = m_message_map.get(msg);\n    if (!entry) {\n      entry = new Set();\n      m_message_map.set(msg, entry);\n    }\n    if (DBG) console.log(PR, `adding '${msg}' reference to ${uaddr}`);\n    entry.add(uaddr);\n    regd.push(msg);\n  });\n  return { registered: regd };\n};\n\n/// MODULE HELPER FUNCTIONS ///////////////////////////////////////////////////\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** The socket has connected, so let's save this to our connection list\n */\nfunction m_NewSocketConnected(socket) {\n  if (DBG) console.log(PR, 'socket connected');\n\n  m_SocketAdd(socket);\n  m_SocketClientAck(socket);\n  // subscribe socket to handlers\n  socket.on('message', json => {\n    m_SocketMessage(socket, json);\n  });\n  socket.on('close', () => {\n    // The socket wil not receive a close event immediately if the client\n    // loses their internet connection.  The close event WILL fire if the\n    // client comes back online and reconnects on a new UADDR.\n    // The socket will close eventually after about 4 minutes.\n    m_SocketDelete(socket);\n  });\n\n  // start heartbeat\n  m_StartHeartbeat();\n}\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** When a new socket is connected, we send a periodic heartbeat to let them\n    know we're still here, and so client can detect when network is lost.\n    This will keep sending a heartbeat to the socket so long as it is open.\n */\nfunction m_StartHeartbeat() {\n  if (DBG) console.log(PR, 'starting heartbeat');\n  if (m_heartbeat_interval) return; // already started\n  m_heartbeat_interval = setInterval(function sendHeartbeat() {\n    mu_sockets.forEach((socket, key, map) => {\n      if (DBG) console.log(PR, 'sending heartbeat to', socket.UADDR);\n      if (socket.readyState === socket.OPEN) {\n        socket.send('ping', err => {\n          if (err)\n            console.log(\n              PR,\n              'error \"',\n              err,\n              '\" while sending heartbeat to',\n              socket.UADDR\n            );\n        });\n      }\n    });\n  }, DEFS.SERVER_HEARTBEAT_INTERVAL);\n}\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** If a 'pong' message is not received from the client 5 seconds\n    after we send the client a ping message, we assume the network connection\n    has gone down.\n\n    The socket close handler is only triggered when the server closes the\n    connection.  In order to detect the internet connection going down\n    (e.g. loss of wifi) we need to check to see if we are peridically receiving\n    a heartbeat message from the client.\n */\n\nfunction m_ResetPongTimer(uaddr) {\n  clearTimeout(m_pong_timer[uaddr]);\n  m_pong_timer[uaddr] = setTimeout(function pongTimedOut() {\n    if (DBG)\n      console.log(\n        PR,\n        uaddr,\n        'pong not received before time ran out -- CONNECTION DEAD!'\n      );\n    LOGGER.WriteRLog(\n      { uaddr },\n      PR,\n      'pong not received before time ran out -- CLIENT CONNECTION DEAD!'\n    );\n    DB.RequestUnlock(uaddr);\n  }, DEFS.SERVER_HEARTBEAT_INTERVAL * 2);\n}\n\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** When a new socket connection happens, send back the special registration\n    packet (WIP)\n */\nfunction m_SocketClientAck(socket) {\n  let data = {\n    HELLO: 'Welcome to UNISYS',\n    UADDR: socket.UADDR\n  };\n  socket.send(JSON.stringify(data));\n}\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Handle all incoming socket messages asynchronously through Promises\n */\nfunction m_SocketMessage(socket, json) {\n  // Check Heartbeat\n  if (json === 'pong') {\n    if (socket.UADDR === undefined) {\n      console.log(\n        PR,\n        '!!!!!!!!!!!!!!!!!! Bad socket.UADDR',\n        socket.UADDR,\n        '! Skipping pong timer reset.'\n      );\n      return; // Don't start the timer if we get a bad UADDR\n    }\n    m_ResetPongTimer(socket.UADDR);\n    return;\n  }\n  try {\n    let pkt = new NetMessage(json);\n    // figure out what to do\n    switch (pkt.Type()) {\n      case 'state':\n        m_HandleState(socket, pkt);\n        break;\n      case 'msig':\n      case 'msend':\n      case 'mcall':\n        m_HandleMessage(socket, pkt);\n        break;\n      default:\n        throw new Error(`${PR} unknown packet type '${pkt.Type()}'`);\n    } // end switch\n  } catch (err) {\n    console.error(PR, 'm_SocketMessage try:', err);\n  }\n} // end m_SocketMessage()\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** handle global state and rebroadcast\n */\nfunction m_HandleState(socket, pkt) {\n  //\n}\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** handle messages that are a Send(), Signal(), or Call()\n */\nasync function m_HandleMessage(socket, pkt) {\n  // is this a returning packet that was forwarded?\n  if (pkt.IsOwnResponse()) {\n    // console.log(PR,`-- ${pkt.Message()} completing transaction ${pkt.seqlog.join(':')}`);\n    pkt.CompleteTransaction();\n    return;\n  }\n  // console.log(PR,`packet source incoming ${pkt.SourceAddress()}-${pkt.Message()}`);\n  // (1) first check if this is a server handler\n  let promises = m_PromiseServerHandlers(pkt);\n\n  // (2) if it wasn't, then see if we have remote handlers defined\n  if (promises.length === 0) promises = m_PromiseRemoteHandlers(pkt);\n\n  // (3) FAIL if no promises were returned, because there were no eligible\n  // UADDR targets, possibly because the sources are not allowed to call itself\n  // except in the case of the SIGNAL type\n  if (promises.length === 0) {\n    console.log(PR, `info: '${pkt.Message()}' no eligible UADDR targets`);\n    // return transaction to resolve callee\n    pkt.SetData({ NOP: `no handler found for '${pkt.Message()}'` });\n    if (pkt.IsType('mcall')) pkt.ReturnTransaction(socket);\n    return;\n  }\n  // got this far? let's skip all server messages for debugging purposes\n  let notsrv = !pkt.Message().startsWith('SRV_');\n  let json = JSON.stringify(pkt.Data());\n  /* MAGICAL ASYNC/AWAIT BLOCK *****************************/\n  if (DBG)\n    console.log(\n      PR,\n      `${pkt.Info()} FORWARD ${pkt.Message()} to ${promises.length} remotes`\n    );\n  // if (notsrv) console.log(PR,`>> '${pkt.Message()}' queuing ${promises.length} Promises w/ data ${json}'`);\n  let pktArray = await Promise.all(promises);\n  // if (notsrv) console.log(PR,`<< '${pkt.Message()}' resolved`);\n  if (DBG)\n    console.log(\n      PR,\n      `${pkt.Info()} RETURN ${pkt.Message()} from ${promises.length} remotes`\n    );\n  /* END MAGICAL ASYNC/AWAIT BLOCK *************************/\n\n  // (4) only mcall packets need to receive the data back return\n  if (!pkt.IsType('mcall')) return;\n\n  // (5) got this far? this is a call, so gather data and return it\n  let data = pktArray.reduce((d, p) => {\n    let pdata = p instanceof NetMessage ? p.Data() : p;\n    let retval = Object.assign(d, pdata);\n    // if (notsrv) console.log(PR,`'${pkt.Message()}' reduce`,JSON.stringify(retval));\n    return retval;\n  }, {});\n  // json = JSON.stringify(data);\n  // if (notsrv) console.log(PR,`'${pkt.Message()}' returning transaction data ${json}`);\n  pkt.SetData(data);\n  pkt.ReturnTransaction(socket);\n} // m_HandleMessage()\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** m_PromiseServerHandlers() returns an array of promises, which should be used\n     by Promises.all() inside an async/await function (m_SocketMessage above)\n    Logic is similar to client-datalink-class.js Call()\n */\nfunction m_PromiseServerHandlers(pkt) {\n  let mesgName = pkt.Message();\n  const handlers = m_server_handlers.get(mesgName);\n  /// create promises for all registered handlers\n  let promises = [];\n  if (handlers)\n    for (let handlerFunc of handlers) {\n      // handlerFunc signature: (data,dataReturn) => {}\n      let p = f_make_resolver_func(pkt, handlerFunc);\n      promises.push(p);\n    }\n  /// return all queued promises\n  return promises;\n\n  /// inline utility function /////////////////////////////////////////////\n  function f_make_resolver_func(srcPkt, handlerFunc) {\n    return new Promise((resolve, reject) => {\n      let retval = handlerFunc(srcPkt);\n      if (retval === undefined)\n        throw `'${mesgName}' message handler MUST return object or error string`;\n      if (typeof retval !== 'object') reject(retval);\n      else resolve(retval);\n    });\n  }\n}\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** If a handler is registered elsewhere on UNET, then dispatch to them for\n    eventual reflection back through server aggregation of data.\n */\nfunction m_PromiseRemoteHandlers(pkt) {\n  // debugging values\n  let s_uaddr = pkt.SourceAddress();\n  // logic values\n  let promises = [];\n  let mesgName = pkt.Message();\n  let type = pkt.Type();\n  // iterate!\n  let handlers = m_message_map.get(mesgName);\n  if (handlers)\n    handlers.forEach(d_uaddr => {\n      // don't send packet to originating UADDR because it already has handled it\n      // locally\n      switch (type) {\n        case 'msig':\n          promises.push(f_make_remote_resolver_func(pkt, d_uaddr));\n          break;\n        case 'msend':\n        case 'mcall':\n          if (s_uaddr !== d_uaddr) {\n            promises.push(f_make_remote_resolver_func(pkt, d_uaddr));\n          } else {\n            // console.log(PR,`${type} '${pkt.Message()}' -NO ECHO- ${d_uaddr}`);\n          }\n          break;\n        default:\n          throw Error(`{ERR_UNKNOWN_PKT} ${type}`);\n      }\n    });\n  /// return all queued promises\n  return promises;\n  /// f_make_remote_resolver_function returns the promise created by QueueTransaction()\n  /// made on a new netmessage.\n  function f_make_remote_resolver_func(srcPkt, d_uaddr, opt = {}) {\n    let { verbose } = opt;\n    // get the address of the destination implementor of MESSAGE\n    let d_sock = mu_sockets.get(d_uaddr);\n    if (d_sock === undefined) throw Error(ERR_INVALID_DEST + ` ${d_uaddr}`);\n    // Queue transaction from server\n    // sends to destination socket d_sock\n    // console.log(PR,`++ '${pkt.Message()}' FWD from ${pkt.SourceAddress()} to ${d_uaddr}`);\n    let newpkt = new NetMessage(srcPkt);\n    newpkt.MakeNewID();\n    newpkt.CopySourceAddress(srcPkt);\n    if (verbose) {\n      console.log(\n        'make_resolver_func:',\n        `PKT: ${srcPkt.Type()} '${srcPkt.Message()}' from ${srcPkt.Info()} to d_uaddr:${d_uaddr} dispatch to d_sock.UADDR:${\n          d_sock.UADDR\n        }`\n      );\n    }\n    return newpkt.QueueTransaction(d_sock);\n  }\n}\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/**\n */\nfunction m_SocketAdd(socket) {\n  // save socket by socket_id\n  let sid = m_GetNewUADDR();\n  // store additional props in socket\n  socket.UADDR = sid;\n  // save socket\n  mu_sockets.set(sid, socket);\n  if (STAT) console.log(PR, `socket ADD ${socket.UADDR} to network`);\n  LOGGER.WriteRLog({ uaddr: socket.UADDR }, 'joined network');\n  if (DBG) m_ListSockets(`add ${sid}`);\n}\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/**\n */\nfunction m_GetNewUADDR(prefix = 'UADDR') {\n  ++mu_sid_counter;\n  let cstr = mu_sid_counter.toString(10).padStart(2, '0');\n  return `${prefix}_${cstr}`;\n}\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/**\n */\nfunction m_SocketDelete(socket) {\n  let uaddr = socket.UADDR;\n  if (!mu_sockets.has(uaddr)) throw Error(DBG_SOCK_BADCLOSE);\n  if (STAT) console.log(PR, `socket DEL ${uaddr} from network`);\n  LOGGER.WriteRLog({ uaddr: socket.UADDR }, 'left network');\n  mu_sockets.delete(uaddr);\n  // delete socket reference from previously registered handlers\n  let rmesgs = m_socket_msgs_list.get(uaddr);\n  if (Array.isArray(rmesgs)) {\n    rmesgs.forEach(msg => {\n      let handlers = m_message_map.get(msg);\n      if (DBG) console.log(PR, `deleting '${msg}' reference to ${uaddr}`);\n      if (handlers) handlers.delete(uaddr);\n    });\n  }\n  if (DBG) m_ListSockets(`del ${socket.UADDR}`);\n}\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/**\n */\nfunction m_ListSockets(change) {\n  console.log(PR, 'SocketList change:', change);\n  // let's use iterators! for..of\n  let values = mu_sockets.values();\n  let count = 1;\n  for (let socket of values) {\n    console.log(PR, `${count} - ${socket.UADDR}`);\n  }\n}\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = UNET;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  UNISYS server loader\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst UNET = require('./server-network');\nconst UDB = require('./server-database');\nconst LOGGER = require('./server-logger');\nconst PROMPTS = require('../system/util/prompts');\n\n/// CONSTANTS & DECLARATIONS ///////////////////////////////////////////////////\n///\t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = PROMPTS.Pad('SRV');\n\n/// API CREATE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UNISYS = {};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Initialize() is called by brunch-server.js to define the default UNISYS\n *  network values, so it can embed them in the index.ejs file for webapps\n *  override = { port }\n */\nUNISYS.InitializeNetwork = override => {\n  UDB.InitializeDatabase(override);\n  return UNET.InitializeNetwork(override);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** RegisterHandlers() is called before network is started, so they're\n *  ready to run. These are server-implemented reserved messages.\n */\nUNISYS.RegisterHandlers = () => {\n  UNET.HandleMessage('SRV_REFLECT', function (pkt) {\n    pkt.Data().serverSays = 'REFLECTING';\n    pkt.Data().stack.push('SRV_01');\n    if (DBG) console.log(PR, sprint_message(pkt));\n    // return the original packet\n    return pkt;\n  });\n  //\n  UNET.HandleMessage('SRV_REG_HANDLERS', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    // now need to store the handlers somehow.\n    let data = UNET.RegisterRemoteHandlers(pkt);\n    // or return a new data object that will replace pkt.data\n    return data;\n  });\n  //\n  UNET.HandleMessage('SRV_DBGET', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_GetDatabase(pkt);\n  });\n  //\n  UNET.HandleMessage('SRV_DBSET', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_SetDatabase(pkt);\n  });\n  //\n  /// Add new node/edges to db after an import\n  UNET.HandleMessage('SRV_DBINSERT', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_InsertDatabase(pkt);\n  });\n  // Update or add new node/edges to db after an import\n  UNET.HandleMessage('SRV_DBMERGE', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_MergeDatabase(pkt);\n  });\n\n  /** TEMPLATE / IMPORT / NODE / EDGE EDITOR LOCKING **/\n\n  /** Reports on whether template, import, or node/edge are being edited\n   *  @return { templateBeingEdited: boolean, importActive: boolean, nodeOrEdgeBeingEdited: boolean }\n   */\n  UNET.HandleMessage('SRV_GET_EDIT_STATUS', pkt => {\n    // server-database\n    if (DBG) console.log(PR, sprint_message(pkt));\n    const data = UDB.GetEditStatus(pkt);\n    return data;\n  });\n  /** Requested by Node / Edge Editor when user wants to edit node / edge\n   * @return { templateBeingEdited: boolean, importActive: boolean, nodeOrEdgeBeingEdited: boolean }\n   */\n  UNET.HandleMessage('SRV_REQ_EDIT_LOCK', pkt => {\n    // server-database\n    if (DBG) console.log(PR, sprint_message(pkt));\n    const data = UDB.RequestEditLock(pkt);\n    // Broadcast Lock State\n    UNET.NetCall('EDIT_PERMISSIONS_UPDATE', data);\n    return data;\n  });\n  /**\n   * @return { templateBeingEdited: boolean, importActive: boolean, nodeOrEdgeBeingEdited: boolean }\n   */\n  UNET.HandleMessage('SRV_RELEASE_EDIT_LOCK', pkt => {\n    // server-database\n    if (DBG) console.log(PR, sprint_message(pkt));\n    const data = UDB.ReleaseEditLock(pkt);\n    // Broadcast Lock State\n    UNET.NetCall('EDIT_PERMISSIONS_UPDATE', data);\n    return data;\n  });\n\n  /** TEMPLATE EDITING **/\n\n  UNET.HandleMessage('SRV_TEMPLATE_REGENERATE_DEFAULT', pkt => {\n    // server-database\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.RegenerateDefaultTemplate();\n  });\n  UNET.HandleMessage('SRV_TEMPLATESAVE', pkt => {\n    // server-database\n    if (DBG) console.log(PR, sprint_message(pkt));\n    UNET.NetCall('NET_TEMPLATE_UPDATE', pkt.data.template); // Broadcast template to other computers on the net\n    return UDB.WriteTemplateTOML(pkt);\n  });\n  UNET.HandleMessage('SRV_GET_TEMPLATETOML_FILENAME', () => {\n    return UDB.GetTemplateTOMLFileName();\n  });\n\n  /// Update all EXISTING nodes/edges after a Template edit\n  UNET.HandleMessage('SRV_DBUPDATE_ALL', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_UpdateDatabase(pkt);\n  });\n\n  /** NODE/EDGE EDITING **/\n\n  // receives a packet from a client\n  UNET.HandleMessage('SRV_DBUPDATE', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    let data = UDB.PKT_Update(pkt);\n    // add src attribute for client SOURCE_UPDATE to know\n    // this is a remote update\n    data.src = 'remote';\n    // fire update messages\n    if (data.node) UNET.NetSend('SOURCE_UPDATE', data);\n    if (data.edge) UNET.NetSend('EDGE_UPDATE', data);\n    if (data.nodeID !== undefined) UNET.NetSend('NODE_DELETE', data);\n    if (data.edgeID !== undefined) UNET.NetSend('EDGE_DELETE', data);\n    if (data.comment) {\n      data.uaddr = pkt.s_uaddr; // used to differentiate local vs net updates\n      UNET.NetSend('COMMENT_UPDATE', data);\n    }\n    if (data.readbys) UNET.NetSend('READBY_UPDATE', data);\n    if (data.commentID !== undefined) UNET.NetSend('COMMENT_DELETE', data);\n    // return SRV_DBUPDATE value (required)\n    return { OK: true, info: 'SRC_DBUPDATE' };\n  });\n\n  // receives a batch of packets from a client\n  UNET.HandleMessage('SRV_DBBATCHUPDATE', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    let retvals = UDB.PKT_BatchUpdate(pkt);\n    // fire update messages\n    // retvals is an array and contains multiple comments and commentIDs\n    UNET.NetSend('COMMENTS_UPDATE', retvals);\n    // return SRV_DBBATCHUPDATE value (required)\n    return { OK: true, info: 'SRV_DBBATCHUPDATE' };\n  });\n\n  UNET.HandleMessage('SRV_CALCULATE_MAXNODEID', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_CalculateMaxNodeID(pkt);\n  });\n  UNET.HandleMessage('SRV_DBGETNODEID', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_GetNewNodeID(pkt);\n  });\n  UNET.HandleMessage('SRV_DBGETNODEIDS', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_GetNewNodeIDs(pkt);\n  });\n\n  UNET.HandleMessage('SRV_DBLOCKNODE', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_RequestLockNode(pkt);\n  });\n\n  UNET.HandleMessage('SRV_DBUNLOCKNODE', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_RequestUnlockNode(pkt);\n  });\n\n  UNET.HandleMessage('SRV_DBISNODELOCKED', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_IsNodeLocked(pkt);\n  });\n\n  UNET.HandleMessage('SRV_DBLOCKEDGE', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_RequestLockEdge(pkt);\n  });\n\n  UNET.HandleMessage('SRV_DBUNLOCKEDGE', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_RequestUnlockEdge(pkt);\n  });\n\n  UNET.HandleMessage('SRV_DBISEDGELOCKED', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_IsEdgeLocked(pkt);\n  });\n\n  UNET.HandleMessage('SRV_DBLOCKCOMMENT', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_RequestLockComment(pkt);\n  });\n\n  UNET.HandleMessage('SRV_DBUNLOCKCOMMENT', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_RequestUnlockComment(pkt);\n  });\n\n  UNET.HandleMessage('SRV_DBISCOMMENTLOCKED', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_IsCommentLocked(pkt);\n  });\n\n  UNET.HandleMessage('SRV_DBUNLOCKALLNODES', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_RequestUnlockAllNodes(pkt);\n  });\n  UNET.HandleMessage('SRV_DBUNLOCKALLEDGES', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_RequestUnlockAllEdges(pkt);\n  });\n  UNET.HandleMessage('SRV_DBUNLOCKALLCOMMENTS', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_RequestUnlockAllComments(pkt);\n  });\n  UNET.HandleMessage('SRV_DBUNLOCKALL', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    const res = UDB.PKT_RequestUnlockAll(pkt);\n    // Broadcast Lock State\n    const data = UDB.GetEditStatus(pkt);\n    UNET.NetCall('EDIT_PERMISSIONS_UPDATE', data);\n    return res;\n  });\n\n  UNET.HandleMessage('SRV_CALCULATE_MAXEDGEID', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_CalculateMaxEdgeID(pkt);\n  });\n  UNET.HandleMessage('SRV_DBGETEDGEID', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_GetNewEdgeID(pkt);\n  });\n  UNET.HandleMessage('SRV_DBGETEDGEIDS', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_GetNewEdgeIDs(pkt);\n  });\n\n  UNET.HandleMessage('SRV_DBGETCOMMENTID', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return UDB.PKT_GetNewCommentID(pkt);\n  });\n\n\n  UNET.HandleMessage('SRV_LOG_EVENT', function (pkt) {\n    if (DBG) console.log(PR, sprint_message(pkt));\n    return LOGGER.PKT_LogEvent(pkt);\n  });\n\n  // utility function //\n  function sprint_message(pkt) {\n    return `got '${pkt.Message()}' data=${JSON.stringify(pkt.Data())}`;\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/**\tStartNetwork() is called by brunch-server after the Express webserver\n */\nUNISYS.StartNetwork = () => {\n  UNET.StartNetwork();\n};\n\n/// EXPORT MODULE DEFINITION //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = UNISYS;\n","if (window.NC_DBG) console.log(`inc ${module.id}`);\n/*///////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Placeholder Root View\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * /////////////////////////////////////*/\n\nconst React = require('react');\n\n/// DEFAULT APPLICATION COMPONENT /////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass AppDefault extends React.Component {\n  constructor() {\n    super();\n  }\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexFlow: 'row nowrap',\n          width: '100%',\n          height: '100%'\n        }}\n      >\n        <div id=\"left\" style={{ flex: '1 0 auto' }}></div>\n        <div id=\"middle\" style={{ flex: '3 0 auto' }}>\n          <p>AppDefault.jsx</p>\n          <h4>NetCreate welcomes you</h4>\n          <p>This is a work in progress.</p>\n        </div>\n        <div id=\"right\" style={{ flex: '1 0 auto' }}></div>\n      </div>\n    );\n  }\n  componentDidMount() {\n    console.log('AppDefault mounted');\n  }\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = AppDefault;\n","/*///////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Root View for an IFrame-based HTML page\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * /////////////////////////////////////*/\n\nconst React = require('react');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n/// COMPONENT DECLARATION /////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction HTMLFrame(props) {\n  SETTINGS.ForceReloadOnNavigation();\n  let loc;\n  if (props && props.location && props.location.pathname) {\n    loc = props.location.pathname.substring(1);\n  }\n  loc = '/htmldemos/' + loc + '/' + loc + '.html';\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexFlow: 'column nowrap',\n        width: '100%',\n        height: '100%'\n      }}\n    >\n      <iframe style={{ flex: '1 0 auto', border: '0' }} src={loc} />\n    </div>\n  );\n}\n\n/// EXPORTS ///////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = HTMLFrame;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    NetCreate\n\n    The basic React Component structure of the app looks like this:\n\n        NetCreate\n        +- NodeSelector\n        |  +- NodeDetail\n        |  +- AutoComplete\n        |  |  +- AutoSuggest\n        |  +- EdgeEntry\n        |     +- *AutoComplete (for Target Node)*\n        +- NetGraph\n           +- D3SimpleNetGraph\n              +- D3\n\n    `NetCreate` is the root element. It is a wrapper for the key app\n    elements `NodeSelector` and `NetGraph`.\n\n    It does not do any data or event handling.  Those are handled individually\n    by the respective Components.\n\n  * All state is maintained in `nc-logic.js`\n  * It handles events from NodeSelector, EdgeEntry, and NetGraph components\n      and passes data and upates across them.\n\n    PROPS  ... (none)\n    STATE  ... (none)\n    EVENTS ... (none)\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// UNISYS INITIALIZE REQUIRES for REACT ROOT /////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst UNISYS = require('unisys/client');\nconst UR = require('@ursys/core');\nconst URADD = require('@ursys/addons');\nconst SessionShell = require('unisys/component/SessionShell');\n\n/// SWITCHES //////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar DBG = false;\nconst PROMPTS = require('system/util/prompts');\nconst PR = PROMPTS.Pad('ACD');\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { Button } = ReactStrap;\nconst NCSearch = require('./components/NCSearch');\nconst NCNode = require('./components/NCNode');\nconst NCGraph = require('./components/NCGraph');\nconst InfoPanel = require('./components/InfoPanel');\nconst FiltersPanel = require('./components/filter/FiltersPanel');\nconst NCLOGIC = require('./nc-logic'); // require to bootstrap data loading\nconst FILTERMGR = require('./filter-mgr'); // handles filtering functions\nconst EDGEMGR = require('./edge-mgr'); // handles edge synthesis\nconst SELECTIONMGR = require('./selection-mgr'); // handles UI selection events\nconst HILITEMGR = require('./hilite-mgr'); // handles UI hilite events\nconst CMTMGR = require('./comment-mgr');\nconst FILTER = require('./components/filter/FilterEnums');\nimport URCommentStatus from './components/URCommentStatus';\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass NetCreate extends UNISYS.Component {\n  constructor() {\n    super();\n    UNISYS.ForceReloadOnNavigation();\n\n    /** _ur core and _ur_addons reachability tests **/\n    UR.ClientTest();\n    URADD.AddonClientTest();\n    const SM = new UR.StateMgr('NETCREATE');\n    SM._initializeState({ prop_1: 1 });\n    console.log('SM:StateMgr contains:', SM.state());\n    /** end of _ur core and _ur_addons tests **/\n    URADD.COMMENT.Init();\n\n    this.state = {\n      isConnected: true,\n      isLoggedIn: false,\n      requireLogin: this.AppState('TEMPLATE').requireLogin,\n      disconnectMsg: '',\n      layoutNodesOpen: true,\n      layoutFiltersOpen: false,\n      commentStatusMessage: 'waiting...'\n    };\n    this.OnDOMReady(() => {\n      if (DBG) console.log(PR, 'OnDOMReady');\n    });\n    this.OnReset(() => {\n      if (DBG) console.log(PR, 'OnReset');\n    });\n    this.OnStart(() => {\n      if (DBG) console.log(PR, 'OnStart');\n    });\n    this.OnAppReady(() => {\n      if (DBG) console.log(PR, 'OnAppReady');\n    });\n    this.OnRun(() => {\n      if (DBG) console.log(PR, 'OnRun');\n    });\n    this.OnDisconnect(e => {\n      if (DBG) console.log(PR, 'OnDisconnect');\n      // This is now handled by the UDATA \"DISCONNECT\" message.\n      // so that we can show a message explaining the cause of disconnect.\n      // this.setState({ isConnected: false });\n    });\n\n    this.onStateChange_SESSION = this.onStateChange_SESSION.bind(this);\n    this.onDisconnect = this.onDisconnect.bind(this);\n    this.onFilterBtnClick = this.onFilterBtnClick.bind(this);\n\n    this.OnAppStateChange('SESSION', this.onStateChange_SESSION);\n\n    const UDATA = UNISYS.NewDataLink(this);\n    UDATA.HandleMessage('DISCONNECT', this.onDisconnect);\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** SESSION is called by SessionShell when the ID changes\n      Show or hide netgraph depending on template settings.\n   */\n  onStateChange_SESSION(decoded) {\n    this.setState({ isLoggedIn: decoded.isValid });\n  }\n\n  onDisconnect(e) {\n    const time = new Date().toLocaleTimeString();\n    this.setState({\n      isConnected: false,\n      disconnectMsg: `${e.detail.message} ${time}`\n    });\n  }\n\n  /// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** This is the root component, so this fires after all subcomponents have\n      been fully rendered by render().\n   */\n  componentDidMount() {\n    // Init dragger\n    let dragger = document.getElementById('dragger');\n    dragger.onmousedown = this.handleMouseDown;\n  }\n\n  componentWillUnmount() {\n    this.AppStateChangeOff('SESSION', this.onStateChange_SESSION);\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  onFilterBtnClick(e) {\n    this.setState(state => {\n      return { layoutFiltersOpen: !state.layoutFiltersOpen };\n    });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Define the component structure of the web application\n   */\n  render() {\n    const {\n      isLoggedIn,\n      disconnectMsg,\n      layoutNodesOpen,\n      layoutFiltersOpen,\n      commentStatusMessage,\n      handleMessageUpdate\n    } = this.state;\n\n    // show or hide graph\n    // Use 'visibiliity' css NOT React's 'hidden' so size is properly\n    // calculated on init\n    let hideGraph = 'visible';\n    if (this.state.requireLogin && !isLoggedIn) hideGraph = 'hidden';\n\n    // note: the navbar is in init-appshell.jsx\n    return (\n      <div className=\"--NetCreate nc-base\">\n        <div\n          className=\"--NetCreate_Fixed_Top_SaveAlert nc-savealert\"\n          hidden={this.state.isConnected}\n        >\n          <div>\n            <b>{disconnectMsg}!</b> Your changes will not be saved! Please report\n            &quot;\n            {disconnectMsg}&quot; to your administrator to restart the graph.\n          </div>\n        </div>\n        <div className=\"--NetCreate_Fixed_Top nc-navbar\">\n          <SessionShell />\n          <div style={{ flexGrow: 1 }}></div>\n          <URCommentStatus\n            message={commentStatusMessage}\n            handleMessageUpdate={handleMessageUpdate}\n          />\n          <div style={{ flexGrow: 1 }}></div>\n        </div>\n\n        <div\n          className=\"--NetCreate_Rows\"\n          style={{\n            display: 'flex',\n            flexFlow: 'row nowrap',\n            backgroundColor: '#EEE',\n            width: '100%',\n            height: '100%',\n            overflow: 'hidden',\n            visibility: hideGraph\n          }}\n        >\n          <div\n            className=\"--NetCreate_Columns\"\n            id=\"left\"\n            style={{\n              backgroundColor: '#EEE',\n              flex: '1 1 25%',\n              maxWidth: '400px',\n              padding: '10px',\n              overflowY: 'scroll',\n              overflowX: 'auto',\n              marginTop: '38px'\n            }}\n          >\n            {/*** LEFT EDITOR COLUMN ***************/}\n            <div\n              className=\"--NetCreate_Column_Left\"\n              style={{ display: 'flex', flexFlow: 'column nowrap' }}\n            >\n              <NCSearch />\n              <NCNode />\n              {/* <Search /> */}\n              {/* <NodeSelector /> */}\n            </div>\n          </div>\n          {/*** CENTER NETVIEW COLUMN***************/}\n          <div\n            className=\"--NetCreate_Column_NetView\"\n            id=\"middle\"\n            style={{\n              backgroundColor: '#fcfcfc',\n              flex: '3 0 60%',\n              marginTop: '38px',\n              display: 'flex',\n              flexDirection: 'column'\n            }}\n          >\n            <InfoPanel />\n            <NCGraph />\n          </div>\n          {/*** RIGHT VIEW COLUMN ***************/}\n          <div\n            className=\"--NetCreate_Column_Filters_Open\"\n            id=\"right\"\n            style={{\n              marginTop: '38px',\n              padding: '0 5px',\n              backgroundColor: '#6c757d',\n              borderTopLeftRadius: layoutFiltersOpen ? '10px' : '0',\n              paddingBottom: '25px' // avoid footer\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'end',\n                width: layoutFiltersOpen ? '100%' : '0',\n                height: layoutFiltersOpen ? '100%' : 'inherit',\n                overflow: 'hidden'\n              }}\n            >\n              <Button\n                onClick={this.onFilterBtnClick}\n                style={{\n                  width: '90px',\n                  borderTopLeftRadius: '10px',\n                  paddingBottom: '10px',\n                  backgroundColor: '#6c757d',\n                  border: 'none',\n                  boxShadow: 'none',\n                  position: layoutFiltersOpen ? 'inherit' : 'absolute'\n                }}\n              >\n                {!layoutFiltersOpen && `< `}\n                {FILTER.PANEL_LABEL}\n                {layoutFiltersOpen && ` >`}\n              </Button>\n              <FiltersPanel hidden={!layoutFiltersOpen} />\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"--NetCreate_Column_Break_Info\"\n          style={{\n            fontSize: '10px',\n            // position: 'fixed',\n            left: '0px',\n            bottom: '0px',\n            right: '0px',\n            zIndex: '1500',\n            color: '#aaa',\n            backgroundColor: '#eee',\n            padding: '5px 10px'\n          }}\n        >\n          Please contact Professor Kalani Craig, Institute for Digital Arts &\n          Humanities at (812) 856-5721 (BH) or craigkl@indiana.edu with questions or\n          concerns and/or to request information contained on this website in an\n          accessible format.\n        </div>\n        <div id=\"dialog-container\"></div>\n      </div>\n    ); // end return\n  } // end render()\n} // end class NetCreate\n\n/// EXPORT UNISYS SIGNATURE ///////////////////////////////////////////////////\n/// used in init.jsx to set module scope early\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nNetCreate.UMOD = module.id;\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NetCreate;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  COMMENT MANAGER\n\n  See UR ADDONS / Comment\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst ReactDOM = require('react-dom');\nconst UNISYS = require('unisys/client');\nconst { COMMENT } = require('@ursys/addons');\nconst DATASTORE = require('system/datastore');\nconst { ARROW_RIGHT } = require('system/util/constant');\nconst { EDITORTYPE } = require('system/util/enum');\nconst NCUI = require('./nc-ui');\nconst NCDialog = require('./components/NCDialog');\nconst SETTINGS = require('settings');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = true;\nconst PR = 'comment-mgr: ';\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet MOD = UNISYS.NewModule(module.id);\nlet UDATA = UNISYS.NewDataLink(MOD);\nconst dialogContainerId = 'dialog-container'; // used to inject dialogs into NetCreate.jsx\n\nlet UID; // user id, cached.  nc-logic updates this on INITIALIZE and SESSION\n\n/// UNISYS LIFECYCLE HOOKS ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** lifecycle INITIALIZE handler\n */\nMOD.Hook('INITIALIZE', () => {\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /** LOAD_COMMENT_DATACORE\n   *  Called by nc-logic.m_PromiseLoadDB\n   *  Primarily after LOADASSETS\n   *  Loads comments from the database into dc-comments\n   *  @param {Object} data\n   *  @param {Object} data.users\n   *  @param {Object} data.commenttypes\n   *  @param {Object} data.comments\n   */\n  // Comment AddOn Handlers\n  UDATA.HandleMessage('LOAD_COMMENT_DATACORE', MOD.LoadDB);\n  /// STATE UPDATES and Message Handlers\n  UDATA.HandleMessage('COMMENTS_UPDATE', MOD.HandleCOMMENTS_UPDATE);\n  UDATA.HandleMessage('COMMENT_UPDATE', MOD.HandleCOMMENT_UPDATE);\n  UDATA.HandleMessage('READBY_UPDATE', MOD.HandleREADBY_UPDATE);\n  // Net.Create Handlers\n  UDATA.HandleMessage('EDIT_PERMISSIONS_UPDATE', m_UpdatePermissions);\n\n  // Currently not used\n  // UDATA.OnAppStateChange('COMMENTCOLLECTION', COMMENTCOLLECTION => console.log('comment-mgr.COMMENTCOLLECTION state updated:', COMMENTCOLLECTION));\n  // UDATA.OnAppStateChange('COMMENTVOBJS', COMMENTVOBJS => console.error('comment-mgr.COMMENTVOBJS state updated', COMMENTVOBJS));\n}); // end INITIALIZE Hook\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** CONFIGURE fires after LOADASSETS, so this is a good place to put TEMPLATE\n *  validation.\n */\nMOD.Hook('CONFIGURE', () => {\n  if (DBG) console.log('comment-mgr CONFIGURE');\n}); // end CONFIGURE Hook\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** The APP_READY hook is fired after all initialization phases have finished\n *  and may also fire at other times with a valid info packet\n */\nMOD.Hook('APP_READY', function (info) {\n  if (DBG) console.log('comment-mgr APP_READY');\n}); // end APP_READY Hook\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nMOD.LoadDB = data => {\n  const TEMPLATE = UDATA.AppState('TEMPLATE');\n  COMMENT.LoadTemplate(TEMPLATE.COMMENTTYPES);\n  COMMENT.LoadDB(data);\n}\n\n/// HELPER FUNCTIONS //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nMOD.COMMENTICON = (\n  <svg id=\"comment-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 42 42\">\n    <path d=\"M21,0C9.4,0,0,9.4,0,21c0,4.12,1.21,7.96,3.26,11.2l-2.26,9.8,11.56-1.78c2.58,1.14,5.44,1.78,8.44,1.78,11.6,0,21-9.4,21-21S32.6,0,21,0Z\" />\n  </svg>\n);\n// From Evan O'Neil https://drive.google.com/drive/folders/1fJ5WiLMVQxxaqghrCOFwegmnYoOvst7E\n// NOTE viewbox is set to y=1 to better center the text\nMOD.ICN_COMMENT_UNREAD = (\n  <svg id=\"icn-comment-unread\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 1 16 16\">\n    <path fill=\"#FFE143\" d='M8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 1 1 4.13401 1 8C1 9.15705 1.28072 10.2485 1.77778 11.21V15H8Z' />\n    <path fill=\"#FFE143\" d='M3.17778 10.8696V13.6H8C11.0928 13.6 13.6 11.0928 13.6 8C13.6 4.90721 11.0928 2.4 8 2.4C4.90721 2.4 2.4 4.90721 2.4 8C2.4 8.92813 2.62469 9.79968 3.02143 10.5671L3.17778 10.8696Z' />\n  </svg>\n)\nMOD.ICN_COMMENT_UNREAD_SELECTED = (\n  <svg id=\"icn-comment-unread\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 1 16 16\">\n    <path fill=\"#D44127\" d='M8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 1 1 4.13401 1 8C1 9.15705 1.28072 10.2485 1.77778 11.21V15H8Z' />\n    <path fill=\"#FFE143\" d='M3.17778 10.8696V13.6H8C11.0928 13.6 13.6 11.0928 13.6 8C13.6 4.90721 11.0928 2.4 8 2.4C4.90721 2.4 2.4 4.90721 2.4 8C2.4 8.92813 2.62469 9.79968 3.02143 10.5671L3.17778 10.8696Z' />\n  </svg>\n)\nMOD.ICN_COMMENT_READ = (\n  <svg id=\"icn-comment-unread\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 1 16 16\">\n    <path fill=\"#696969\" d='M8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 1 1 4.13401 1 8C1 9.15705 1.28072 10.2485 1.77778 11.21V15H8Z' />\n    <path fill=\"#696969\" d='M3.17778 10.8696V13.6H8C11.0928 13.6 13.6 11.0928 13.6 8C13.6 4.90721 11.0928 2.4 8 2.4C4.90721 2.4 2.4 4.90721 2.4 8C2.4 8.92813 2.62469 9.79968 3.02143 10.5671L3.17778 10.8696Z' />\n  </svg>\n)\nMOD.ICN_COMMENT_READ_SELECTED = (\n  <svg id=\"icn-comment-unread\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 1 16 16\">\n    <path fill=\"#D44127\" d='M8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 1 1 4.13401 1 8C1 9.15705 1.28072 10.2485 1.77778 11.21V15H8Z' />\n    <path fill=\"#696969\" d='M3.17778 10.8696V13.6H8C11.0928 13.6 13.6 11.0928 13.6 8C13.6 4.90721 11.0928 2.4 8 2.4C4.90721 2.4 2.4 4.90721 2.4 8C2.4 8.92813 2.62469 9.79968 3.02143 10.5671L3.17778 10.8696Z' />\n  </svg>\n)\n\nfunction m_SetAppStateCommentCollections() {\n  const COMMENTCOLLECTION = COMMENT.GetCommentCollections();\n  UDATA.SetAppState('COMMENTCOLLECTION', COMMENTCOLLECTION);\n}\n\nfunction m_SetAppStateCommentVObjs() {\n  const COMMENTVOBJS = COMMENT.GetCOMMENTVOBJS();\n  UDATA.SetAppState('COMMENTVOBJS', COMMENTVOBJS);\n}\n\nfunction m_UpdateComment(comment) {\n  const cobj = {\n    collection_ref: comment.collection_ref,\n    comment_id: comment.comment_id,\n    comment_id_parent: comment.comment_id_parent,\n    comment_id_previous: comment.comment_id_previous,\n    comment_type: comment.comment_type,\n    comment_createtime: comment.comment_createtime,\n    comment_modifytime: comment.comment_modifytime,\n    comment_isMarkedDeleted: comment.comment_isMarkedDeleted,\n    commenter_id: comment.commenter_id,\n    commenter_text: comment.commenter_text\n  };\n  const uid = MOD.GetCurrentUserId();\n  COMMENT.UpdateComment(cobj, uid);\n}\n\nfunction m_UpdatePermissions(data) {\n  UDATA.NetCall('SRV_GET_EDIT_STATUS').then(data => {\n    // disable comment button if someone is editing a comment\n    UDATA.LocalCall('COMMENT_UPDATE_PERMISSIONS', data);\n  });\n}\n/// API METHODS ///////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// CONSTANTS\nMOD.VIEWMODE = NCUI.VIEWMODE;\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Collection Reference Generators\n/// e.g. converts node id to \"n32\"\nMOD.GetNodeCREF = nodeId => `n${nodeId}`;\nMOD.GetEdgeCREF = edgeId => `e${edgeId}`;\nMOD.GetProjectCREF = projectId => `p${projectId}`;\n\n/// deconstructs \"n32\" into {type: \"n\", id: 32}\nMOD.DeconstructCref = cref => {\n  const type = cref.substring(0, 1);\n  const id = cref.substring(1);\n  return { type, id };\n}\n\n/**\n * Generate a human friendly label based on the cref (e.g. `n21`, `e4`)\n* e.g. \"n32\" becomes {typeLabel \"Node\", sourceLabel: \"32\"}\n* @param {string} cref\n * @returns { typeLabel, sourceLabel } sourceLabel is undefined if the source has been deleted\n */\nMOD.GetCREFSourceLabel = cref => {\n  const { type, id } = MOD.DeconstructCref(cref);\n  let typeLabel;\n  let node, edge, nodes, sourceNode, targetNode;\n  let sourceLabel; // undefined if not found\n  switch (type) {\n    case 'n':\n      typeLabel = 'Node';\n      node = UDATA.AppState('NCDATA').nodes.find(n => n.id === Number(id));\n      if (!node) break; // node might be missing if comment references a node that was removed\n      if (node) sourceLabel = node.label;\n      break;\n    case 'e':\n      typeLabel = 'Edge';\n      edge = UDATA.AppState('NCDATA').edges.find(e => e.id === Number(id));\n      if (!edge) break; // edge might be missing if the comment references an edge that was removed\n      nodes = UDATA.AppState('NCDATA').nodes;\n      sourceNode = nodes.find(n => n.id === Number(edge.source));\n      targetNode = nodes.find(n => n.id === Number(edge.target));\n      if (edge && sourceNode && targetNode)\n        sourceLabel = `${sourceNode.label}${ARROW_RIGHT}${targetNode.label}`;\n      break;\n    case 'p':\n      typeLabel = 'Project';\n      sourceLabel = id;\n      break;\n  }\n  return { typeLabel, sourceLabel };\n};\n\n/// Open the object that the comment refers to\n/// e.g. in Net.Create it's a node or edge object\nMOD.OpenReferent = cref => {\n  const { type, id } = MOD.DeconstructCref(cref);\n  let edge;\n  switch (type) {\n    case 'n':\n      UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [parseInt(id)] });\n      break;\n    case 'e':\n      edge = UDATA.AppState('NCDATA').edges.find(e => e.id === Number(id));\n      UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [edge.source] }).then(() => {\n        UDATA.LocalCall('EDGE_SELECT', { edgeId: edge.id });\n      });\n      break;\n    case 'p':\n      // do something?\n      break;\n  }\n};\n\n/// Open comment using a comment id\nMOD.OpenComment = (cref, cid) => {\n  const { type, id } = MOD.DeconstructCref(cref);\n  let edge;\n  switch (type) {\n    case 'n':\n      UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [parseInt(id)] }).then(() => {\n        UDATA.LocalCall('COMMENT_SELECT', { cref }).then(() => {\n          const commentEl = document.getElementById(cid);\n          commentEl.scrollIntoView({ behavior: 'smooth' });\n        });\n      });\n      break;\n    case 'e':\n      edge = UDATA.AppState('NCDATA').edges.find(e => e.id === Number(id));\n      UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [edge.source] }).then(() => {\n        UDATA.LocalCall('EDGE_SELECT', { edgeId: edge.id }).then(() => {\n          UDATA.LocalCall('COMMENT_SELECT', { cref }).then(() => {\n            const commentEl = document.getElementById(cid);\n            commentEl.scrollIntoView({ behavior: 'smooth' });\n          });\n        });\n      });\n      break;\n    case 'p':\n      // do something?\n      break;\n  }\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// User Id\nMOD.SetCurrentUserId = uid => UID = uid;\nMOD.GetCurrentUserId = () => UID; // called by other comment classes\nMOD.GetUserName = uid => {\n  return COMMENT.GetUserName(uid);\n};\nMOD.IsAdmin = () => {\n  return SETTINGS.IsAdmin();\n}\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Comment Type\nMOD.GetCommentTypes = () => {\n  return COMMENT.GetCommentTypes();\n};\nMOD.GetCommentType = slug => {\n  return COMMENT.GetCommentType(slug);\n};\nMOD.GetDefaultCommentType = () => {\n  return COMMENT.GetDefaultCommentType();\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Global Operations\nMOD.MarkAllRead = () => {\n  const uid = MOD.GetCurrentUserId();\n  const crefs = COMMENT.GetCrefs();\n  crefs.forEach(cref => {\n    m_DBUpdateReadBy(cref, uid);\n    COMMENT.MarkRead(cref, uid);\n  });\n  COMMENT.DeriveAllThreadedViewObjects(uid);\n  m_SetAppStateCommentCollections();\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Comment Collections\nMOD.GetCommentCollection = uiref => {\n  return COMMENT.GetCommentCollection(uiref);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nMOD.OpenCommentCollection = (uiref, cref, position) => {\n  MOD.UpdateCommentUIState(uiref, { cref, isOpen: true });\n  UDATA.LocalCall('CTHREADMGR_THREAD_OPENED', { uiref, cref, position });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/**\n * Used by NCNodeTable and NCEdgeTable to open/close the comment thread\n * If a comment is already opened by one button (e.g. node), and the user\n * clicks on another comment button (e.g. NodeTable), the new one will open,\n * and the old one closed.\n * Called by URCommentBtn, NCNodeTable, and NCEdgeTable\n * @param {TCommentUIRef} uiref comment button id\n * @param {TCollectionRef} cref collection_ref\n * @param {Object} position x, y position of the comment button\n */\nMOD.ToggleCommentCollection = (uiref, cref, position) => {\n  const uid = MOD.GetCurrentUserId();\n  // is the comment already open?\n  const open_uiref = MOD.GetOpenComments(cref);\n  if (open_uiref === uiref) {\n    // already opened by THIS uiref, so toggle it closed.\n    MOD.CloseCommentCollection(uiref, cref, uid);\n  } else if (open_uiref !== undefined) {\n    // already opened by SOMEONE ELSE, so close it, then open the new one\n    MOD.CloseCommentCollection(open_uiref, cref, uid);\n    MOD.OpenCommentCollection(uiref, cref, position);\n  } else {\n    // no comment is open, so open the new one\n    MOD.OpenCommentCollection(uiref, cref, position);\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/**\n * Marks a comment as read, and closes the component.\n * Called by NCCommentBtn when clicking \"Close\"\n * @param {Object} uiref comment button id\n * @param {Object} cref collection_ref\n * @param {Object} uid user id\n */\nMOD.CloseCommentCollection = (uiref, cref, uid) => {\n  if (!MOD.OKtoClose(cref)) {\n    // Comment is still being edited, prevent close\n    alert(\n      'This comment is still being edited!  Please Save or Cancel before closing the comment.'\n    );\n    return;\n  }\n  // OK to close\n  m_DBUpdateReadBy(cref, uid);\n  COMMENT.CloseCommentCollection(uiref, cref, uid);\n  m_SetAppStateCommentCollections();\n  // call to broadcast state AFTER derived state changes\n  UDATA.LocalCall('CTHREADMGR_THREAD_CLOSED', { cref });\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nMOD.GetCommentStats = () => {\n  const uid = MOD.GetCurrentUserId();\n  return COMMENT.GetCommentStats(uid);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nMOD.GetCommentThreadPosition = commentButtonId => {\n  const btn = document.getElementById(commentButtonId);\n  const cmtbtnx = btn.getBoundingClientRect().left;\n  const windowWidth = Math.min(screen.width, window.innerWidth);\n  let x;\n  if (windowWidth - cmtbtnx < 500) {\n    x = cmtbtnx - 405;\n  } else {\n    x = cmtbtnx + 35;\n  }\n  const y = btn.getBoundingClientRect().top + window.scrollY;\n  return { x, y };\n}\n\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/**\n * Comment UI State\n * @param {string} uiref\n * @returns {TCommentOpenState} {isOpen: boolean, cref: string}\n */\nMOD.GetCommentUIState = uiref => {\n  return COMMENT.GetCommentUIState(uiref);\n};\n/**\n * Used to open/close the comment thread\n * @param {string} uiref\n * @param {TCommentOpenState} openState\n */\nMOD.UpdateCommentUIState = (uiref, openState) => {\n  COMMENT.UpdateCommentUIState(uiref, openState);\n  m_SetAppStateCommentCollections();\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Open Comments\nMOD.GetOpenComments = cref => COMMENT.GetOpenComments(cref);\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Editable Comments (comments being ddited)\n\nMOD.OKtoClose = cref => {\n  const cvobjs = MOD.GetThreadedViewObjects(cref);\n  let isBeingEdited = false;\n  cvobjs.forEach(cvobj => {\n    if (COMMENT.GetCommentBeingEdited(cvobj.comment_id)) isBeingEdited = true;\n  });\n  return !isBeingEdited;\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Threaded View Objects\nMOD.GetThreadedViewObjects = (cref, uid) => {\n  return COMMENT.GetThreadedViewObjects(cref, uid);\n};\nMOD.GetThreadedViewObjectsCount = (cref, uid) => {\n  return COMMENT.GetThreadedViewObjectsCount(cref, uid);\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Comment View Objects\nMOD.GetCommentVObj = (cref, cid) => {\n  return COMMENT.GetCommentVObj(cref, cid);\n};\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Comments\nMOD.GetComment = cid => {\n  return COMMENT.GetComment(cid);\n}\nMOD.GetUnreadRepliesToMe = uid => {\n  return COMMENT.GetUnreadRepliesToMe(uid);\n}\nMOD.GetUnreadComments = () => {\n  return COMMENT.GetUnreadComments();\n};\n/**\n *\n * @param {Object} cobj Comment Object\n */\nMOD.AddComment = cobj => {\n  // This just generates a new ID, but doesn't update the DB\n  DATASTORE.PromiseNewCommentID().then(newCommentID => {\n    cobj.comment_id = newCommentID;\n    COMMENT.AddComment(cobj); // creates a comment vobject\n    m_SetAppStateCommentVObjs();\n  });\n};\n/**\n * Update the ac/dc comments, then save it to the db\n * This will also broadcast COMMENT_UPDATE so other clients on the network\n * update the data to match the server.\n * @param {Object} cobj\n */\nMOD.UpdateComment = cobj => {\n  COMMENT.UpdateComment(cobj);\n  m_DBUpdateComment(cobj);\n  m_SetAppStateCommentVObjs();\n};\n/**\n * Removing a comment can affect multiple comments, so this is done\n * via a batch operation.  We queue up all of the comment changes\n * using the logic for removing/re-arranging the comments in\n * ac-comments/dc-comments, then write out the db updates. This way\n * the db updates can be blindly accomplished in a single operation.\n *\n * Removing is a two step process:\n * 1. Show confirmation dialog\n * 2. Execute the remova\n * @param {Object} parms\n * @param {string} parms.collection_ref\n * @param {string} parms.comment_id\n * @param {string} parms.uid\n * @param {boolean} parms.showCancelDialog\n * @param {function} cb CallBack\n */\nMOD.RemoveComment = (parms, cb) => {\n  let confirmMessage, okmessage, cancelmessage;\n  if (parms.showCancelDialog) {\n    // Are you sure you want to cancel?\n    confirmMessage = `Are you sure you want to cancel editing this comment #${parms.comment_id}?`;\n    okmessage = 'Cancel Editing and Delete';\n    cancelmessage = 'Go Back to Editing';\n  } else {\n    // Are you sure you want to delete?\n    parms.isAdmin = SETTINGS.IsAdmin();\n    confirmMessage = parms.isAdmin\n      ? `Are you sure you want to delete this comment #${parms.comment_id} and ALL related replies (admin only)?`\n      : `Are you sure you want to delete this comment #${parms.comment_id}?`;\n    okmessage = 'Delete';\n    cancelmessage = \"Don't Delete\";\n  }\n  const dialog = (\n    <NCDialog\n      message={confirmMessage}\n      okmessage={okmessage}\n      onOK={event => m_ExecuteRemoveComment(event, parms, cb)}\n      cancelmessage={cancelmessage}\n      onCancel={m_CloseRemoveCommentDialog}\n    />\n  );\n  const container = document.getElementById(dialogContainerId);\n  ReactDOM.render(dialog, container);\n};\n/**\n * The db call is made AFTER ac/dc handles the removal and the logic of\n * relinking comments.  The db call is dumb, all the logic is in dc-comments.\n * @param {Object} event\n * @param {Object} parms\n * @param {Object} parms.collection_ref\n * @param {Object} parms.comment_id\n * @param {Object} parms.uid\n */\nfunction m_ExecuteRemoveComment(event, parms, cb) {\n  const queuedActions = COMMENT.RemoveComment(parms);\n  m_DBRemoveComment(queuedActions);\n  m_SetAppStateCommentVObjs();\n  m_CloseRemoveCommentDialog();\n  if (typeof cb === 'function') cb();\n}\nfunction m_CloseRemoveCommentDialog() {\n  const container = document.getElementById(dialogContainerId);\n  ReactDOM.unmountComponentAtNode(container);\n}\n\n/**\n * Requested when a node/edge is deleted\n * @param {string} cref\n */\nMOD.RemoveAllCommentsForCref = cref => {\n  const uid = MOD.GetCurrentUserId();\n  const parms = { uid, collection_ref: cref };\n  const queuedActions = COMMENT.RemoveAllCommentsForCref(parms);\n  m_DBRemoveComment(queuedActions);\n  m_SetAppStateCommentVObjs();\n};\n\n/// EVENT HANDLERS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n/**\n * Respond to network COMMENTS_UPDATE Messages\n * Usually used after a comment deletion to handle a batch of comment updates\n * This can include\n *   * updates to existing comments (marked DELETE or re-linked to other removed comment)\n *   * removal of comment altogether\n * This a network call that is used to update local state for other browsers\n * (does not trigger another DB update)\n * @param {Object[]} dataArray\n */\nMOD.HandleCOMMENTS_UPDATE = dataArray => {\n  if (DBG) console.log('COMMENTS_UPDATE======================', dataArray);\n  const updatedComments = [];\n  const removedComments = [];\n  const updatedCrefs = new Map();\n  dataArray.forEach(data => {\n    if (data.comment) {\n      updatedComments.push(data.comment);\n      updatedCrefs.set(data.comment.collection_ref, 'flag');\n    }\n    if (data.commentID) removedComments.push(data.commentID);\n    if (data.collection_ref) updatedCrefs.set(data.collection_ref, 'flag');\n  });\n  const uid = MOD.GetCurrentUserId();\n  COMMENT.HandleRemovedComments(removedComments, uid);\n  COMMENT.HandleUpdatedComments(updatedComments, uid);\n\n  const crefs = [...updatedCrefs.keys()];\n  crefs.forEach(cref => COMMENT.DeriveThreadedViewObjects(cref, uid));\n\n  // and broadcast a state change\n  m_SetAppStateCommentCollections();\n  m_SetAppStateCommentVObjs();\n};\n/**\n * Respond to COMMENT_UPDATE Messages from the network\n * After the server/db saves the new/updated comment, COMMENT_UPDATE is\n * broadcast across the network.  This a network call that is used to update\n * the local state to match the server's comments.\n * (does not trigger another DB update)\n * @param {Object} data\n * @param {Object} data.comment cobj\n */\nMOD.HandleCOMMENT_UPDATE = data => {\n  if (DBG) console.log('COMMENT_UPDATE======================', data);\n  const { comment } = data;\n  m_UpdateComment(comment);\n  // and broadcast a state change\n  m_SetAppStateCommentCollections();\n  m_SetAppStateCommentVObjs();\n};\nMOD.HandleREADBY_UPDATE = data => {\n  if (DBG) console.log('READBY_UPDATE======================');\n  // Not used currently\n  // Use this if we need to update READBY status from another user.\n  // Since \"read\" status is only displayed for the current user,\n  // we don't need to worry about \"read\" status updates from other users\n  // across the network.\n  //\n  // The exception to this would be if we wanted to support a single user\n  // logged in to multiple browsers.\n};\n\n/// DB CALLS //////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nMOD.LockComment = comment_id => {\n  UDATA.NetCall('SRV_DBLOCKCOMMENT', { commentID: comment_id }).then(\n    () => {\n      UDATA.NetCall('SRV_REQ_EDIT_LOCK', { editor: EDITORTYPE.COMMENT });\n      UDATA.LocalCall('SELECTMGR_SET_MODE', { mode: 'comment_edit' });\n    }\n  );\n}\nMOD.UnlockComment = comment_id => {\n  UDATA.NetCall('SRV_DBUNLOCKCOMMENT', { commentID: comment_id }).then(() => {\n    UDATA.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.COMMENT });\n    UDATA.LocalCall('SELECTMGR_SET_MODE', { mode: 'normal' });\n  });\n}\n\nfunction m_DBUpdateComment(cobj, cb) {\n  const comment = {\n    collection_ref: cobj.collection_ref,\n    comment_id: cobj.comment_id,\n    comment_id_parent: cobj.comment_id_parent,\n    comment_id_previous: cobj.comment_id_previous,\n    comment_type: cobj.comment_type,\n    comment_createtime: cobj.comment_createtime,\n    comment_modifytime: cobj.comment_modifytime,\n    comment_isMarkedDeleted: cobj.comment_isMarkedDeleted,\n    commenter_id: cobj.commenter_id,\n    commenter_text: cobj.commenter_text\n  };\n  UDATA.LocalCall('DB_UPDATE', { comment }).then(data => {\n    if (typeof cb === 'function') cb(data);\n  });\n}\nfunction m_DBUpdateReadBy(cref, uid) {\n  // Get existing readby\n  const cvobjs = COMMENT.GetThreadedViewObjects(cref, uid);\n  const readbys = [];\n  cvobjs.forEach(cvobj => {\n    const commenter_ids = COMMENT.GetReadby(cvobj.comment_id) || [];\n    // Add uid if it's not already marked\n    if (!commenter_ids.includes(uid)) commenter_ids.push(uid);\n    const readby = {\n      comment_id: cvobj.comment_id,\n      commenter_ids\n    };\n    readbys.push(readby);\n  });\n  UDATA.LocalCall('DB_UPDATE', { readbys }).then(data => {\n    if (typeof cb === 'function') cb(data);\n  });\n}\n/**\n * Executes multiple database operations via a batch of commands:\n * - `cobjs` will be updated\n * - `commentIDs` will be deleted\n * @param {Object[]} items [ ...cobj, ...commentID ]\n * @param {function} cb callback\n */\nfunction m_DBRemoveComment(items, cb) {\n  UDATA.LocalCall('DB_BATCHUPDATE', { items }).then(data => {\n    if (typeof cb === 'function') cb(data);\n  });\n}\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n  AutoComplete is the text input field for entering node labels to:\n  * search for nodes,\n  * edit existing nodes,\n  * and add new nodes.\n  * view the current selection/setting when searching for a node\n  * view the current selection/setting for an edge source or target\n\n\n\n  ## MAIN FEATURES\n\n  * It interactively provides a list of suggestions that match the current\n    input, e.g. typing \"ah\" will display a list of suggestions including \"Ah\n    Long\", \"Ah Seung\", and \"Oahu Railroad Station\".\n\n  * Users can highlight suggestions (via mouseover or with keyboard arrows)\n\n  * Users can select a suggestion (via clicking or hitting return)\n\n  * Only one AutoComplete component can be active at a time in an app.\n    Since there can be multiple AutoComplete components on a single page\n    (e.g. multiple edges along with the source), we disable the component\n    when it isn't active.\n\n  * When the AutoComplete component is disabled, it will display a\n    generic INPUT component instead of the Autosuggest component.\n\n  * When the AutoComplete component is disabled, since it will not\n    receive SELECTION updates, we need to pass it the current field\n    value via the this.props.disabledValue.\n\n  AutoComplete is a wrapper class for the open source AutoSuggest component,\n  which handles the actual rendering of the suggestions list.  AutoComplete\n  provides an interface to NodeSelector and EdgeEntry.  AutoComplete also\n  provides the handler routines for generating the suggestions list and\n  handling highlights and selections.  Data is passed to AutoComplete via\n  UDATA SELECTION state changes.\n\n  This relies on the react-autosuggest component.\n  See documentation: https://github.com/moroshko/react-autosuggest\n\n\n\n  ## TO USE\n\n      <AutoComplete\n        isDisabled={this.state.canEdit}\n        disabledValue={this.state.formData.label}\n        inactiveMode={'disabled'}\n      />\n\n\n\n  ## TECHNICAL DESCRIPTION\n\n  AutoComplete handles five basic functions:\n\n  1. Show suggestions when the user types in the input search field.\n  2. Mark nodes on graph when the user changes the search field.\n  3. Set selection when user clicks on a suggestion.\n  4. Show the label if the node is selected externally\n      (via a click on the graph)\n  5. Provide an edit field for the label when the user is editing a node\n      (during edit, show suggestions, but don't select anything?)\n\n  The Autosuggest input field is a controlled field.\n  It is controlled via this.state.value.\n  See https://reactjs.org/docs/forms.html#controlled-components\n\n  Sequence of Events\n\n  1. When the user types in the Autosuggest input field,\n  2. AutoComplete makes a UDATA SOURCE_SEARCH call\n  3. nc-logic handles the call and returns a SELECTION state update\n  4. AutoComplete then sets the Autosuggest input field value via\n      this.state.value.\n  5. The updated SELECTION state also contains a list of\n      suggestedNodeLabels that is used by Autosuggest whenever it\n      requests a list of suggestions.\n\n\n\n  ## HIGHLIGHTING vs MARKING\n\n  \"Highlighting\" refers to the temporary rollover highlight of a suggested node\n  in the suggestion list.  \"Marking\" refers to the stroked color of a node\n  circle on the D3 graph.\n\n\n\n  ## PROPS\n\n  identifier\n\n        A unique ID for identifying which AutoComplete component is active\n        within the whole app system.\n\n  disabledValue\n\n        When the AutoComplete component is not active, it should display\n        the currently selected node (rather than be an active input field\n        for selecting a new node).  This is the label for that node.\n\n  inactiveMode\n\n        When the AutoComplete component is not active, it can be either\n        'static' or 'disabled' depending on the parent field.  This prop\n        sets which of these modes the field should default to:\n\n        'static'   -- an unchangeable field, e.g. the Source node for an\n                      edge is always going to be the Source label.  It\n                      cannot be changed.\n        'disabled' -- a changeable field that is not currently activated,\n                      e.g. the Target node for an edge.\n\n  shouldIgnoreSelection\n\n        Used by NodeSelector and EdgeEditor's target node field\n        to prevent user from selecting another node\n        while editing a node.\n\n  Based on example code from https://codepen.io/moroshko/pen/vpBzMr\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { Input } = ReactStrap;\nconst Autosuggest = require('react-autosuggest');\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar DBG = false;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst MODE_STATIC = 'static'; // Can't be edited ever\nconst MODE_DISABLED = 'disabled'; // Can be edited, but not at the moment\nconst MODE_LINK = 'link'; // Can be edited, but not at the moment, and it links to a view until then\nconst MODE_ACTIVE = 'active'; // Currently able to edit\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar _IsMounted = false;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass AutoComplete extends UNISYS.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n      suggestions: [],\n      id: '',\n      mode: MODE_DISABLED\n    };\n\n    this.onStateChange_SEARCH = this.onStateChange_SEARCH.bind(this);\n    this.onStateChange_SELECTION = this.onStateChange_SELECTION.bind(this);\n    this.onStateChange_AUTOCOMPLETE = this.onStateChange_AUTOCOMPLETE.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n    this.getSuggestionValue = this.getSuggestionValue.bind(this);\n    this.renderSuggestion = this.renderSuggestion.bind(this);\n    this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n    this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n    this.onSuggestionSelected = this.onSuggestionSelected.bind(this);\n    this.onSuggestionHighlighted = this.onSuggestionHighlighted.bind(this);\n    this.shouldRenderSuggestions = this.shouldRenderSuggestions.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n\n    // NOTE: do this AFTER you have used bind() on the class method\n    // otherwise the call will fail due to missing 'this' context\n    this.OnAppStateChange('SEARCH', this.onStateChange_SEARCH);\n    this.OnAppStateChange('SELECTION', this.onStateChange_SELECTION);\n    this.OnAppStateChange('ACTIVEAUTOCOMPLETE', this.onStateChange_AUTOCOMPLETE);\n  } // constructor\n\n  /// UNISYS STATE CHANGE HANDLERS //////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** 'SEARCH' handler\n   */\n  onStateChange_SEARCH(data) {\n    // grab entire global state for 'SELECTION\n    // REVIEW // autocompleteid probab;y should be stored elsewhere or use a\n    // different mechanism\n    if (DBG) console.log('AutoComplete', this.props.identifier, ': Got SEARCH', data);\n    let { activeAutoCompleteId } = this.AppState('ACTIVEAUTOCOMPLETE');\n    if (activeAutoCompleteId === this.props.identifier) {\n      // This is the currently active AutoComplete field\n      // Update the autosuggest input field's value with the current search data\n      if (DBG)\n        console.log(\n          '...AutoComplete',\n          this.props.identifier,\n          ': ACTIVE setting search value to',\n          data.searchLabel\n        );\n      if (data.searchLabel !== undefined) {\n        this.setState({\n          mode: MODE_ACTIVE,\n          value: data.searchLabel\n        });\n      }\n    } else {\n      // This is not the active AutoComplete field\n      // Use the disabledValue prop to display\n      // REVIEW: this probably is handled better in render()\n      if (_IsMounted) {\n        if (DBG)\n          console.log(\n            '...AutoComplete',\n            this.props.identifier,\n            ': NOT ACTIVE setting search value to',\n            this.props.disabledValue\n          );\n        this.setState({\n          mode: this.props.inactiveMode,\n          value: this.props.disabledValue\n        });\n      } else {\n        if (DBG)\n          console.log(\n            '...AutoComplete',\n            this.props.identifier,\n            ': NOT ACTIVE, but skipping update because component is unmounted'\n          );\n      }\n    }\n  } // onStateChange_SEARCH\n\n  /** 'SELECTION' handler\n      Update this AutoComplete input value when the currently selected SELECTION has changed\n      AND we are active and have the current activeAutoCompleteId.\n      This is especially important for when adding a target field to a new EdgeEditor.\n   */\n  onStateChange_SELECTION(data) {\n    if (DBG)\n      console.log('...AutoComplete', this.props.identifier, ': Got SELECTION', data);\n    if (this.props.shouldIgnoreSelection) {\n      if (DBG)\n        console.log(\n          '...AutComplete',\n          this.props.identifier,\n          ': Ignoring SELECTION (probably because NodeSelector is in edit mode).'\n        );\n      return;\n    }\n    let activeAutoCompleteId =\n      this.AppState('ACTIVEAUTOCOMPLETE').activeAutoCompleteId;\n    if (\n      this.props.identifier === activeAutoCompleteId ||\n      activeAutoCompleteId === 'search'\n    ) {\n      // Update the searchLabel if either this nodeSelector or the 'search' field is\n      // is the current active AutoComplete field.\n      // We only ignore SELECTION updates if an edge target field has the current focus.\n      // This is necessary for the case when the user clicks on a node in the D3 graph\n      // and the search field has the current AutoComplete focus.  Otherwise the state.value\n      // is never updated.\n      if (DBG)\n        console.log(\n          '...AutoComplete',\n          this.props.identifier,\n          ': ACTIVE got SELECTION'\n        );\n      let nodes = data.nodes;\n      if (\n        nodes !== undefined &&\n        nodes.length > 0 &&\n        nodes[0] !== undefined &&\n        nodes[0].label !== undefined\n      ) {\n        let searchLabel = nodes[0].label;\n        if (DBG)\n          console.log(\n            '...AutoComplete',\n            this.props.identifier,\n            ': ACTIVE got SELECTION, searchLabel',\n            searchLabel\n          );\n        // FIX: This line causes the \"Can't call setState (or forceUpdate) on an unmounted component\" error\n        // is it because it's not actually visible (unmounted)?\n        this.setState({ value: searchLabel });\n      }\n    }\n  }\n\n  /** 'AUTOCOMPLETE' handler\n    Update this AutoComplete state when the currently selected AUTOCOMPLETE field has changed\n   */\n  onStateChange_AUTOCOMPLETE(data) {\n    if (DBG)\n      console.log(\n        '...AutoComplete',\n        this.props.identifier,\n        ': Got AUTOCOMPLETE',\n        data\n      );\n    let mode = this.state.mode;\n    if (data.activeAutoCompleteId === this.props.identifier) {\n      mode = MODE_ACTIVE;\n    } else {\n      mode = this.props.inactiveMode;\n    }\n    this.setState({ mode: mode });\n  }\n\n  /// AUTOSUGGEST HANDLERS ////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Handle Autosuggest's input event trigger\n    User has typed something new into the field\n   */\n  onInputChange(event, { newValue, method }) {\n    // Pass the input value (node label search string) to UDATA\n    // which will in turn pass the searchLabel back to the SEARCH\n    // state handler in the constructor, which will in turn set the state\n    // of the input value to be passed on to AutoSuggest\n    this.AppCall('SOURCE_SEARCH', { searchString: newValue });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Handle Autosuggest's request to set the value of the input field when\n      a selection is clicked.\n   */\n  getSuggestionValue(suggestion) {\n    return suggestion.label;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Handle Autosuggest's request for HTML rendering of suggestions\n   */\n  renderSuggestion(suggestion) {\n    return suggestion.label;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Handle Autosuggest's request for list of suggestions\n    lexicon =  string array of node labels\n\n    lexicon is a one-dimensional string array that represents the complete list\n    of all possible suggestions that are then filtered based on the user typing\n    for suggestions.\n\n    We construct the list on the fly based on the NCDATA data.  If the data model\n    changes, we'll need to update this lexicon constructor.\n   */\n  onSuggestionsFetchRequested() {\n    let data = this.AppState('SEARCH');\n    if (data.suggestedNodes) {\n      this.setState({\n        suggestions: data.suggestedNodes\n      });\n    } else {\n      if (DBG)\n        console.log('AutoComplete.onSuggestionsFetchRequested: No suggestions.');\n    }\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Handle Autosuggest's request to clear list of suggestions\n   */\n  onSuggestionsClearRequested() {\n    this.setState({\n      suggestions: []\n    });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Autosuggest's callback when a selection is made\n      If a new value is suggested, we call SOURCE_SELECT.\n      Autocomplete-logic should handle the creation of a new data object.\n   */\n  onSuggestionSelected(event, { suggestion }) {\n    // User selected an existing node in the suggestion list\n    this.AppCall('SOURCE_SELECT', { nodeIDs: [suggestion.id] });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Autosuggest calls this whenever the user has highlighted a different suggestion\n      from the suggestion list.\n   */\n  onSuggestionHighlighted({ suggestion }) {\n    if (suggestion && suggestion.id)\n      this.AppCall('AUTOSUGGEST_HILITE_NODE', { nodeId: suggestion.id });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Autosuggest checks this before rendering suggestions\n      Set the prop to turn off suggestions\n   */\n  shouldRenderSuggestions(value) {\n    return this.state.mode === MODE_ACTIVE;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** The AutoComplete field has lost focus.\n      Check to see if it references a valid node, if so, select it\n   */\n  onBlur(value) {\n    // User selected an existing node in the suggestion list\n    // or User clicked on d3 graph\n    // or User clicked outside of field\n    if (DBG) console.log('AutoComplete.onBlur', value);\n    this.AppCall('SOURCE_SEARCH_AND_SELECT', { searchString: this.state.value });\n  }\n\n  /// REACT LIFECYCLE /////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** AutoComplete fields are routinely constructed and deconstructed as different\n      edges and nodes are selected.  We need to keep track of whether it's\n      mounted or not so that we know when it's valid to call setState.  Otherwise\n      we might call setState on an unmounted component and generate a React warning.\n      https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html\n   */\n  componentDidMount() {\n    _IsMounted = true;\n    this.setState({ mode: this.props.inactiveMode });\n  }\n  /**\n   */\n  componentWillUnmount() {\n    _IsMounted = false;\n    // deregister ACTIVEAUTOMPLETE when component unmounts\n    // otherwise state updates trigger a setState on unmounted component error\n    this.AppStateChangeOff('SEARCH', this.onStateChange_SEARCH);\n    this.AppStateChangeOff('SELECTION', this.onStateChange_SELECTION);\n    this.AppStateChangeOff('ACTIVEAUTOCOMPLETE', this.onStateChange_AUTOCOMPLETE);\n  }\n\n  /** Conditionally render components based on current 'mode'. The mode\n    is passed\n   */\n  render() {\n    const { value, suggestions } = this.state;\n    const inputProps = {\n      placeholder: this.props.placeholder || 'Type node name...',\n      value: value,\n      onChange: this.onInputChange,\n      onBlur: this.onBlur\n    };\n    let jsx;\n\n    // Show different widgets depending on mode.\n    // If MODE_ACTIVE is just show the active state,\n    // otherwise, use the current inactive mode in this.props.inactiveMode\n    // to define the inactive state\n    // because this.state.mode may not be up to date if the mode is inactive\n    // due to prop changes not triggering mode updates.\n    // e.g. if the parent container changed props from a disabled to\n    // static state, it does not trigger a mode update in AUTOCOMPLETE.\n    // This is mostly an edge case with EDGE_EDITs which will update props\n    // without a corresponding UNISYS message call to trigger the mode\n    // change.\n    if (this.state.mode === MODE_ACTIVE) {\n      jsx = (\n        <Autosuggest\n          suggestions={suggestions}\n          shouldRenderSuggestions={this.shouldRenderSuggestions}\n          // Map to Local Handlers for Autosuggest event triggers (requests)\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n          getSuggestionValue={this.getSuggestionValue}\n          renderSuggestion={this.renderSuggestion}\n          // Receive Data from Autosuggest\n          onSuggestionHighlighted={this.onSuggestionHighlighted}\n          onSuggestionSelected={this.onSuggestionSelected}\n          // Pass Data to Autosuggest\n          inputProps={inputProps}\n        />\n      );\n    } else if (this.props.inactiveMode === MODE_STATIC) {\n      jsx = <p>{this.props.disabledValue}</p>;\n    } else if (this.props.inactiveMode === MODE_DISABLED) {\n      jsx = <Input type=\"text\" value={this.props.disabledValue} readOnly={true} />;\n    } else if (this.props.inactiveMode === MODE_LINK) {\n      jsx = (\n        <a href=\"#\" onClick={e => this.selectNode(this.props.linkID, e)}>\n          {this.props.disabledValue}\n        </a>\n      );\n    } else {\n      throw Error(`AutoComplete: Unhandled mode '${this.state.mode}'`);\n    }\n\n    // OLD METHOD\n    // This relied on mode being updated, but a change in props does not\n    // trigger a corresponding change in mode.\n    // switch (this.state.mode) {\n    //   case MODE_STATIC:\n    //     jsx = ( <p>{this.props.disabledValue}</p> );\n    //     break;\n    //   case MODE_DISABLED:\n    //     jsx = ( <Input type=\"text\" value={this.props.disabledValue} readOnly={true}/> );\n    //     break;\n    //   case MODE_ACTIVE:\n    //     jsx = (\n    //       <Autosuggest\n    //         suggestions={suggestions}\n    //         shouldRenderSuggestions={this.shouldRenderSuggestions}\n    //         // Map to Local Handlers for Autosuggest event triggers (requests)\n    //         onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n    //         onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n    //         getSuggestionValue={this.getSuggestionValue}\n    //         renderSuggestion={this.renderSuggestion}\n    //         // Receive Data from Autosuggest\n    //         onSuggestionHighlighted={this.onSuggestionHighlighted}\n    //         onSuggestionSelected={this.onSuggestionSelected}\n    //         // Pass Data to Autosuggest\n    //         inputProps={inputProps}\n    //       />\n    //     );\n    //     break;\n    //   default:\n    //     throw Error(`AutoComplete: Unhandled mode '${this.state.mode}'`);\n    // }\n\n    return jsx;\n  } // render()\n\n  selectNode(id, event) {\n    event.preventDefault();\n    // REVIEW: For some reason React converts the integer IDs into string\n    // values when returned in event.target.value.  So we have to convert\n    // it here.\n    // Load Source\n    var UDATA = UNISYS.NewDataLink(this);\n    UDATA.LocalCall('EDGE_CLOSE');\n    UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [parseInt(id)] });\n  }\n\n  /// END OF CLASS //////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = AutoComplete;\n","/* eslint-disable complexity */\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n    EdgeEditor is used to to view, edit, and create new edges.\n\n    The EdgeEditor has two basic views:\n\n    1. Minimized Summary view displays just the source and target node info.\n    2. Expanded View shows the full edge information.\n\n    You can get an expanded view by clicking on the minized view.\n    The expanded view has two modes:\n\n    1. View Mode displays the edge data but does not allow editing.\n    2. Edit Mode displays an editable form.\n\n    We assume that when you create an edge, you will have already identified\n    the source node, so the source node is never editable.\n\n    We assume that once you create an edge, the only editing you might do\n    is to change the relationship, notes, and citations.  You wouldn't\n    change the source or target nodes.  If you need to change them, you'd\n    use DELETE.\n\n\n  ## TO USE\n\n    EdgeEditors are usually included as a repeating element, e.g.\n\n      <FormText>EDGES</FormText>\n      {this.state.edges.map( (edge,i) =>\n        <EdgeEditor key={i}\n          edgeID={edge.id}\n          parentNodeLabel={this.state.formData.label}\n        />\n      )}\n\n\n  ## PROPS\n\n    edgeID            edgeID provides a unique identifier for the EdgeEditor\n                      displaying the particular edge.  The edgeID is\n                      used to also uniquely identify the AutoComplete\n                      fields within the EdgeEditor.\n\n    parentNodeLabel   parentNodeLabel is the label of the source node that\n                      the EdgeEditor is displayed within.  This is used\n                      by the EdgeEditor to determine whether it should\n                      display the edge nodes as targets or sources.\n\n    parentNodeIsLocked The parent node is locked when the server disconnects\n                       this will disable the Delete and Edit buttons.\n\n  ## STATES\n\n      dbIsLocked\n                      If someone else has selected the edge for editing,\n                      this flag will cause the dbIsLockedMessage\n                      to be displayed.  This is only checked when\n                      the user clicks \"Edit\".\n\n      disableEdit     Template is being edited, disable \"Edit Edge\" button\n\n      isBeingEdited   The form fields are active and text can be changed.\n\n\n  ## TECHNICAL DESCRIPTION\n\n    EdgeEditor works directly with raw NCDATA, unprocessed by d3.\n    This means that `edge.source` and `edge.target` are IDs, NOT the node objects\n    that d3 will convert them into.\n\n\n  ## TESTING\n\n\n    Displaying Current Edge(s)\n        0. When the app starts, no edges should be displayed in the Node Selector.\n        1. Click on \"Board of Health\"\n              * A summary view of the four nodes connected to Board of Health\n                should be displayed.\n        2. Click on \"me -> Residents of Chinatown\"\n              * The form information should be displayed, including ID,\n                relationship, info, and notes.\n              * The form fields should be disabled (not able to be edited)\n              * A \"Done\" button should appear.\n              * A \"Edit Edge\" button should appear.\n        3. Click \"Done\"\n              * The \"Residents of Chinatown\" edge editor should collapse.\n              * The other 3 Board of Health edges should still be dispalyed.\n        4. Click outside of \"Board of Health\"\n              * All edges should be removed.\n        5. Click on a node without an edge, e.g. \"Ah Sop\"\n              * No edges should be displayed\n              * The \"Add New Edge\" button should be displayed in the EDGES area.\n\n    Edit Existing Edge\n        1. Click on \"Board of Health\"\n        2. Click on \"me -> Residents of Chinatown\"\n        3. Click on \"Edit Edge\"\n              * The \"NOTES\" and \"DATE\" fields will become editable.\n        4. Click \"Save\"\n        5. Select the updated edge.\n              * The changed notes and dates should appear.\n\n    Create New Edge\n        1. Click on \"Board of Health\"\n        2. Click on \"Add New Edge\"\n              * \"Board of Health\" should be automatically set as the Source field\n              * A new ID \"59\" should be automatically inserted.\n              * All fields except \"Source\" and \"ID\" should be editable.\n              * A \"Save\" button should appear.\n              * A \"Done\" button should NOT appear.\n        3. Select a Type\n              * There should be multiple type options available.\n        4. Select a Target\n              * The AutoComplete field should allow typing.\n              * As you type you should see suggestions.\n              * Each suggestion should be marked in the graph\n              * You should be able to click on a suggestion from\n                the suggestions list, or use the keyboard to\n                select a suggestion.\n        5. Type in some info.\n              * The field text should update with whatever you type.\n        6. Type in some notes.\n              * The field text should update with whatever you type.\n        7. Click \"Save\"\n              * The selected target node should be connected to Board of Health\n                in the graph.\n              * The EdgeEditor form should be cleared.\n              * The NodeSelector form should be cleared.\n        8. Click on \"Board of Health\"\n              * The new edge should be displayed as one of the edges.\n        9. Click on the new target node summary view\n              * You should see the relationship, type, and info changes.\n        10. Click on the new target node in the graph\n              * You should see the component along with an edge\n                linked to \"Board of Health\"\n\n    Delete Edge\n        1. Click on \"Board of Health\"\n        2. Click on \"me -> Residents of Chinatown\"\n        3. Click on \"DELETE\"\n              * The edge should be removed.\n              * The graph should update with the edge remvoed.\n              * The EdgeEditor for the deleted edge shoudl close.\n              * The source node should remain selected.\n              * The non-deleted edges should still be listed.\n\n    Swap\n        1. Select an edge where the node is the source (the edge should read \"this -> OtherNode\".\n        2. Click \"Edit Edge\"\n              * You should see a swap button with up/down arrows and a \"Change Target\" button.\n        3. Click on the swap button\n              * The selected node should now be the target.\n        4. Click \"Save\" to save the change.\n        5. Review the node to make sure the change took place.\n        6. Reload the graph to make sure the change was saved.\n\n    Change Target\n        1. Select an edge where the node is the source (the edge should read \"this -> OtherNode\".\n        2. Click \"Edit Edge\"\n              * You should see a swap button with up/down arrows and a \"Change Target\" button.\n        3. Click on the \"Change Target\" button\n              * You should be able to search for another target node, or click on the graph to select a target node.\n        4. When you've selected a target node, the Target Node field should become disabled (light blue, can't type in it).\n        5. Click on \"Change Target\" again to pick a different target.\n        6. Click \"Save\" to save the change.\n        7. Review the node to make sure the change took place.\n        8. Reload the graph to make sure the change was saved.\n\n    Change Source\n        1. Select an edge where the node is the source (the edge should read \"this -> OtherNode\".\n        2. Click \"Edit Edge\"\n              * You should see a \"Change Source\" button next to the source, and just the swap button next to the target.\n        3. Click on the \"Change Source\" button\n        4. You should be able to search for another source node, or click on the graph to select a source node.\n        5. When you've selected a source node, the Source Node field should become disabled (light blue, can't type in it).\n        6. Click on \"Change Source\" again to pick a different source.\n        7. Click \"Save\" to save the change.\n        8. Review the node to make sure the change took place.\n        9. Reload the graph to make sure the change was saved.\n\n    Save\n        * The \"Save\" button should only be visible when the edge is being edited\n        * The \"Save\" button should only be enabled if both the Source and Target\n          fields point to valid nodes.\n        * Otherwise, the \"Save\" button should be disabled.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst mdReact = require('markdown-react-js');\nconst mdEmoji = require('markdown-it-emoji');\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { Button, Col, Form, FormGroup, FormText, Input, Label } = ReactStrap;\nconst AutoComplete = require('./AutoComplete');\nconst NodeDetail = require('./NodeDetail');\nconst UNISYS = require('unisys/client');\nconst { EDITORTYPE } = require('system/util/enum');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'EdgeEditor';\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UDATA = null;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass EdgeEditor extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n    const TEMPLATE = this.AppState('TEMPLATE');\n    this.state = {\n      edgeDefs: TEMPLATE.edgeDefs,\n      citation: TEMPLATE.citation,\n      edgeIsLockedMessage: TEMPLATE.edgeIsLockedMessage,\n      editLockMessage: '',\n      formData: {\n        // Holds the state of the form fields\n        sourceId: '',\n        targetId: '',\n        type: '',\n        info: '',\n        weight: 1,\n        provenance: '',\n        comments: '',\n        notes: '',\n        citation: '',\n        category: '',\n        id: '',\n        isNewEdge: true\n      },\n      sourceNode: {\n        // Holds the current selected source node\n        label: '',\n        type: '',\n        info: '',\n        provenance: '',\n        comments: '',\n        notes: '',\n        id: ''\n      },\n      targetNode: {\n        // Holds the current selected target node\n        label: '',\n        type: '',\n        info: '',\n        provenance: '',\n        comments: '',\n        notes: '',\n        id: ''\n      },\n      isLocked: true, // User has not logged in, don't allow edge edit\n      isStandalone: false, // Standalone mode, view only\n      dbIsLocked: false, // Server Database is locked because someone else is editing\n      disableEdit: false, // Template is being edited, disable \"Edit Edge\" button\n      isBeingEdited: false, // Form is in an editable state\n      isExpanded: false, // Show EdgeEditor Component in Summary view vs Expanded view\n      sourceIsEditable: false, // Source ndoe field is only editable when source is not parent\n      hasValidSource: false, // Used by SwapSourceAndTarget and the Change Source button\n      targetIsEditable: false, // Target ndoe field is only editable when target is not parent\n      hasValidTarget: false, // Used by SwapSourceAndTarget and the Change Target button\n      placeholder: undefined,\n      hideModal: true // used by the citation window\n    };\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n\n    this.setTemplate = this.setTemplate.bind(this);\n    this.updateEditState = this.updateEditState.bind(this);\n    this.setEditState = this.setEditState.bind(this);\n    this.handleSelection = this.handleSelection.bind(this);\n    this.handleEdgeSelection = this.handleEdgeSelection.bind(this);\n    this.handleEdgeEdit = this.handleEdgeEdit.bind(this);\n    this.handleEdgeClose = this.handleEdgeClose.bind(this);\n    this.onStateChange_SESSION = this.onStateChange_SESSION.bind(this);\n    this.onEdgeClick = this.onEdgeClick.bind(this);\n    this.onDeleteButtonClick = this.onDeleteButtonClick.bind(this);\n    this.onEditButtonClick = this.onEditButtonClick.bind(this);\n    this.onCiteButtonClick = this.onCiteButtonClick.bind(this);\n    this.onCloseCiteClick = this.onCloseCiteClick.bind(this);\n    this.dateFormatted = this.dateFormatted.bind(this);\n    this.requestEdit = this.requestEdit.bind(this);\n    this.onSwapSourceAndTarget = this.onSwapSourceAndTarget.bind(this);\n    this.onChangeSource = this.onChangeSource.bind(this);\n    this.onChangeTarget = this.onChangeTarget.bind(this);\n    this.onRelationshipChange = this.onRelationshipChange.bind(this);\n    this.onNotesChange = this.onNotesChange.bind(this);\n    this.onInfoChange = this.onInfoChange.bind(this);\n    this.onWeightChange = this.onWeightChange.bind(this);\n    this.onProvenanceChange = this.onProvenanceChange.bind(this);\n    this.onCommentsChange = this.onCommentsChange.bind(this);\n    this.onCitationChange = this.onCitationChange.bind(this);\n    this.onCategoryChange = this.onCategoryChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.checkUnload = this.checkUnload.bind(this);\n    this.doUnload = this.doUnload.bind(this);\n\n    // Always make sure class methods are bind()'d before using them\n    // as a handler, otherwise object context is lost\n\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    /** SESSION is called by SessionShell when the ID changes\n        set system-wide. data: { classId, projId, hashedId, groupId, isValid }\n     */\n    this.OnAppStateChange('SESSION', this.onStateChange_SESSION);\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    this.OnAppStateChange('SELECTION', this.handleSelection);\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    UDATA.HandleMessage('EDGE_SELECT', this.handleEdgeSelection);\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    UDATA.HandleMessage('EDGE_EDIT', this.handleEdgeEdit);\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    UDATA.HandleMessage('EDGE_CLOSE', this.handleEdgeClose);\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    // Template handlers\n    this.OnAppStateChange('TEMPLATE', this.setTemplate);\n    UDATA.HandleMessage('EDIT_PERMISSIONS_UPDATE', this.setEditState);\n\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    /** Prevent editing if server is disconnected.\n        This is necessary to hide the \"Add New Node\" button.\n     */\n    this.OnDisconnect(() => {\n      console.log('EdgeSelector got disconnect');\n      this.setState({ isLocked: true });\n    });\n  } // constructor\n\n  /// UTILITIES /////////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  clearForm() {\n    this.setState({\n      formData: {\n        sourceId: '',\n        targetId: '',\n        type: '',\n        info: '',\n        weight: 1,\n        provenance: '',\n        comments: '',\n        notes: '',\n        citation: '',\n        category: '',\n        id: '',\n        isNewEdge: true\n      },\n      sourceNode: {\n        label: '',\n        type: '',\n        info: '',\n        provenance: '',\n        comments: '',\n        notes: '',\n        id: ''\n      },\n      targetNode: {\n        label: '',\n        type: '',\n        info: '',\n        provenance: '',\n        comments: '',\n        notes: '',\n        id: ''\n      },\n      isBeingEdited: false,\n      isExpanded: false, // Summary view vs Expanded view\n      dbIsLocked: false,\n      sourceIsEditable: false, // Source ndoe field is only editable when source is not parent\n      hasValidSource: false, // Used by SwapSourceAndTarget and the Change Source button\n      targetIsEditable: false, // Target ndoe field is only editable when target is not parent\n      hasValidTarget: false, // Used by SwapSourceAndTarget and the Change Target button\n      hideModal: true // for the citation window\n    });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  setTemplate(data) {\n    this.setState({ edgeDefs: data.edgeDefs });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Disable Edge Edit if a Template is being edited\n   */\n  updateEditState() {\n    UDATA.NetCall('SRV_GET_EDIT_STATUS').then(data => {\n      this.setEditState(data);\n    });\n  }\n  setEditState(data) {\n    if (DBG) console.log(PR, 'SRV_GET_EDIT_STATUS received', data);\n    const disableEdit = data.templateBeingEdited || data.importActive;\n    const TEMPLATE = this.AppState('TEMPLATE');\n    let editLockMessage = '';\n    if (data.templateBeingEdited) editLockMessage = TEMPLATE.templateIsLockedMessage;\n    if (data.importActive) editLockMessage = TEMPLATE.importIsLockedMessage;\n    this.setState({ disableEdit, editLockMessage });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** populate formdata from NCDATA\n   */\n  loadSourceAndTarget() {\n    if (DBG) console.log('EdgeEditor.loadSourceAndTarget!');\n\n    let edgeID = this.props.edgeID || '';\n    // Clean Data\n    if (isNaN(edgeID)) {\n      edgeID = parseInt(edgeID);\n    }\n\n    const NCDATA = this.AppState('NCDATA');\n\n    // parseInt in case of old bad string id\n    let edges = NCDATA.edges\n      ? NCDATA.edges.filter(edge => parseInt(edge.id) === edgeID)\n      : [];\n    if (!edges) {\n      throw 'EdgeEditor: Passed edgeID ' + edgeID + ' not found!';\n    }\n    let edge = edges[0];\n    if (DBG) console.log('EdgeEditor.loadSourceAndTarget: Loading edge', edge);\n\n    let sourceNode, sourceNodes, targetNode, targetNodes;\n\n    if (edge === undefined) {\n      // DEFINE NEW EDGE\n\n      // Create a dummy empty edge object\n      // This will be edited and saved\n      if (DBG)\n        console.log('...EdgeEditor.loadSourceAndTarget: New edge!  No target yet!');\n      // Get a real source node, since we know the parent of this link is the currently\n      // selected source node.\n      sourceNodes = NCDATA.nodes.filter(\n        node => node.label === this.props.parentNodeLabel\n      );\n      // We don't know what target the user is going to pick yet, so just display a\n      // placeholder for now, otherwise, the render will choke on an invalid targetNode.\n      targetNodes = [{ label: 'pick one...' }];\n\n      // provenance\n      const session = this.AppState('SESSION');\n      const timestamp = new Date().toLocaleDateString('en-US');\n      const provenance_str = `Added by ${session.token} on ${timestamp}`;\n\n      // Define `edge` so it can be loaded later during setState.\n      edge = {\n        id: edgeID,\n        source: parseInt(sourceNodes[0].id), // REVIEW: d3data 'source' is id, rename this to 'sourceId'?\n        // though after d3 processes, source does become an object.\n        target: undefined,\n        type: '',\n        notes: '',\n        info: '',\n        weight: 1,\n        provenance: provenance_str,\n        comments: '',\n        citation: '',\n        category: ''\n      };\n      // Expand this EdgeEditor and set it to Edit mode.\n      this.setState(\n        {\n          isExpanded: true,\n          targetIsEditable: true,\n          isBeingEdited: true\n        },\n        () => {\n          // AUTOCOMPLETE mode needs to be set AFTER the edit state has already been set\n          // otherwise, the <AutoComplete> component may not have even been defined in the collapsed view.\n          this.AppCall('AUTOCOMPLETE_SELECT', {\n            id: 'edge' + this.props.edgeID + 'target'\n          });\n        }\n      );\n\n      this.AppCall('EDGEEDIT_LOCK', { edgeID: this.props.edgeID });\n    } else {\n      // LOAD EXISTING EDGE\n\n      // NOTE: NCDATA has not expanded source/target into objects, but remain ids\n      sourceNodes = NCDATA.nodes.filter(\n        node => parseInt(node.id) === parseInt(edge.source)\n      );\n      targetNodes = NCDATA.nodes.filter(\n        node => parseInt(node.id) === parseInt(edge.target)\n      );\n\n      // Assume we have a valid target node\n      this.setState({\n        hasValidSource: true,\n        hasValidTarget: true\n      });\n    }\n\n    if (!sourceNodes) {\n      throw 'EdgeEditor: Source ID' + edge.source + 'not found!';\n    }\n    sourceNode = sourceNodes[0];\n    if (!targetNodes) {\n      throw 'EdgeEditor: Target ID' + edge.target + 'not found!';\n    }\n    targetNode = targetNodes[0];\n\n    if (DBG)\n      console.log(\n        '...EdgeEditor.loadSourceAndTarget: Setting formData sourceID to',\n        edge.source,\n        'and sourceNode to',\n        sourceNode,\n        'and targetNode to',\n        targetNode\n      );\n    this.setState({\n      formData: {\n        id: parseInt(edge.id) || '',\n        sourceId: edge.source,\n        targetId: edge.target,\n        type: edge.type || '', // Make sure there's valid data\n        info: edge.info || '',\n        weight: edge.weight || 1,\n        provenance: edge.provenance || '',\n        comments: edge.comments || '',\n        citation: edge.citation || '',\n        category: edge.category || '',\n        notes: edge.notes || '',\n        isNewEdge: false\n      },\n      sourceNode: sourceNode,\n      targetNode: targetNode,\n      dbIsLocked: false\n    });\n  }\n\n  /// UDATA STATE HANDLERS //////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** When the user is creating a new node, they need to set a target node.\n      The target node is set via an AutoComplete field.\n      When a node is selected via the AutoComplete field, the SELECTION state is updated.\n      So EdgeEditor needs to listen to the SELECTION state in order to\n      know the target node has been selected.\n      SELECTION is also triggered when the network updates an edge.\n   */\n  handleSelection(data) {\n    if (DBG) console.log('EdgeEditor', this.props.edgeID, 'got SELECTION data', data);\n    // If we're one of the edges that have been updated, and we're not currently being edited,\n    // then update the data.\n    // If we're not currently being edited, then if edges have been updated, update self\n    if (data.edges !== undefined) {\n      let updatedEdge = data.edges.find(edge => {\n        return edge.id === this.state.formData.id;\n      });\n      if (!this.state.isBeingEdited && updatedEdge !== undefined) {\n        if (DBG) console.log('EdgeEditor: Updating edges with', updatedEdge);\n        this.loadSourceAndTarget();\n        return;\n      }\n    }\n\n    // We're being edited, and the updated node is either our source or target\n    // Technically we probably ought to also check to make sure we're the current\n    // activeAutoCompleteId, but we wouldn't be editable if we weren't.\n    if (this.state.isBeingEdited && data.nodes && data.nodes.length > 0) {\n      // A node was selected, so load it\n\n      let node = data.nodes[0];\n\n      // Are we editing the source or the target?\n      if (this.state.sourceIsEditable) {\n        // SOURCE\n        if (DBG)\n          console.log(\n            'EdgeEditor.handleSelection:',\n            this.props.edgeID,\n            'setting source node to',\n            node\n          );\n\n        // Set sourceNode state\n        this.setState({\n          sourceNode: node\n        });\n        // Also update the formdata\n        let formData = this.state.formData;\n        formData.sourceId = node.id;\n        this.setState({\n          formData: formData\n        });\n        // And let the switch button know we have a valid target\n        // And exit edit mode\n        this.setState({\n          hasValidSource: true,\n          sourceIsEditable: false\n        });\n      } else if (this.state.targetIsEditable) {\n        // TARGET\n        if (DBG)\n          console.log(\n            'EdgeEditor.handleSelection:',\n            this.props.edgeID,\n            'setting target node to',\n            node\n          );\n\n        // Set targetNode state\n        this.setState({\n          targetNode: node\n        });\n        // Also update the formdata\n        let formData = this.state.formData;\n        formData.targetId = node.id;\n        this.setState({\n          formData: formData\n        });\n        // And let the switch button know we have a valid target\n        // And exit edit mode\n        this.setState({\n          hasValidTarget: true,\n          targetIsEditable: false\n        });\n      }\n      // pass currentAutoComplete back to search\n      this.AppCall('AUTOCOMPLETE_SELECT', { id: 'search' });\n      this.setState({ isExpanded: true });\n    } else {\n      // No node selected, so we don't need to do anything\n      // AutoComplete will take care of its own search label updates\n    }\n  } // handleSelection\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Someone externally has selected an edge.\n    Usually someone has clicked a button in the EdgeList to view/edit an edge\n   */\n  handleEdgeSelection(data) {\n    if (DBG)\n      console.log('EdgeEditor', this.props.edgeID, ': got state EDGE_SELECT', data);\n    if (this.state.formData.id === data.edgeID) {\n      // pass currentAutoComplete back to search\n      this.AppCall('AUTOCOMPLETE_SELECT', { id: 'search' });\n      this.setState({ isExpanded: true });\n    }\n  } // handleEdgeSelection\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Someone externally has selected an edge for editing.\n    Usually someone has clicked a button in the EdgeTable to edit an edge\n   */\n  handleEdgeEdit(data) {\n    const { formData, isBeingEdited, isLocked } = this.state;\n    if (DBG)\n      console.log(\n        'EdgeEditor',\n        this.state.formData.id,\n        ': got state EDGE_EDIT',\n        data,\n        'formData is',\n        this.state.formData\n      );\n    if (\n      data.edgeID !== undefined &&\n      typeof data.edgeID === 'number' &&\n      !isBeingEdited &&\n      data.edgeID === formData.id\n    ) {\n      if (!isLocked) {\n        this.requestEdit();\n      } else {\n        console.warn(\n          'EdgeEditor.EDGE_EDIT denied because isLocked',\n          isLocked,\n          'but we will gladly show it!'\n        );\n        this.handleEdgeSelection(data);\n      }\n    } else {\n      if (typeof data.edgeID !== 'number')\n        console.warn(\n          'EdgeEditor.EDGE_EDIT called with bad data.nodeID:',\n          data.edgeID\n        );\n      if (isBeingEdited)\n        console.warn(\n          'EdgeEditor.EDGE_EDIT denied because isBeingEdited',\n          isBeingEdited\n        );\n    }\n  } // handleEdgeEdit\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  handleEdgeClose() {\n    if (this.state.isExpanded) this.setState({ isExpanded: false });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Handle change in SESSION data\n    Called both by componentDidMount() and AppStateChange handler.\n    The 'SESSION' state change is triggered in two places in SessionShell during\n    its handleChange() when active typing is occuring, and also during\n    SessionShell.componentWillMount()\n   */\n  onStateChange_SESSION(decoded) {\n    let update = { isLocked: !decoded.isValid };\n    this.setState(update);\n  }\n\n  /// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Expand if the edge is collapsed.\n    Cancel editing if the edge is expanded.\n   */\n  onEdgeClick() {\n    // Cancel/Close\n    if (this.state.isExpanded) {\n      // collapse\n      this.setState({ isExpanded: false });\n\n      // If we were editing, then revert and exit\n      if (this.state.isBeingEdited) {\n        const NCDATA = this.AppState('NCDATA');\n\n        this.setState({ isBeingEdited: false, targetIsEditable: false });\n        // Return focus of autocomplete to Search field.\n        this.AppCall('AUTOCOMPLETE_SELECT', { id: 'search' });\n        // Tell parent node to exit out of edge edit mode\n        this.AppCall('EDGEEDIT_UNLOCK', { edgeID: this.props.edgeID });\n        // Deregister as an open editor\n        if (this.state.isBeingEdited)\n          UDATA.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.EDGE });\n\n        // Cancel edit existing or cancel edit new?\n        let originalEdge = NCDATA.edges.filter(\n          edge => parseInt(edge.id) === this.props.edgeID\n        )[0];\n        if (originalEdge === undefined) {\n          // user abandoned editing a new node that was never saved\n          const parentNode = NCDATA.nodes.find(\n            node => node.label === this.props.parentNodeLabel\n          );\n          // parentNode might be missing if the admin user deleted it.\n          if (parentNode) {\n            // Unlock edges and reselect the source node\n            UDATA.LocalCall('EDGE_NEW_CANCEL', { nodeID: parentNode.id });\n          } else {\n            // Unlock edges and deselect the missing source node\n            UDATA.LocalCall('EDGE_NEW_CANCEL');\n          }\n          this.clearForm();\n        } else {\n          // User is abandoning edits to an existing edge.\n          // restore original edge\n          this.loadSourceAndTarget();\n          // unlock\n          this.NetCall('SRV_DBUNLOCKEDGE', { edgeID: this.state.formData.id }).then(\n            data => {\n              if (data.NOP) {\n                if (DBG) console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n              } else if (data.unlocked) {\n                if (DBG)\n                  console.log(\n                    `SERVER SAYS: unlock success! you have released Edge ${data.edgeID}`\n                  );\n                this.setState({ dbIsLocked: false });\n              }\n            }\n          );\n        }\n      }\n    } else {\n      // expand, but don't set the autocomplete field, since we're not editing\n      this.setState({ isExpanded: true });\n    }\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onDeleteButtonClick() {\n    this.clearForm();\n    this.AppCall('AUTOCOMPLETE_SELECT', { id: 'search' });\n    if (this.state.isBeingEdited)\n      UDATA.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.EDGE });\n    this.AppCall('EDGEEDIT_UNLOCK', { edgeID: this.props.edgeID }); // inform NodeSelector\n    this.AppCall('DB_UPDATE', { edgeID: this.props.edgeID });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onEditButtonClick() {\n    this.setState({ hideModal: true });\n\n    this.requestEdit(this.state.formData.id);\n\n    // Don't allow editing of the source or target fields.\n    // If you want to change the edge, delete this one and create a new one.\n    // if (this.props.parentNodeLabel===this.state.sourceNode.label) {\n    //   // The source node is the currently selected node in NodeSelector.  Edit the target.\n    //   UDATA.LocalCall('AUTOCOMPLETE_SELECT',{id:'edge'+this.props.edgeID+'target', searchString: this.state.targetNode.label});\n    // } else {\n    //   // The NodeSelector node is the target.  Allow editing the source.\n    //   UDATA.LocalCall('AUTOCOMPLETE_SELECT',{id:'edge'+this.props.edgeID+'source', searchString: this.state.sourceNode.label});\n    // }\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onCiteButtonClick(event) {\n    event.preventDefault();\n\n    this.setState({ hideModal: false });\n  } // onCiteButtonClick\n\n  onCloseCiteClick(event) {\n    event.preventDefault();\n\n    this.setState({ hideModal: true });\n  } //   this.onCloseCiteClick\n\n  dateFormatted() {\n    var today = new Date();\n    var year = String(today.getFullYear());\n    var date = today.getMonth() + 1 + '/' + today.getDate() + '/' + year.substr(2, 4);\n    var time = today.toTimeString().substr(0, 5);\n    var dateTime = time + ' on ' + date;\n    return dateTime;\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  requestEdit() {\n    let edgeID = this.state.formData.id;\n    if (\n      edgeID &&\n      edgeID !== '' &&\n      !isNaN(edgeID) &&\n      typeof edgeID === 'number' &&\n      !this.state.isBeingEdited\n    ) {\n      this.NetCall('SRV_DBLOCKEDGE', { edgeID: edgeID }).then(data => {\n        if (data.NOP) {\n          // Edge is locked, can't edit\n          if (DBG) console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n          this.setState({\n            dbIsLocked: true,\n            isExpanded: true\n          });\n        } else if (data.locked) {\n          if (DBG)\n            console.log(\n              `SERVER SAYS: lock success! you can edit Edge ${data.edgeID}`\n            );\n          if (DBG)\n            console.log(`SERVER SAYS: unlock the edge after successful DBUPDATE`);\n          this.setState({\n            isBeingEdited: true,\n            isExpanded: true,\n            dbIsLocked: false\n          });\n          this.Signal('EDGEEDIT_LOCK', { edgeID: this.props.edgeID });\n          // When a edge is being edited, lock the Template from being edited\n          UDATA.NetCall('SRV_REQ_EDIT_LOCK', { editor: EDITORTYPE.EDGE }).then(\n            res => {\n              const disableEdit = res.isBeingEdited;\n              this.setState({ disableEdit });\n            }\n          );\n        }\n      });\n    }\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onSwapSourceAndTarget() {\n    let formData = this.state.formData;\n\n    // swap formadata\n    let targetId = formData.targetId;\n    formData.targetId = formData.sourceId;\n    formData.sourceId = targetId;\n\n    // swap this.state.source and target\n    let swap = this.state.sourceNode;\n    let source = this.state.targetNode;\n    let target = swap;\n\n    // REVIEW\n    // Get rid of separate this.state.source and this.state.target\n    // and just use formData?!?\n\n    this.setState({\n      formData: formData,\n      sourceNode: source,\n      targetNode: target\n    });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onChangeSource() {\n    this.setState({\n      sourceIsEditable: true,\n      hasValidSource: false,\n      placeholder: this.state.sourceNode.label\n    });\n    this.AppCall('AUTOCOMPLETE_SELECT', {\n      id: 'edge' + this.props.edgeID + 'source'\n    });\n    // Whenever we set the autocomplete to source, we have to update the label\n    // Clear the AutoComplete field so that onBlur does not select the same node\n    this.AppCall('SOURCE_SEARCH', { searchString: '' });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onChangeTarget() {\n    this.setState({\n      targetIsEditable: true,\n      hasValidTarget: false,\n      placeholder: this.state.targetNode.label\n    });\n    this.AppCall('AUTOCOMPLETE_SELECT', {\n      id: 'edge' + this.props.edgeID + 'target'\n    });\n    // Whenever we set the autocomplete to target, we have to update the label\n    // Clear the AutoComplete field so that onBlur does not select the same node\n    this.AppCall('SOURCE_SEARCH', { searchString: '' });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onRelationshipChange(event) {\n    let formData = this.state.formData;\n    formData.type = event.target.value;\n    this.setState({ formData: formData });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onInfoChange(event) {\n    let formData = this.state.formData;\n    formData.info = event.target.value;\n    this.setState({ formData: formData });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onWeightChange(event) {\n    // The built in <input min=\"0\"> will keep the step buttons from going below 0,\n    // but the user can still input \"0\". When editing, you need to be able to\n    // delete the whole field, so we allow blanks, otherwise the UI will always\n    // force a \"0\" in the field.\n    let formData = this.state.formData;\n    formData.weight = event.target.value < 1 ? '' : Number(event.target.value); // force Number type\n    this.setState({ formData: formData });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onProvenanceChange(event) {\n    let formData = this.state.formData;\n    formData.provenance = event.target.value;\n    this.setState({ formData: formData });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onCommentsChange(event) {\n    let formData = this.state.formData;\n    formData.comments = event.target.value;\n    this.setState({ formData: formData });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onCitationChange(event) {\n    let formData = this.state.formData;\n    formData.citation = event.target.value;\n    this.setState({ formData: formData });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onCategoryChange(event) {\n    let formData = this.state.formData;\n    formData.category = event.target.value;\n    this.setState({ formData: formData });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onNotesChange(event) {\n    let formData = this.state.formData;\n    formData.notes = event.target.value;\n    this.setState({ formData: formData });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onSubmit(event) {\n    event.preventDefault();\n    let formData = this.state.formData;\n    // Read current edge values\n    // This is necessary because the SOURCE and TARGET labels\n    // are bound to selectedSourceNode and selectedTargetNode, not selectedEdge\n    let edge = {\n      id: formData.id,\n      source: this.state.sourceNode.id, // REVIEW: d3data 'source' is id, rename this to 'sourceId'?\n      // though after d3 processes, source does become an object.\n      target: this.state.targetNode.id, // REVIEW: d3data 'target' is id, rename this to 'targetId'?\n      type: formData.type,\n      info: formData.info,\n      weight: formData.weight,\n      provenance: formData.provenance,\n      comments: formData.comments,\n      citation: formData.citation,\n      category: formData.category,\n      notes: formData.notes\n    };\n    if (DBG) console.group('EdgeEntry.onSubmit submitting', edge);\n\n    // Make sure source and target still exist before saving an edge in case\n    // admin user deletes a node. This is to prevent data corruption by\n    // linking to non-existent nodes. This should probably be moved to nc-logic.\n    if (edge) {\n      // check source\n      const NCDATA = this.AppState('NCDATA');\n      const source = NCDATA.nodes.find(node => node.id === edge.source);\n      if (!source) {\n        // eslint-disable-next-line no-alert\n        alert('Sorry, the source node has been removed.  Please recreate your edge.');\n        // Trigger Cancel\n        this.onEdgeClick();\n        return;\n      }\n      // check target\n      const target = NCDATA.nodes.find(node => node.id === edge.target);\n      if (!target) {\n        // eslint-disable-next-line no-alert\n        alert('Sorry, the target node has been removed.  Please recreate your edge.');\n        // Trigger Cancel\n        this.onEdgeClick();\n        return;\n      }\n    }\n\n    // Deregister as an open editor\n    UDATA.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: 'edge' });\n    this.AppCall('EDGEEDIT_UNLOCK', { edgeID: this.props.edgeID }); // inform NodeSelector\n    // pass currentAutoComplete back to nodeselector\n    this.AppCall('AUTOCOMPLETE_SELECT', { id: 'search' });\n    this.setState({\n      isBeingEdited: false,\n      sourceIsEditable: false,\n      targetIsEditable: false\n    });\n    this.AppCall('DB_UPDATE', { edge }).then(() => {\n      this.NetCall('SRV_DBUNLOCKEDGE', { edgeID: edge.id }).then(data => {\n        if (data.NOP) {\n          if (DBG) console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n        } else if (data.unlocked) {\n          if (DBG)\n            console.log(\n              `SERVER SAYS: unlock success! you have released Edge ${data.edgeID}`\n            );\n          this.setState({ dbIsLocked: false });\n        }\n      });\n    });\n  } // onSubmit\n\n  /// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ This is not yet implemented as of React 16.2.  It's implemented in 16.3.\n    getDerivedStateFromProps (props, state) {\n      console.error('getDerivedStateFromProps!!!');\n    }\n  /*/\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  render() {\n    const { edgeID, parentNodeLabel, parentNodeIsLocked } = this.props;\n    const {\n      formData,\n      sourceNode,\n      targetNode,\n      edgeDefs,\n      isStandalone,\n      edgeIsLockedMessage,\n      editLockMessage,\n      disableEdit\n    } = this.state;\n    let { citation } = this.state;\n    if (edgeDefs.category === undefined) {\n      // for backwards compatability\n      edgeDefs.category = {};\n      edgeDefs.category.label = '';\n      edgeDefs.category.hidden = true;\n    }\n    if (citation === undefined) {\n      // if citation were left out, simply make them hidden\n      citation = {};\n      citation.hidden = true;\n    }\n    const me = (\n      <span style={{ color: 'rgba(0,0,0,0.2)', fontStyle: 'italic' }}>this node</span>\n    );\n    // special override to allow editing an edge that has the same parent node for both source and target\n    let sameSourceAndTarget =\n      sourceNode.label === this.props.parentNodeLabel &&\n      targetNode.label === this.props.parentNodeLabel;\n\n    // Optimize Edge Loading\n    // If not expanded, just show the button\n    // Only bother to render the whole EdgeEditor if the Edge is being edited\n    // This speeds up render times by almost 2 seconds\n    if (!this.state.isExpanded) {\n      return (\n        <div>\n          <Button\n            outline\n            size=\"sm\"\n            style={{\n              backgroundColor: '#a9d3ff',\n              borderColor: 'transparent',\n              width: '100%',\n              marginBottom: '3px',\n              textAlign: 'left',\n              overflow: 'hidden'\n            }}\n            onClick={this.onEdgeClick}\n          >\n            {parentNodeLabel === sourceNode.label ? me : sourceNode.label}\n            &nbsp;<span title={formData.type}>&#x2794;</span>&nbsp;\n            {parentNodeLabel === targetNode.label ? me : targetNode.label}\n          </Button>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className={this.state.isExpanded ? '' : 'd-none'}>\n          <Form\n            className=\"nodeEntry\"\n            style={{\n              backgroundColor: '#C9E1FF',\n              minHeight: '300px',\n              padding: '5px',\n              marginBottom: '10px'\n            }}\n            onSubmit={this.onSubmit}\n          >\n            <FormText onClick={this.onEdgeClick}>\n              <b>EDGE {formData.id}</b>\n            </FormText>\n            <FormGroup row>\n              <Col sm={3} style={{ hyphens: 'auto' }} className=\"pr-0\">\n                <Label for=\"source\" className=\"tooltipAnchor small text-muted\">\n                  {edgeDefs.source.displayLabel}\n                  <span className=\"tooltiptext\">\n                    {this.helpText(edgeDefs.source)}\n                  </span>\n                </Label>\n              </Col>\n              <Col sm={9}>\n                <AutoComplete\n                  identifier={'edge' + edgeID + 'source'}\n                  disabledValue={sourceNode.label}\n                  inactiveMode={\n                    parentNodeLabel === sourceNode.label\n                      ? 'static'\n                      : this.state.isBeingEdited\n                      ? 'disabled'\n                      : 'link'\n                  }\n                  linkID={sourceNode.id}\n                  shouldIgnoreSelection={!this.state.sourceIsEditable}\n                  placeholder={this.state.placeholder}\n                />\n                <Button\n                  outline\n                  size=\"sm\"\n                  className=\"float-right\"\n                  hidden={\n                    !(\n                      this.state.isBeingEdited &&\n                      this.state.hasValidSource &&\n                      sourceNode.label !== this.props.parentNodeLabel\n                    )\n                  }\n                  onClick={this.onChangeSource}\n                  title=\"Select a different source node\"\n                >\n                  Change Source\n                </Button>\n              </Col>\n            </FormGroup>\n            <FormGroup row hidden={edgeDefs.type.hidden}>\n              <Col sm={3} style={{ hyphens: 'auto' }} className=\"pr-0\">\n                <Label for=\"relationship\" className=\"tooltipAnchor small text-muted\">\n                  {edgeDefs.type.displayLabel}\n                  <span className=\"tooltiptext\">{this.helpText(edgeDefs.type)}</span>\n                </Label>\n              </Col>\n              <Col sm={9}>\n                <Input\n                  type=\"select\"\n                  name=\"relationship\"\n                  value={formData.type}\n                  onChange={this.onRelationshipChange}\n                  disabled={!this.state.isBeingEdited}\n                >\n                  {edgeDefs.type.options.map(option => (\n                    <option key={option.label}>{option.label}</option>\n                  ))}\n                </Input>\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Col sm={3} style={{ hyphens: 'auto' }} className=\"pr-0\">\n                <Label for=\"nodeLabel\" className=\"tooltipAnchor small text-muted\">\n                  {edgeDefs.target.displayLabel}\n                  <span className=\"tooltiptext\">\n                    {this.helpText(edgeDefs.target)}\n                  </span>\n                </Label>\n              </Col>\n              <Col sm={9}>\n                <AutoComplete\n                  identifier={'edge' + edgeID + 'target'}\n                  disabledValue={targetNode.label}\n                  // eslint-disable-next-line no-nested-ternary\n                  inactiveMode={\n                    parentNodeLabel === targetNode.label && !sameSourceAndTarget\n                      ? 'static'\n                      : this.state.isBeingEdited\n                      ? 'disabled'\n                      : 'link'\n                  }\n                  linkID={targetNode.id}\n                  shouldIgnoreSelection={!this.state.targetIsEditable}\n                  placeholder={this.state.placeholder}\n                />\n                <Button\n                  outline\n                  size=\"sm\"\n                  className=\"float-right\"\n                  hidden={\n                    !(\n                      this.state.isBeingEdited &&\n                      this.state.hasValidTarget &&\n                      (targetNode.label !== this.props.parentNodeLabel ||\n                        sameSourceAndTarget)\n                    )\n                  }\n                  onClick={this.onChangeTarget}\n                  title=\"Select a different target node\"\n                >\n                  Change Target\n                </Button>\n                <Button\n                  outline\n                  size=\"sm\"\n                  className=\"float-right\"\n                  style={{ marginRight: '5px' }}\n                  hidden={!(this.state.isBeingEdited && this.state.hasValidTarget)}\n                  onClick={this.onSwapSourceAndTarget}\n                  title=\"Swap 'Source' and 'Target' nodes\"\n                >\n                  &uarr;&darr;\n                </Button>\n              </Col>\n            </FormGroup>\n            <FormGroup row hidden={edgeDefs.category.hidden}>\n              <Col sm={3} style={{ hyphens: 'auto' }} className=\"pr-0\">\n                <Label for=\"category\" className=\"tooltipAnchor small text-muted\">\n                  {edgeDefs.category.displayLabel}\n                  <span className=\"tooltiptext\">\n                    {this.helpText(edgeDefs.category)}\n                  </span>\n                </Label>\n              </Col>\n              <Col sm={9}>\n                <Input\n                  type=\"text\"\n                  name=\"category\"\n                  value={formData.category}\n                  onChange={this.onCategoryChange}\n                  readOnly={!this.state.isBeingEdited}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup row hidden={edgeDefs.citation.hidden}>\n              <Col sm={3} style={{ hyphens: 'auto' }} className=\"pr-0\">\n                <Label for=\"citation\" className=\"tooltipAnchor small text-muted\">\n                  {edgeDefs.citation.displayLabel}\n                  <span className=\"tooltiptext\">\n                    {this.helpText(edgeDefs.citation)}\n                  </span>\n                </Label>\n              </Col>\n              <Col sm={9}>\n                <Input\n                  type=\"text\"\n                  name=\"citation\"\n                  value={formData.citation}\n                  onChange={this.onCitationChange}\n                  readOnly={!this.state.isBeingEdited}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup row hidden={edgeDefs.notes.hidden}>\n              <Col sm={3} style={{ hyphens: 'auto' }} className=\"pr-0\">\n                <Label for=\"notes\" className=\"tooltipAnchor small text-muted\">\n                  {edgeDefs.notes.displayLabel}\n                  <span className=\"tooltiptext\">{this.helpText(edgeDefs.notes)}</span>\n                </Label>\n              </Col>\n              <Col sm={9}>\n                <Input\n                  type=\"textarea\"\n                  name=\"notes\"\n                  style={{ display: this.state.isBeingEdited ? 'block' : 'none' }}\n                  value={formData.notes}\n                  onChange={this.onNotesChange}\n                  readOnly={!this.state.isBeingEdited}\n                />\n                {this.markdownDisplay(this.state.formData.notes || '')}\n              </Col>\n            </FormGroup>\n            <FormGroup row hidden={edgeDefs.info.hidden}>\n              <Col sm={3} style={{ hyphens: 'auto' }} className=\"pr-0\">\n                <Label for=\"info\" className=\"tooltipAnchor small text-muted\">\n                  {edgeDefs.info.displayLabel}\n                  <span className=\"tooltiptext\">{this.helpText(edgeDefs.info)}</span>\n                </Label>\n              </Col>\n              <Col sm={9}>\n                <Input\n                  type=\"text\"\n                  name=\"info\"\n                  value={formData.info}\n                  onChange={this.onInfoChange}\n                  readOnly={!this.state.isBeingEdited}\n                />\n              </Col>\n            </FormGroup>\n            {/** weight **/}\n            <FormGroup row hidden={edgeDefs.weight.hidden}>\n              <Col sm={3} style={{ hyphens: 'auto' }} className=\"pr-0\">\n                <Label for=\"weight\" className=\"tooltipAnchor small text-muted\">\n                  {edgeDefs.weight.displayLabel}\n                  <span className=\"tooltiptext\">\n                    {this.helpText(edgeDefs.weight)}\n                  </span>\n                </Label>\n              </Col>\n              <Col sm={9}>\n                <Input\n                  type=\"number\"\n                  name=\"weight\"\n                  min=\"1\"\n                  value={formData.weight}\n                  onChange={this.onWeightChange}\n                  readOnly={!this.state.isBeingEdited}\n                />\n              </Col>\n            </FormGroup>\n            {/** provenance **/}\n            <FormGroup row hidden={edgeDefs.provenance.hidden}>\n              <Col sm={3} style={{ hyphens: 'auto' }} className=\"pr-0\">\n                <Label for=\"provenance\" className=\"tooltipAnchor small text-muted\">\n                  {edgeDefs.provenance.displayLabel}\n                  <span className=\"tooltiptext\">\n                    {this.helpText(edgeDefs.provenance)}\n                  </span>\n                </Label>\n              </Col>\n              <Col sm={9}>\n                <Input\n                  type=\"text\"\n                  name=\"provenance\"\n                  value={formData.provenance}\n                  onChange={this.onProvenanceChange}\n                  readOnly={!this.state.isBeingEdited}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup row hidden={edgeDefs.comments.hidden}>\n              <Col sm={3} style={{ hyphens: 'auto' }} className=\"pr-0\">\n                <Label for=\"comments\" className=\"tooltipAnchor small text-muted\">\n                  {edgeDefs.comments.displayLabel}\n                  <span className=\"tooltiptext\">\n                    {this.helpText(edgeDefs.comments)}\n                  </span>\n                </Label>\n              </Col>\n              <Col sm={9}>\n                <textarea\n                  type=\"text\"\n                  name=\"comments\"\n                  className=\"comments\"\n                  rows=\"4\"\n                  value={formData.comments}\n                  onChange={this.onCommentsChange}\n                  readOnly={!this.state.isBeingEdited}\n                  disabled={!this.state.isBeingEdited}\n                />\n              </Col>\n            </FormGroup>\n            <div\n              id=\"citationWindow\"\n              hidden={this.state.hideModal}\n              className=\"modal-content\"\n            >\n              <span className=\"close\" onClick={this.onCloseCiteClick}>\n                &times;\n              </span>\n              <p>\n                <em>Copy the text below:</em>\n                <br />\n                <br />\n                NetCreate {this.AppState('TEMPLATE').name} network, Edge:{' '}\n                {this.state.formData.label} (ID {this.state.formData.id}), from &quot;\n                {sourceNode.label}&quot; to &quot;{targetNode.label}&quot;.{' '}\n                {citation.text}. Last accessed at {this.dateFormatted()}.\n              </p>\n            </div>\n            <br />\n            <FormGroup className=\"text-right\" style={{ paddingRight: '5px' }}>\n              <Button\n                className=\"small float-left btn btn-outline-light\"\n                size=\"sm\"\n                hidden={this.state.isLocked || isStandalone || parentNodeIsLocked}\n                onClick={this.onDeleteButtonClick}\n              >\n                Delete\n              </Button>\n              &nbsp;\n              <Button\n                outline\n                size=\"sm\"\n                hidden={citation.hidden}\n                onClick={this.onCiteButtonClick}\n              >\n                Cite Edge\n              </Button>\n              &nbsp;&nbsp;\n              <Button\n                outline\n                size=\"sm\"\n                hidden={\n                  this.state.isLocked ||\n                  isStandalone ||\n                  this.state.isBeingEdited ||\n                  parentNodeIsLocked\n                }\n                disabled={disableEdit}\n                onClick={this.onEditButtonClick}\n              >\n                {this.state.isBeingEdited ? 'Add New Edge' : 'Edit Edge'}\n              </Button>\n              &nbsp;\n              <Button\n                size=\"sm\"\n                outline={this.state.isBeingEdited}\n                onClick={this.onEdgeClick}\n              >\n                {this.state.isBeingEdited ? 'Cancel' : 'Close'}\n              </Button>\n              &nbsp;\n              <Button\n                color=\"primary\"\n                size=\"sm\"\n                hidden={!this.state.isBeingEdited}\n                disabled={!(this.state.isBeingEdited && this.state.hasValidTarget)}\n              >\n                Save\n              </Button>\n              <div\n                hidden={\n                  this.state.isLocked ||\n                  this.state.isBeingEdited ||\n                  parentNodeIsLocked\n                }\n                style={{ display: 'inline' }}\n              >\n                <p\n                  hidden={!this.state.dbIsLocked}\n                  className=\"small text-danger warning\"\n                >\n                  {edgeIsLockedMessage}\n                </p>\n                <p hidden={!disableEdit} className=\"small text-danger warning\">\n                  {editLockMessage}\n                </p>\n              </div>\n            </FormGroup>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */ componentDidMount() {\n    if (DBG) console.log('EdgeEditor.componentDidMount!');\n    this.loadSourceAndTarget();\n    this.onStateChange_SESSION(this.AppState('SESSION'));\n    this.updateEditState();\n    this.setState({\n      // hide Edit button if in standalone mode\n      isStandalone: UNISYS.IsStandaloneMode()\n    });\n    window.addEventListener('beforeunload', this.checkUnload);\n    window.addEventListener('unload', this.doUnload);\n  }\n\n  checkUnload(e) {\n    e.preventDefault();\n    if (this.state.isBeingEdited) {\n      (e || window.event).returnValue = null;\n    } else {\n      Reflect.deleteProperty(e, 'returnValue');\n    }\n    return e;\n  }\n\n  doUnload(e) {\n    if (this.state.isBeingEdited) {\n      this.NetCall('SRV_DBUNLOCKEDGE', { edgeID: this.state.formData.id });\n      this.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.EDGE });\n    }\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Release the lock if we're unmounting\n   */\n  componentWillUnmount() {\n    if (DBG) console.log('EdgeEditor.componentWillUnMount!');\n    if (this.state.isBeingEdited) {\n      this.NetCall('SRV_DBUNLOCKEDGE', { edgeID: this.state.formData.id }).then(\n        data => {\n          if (data.NOP) {\n            if (DBG) console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n          } else if (data.unlocked) {\n            if (DBG)\n              console.log(\n                `SERVER SAYS: unlock success! you have released Edge ${data.edgeID}`\n              );\n            this.setState({ dbIsLocked: false });\n          }\n        }\n      );\n      // Deregister as an open editor\n      this.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.EDGE });\n    }\n    // deregister ACTIVEAUTOMPLETE when component unmounts\n    // otherwise state updates trigger a setState on unmounted component error\n    this.AppStateChangeOff('SESSION', this.onStateChange_SESSION);\n    this.AppStateChangeOff('SELECTION', this.handleSelection);\n    this.AppStateChangeOff('TEMPLATE', this.setTemplate);\n    UDATA.UnhandleMessage('EDGE_SELECT', this.handleEdgeSelection);\n    UDATA.UnhandleMessage('EDGE_EDIT', this.handleEdgeEdit);\n    UDATA.UnhandleMessage('EDGE_CLOSE', this.handleEdgeClose);\n    UDATA.UnhandleMessage('EDIT_PERMISSIONS_UPDATE', this.setEditState);\n    window.removeEventListener('beforeunload', this.checkUnload);\n    window.removeEventListener('unload', this.doUnload);\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n\n  helpText(obj) {\n    if (!obj) return;\n    var text = '';\n    if (obj.help === undefined || obj.help === '') text = obj.label;\n    else text = obj.help;\n    return text;\n  }\n\n  markdownDisplay(text) {\n    if (!this.state.isBeingEdited) {\n      return mdReact({\n        onIterate: this.markdownIterate,\n        markdownOptions: { typographer: true, linkify: true },\n        plugins: [mdEmoji]\n      })(text);\n    }\n  }\n\n  markdownIterate(Tag, props, children, level) {\n    if (Tag === 'a') {\n      props.target = '_blank';\n    }\n    return <Tag {...props}>{children}</Tag>;\n  }\n} // class EdgeEditor\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = EdgeEditor;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n    EdgeTable is used to to display a table of edges for review.\n\n    It displays NCDATA.\n    But also read FILTEREDNCDATA to show highlight/filtered state\n\n\n  ## TO USE\n\n    EdgeTable is self contained and relies on global NCDATA to load.\n\n      <EdgeTable/>\n\n\n    Set `DBG` to true to show the `ID` column.\n\n  ## 2018-12-07 Update\n\n    Since we're not using tab navigation:\n    1. The table isExpanded is now true by default.\n    2. The \"Show/Hide Table\" button is hidden.\n\n    Reset these to restore previous behavior.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst NCUI = require('../nc-ui');\nconst CMTMGR = require('../comment-mgr');\nconst SETTINGS = require('settings');\nconst FILTER = require('./filter/FilterEnums');\nconst { BUILTIN_FIELDS_EDGE } = require('system/util/enum');\nconst { ICON_PENCIL, ICON_VIEW } = require('system/util/constant');\nconst { Button } = ReactStrap;\nconst UNISYS = require('unisys/client');\nimport HDATE from 'system/util/hdate';\nimport URCommentBtn from './URCommentBtn';\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst isAdmin = SETTINGS.IsAdmin();\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UDATA = null;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass EdgeTable extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n\n    const TEMPLATE = this.AppState('TEMPLATE');\n    this.state = {\n      edgeDefs: TEMPLATE.edgeDefs,\n      edges: [],\n      selectedEdgeId: undefined,\n      selectedEdgeColor: TEMPLATE.sourceColor,\n      filteredEdges: [],\n      nodes: [], // needed for dereferencing source/target\n      disableEdit: false,\n      isLocked: false,\n      isExpanded: true,\n      sortkey: 'Relationship'\n    };\n\n    this.onStateChange_SESSION = this.onStateChange_SESSION.bind(this);\n    this.onStateChange_SELECTION = this.onStateChange_SELECTION.bind(this);\n    this.onEDGE_OPEN = this.onEDGE_OPEN.bind(this);\n    this.updateEdgeFilterState = this.updateEdgeFilterState.bind(this);\n    this.handleDataUpdate = this.handleDataUpdate.bind(this);\n    this.handleFilterDataUpdate = this.handleFilterDataUpdate.bind(this);\n    this.updateEditState = this.updateEditState.bind(this);\n    this.OnTemplateUpdate = this.OnTemplateUpdate.bind(this);\n    this.onViewButtonClick = this.onViewButtonClick.bind(this);\n    this.onEditButtonClick = this.onEditButtonClick.bind(this);\n    this.onToggleExpanded = this.onToggleExpanded.bind(this);\n    this.onHighlightNode = this.onHighlightNode.bind(this);\n    this.m_FindMatchingObjsByProp = this.m_FindMatchingObjsByProp.bind(this);\n    this.m_FindMatchingEdgeByProp = this.m_FindMatchingEdgeByProp.bind(this);\n    this.m_FindEdgeById = this.m_FindEdgeById.bind(this);\n    this.setSortKey = this.setSortKey.bind(this);\n    this.sortSymbol = this.sortSymbol.bind(this);\n    this.lookupNodeLabel = this.lookupNodeLabel.bind(this);\n\n    this.sortDirection = 1;\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n\n    UDATA.HandleMessage('EDGE_OPEN', this.onEDGE_OPEN);\n    UDATA.HandleMessage('EDIT_PERMISSIONS_UPDATE', this.updateEditState);\n\n    // SESSION is called by SessionSHell when the ID changes\n    //  set system-wide. data: { classId, projId, hashedId, groupId, isValid }\n    this.OnAppStateChange('SESSION', this.onStateChange_SESSION);\n\n    // Always make sure class methods are bind()'d before using them\n    // as a handler, otherwise object context is lost\n    this.OnAppStateChange('NCDATA', this.handleDataUpdate);\n\n    // Handle Template updates\n    this.OnAppStateChange('TEMPLATE', this.OnTemplateUpdate);\n\n    // Track Filtered Data Updates too\n    this.OnAppStateChange('FILTEREDNCDATA', this.handleFilterDataUpdate);\n\n    this.OnAppStateChange('SELECTION', this.onStateChange_SELECTION);\n  } // constructor\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  componentDidMount() {\n    if (DBG) console.log('EdgeTable.componentDidMount!');\n\n    this.onStateChange_SESSION(this.AppState('SESSION'));\n\n    // Explicitly retrieve data because we may not have gotten a NCDATA\n    // update while we were hidden.\n    // filtered data needs to be set before D3Data\n    const FILTEREDNCDATA = UDATA.AppState('FILTEREDNCDATA');\n    this.setState({ filteredEdges: FILTEREDNCDATA.edges }, () => {\n      let NCDATA = this.AppState('NCDATA');\n      this.handleDataUpdate(NCDATA);\n    });\n\n    // Request edit state too because the update may have come\n    // while we were hidden\n    this.updateEditState();\n  }\n\n  componentWillUnmount() {\n    UDATA.UnhandleMessage('EDGE_OPEN', this.onEDGE_OPEN);\n    UDATA.UnhandleMessage('EDIT_PERMISSIONS_UPDATE', this.updateEditState);\n    this.AppStateChangeOff('SESSION', this.onStateChange_SESSION);\n    this.AppStateChangeOff('NCDATA', this.handleDataUpdate);\n    this.AppStateChangeOff('FILTEREDNCDATA', this.handleFilterDataUpdate);\n    this.AppStateChangeOff('TEMPLATE', this.OnTemplateUpdate);\n    this.AppStateChangeOff('SELECTION', this.onStateChange_SELECTION);\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  onStateChange_SELECTION(data) {\n    this.setState({\n      selectedEdgeId: data.edges.length > 0 ? data.edges[0].id : undefined\n    });\n  }\n  /** Handle change in SESSION data\n    Called both by componentWillMount() and AppStateChange handler.\n    The 'SESSION' state change is triggered in two places in SessionShell during\n    its handleChange() when active typing is occuring, and also during\n    SessionShell.componentWillMount()\n   */\n  onStateChange_SESSION(decoded) {\n    this.setState({ isLocked: !decoded.isValid });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  displayUpdated(nodeEdge) {\n    // Prevent error if `meta` info is not defined yet, or not properly imported\n    if (!nodeEdge.meta) return '';\n\n    var d = new Date(\n      nodeEdge.meta.revision > 0 ? nodeEdge.meta.updated : nodeEdge.meta.created\n    );\n\n    var year = String(d.getFullYear());\n    var date = d.getMonth() + 1 + '/' + d.getDate() + '/' + year.substr(2, 4);\n    var time = d.toTimeString().substr(0, 5);\n    var dateTime = date + ' at ' + time;\n    var titleString = 'v' + nodeEdge.meta.revision;\n    if (nodeEdge._nlog)\n      titleString += ' by ' + nodeEdge._nlog[nodeEdge._nlog.length - 1];\n    var tag = <span title={titleString}> {dateTime} </span>;\n\n    return tag;\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// User selected edge usu by clicking NCNode's edge item in Edges tab\n  onEDGE_OPEN(data) {\n    this.setState({ selectedEdgeId: data.edge.id });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// Set edge filtered status based on current filteredNodes\n  updateEdgeFilterState(edges, filteredEdges) {\n    // add highlight/filter status\n    if (filteredEdges.length > 0) {\n      // If we're transitioning from \"HILIGHT/FADE\" to \"COLLAPSE\" or \"FOCUS\", then we\n      // also need to remove edges that are not in filteredEdges\n      const FILTERDEFS = UDATA.AppState('FILTERDEFS');\n      if (\n        FILTERDEFS.filterAction === FILTER.ACTION.REDUCE ||\n        FILTERDEFS.filterAction === FILTER.ACTION.FOCUS\n      ) {\n        edges = edges.filter(edge => {\n          const filteredEdge = filteredEdges.find(n => n.id === edge.id);\n          return filteredEdge; // keep if it's in the list of filtered edges\n        });\n      } else {\n        edges = edges.map(edge => {\n          const filteredEdge = filteredEdges.find(n => n.id === edge.id);\n          edge.isFiltered = !filteredEdge;\n          return edge;\n        });\n      }\n    }\n    this.setState({ edges });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Handle updated SELECTION: NCDATA updates\n   */\n  handleDataUpdate(data) {\n    if (data && data.edges && data.nodes) {\n      // NCDATA.edges no longer uses source/target objects\n      // ...1. So we need to save nodes for dereferencing.\n      this.setState({ nodes: data.nodes }, () => {\n        // ...2. So we stuff 'sourceLabel' and 'targetLabel' into the local edges array\n        let edges = data.edges.map(e => {\n          e.sourceLabel = this.lookupNodeLabel(e.source); // requires `state.nodes` be set\n          e.targetLabel = this.lookupNodeLabel(e.target);\n          return e;\n        });\n        // ...   sort it also\n        edges = this.sortTable(this.state.sortkey, edges);\n        // ...1. So we need to save nodes for dereferencing.\n        this.setState({ edges });\n        const { filteredEdges } = this.state;\n        this.updateEdgeFilterState(edges, filteredEdges);\n      });\n    }\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Handle FILTEREDNCDATA updates sent by filters-logic.m_FiltersApply\n      Note that edge.soourceLabel and edge.targetLabel should already be set\n      by filter-mgr.\n   */\n  handleFilterDataUpdate(data) {\n    if (data.edges) {\n      const filteredEdges = data.edges;\n      // If we're transitioning from \"COLLAPSE\" or \"FOCUS\" to \"HILIGHT/FADE\", then we\n      // also need to add back in edges that are not in filteredEdges\n      // (because \"COLLAPSE\" and \"FOCUS\" removes edges that are not matched)\n      const FILTERDEFS = UDATA.AppState('FILTERDEFS');\n      if (FILTERDEFS.filterAction === FILTER.ACTION.FADE) {\n        const NCDATA = UDATA.AppState('NCDATA');\n        this.setState(\n          {\n            edges: NCDATA.edges,\n            filteredEdges\n          },\n          () => {\n            const edges = this.sortTable(this.state.sortkey, NCDATA.edges);\n            this.updateEdgeFilterState(edges, filteredEdges);\n          }\n        );\n      } else {\n        this.setState(\n          {\n            edges: filteredEdges,\n            filteredEdges\n          },\n          () => {\n            const edges = this.sortTable(this.state.sortkey, filteredEdges);\n            this.updateEdgeFilterState(edges, filteredEdges);\n          }\n        );\n      }\n    }\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  updateEditState() {\n    // disable edit if someone else is editing a template, node, or edge\n    let disableEdit = false;\n    UDATA.NetCall('SRV_GET_EDIT_STATUS').then(data => {\n      // someone else might be editing a template or importing or editing node or edge\n      disableEdit =\n        data.templateBeingEdited ||\n        data.importActive ||\n        data.nodeOrEdgeBeingEdited ||\n        data.commentBeingEditedByMe; // only lock out if this user is the one editing comments, allow network commen edits\n      this.setState({ disableEdit });\n    });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  OnTemplateUpdate(data) {\n    this.setState({\n      edgeDefs: data.edgeDefs,\n      selectedEdgeColor: data.sourceColor\n    });\n  }\n\n  /// UTILITIES /////////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  sortByID(edges) {\n    if (edges) {\n      return edges.sort((a, b) => {\n        let akey = a.id,\n          bkey = b.id;\n        if (akey < bkey) return -1 * Number(this.sortDirection);\n        if (akey > bkey) return 1 * Number(this.sortDirection);\n        return 0;\n      });\n    }\n    return undefined;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  sortBySourceLabel(edges) {\n    if (edges) {\n      return edges.sort((a, b) => {\n        let akey = a.sourceLabel,\n          bkey = b.sourceLabel;\n        return akey.localeCompare(bkey) * this.sortDirection;\n      });\n    }\n    return undefined;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  sortByTargetLabel(edges) {\n    if (edges) {\n      return edges.sort((a, b) => {\n        let akey = a.targetLabel,\n          bkey = b.targetLabel;\n\n        return akey.localeCompare(bkey) * this.sortDirection;\n      });\n    }\n    return undefined;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** DEPRECATED -- 'attributes' is no longer being used\n   */\n  sortByAttribute(edges, key) {\n    if (edges) {\n      return edges.sort((a, b) => {\n        let akey = a.attributes[key],\n          bkey = b.attributes[key];\n        if (akey < bkey) return -1 * Number(this.sortDirection);\n        if (akey > bkey) return 1 * Number(this.sortDirection);\n        if (akey === bkey) {\n          // Secondary sort on Source label\n          let source_a = a.sourceLabel;\n          let source_b = b.sourceLabel;\n          if (source_a < source_b) return -1 * Number(this.sortDirection);\n          if (source_a > source_b) return 1 * Number(this.sortDirection);\n        }\n        return 0;\n      });\n    }\n    return undefined;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  sortByKey(edges, key, type) {\n    if (edges) {\n      return edges.sort((a, b) => {\n        let akey, bkey;\n        if (type === FILTER.TYPES.STRING) {\n          akey = a[key] || ''; // fall back to blank if a[key] is not defined\n          // a[key] might be undefined if the template/db\n          // was changed but the full db wasn't updated\n          bkey = b[key] || '';\n        } else if (type === FILTER.TYPES.NUMBER) {\n          akey = Number(a[key] || ''); // force number for sorting\n          bkey = Number(b[key] || '');\n        } else if (type === FILTER.TYPES.HDATE) {\n          if (!a[key] || !b[key]) return 0;\n          akey = HDATE.Parse(a[key].value); // parseResult\n          bkey = HDATE.Parse(b[key].value);\n          if (akey.length < 1 || bkey.length < 1) return '';\n          const da = akey[0].start.knownValues;\n          const db = bkey[0].start.knownValues;\n          let order;\n          if (da.year !== db.year) {\n            order = da.year - db.year;\n          } else if (da.month !== db.month) {\n            order = da.month - db.month;\n          } else if (da.day !== db.day) {\n            order = da.day - db.day;\n          } else if (da.hour !== db.hour) {\n            order = da.hour - db.hour;\n          } else if (da.minute !== db.minute) {\n            order = da.minute - db.minute;\n          } else if (da.second !== db.second) {\n            order = da.second - db.second;\n          }\n          return order * Number(this.sortDirection);\n        } else {\n          /* some other type */\n          akey = a[key];\n          bkey = b[key];\n        }\n        if (akey < bkey) return -1 * Number(this.sortDirection);\n        if (akey > bkey) return 1 * Number(this.sortDirection);\n        if (akey === bkey) {\n          // Secondary sort on Source label\n          let source_a = a.sourceLabel;\n          let source_b = b.sourceLabel;\n          if (source_a < source_b) return -1 * Number(this.sortDirection);\n          if (source_a > source_b) return 1 * Number(this.sortDirection);\n        }\n        return 0;\n      });\n    }\n    return undefined;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  sortByUpdated(edges) {\n    if (edges) {\n      return edges.sort((a, b) => {\n        let akey = a.meta.revision > 0 ? a.meta.updated : a.meta.created,\n          bkey = b.meta.revision > 0 ? b.meta.updated : b.meta.created;\n        if (akey < bkey) return -1 * Number(this.sortDirection);\n        if (akey > bkey) return 1 * Number(this.sortDirection);\n        return 0;\n      });\n    }\n    return undefined;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  sortByComment(edges) {\n    // stuff the count into edges for calculation\n    const uid = CMTMGR.GetCurrentUserId();\n    const countededges = edges.map(e => {\n      const cref = CMTMGR.GetEdgeCREF(e.id);\n      e.commentcount = CMTMGR.GetThreadedViewObjectsCount(cref, uid);\n      return e;\n    });\n    if (countededges) {\n      return countededges.sort((a, b) => {\n        let akey = a.commentcount || 0,\n          bkey = b.commentcount || 0;\n        // sort descending\n        if (akey > bkey) return 1 * Number(this.sortDirection);\n        if (akey < bkey) return -1 * Number(this.sortDirection);\n        return 0;\n      });\n    }\n    return 0;\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** If no `sortkey` is passed, the sort will use the existing state.sortkey\n   */\n  sortTable(sortkey = this.state.sortkey, edges, type) {\n    switch (sortkey) {\n      case 'id':\n        return this.sortByID(edges);\n      case 'source':\n        return this.sortBySourceLabel(edges);\n      case 'target':\n        return this.sortByTargetLabel(edges);\n      case 'commentbtn':\n        return this.sortByComment(edges);\n      // case 'Updated':\n      //   return this.sortByUpdated(edges);\n      default:\n        return this.sortByKey(edges, sortkey, type);\n    }\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  sortSymbol(key) {\n    if (key !== this.state.sortkey) return '';\n    // this is not the current sort, so don't show anything\n    else return this.sortDirection === 1 ? '▼' : '▲'; // default to \"decreasing\" and flip if clicked again\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Look up the Node label for source / target ids\n   */\n  lookupNodeLabel(nodeId) {\n    const node = this.state.nodes.find(n => n.id === nodeId);\n    if (node === undefined) return '...';\n    // if (node === undefined) throw new Error('EdgeTable: Could not find node', nodeId);\n    return node.label;\n  }\n\n  /// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onViewButtonClick(event, edgeId) {\n    event.preventDefault();\n    event.stopPropagation();\n    let edgeID = parseInt(edgeId);\n    let edge = this.m_FindEdgeById(edgeID);\n    if (DBG) console.log('EdgeTable: Edge id', edge.id, 'selected for viewing');\n    // Load Source Node then Edge\n    UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [edge.source] }).then(() => {\n      UDATA.LocalCall('EDGE_SELECT', { edgeId: edge.id });\n    });\n  }\n  onEditButtonClick(event, edgeId) {\n    event.preventDefault();\n    event.stopPropagation();\n    let edgeID = parseInt(edgeId);\n    let edge = this.m_FindEdgeById(edgeID);\n    if (DBG) console.log('EdgeTable: Edge id', edge.id, 'selected for editing');\n    // Load Source Node then Edge\n    UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [edge.source] }).then(() => {\n      UDATA.LocalCall('EDGE_SELECT_AND_EDIT', { edgeId: edge.id });\n    });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onToggleExpanded(event) {\n    this.setState({\n      isExpanded: !this.state.isExpanded\n    });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n  /*/\n  onHighlightNode(nodeId) {\n    UDATA.LocalCall('TABLE_HILITE_NODE', { nodeId });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/\n   */\n  setSortKey(key, type) {\n    if (key === this.state.sortkey) this.sortDirection = -1 * this.sortDirection;\n    // if this was already the key, flip the direction\n    else this.sortDirection = 1;\n\n    const edges = this.sortTable(key, this.state.edges, type);\n    this.setState({\n      edges,\n      sortkey: key\n    });\n    UNISYS.Log('sort edge table', key, this.sortDirection);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  selectNode(id, event) {\n    event.preventDefault();\n\n    // Load Source\n    if (DBG) console.log('EdgeTable: Edge id', id, 'selected for editing');\n    UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [id] });\n  }\n\n  /// OBJECT HELPERS ////////////////////////////////////////////////////////////\n  /// these probably should go into a utility class\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Return array of objects that match the match_me object keys/values\n    NOTE: make sure that strings are compared with strings, etc\n   */\n  m_FindMatchingObjsByProp(obj_list, match_me = {}) {\n    // operate on arrays only\n    if (!Array.isArray(obj_list))\n      throw Error('FindMatchingObjectsByProp arg1 must be array');\n    let matches = obj_list.filter(obj => {\n      let pass = true;\n      for (let key in match_me) {\n        if (match_me[key] !== obj[key]) pass = false;\n        break;\n      }\n      return pass;\n    });\n    // return array of matches (can be empty array)\n    return matches;\n  }\n\n  /// EDGE HELPERS //////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Return array of nodes that match the match_me object keys/values\n    NOTE: make sure that strings are compared with strings, etc\n   */\n  m_FindMatchingEdgeByProp(match_me = {}) {\n    return this.m_FindMatchingObjsByProp(this.state.edges, match_me);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Convenience function to retrieve edge by ID\n   */\n  m_FindEdgeById(id) {\n    return this.m_FindMatchingEdgeByProp({ id })[0];\n  }\n\n  /// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** This is not yet implemented as of React 16.2.  It's implemented in 16.3.\n      getDerivedStateFromProps (props, state) {\n        console.error('getDerivedStateFromProps!!!');\n      }\n   */\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  render() {\n    let { edgeDefs, selectedEdgeId, selectedEdgeColor, disableEdit, isLocked } =\n      this.state;\n    if (edgeDefs.category === undefined) {\n      // for backwards compatability\n      edgeDefs.category = {};\n      edgeDefs.category.label = '';\n      edgeDefs.category.hidden = true;\n    }\n    const { tableHeight } = this.props;\n    const styles = `thead, tbody { font-size: 0.8em }\n                    .table {\n                      display: table; /* override bootstrap for fixed header */\n                      border-spacing: 0;\n                    }\n                    .table th {\n                      position: -webkit-sticky;\n                      position: sticky;\n                      top: 0;\n                      background-color: #eafcff;\n                      border-top: none;\n                    }\n                    xtbody { overflow: auto; }\n                    .btn-sm { font-size: 0.6rem; padding: 0.1rem 0.2rem }\n                    `;\n    let attributes = Object.keys(edgeDefs).filter(\n      k => !BUILTIN_FIELDS_EDGE.includes(k)\n    );\n\n    // show 'type' between 'source' and 'target' if `type` has been defined\n    // if it isn't defined, just show attribute fields after `source` and 'target`\n    const hasTypeField = edgeDefs['type'];\n    if (hasTypeField) attributes = attributes.filter(a => a !== 'type');\n\n    return (\n      <div\n        onMouseLeave={() => this.onHighlightNode(undefined)}\n        style={{\n          overflow: 'auto',\n          position: 'relative',\n          display: 'block',\n          left: '1px',\n          right: '10px',\n          height: tableHeight,\n          backgroundColor: '#eafcff'\n        }}\n      >\n        <style>{styles}</style>\n        <Button size=\"sm\" outline hidden onClick={this.onToggleExpanded}>\n          {this.state.isExpanded ? 'Hide Edge Table' : 'Show Edge Table'}\n        </Button>\n        <table\n          hidden={!this.state.isExpanded}\n          // size=\"sm\" hover responsive striped // ReactStrap properties\n          // Need to use a standard 'table' not ReactStrap so that we can set\n          // the container div height and support non-scrolling headers\n          className=\"table table-striped table-responsive table-hover table-sm edgetable w-auto\"\n        >\n          <thead>\n            <tr>\n              <th width=\"4%\" hidden={!DBG}>\n                <Button\n                  size=\"sm\"\n                  onClick={() => this.setSortKey('id', edgeDefs.id.type)}\n                >\n                  ID {this.sortSymbol('id')}\n                </Button>\n              </th>\n              <th hidden={!DBG}>Size</th>\n              <th width=\"4%\">\n                <div style={{ color: '#f3f3ff' }}>_Edit_</div>\n              </th>\n              <th hidden={!DBG}>Src ID</th>\n              <th width=\"10%\">\n                <Button\n                  size=\"sm\"\n                  onClick={() => this.setSortKey('source', edgeDefs.source.type)}\n                >\n                  {edgeDefs.source.displayLabel} {this.sortSymbol('source')}\n                </Button>\n              </th>\n              {hasTypeField && (\n                <th hidden={edgeDefs.type.hidden} width=\"10%\">\n                  <Button\n                    size=\"sm\"\n                    onClick={() =>\n                      this.setSortKey('Relationship', edgeDefs.type.type)\n                    }\n                  >\n                    {edgeDefs.type.displayLabel} {this.sortSymbol('Relationship')}\n                  </Button>\n                </th>\n              )}\n              <th hidden={!DBG}>Target ID</th>\n              <th width=\"10%\">\n                <Button\n                  size=\"sm\"\n                  onClick={() => this.setSortKey('target', edgeDefs.target.type)}\n                >\n                  {edgeDefs.target.displayLabel} {this.sortSymbol('target')}\n                </Button>\n              </th>\n              {attributes.map(a => (\n                <th hidden={edgeDefs[a].hidden} key={a}>\n                  <Button\n                    size=\"sm\"\n                    onClick={() => this.setSortKey(a, edgeDefs[a].type)}\n                  >\n                    {edgeDefs[a].displayLabel} {this.sortSymbol(a)}\n                  </Button>\n                </th>\n              ))}\n              <th style={{ zIndex: 1 }}>\n                <div\n                  className=\"comment-icon-inline comment-intable\"\n                  onClick={() => this.setSortKey('commentbtn')}\n                >\n                  {CMTMGR.COMMENTICON}\n                  {this.sortSymbol('commentbtn')}\n                </div>\n              </th>\n              {/*\n              <th width=\"7%\" hidden={!isAdmin}>\n                <Button\n                  size=\"sm\"\n                  onClick={() => this.setSortKey('Updated', FILTER.TYPES.STRING)}\n                >\n                  Updated {this.sortSymbol('Updated')}\n                </Button>\n              </th>\n              <th width=\"10%\" hidden={edgeDefs.comments.hidden}>\n                <Button\n                  size=\"sm\"\n                  onClick={() => this.setSortKey('comments', edgeDefs.comments.type)}\n                >\n                  {edgeDefs.comments.displayLabel} {this.sortSymbol('comments')}\n                </Button>\n              </th>\n              */}\n            </tr>\n          </thead>\n          <tbody style={{ maxHeight: tableHeight, fontSize: '12px' }}>\n            {this.state.edges.map((edge, i) => (\n              <tr\n                key={i}\n                style={{\n                  color: edge.isFiltered ? 'red' : 'black',\n                  // edge default transparency is 0.7\n                  // but for tables, we want to show opaque unless the edge has been Faded via filter\n                  opacity:\n                    edge.filteredTransparency > 0.5 ? 1 : edge.filteredTransparency,\n                  border:\n                    selectedEdgeId === edge.id\n                      ? `3px solid ${selectedEdgeColor}`\n                      : 'none'\n                }}\n              >\n                <td hidden={!DBG}>{edge.id}</td>\n                <td hidden={!DBG}>{edge.size}</td>\n                <td>\n                  {!disableEdit && (\n                    <button\n                      className=\"small outline\"\n                      onClick={event => this.onViewButtonClick(event, edge.id)}\n                    >\n                      {ICON_VIEW}\n                    </button>\n                  )}\n                  {!disableEdit && !isLocked && (\n                    <button\n                      className=\"small outline\"\n                      onClick={event => this.onEditButtonClick(event, edge.id)}\n                    >\n                      {ICON_PENCIL}\n                    </button>\n                  )}\n                </td>\n                {/* Cast to string for edge.target where target is undefined */}\n                <td hidden={!DBG}>{String(edge.source)}</td>\n                <td>\n                  {!disableEdit ? (\n                    <a\n                      href=\"#\"\n                      onClick={e => this.selectNode(edge.source, e)}\n                      onMouseOver={() => this.onHighlightNode(edge.source)}\n                    >\n                      {edge.sourceLabel}\n                    </a>\n                  ) : (\n                    edge.sourceLabel\n                  )}\n                </td>\n                {hasTypeField && <td hidden={edgeDefs.type.hidden}>{edge.type}</td>}\n                {/* Cast to string for edge.target where target is undefined */}\n                <td hidden={!DBG}>{String(edge.target)}</td>\n                <td>\n                  {!disableEdit ? (\n                    <a\n                      href=\"#\"\n                      onClick={e => this.selectNode(edge.target, e)}\n                      onMouseOver={() => this.onHighlightNode(edge.target)}\n                    >\n                      {edge.targetLabel}\n                    </a>\n                  ) : (\n                    edge.targetLabel\n                  )}\n                </td>\n                {attributes.map(a => (\n                  <td hidden={edgeDefs[a].hidden} key={`${edge.id}${a}`}>\n                    {edgeDefs[a].type === 'markdown'\n                      ? NCUI.Markdownify(edge[a])\n                      : edgeDefs[a].type === 'hdate'\n                      ? (edge[a] && edge[a].formattedDateString) || ''\n                      : edge[a]}\n                  </td>\n                ))}\n                <td>\n                  <URCommentBtn\n                    cref={CMTMGR.GetEdgeCREF(edge.id)}\n                    uuiid={'edgetable'}\n                  />\n                </td>\n                {/*\n                <td hidden={!isAdmin} style={{ fontSize: '9px' }}>\n                  {this.displayUpdated(edge)}\n                </td>\n                <td\n                  hidden={edgeDefs.comments.hidden}\n                  style={{ backgroundColor: '#ffff6633' }}\n                >\n                  {edge.comments}\n                </td>\n                */}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n} // class EdgeTable\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = EdgeTable;\n","/* eslint-disable react/no-unescaped-entities */\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n    Help displays a hideable generic help screen.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { Button, Table } = ReactStrap;\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar DBG = false;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UDATA = null;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass Help extends UNISYS.Component {\n  render() {\n    return (\n      <div\n        style={{ backgroundColor: 'rgba(240,240,240,0.95)', padding: '10px 20px' }}\n      >\n        <h1>Why Net.Create</h1>\n        <p>\n          In Net.Create, users can simultaneously do data entry on nodes and the edges\n          between them.\n        </p>\n        <h1>Navigation</h1>\n        <ul>\n          <li>Recenter the graph -- press the * button</li>\n          <li>\n            Zoom --\n            <ul>\n              <li>on screen -- use the +/- buttons</li>\n              <li>mouse -- use mousewheel</li>\n              <li>trackpad -- two fingers up/down</li>\n              <li>tablet -- two fingers pinch</li>\n            </ul>\n          </li>\n          <li>Pan -- drag empty space</li>\n        </ul>\n        <h1>Nodes</h1>\n        <ul>\n          <li>\n            Select -- Click on a node, or start typing the node label in the Label\n            field and select a node from the suggestions.'\n          </li>\n        </ul>\n        <h1>Edges</h1>\n        <ul>\n          <li>\n            Create -- To create an edge, first select the source node, then click \"Add\n            New Edge\".\n          </li>\n          <li>\n            Select -- To select an edge, select either of the nodes it is attached to.\n          </li>\n          <li>\n            Editing -- To change the source or target of an existing edge, delete it\n            and create a new one.\n          </li>\n          <li>\n            View Full List -- Click on \"Show Edge Table\" to view a table of all the\n            edges. Click on a column header to sort the table by that parameter.\n          </li>\n        </ul>\n        <h1>About Net.Create</h1>\n        <p>\n          Net.Create is funded through the{' '}\n          <a\n            href=\"https://www.nsf.gov/pubs/policydocs/pappguide/nsf09_1/gpg_2.jsp#IID2\"\n            target=\"NSF\"\n          >\n            EAGER program\n          </a>{' '}\n          at{' '}\n          <a href=\"https://www.nsf.gov/\" target=\"NSF\">\n            NSF\n          </a>{' '}\n          under award #\n          <a\n            href=\"https://www.nsf.gov/awardsearch/showAward?AWD_ID=1848655\"\n            target=\"NSF\"\n          >\n            1848655\n          </a>\n          .{' '}\n          <a href=\"http://www.kalanicraig.com\" target=\"Craig\">\n            Kalani Craig\n          </a>{' '}\n          is the PI, with Co-PIs{' '}\n          <a href=\"http://www.joshuadanish.com\" target=\"Danish\">\n            Joshua Danish\n          </a>{' '}\n          and{' '}\n          <a\n            href=\"https://education.indiana.edu/about/directory/profiles/hmelo-silver-cindy.html\"\n            target=\"Hmelo-Silver\"\n          >\n            Cindy Hmelo-Silver\n          </a>\n          . Software development provided by{' '}\n          <a href=\"http://inquirium.net\" target=\"Inquirium\">\n            Inquirium\n          </a>\n          . For more information, see{' '}\n          <a href=\"http://netcreate.org\" target=\"NetCreateOrg\">\n            Net.Create.org\n          </a>\n        </p>\n      </div>\n    );\n  }\n} // class Help\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = Help;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n  Provides tools to import and export node/edge data files.\n\n  This also provides a \"Force Unlock All\" button that can be used by Admins\n  to unlock all edit locks requested by node editors, edge editors, template\n  editors, and importers on the network.\n\n  This displays a subpanel on the \"More...\" tab.\n\n  `importexport-mgr.js` (IMPORTEXPORT) handles all of the business logic for\n  importing and exporting.  See that file for details.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { Button, Table } = ReactStrap;\nconst SETTINGS = require('settings');\nconst NetMessage = require('unisys/common-netmessage-class');\n\nconst UNISYS = require('unisys/client');\nconst DATASTORE = require('system/datastore');\nconst { EDITORTYPE } = require('system/util/enum');\n\nconst IMPORTEXPORT = require('../importexport-mgr');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'ImportExport';\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst NODEFILESTATUS_DEFAULT = 'Select a node .csv file to import';\nconst EDGEFILESTATUS_DEFAULT = 'Select an edge .csv file to import';\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UDATA = null;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass ImportExport extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n    const TEMPLATE = this.AppState('TEMPLATE');\n    this.state = {\n      isExpanded: true,\n      preventImport: false, // an external source has disabled import for us\n      importIsActive: false, // internal source: keeps track of whether THIS panel has valid import files selected\n      nodefile: undefined,\n      nodefileStatus: NODEFILESTATUS_DEFAULT,\n      nodeValidationMsgs: undefined,\n      nodeOkToImport: false,\n      edgefile: undefined,\n      edgefileStatus: EDGEFILESTATUS_DEFAULT,\n      edgeValidationMsgs: undefined,\n      edgeOkToImport: false,\n      okToImport: false,\n      importMsgs: undefined,\n      allowLoggedInUserToImport: TEMPLATE.allowLoggedInUserToImport\n    };\n    this.checkUnload = this.checkUnload.bind(this);\n    this.doUnload = this.doUnload.bind(this);\n    this.handleEditStateUpdate = this.handleEditStateUpdate.bind(this);\n    this.updateEditState = this.updateEditState.bind(this);\n    this.onNodesExportSelect = this.onNodesExportSelect.bind(this);\n    this.onEdgesExportSelect = this.onEdgesExportSelect.bind(this);\n    this.onNodeImportFileSelect = this.onNodeImportFileSelect.bind(this);\n    this.onEdgeImportFileSelect = this.onEdgeImportFileSelect.bind(this);\n    this.clearNodefileSelect = this.clearNodefileSelect.bind(this);\n    this.clearEdgefileSelect = this.clearEdgefileSelect.bind(this);\n    this.clearFileSelect = this.clearFileSelect.bind(this);\n    this.onDoImport = this.onDoImport.bind(this);\n    this.unlockAll = this.unlockAll.bind(this);\n\n    UDATA = UNISYS.NewDataLink(this);\n    UDATA.HandleMessage('EDIT_PERMISSIONS_UPDATE', this.handleEditStateUpdate);\n  } // constructor\n\n  componentDidMount() {\n    this.updateEditState();\n    window.addEventListener('beforeunload', this.checkUnload);\n    window.addEventListener('unload', this.doUnload);\n  }\n\n  componentWillUnmount() {\n    UDATA.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.IMPORTER });\n    UDATA.UnhandleMessage('EDIT_PERMISSIONS_UPDATE', this.handleEditStateUpdate);\n    window.removeEventListener('beforeunload', this.checkUnload);\n    window.removeEventListener('unload', this.doUnload);\n  }\n\n  checkUnload(e) {\n    e.preventDefault();\n    if (this.state.importIsActive) {\n      (e || window.event).returnValue = null;\n    } else {\n      Reflect.deleteProperty(e, 'returnValue');\n    }\n    return e;\n  }\n\n  doUnload(e) {\n    if (this.state.importIsActive) {\n      this.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.IMPORTER });\n    }\n  }\n\n  /// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  handleEditStateUpdate(data) {\n    const { importIsActive } = this.state;\n    if (!importIsActive) {\n      const preventImport =\n        data.templateBeingEdited ||\n        data.importActive ||\n        data.nodeOrEdgeBeingEdited ||\n        UNISYS.IsStandaloneMode();\n      this.setState({ preventImport });\n    }\n  }\n  updateEditState() {\n    // disable edit if someone else is editing a template, node, or edge\n    UDATA.NetCall('SRV_GET_EDIT_STATUS').then(this.handleEditStateUpdate);\n    DATASTORE.PromiseCalculateMaxNodeId().then(data => {\n      this.setState({ nextNodeId: data + 1 });\n    });\n    DATASTORE.PromiseCalculateMaxEdgeId().then(data => {\n      this.setState({ nextEdgeId: data + 1 });\n    });\n  }\n\n  onNodesExportSelect() {\n    IMPORTEXPORT.ExportNodes();\n  }\n  onEdgesExportSelect() {\n    IMPORTEXPORT.ExportEdges();\n  }\n\n  onNodeImportFileSelect(e) {\n    const nodefile = e.target.files[0];\n    IMPORTEXPORT.NodefileValidate({ nodefile }).then(result => {\n      const msg = (\n        <div>\n          <div>{result.messageTitle}</div>\n          {result.messageJsx}\n        </div>\n      );\n      // if edge file was already okToImport, then this remains OK.\n      const okToImport = this.state.edgeOkToImport || result.isValid;\n      this.setState({\n        nodeOkToImport: result.isValid,\n        okToImport,\n        nodefileStatus: result.isValid ? 'Ready to Import' : NODEFILESTATUS_DEFAULT,\n        nodeValidationMsgs: msg,\n        importMsgs: undefined\n      });\n      // Clear \"Choose File\"\n      if (!result.isValid) document.getElementById('nodefileInput').value = '';\n    });\n  }\n  onEdgeImportFileSelect(e) {\n    const edgefile = e.target.files[0];\n    IMPORTEXPORT.EdgefileValidate({ edgefile }).then(result => {\n      const msg = (\n        <div>\n          <div>{result.messageTitle}</div>\n          {result.messageJsx}\n        </div>\n      );\n      // if edge file was already okToImport, then this remains OK.\n      const okToImport = this.state.nodeOkToImport || result.isValid;\n      this.setState({\n        edgeOkToImport: result.isValid,\n        okToImport,\n        edgefileStatus: result.isValid ? 'Ready to Import' : EDGEFILESTATUS_DEFAULT,\n        edgeValidationMsgs: msg,\n        importMsgs: undefined\n      });\n      // Clear \"Choose File\"\n      if (!result.isValid) document.getElementById('edgefileInput').value = '';\n    });\n  }\n\n  clearNodefileSelect() {\n    // User Cancelled, reset to default\n    // If edge import is active, then import remains active\n    const importIsActive = this.state.importIsActive || false;\n    this.setState({\n      importIsActive,\n      nodefile: undefined,\n      nodefileStatus: NODEFILESTATUS_DEFAULT,\n      nodeValidationMsgs: undefined\n    });\n    // Clear validated data so it doesn't get imported\n    if (!importIsActive)\n      UDATA.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.IMPORTER });\n    IMPORTEXPORT.ResetNodeImportData();\n  }\n\n  clearEdgefileSelect() {\n    // User Cancelled, reset to default\n    // If node import is active, then import remains active\n    const importIsActive = this.state.importIsActive || false;\n    this.setState({\n      importIsActive,\n      edgefile: undefined,\n      edgefileStatus: EDGEFILESTATUS_DEFAULT,\n      edgeValidationMsgs: undefined\n    });\n    // Clear validated data so it doesn't get imported\n    if (!importIsActive)\n      UDATA.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.IMPORTER });\n    IMPORTEXPORT.ResetEdgeImportData();\n  }\n\n  clearFileSelect() {\n    // User Cancelled, reset to default\n    UDATA.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.IMPORTER });\n    document.getElementById('nodefileInput').value = '';\n    document.getElementById('edgefileInput').value = '';\n    this.clearNodefileSelect();\n    this.clearEdgefileSelect();\n\n    IMPORTEXPORT.ResetImportData();\n    this.setState({\n      nodeValidationMsgs: undefined,\n      edgeValidationMsgs: undefined,\n      importMsgs: undefined\n    });\n  }\n\n  onDoImport() {\n    if (DBG) console.log(PR, 'onDoImport');\n    IMPORTEXPORT.Import().then(result => {\n      this.setState({\n        okToImport: false, // imported, so hide \"Import\" button\n        nodeOkToImport: false,\n        edgeOkToImport: false,\n        importMsgs: result.messageJsx\n      });\n      document.getElementById('nodefileInput').value = '';\n      document.getElementById('edgefileInput').value = '';\n    });\n  }\n\n  unlockAll() {\n    UDATA.NetCall('SRV_DBUNLOCKALL');\n  }\n\n  /// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  render() {\n    const {\n      preventImport,\n      importIsActive,\n      nodefile,\n      nodefileStatus,\n      edgefile,\n      edgefileStatus,\n      importMsgs,\n      allowLoggedInUserToImport,\n      nextNodeId,\n      nextEdgeId,\n      nodeValidationMsgs,\n      edgeValidationMsgs,\n      okToImport\n    } = this.state;\n\n    // Set Import Permissions\n    // -- Admins can always import\n    // -- If allowLoggedInUserToImport, logged in users can also import\n    const ISADMIN = SETTINGS.IsAdmin();\n    const isLoggedIn = NetMessage.GlobalGroupID();\n    const importDisabled = !(ISADMIN || (allowLoggedInUserToImport && isLoggedIn));\n\n    const importBtnDisabled = !okToImport;\n\n    let importjsx;\n    if (preventImport && !importIsActive) {\n      importjsx = (\n        <div\n          style={{\n            backgroundColor: 'rgba(240,240,240,0.95)',\n            marginTop: '10px',\n            padding: '10px 20px'\n          }}\n        >\n          <p>\n            <i>\n              You cannot import data while someone is editing a node, edge, or\n              template, or in standalone view.\n            </i>\n          </p>\n          <p>\n            <i>Please finish editing and try again.</i>\n          </p>\n        </div>\n      );\n    } else {\n      importjsx = (\n        <div\n          hidden={importDisabled}\n          style={{\n            backgroundColor: 'rgba(240,240,240,0.95)',\n            marginTop: '10px',\n            padding: '10px 20px'\n          }}\n        >\n          <h1>Import Data</h1>\n          <div className=\"small text-muted\">\n            <i>Import .csv data</i>\n          </div>\n          <div className=\"small text-muted\">\n            To specify node and edge IDs in your import file, use the next unused ID:\n            <ul>\n              <li>Next unused NODE ID: {nextNodeId}</li>\n              <li>Next unused EDGE ID: {nextEdgeId}</li>\n            </ul>\n          </div>\n          <label className=\"small text-muted\">\n            Nodes:&nbsp;\n            <input\n              type=\"file\"\n              accept=\"text/csv\"\n              id=\"nodefileInput\"\n              onInput={this.onNodeImportFileSelect}\n              onClick={e => {\n                // Clear the selected node file whenever \"Choose File\" is clicked so that if the user\n                // cancels, the form is reset to a blank state.  This is necessary to clear out\n                // validation errors after selecting a bad node file.\n                this.clearNodefileSelect();\n              }}\n            />\n            &nbsp;<i className=\"small\">{nodefileStatus}</i>\n            <br />\n          </label>\n          <br />\n          <label className=\"small text-muted\">\n            Edges:&nbsp;\n            <input\n              type=\"file\"\n              accept=\"text/csv\"\n              id=\"edgefileInput\"\n              onInput={this.onEdgeImportFileSelect}\n              onClick={e => {\n                // Clear the selected edge file whenever \"Choose File\" is clicked so that if the user\n                // cancels, the form is reset to a blank state.  This is necessary to clear out\n                // validation errors after selecting a bad edge file.\n                this.clearEdgefileSelect();\n              }}\n            />\n            &nbsp;<i className=\"small\">{edgefileStatus}</i>\n            <br />\n          </label>\n          <br />\n          <label>\n            <Button\n              style={{ fontSize: '0.8em', padding: '0px 2px' }}\n              outline\n              onClick={this.clearFileSelect}\n            >\n              Clear File Selections\n            </Button>\n          </label>\n          <br />\n          {nodeValidationMsgs && <div className=\"small\">{nodeValidationMsgs}</div>}\n          {edgeValidationMsgs && <div className=\"small\">{edgeValidationMsgs}</div>}\n          {importMsgs && <div className=\"small\">{importMsgs}</div>}\n          <Button\n            size=\"sm\"\n            outline\n            color={importBtnDisabled ? 'light' : 'primary'}\n            disabled={importBtnDisabled}\n            onClick={this.onDoImport}\n          >\n            Import\n          </Button>\n          &nbsp;\n        </div>\n      );\n    }\n\n    let unlockAlljsx;\n    if (ISADMIN) {\n      unlockAlljsx = (\n        <div>\n          <hr />\n          <h1>Admin Tools</h1>\n          <Button size=\"sm\" outline color={'warning'} onClick={this.unlockAll}>\n            Force Unlock All\n          </Button>\n          <label className=\"small text-muted\">\n            Unlock ALL Template, Import, Node, and Edge Editing.\n            <br />\n            When someone on the network is editing a template, importing data, or\n            editing a node or edge, everyone else on the network is prevented from\n            editing a template or importing data and editing nodes and edges.\n            <br />\n            ADMINS: Use this force the server to release the lock on editing if you\n            know the lock was left on in error, e.g. you know that there is no one on\n            the network actively editing a template, importing, editing a node or an\n            edge.\n            <p>\n              <b>WARNING</b>: Use this with utmost caution! If someone is actively\n              editing or importing, you can delete their work, or even worse,{' '}\n              <b>corrupt the database!</b>\n            </p>\n          </label>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div\n          style={{\n            backgroundColor: 'rgba(240,240,240,0.95)',\n            padding: '10px 20px'\n          }}\n        >\n          <h1>Export Data</h1>\n          <i className=\"small text-muted\">Export data in .csv format.</i>\n          <br />\n          <Button size=\"sm\" outline onClick={this.onNodesExportSelect}>\n            Export Nodes\n          </Button>\n          &nbsp;\n          <Button size=\"sm\" outline onClick={this.onEdgesExportSelect}>\n            Export Edges\n          </Button>\n          &nbsp;\n        </div>\n\n        {importjsx}\n        {unlockAlljsx}\n      </div>\n    );\n  }\n} // class Help\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = ImportExport;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n  InfoPanel shows a tab panel for selecting:\n  * hiding (showing the Graph)\n  * Filters\n  * Nodes Table\n  * Edges Table\n  * More -- Export/Import, Vocabulary, Help\n\n  The panel itself can be resized vertically.\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst UNISYS = require('unisys/client');\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col, Button } = ReactStrap;\nconst classnames = require('classnames');\nconst NCNodeTable = require('./NCNodeTable');\nconst NCEdgeTable = require('./NCEdgeTable');\nconst More = require('./More');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar DBG = false;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UDATA = null;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst TABS = {\n  GRAPH: 'Graph',\n  NODESTABLE: 'Nodes Table',\n  EDGESTABLE: 'Edges Table',\n  MORE: 'Help'\n};\nconst defaultTabPanelHeight = 42; // show only tab buttons, no gap\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass InfoPanel extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: TABS.GRAPH,\n      tabpanelTop: '0',\n      draggerMouseOffsetY: '0', // Mouse click position inside dragger\n      // Allows user to grab dragger from the middle\n      tabpanelHeight: `${defaultTabPanelHeight}px`,\n      tableHeight: '308px', // 350 - defaultTabPanelHeight\n      savedTabpanelHeight: '350px',\n      draggerTop: 'inherit',\n      hideDragger: true,\n      filtersSummary: ''\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.endDrag = this.endDrag.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n    this.UpdateFilterSummary = this.UpdateFilterSummary.bind(this);\n    this.OnClearBtnClick = this.OnClearBtnClick.bind(this);\n    this.CloseMore = this.CloseMore.bind(this);\n\n    UDATA = UNISYS.NewDataLink(this);\n    UDATA.HandleMessage('FILTER_SUMMARY_UPDATE', this.UpdateFilterSummary);\n    UDATA.HandleMessage('UI_CLOSE_MORE', this.CloseMore);\n  } // constructor\n\n  /// GOOGLE ANALYTICS EVENT LOGGING ////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** legacy google analytics event logging method inserted by Joshua. This\n   *  method of google analytics that may no longer work in 2023 because the\n   *  \"universal analytics\" api has been deprecated for GA4. See the code\n   *  inserted into index.ejs to see how the googlea property was injected\n   *  through the use of the nc.js CLI configurator */\n  sendGA(actionType, url) {\n    if (window.ga === undefined) return;\n    if (window.NC_CONFIG && window.NC_CONFIG.googlea) {\n      const googlea = window.NC_CONFIG.googlea;\n      if (googlea != '0') {\n        window.ga('send', {\n          hitType: 'event',\n          eventCategory: 'Tab',\n          eventAction: actionType,\n          eventLabel: '' + url\n        });\n      }\n    }\n  }\n\n  /// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  toggle(tab) {\n    window.event.stopPropagation();\n    let activeTab;\n    if (this.state.activeTab !== tab) {\n      activeTab = tab;\n      if (tab === TABS.GRAPH || tab === TABS.MORE) {\n        // graph or help\n        this.setState({\n          activeTab,\n          tabpanelHeight: `${defaultTabPanelHeight}px`, // show only tab buttons\n          hideDragger: true\n        });\n      } else {\n        this.setState({\n          activeTab,\n          tabpanelHeight: this.state.savedTabpanelHeight,\n          hideDragger: false\n        });\n      }\n      UNISYS.Log(`select tab ${tab}`);\n    } else {\n      // Second click on currently open tab\n      // so select tab 1\n      activeTab = TABS.GRAPH;\n      this.setState({\n        activeTab,\n        tabpanelHeight: `${defaultTabPanelHeight}px`, // show only tab buttons\n        hideDragger: true\n      });\n      UNISYS.Log(`deselect tab ${tab}, reverting to ${TABS.GRAPH}`);\n    }\n    this.sendGA(tab, window.location);\n  }\n\n  handleMouseDown(e) {\n    e.stopPropagation();\n\n    let dragger = e.target;\n    this.setState({ draggerMouseOffsetY: dragger.offsetTop - e.clientY });\n\n    document.onmouseup = this.endDrag;\n    document.onmousemove = this.handleDrag;\n  }\n  handleDrag(e) {\n    e.stopPropagation();\n    // limit to 122 to keep from dragging up past the tabpanel\n    // 122 = navbar + tabpanel height\n    let top = Math.max(\n      122,\n      e.clientY + this.state.draggerMouseOffsetY + defaultTabPanelHeight\n    );\n    this.setState({\n      tabpanelHeight: top - this.state.tabpanelTop - 40 + 'px',\n      tableHeight: top - this.state.tabpanelTop - 40 - defaultTabPanelHeight + 'px',\n      savedTabpanelHeight: top - this.state.tabpanelTop - 40 + 'px' // remember height when switching tabs\n    });\n  }\n  endDrag() {\n    document.onmouseup = null;\n    document.onmousemove = null;\n  }\n\n  UpdateFilterSummary(data) {\n    this.setState({ filtersSummary: data.filtersSummary });\n  }\n\n  OnClearBtnClick() {\n    UDATA.LocalCall('FILTER_CLEAR');\n  }\n\n  CloseMore() {\n    this.toggle('1');\n  }\n\n  /// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ This is not yet implemented as of React 16.2.  It's implemented in 16.3.\n      getDerivedStateFromProps (props, state) {\n        console.error('getDerivedStateFromProps!!!');\n      }\n  /*/\n  /** This this fires after render().\n   */\n  componentDidMount() {\n    let tabpanel = document.getElementById('tabpanel');\n    this.setState({\n      tabpanelTop: tabpanel.offsetTop\n    });\n  }\n\n  componentWillUnmount() {\n    UDATA.UnhandleMessage('FILTER_SUMMARY_UPDATE', this.UpdateFilterSummary);\n    UDATA.UnhandleMessage('UI_CLOSE_MORE', this.CloseMore);\n  }\n\n  shouldComponentUpdate(props) {\n    return true;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  render() {\n    const {\n      activeTab,\n      tabpanelHeight,\n      tableHeight,\n      hideDragger,\n      draggerTop,\n      filtersSummary\n    } = this.state;\n    //send flag in with tableheight\n    return (\n      <div className=\"--InfoPanel\">\n        <div\n          id=\"tabpanel\"\n          style={{\n            height: tabpanelHeight,\n            overflow: 'hidden',\n            backgroundColor: '#eee'\n          }}\n        >\n          <Nav tabs className=\"\">\n            <NavItem>\n              <NavLink\n                className={classnames({ active: activeTab === TABS.GRAPH })}\n                onClick={() => this.toggle(TABS.GRAPH)}\n              >\n                Graph\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: activeTab === TABS.NODESTABLE })}\n                onClick={() => this.toggle(TABS.NODESTABLE)}\n              >\n                Nodes Table\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: activeTab === TABS.EDGESTABLE })}\n                onClick={() => this.toggle(TABS.EDGESTABLE)}\n              >\n                Edges Table\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: activeTab === TABS.MORE })}\n                onClick={() => this.toggle(TABS.MORE)}\n              >\n                More...\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <TabContent\n            activeTab={activeTab}\n            style={{\n              height: '100%',\n              overflow: 'hidden',\n              backgroundColor: 'rgba(0,0,0,0.1)'\n            }}\n          >\n            <TabPane tabId={TABS.GRAPH}></TabPane>\n            <TabPane tabId={TABS.NODESTABLE}>\n              <Row>\n                <Col sm=\"12\">\n                  <NCNodeTable\n                    tableHeight={tableHeight}\n                    isOpen={activeTab === TABS.NODESTABLE}\n                  />\n                </Col>\n              </Row>\n            </TabPane>\n            <TabPane tabId={TABS.EDGESTABLE}>\n              <Row>\n                <Col sm=\"12\">\n                  <NCEdgeTable\n                    tableHeight={tableHeight}\n                    isOpen={activeTab === TABS.EDGESTABLE}\n                  />\n                </Col>\n              </Row>\n            </TabPane>\n            <TabPane tabId={TABS.MORE}>\n              <More />\n            </TabPane>\n          </TabContent>\n        </div>\n\n        <div\n          id=\"dragger\"\n          hidden={hideDragger}\n          style={{\n            position: 'relative',\n            top: '0px',\n            left: '0px',\n            right: '0px',\n            height: '10px',\n            backgroundColor: 'gray',\n            cursor: 'ns-resize'\n          }}\n          onMouseDown={this.handleMouseDown}\n        ></div>\n\n        <div\n          hidden={!hideDragger || filtersSummary === ''}\n          style={{\n            padding: '3px 5px',\n            fontSize: '0.8em',\n            textAlign: 'right',\n            color: '#fff',\n            backgroundColor: '#3339'\n          }}\n        >\n          {filtersSummary}&nbsp;\n          <Button\n            size=\"sm\"\n            outline\n            onClick={this.OnClearBtnClick}\n            style={{\n              color: '#eee',\n              borderColor: '#ddd',\n              fontSize: '0.8em',\n              padding: '0.1rem 0.2rem'\n            }}\n          >\n            Clear Filters\n          </Button>\n        </div>\n      </div>\n    );\n  }\n} // class InfoPanel\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = InfoPanel;\n","/*///////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Optimized Markdwon React Component\n\n  This is based on Joshua's implementation of Markdown React in NodeTable\n  and EdgeTable.\n\n  Wraps the MDReactComponent and only updates when the text changes.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * /////////////////////////////////////*/\n\nconst MDReactComponent = require('markdown-react-js');\nconst mdEmoji = require('markdown-it-emoji');\nconst React = require('react');\nconst UNISYS = require('unisys/client');\n\n/// COMPONENT DECLARATION /////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass MarkdownNote extends UNISYS.Component {\n  constructor() {\n    super();\n    this.markdownIterate = this.markdownIterate.bind(this);\n  }\n\n  markdownIterate(Tag, props, children) {\n    if (Tag === 'a') {\n      props.target = '_blank';\n    }\n    return <Tag {...props}>{children}</Tag>;\n  }\n\n  shouldComponentUpdate(np, ns) {\n    let bReturn = true;\n    if (this.text === np.text) bReturn = false;\n    else this.text = np.text;\n    return bReturn;\n  }\n\n  render() {\n    const { text } = this.props;\n    return (\n      <MDReactComponent\n        text={text}\n        onIterate={this.markdownIterate}\n        markdownOptions={{ typographer: true, linkify: true }}\n        plugins={[mdEmoji]}\n      />\n    );\n  }\n}\n\n/// EXPORTS ///////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MarkdownNote;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n  \"More\" displays:\n  * Export/Import\n  * Help\n  * Vocabulary\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col, Button } = ReactStrap;\nconst classnames = require('classnames');\nconst SETTINGS = require('settings');\nconst Help = require('./Help');\nconst Vocabulary = require('./Vocabulary');\nconst ImportExport = require('./ImportExport');\nconst Template = require('./Template');\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar DBG = false;\nvar UDATA = null;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass More extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: true,\n      activeTab: '1'\n    };\n    this.toggleTab = this.toggleTab.bind(this);\n\n    UDATA = UNISYS.NewDataLink(this);\n  } // constructor\n\n  /// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  toggleTab(tab) {\n    window.event.stopPropagation();\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab });\n    }\n  }\n\n  /// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ This is not yet implemented as of React 16.2.  It's implemented in 16.3.\n    getDerivedStateFromProps (props, state) {\n      console.error('getDerivedStateFromProps!!!');\n    }\n/*/\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  render() {\n    const { activeTab } = this.state;\n    const ISADMIN = SETTINGS.IsAdmin();\n    return (\n      <div\n        className=\"help\"\n        style={{\n          position: 'fixed',\n          right: '10px',\n          width: '50%',\n          height: '90%',\n          overflow: 'hidden',\n          zIndex: '3000',\n          padding: '10px',\n          backgroundColor: '#fff', // match tab\n          border: '1px solid #999',\n          borderTop: 'none'\n        }}\n      >\n        <div\n          style={{\n            height: '100%',\n            overflow: 'hidden',\n            padding: '10px'\n          }}\n        >\n          <div id=\"tabpanel\">\n            <Nav tabs>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: activeTab === '1' })}\n                  onClick={() => {\n                    this.toggleTab('1');\n                  }}\n                >\n                  Help\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: activeTab === '2' })}\n                  onClick={() => {\n                    this.toggleTab('2');\n                  }}\n                >\n                  Vocabulary\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: activeTab === '3' })}\n                  onClick={() => {\n                    this.toggleTab('3');\n                  }}\n                >\n                  Import / Export\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  hidden={!ISADMIN}\n                  className={classnames({ active: activeTab === '4' })}\n                  onClick={() => {\n                    this.toggleTab('4');\n                  }}\n                >\n                  Edit Template\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </div>\n          <TabContent\n            activeTab={activeTab}\n            style={{\n              height: '100%',\n              overflow: 'scroll'\n            }}\n          >\n            <TabPane tabId=\"1\">{activeTab === '1' && <Help />}</TabPane>\n            <TabPane tabId=\"2\">{activeTab === '2' && <Vocabulary />}</TabPane>\n            <TabPane tabId=\"3\">{activeTab === '3' && <ImportExport />}</TabPane>\n            <TabPane tabId=\"4\">{activeTab === '4' && <Template />}</TabPane>\n          </TabContent>\n        </div>\n      </div>\n    );\n  }\n} // class Help\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = More;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Custom Auto Suggest for NetCreate\n\n  USE:\n\n    <NCAutoSuggest\n      parentKey={key}\n      value={value}\n      onChange={this.handleInputUpdate}\n      onSelect={this.handleSelection}\n    />\n\n  PROPS\n\n    onChange(key, value) -- returns `key` and `value` for the input field\n\n    onSelect(parentKey, value, id)\n        -- returns `state` and `value` for the final submission as well as the\n           matching id.  `value` is then passed back to NCAutoSuggest as the\n           search field input value.\n\n  This will look up matching nodes via FIND_MATCHING_NODES nc-logic request.\n\n  This is a simple HTML component that will allow users to enter arbitrary\n  text input.  Any partial node labels will display as a list of popup\n  menu options.\n\n  It can be used in a NCSearch or NCEdge\n  (NOTE NCNode does not not use NCAutoSuggest, but displays a matchlist using\n  a mechanism similar to NCAutoSuggest -- the key difference is that NCNode's\n  matchlist is simply a static display list to let you know which nodes match\n  the current input field, and does NOT support selecting a match.)\n\n  `parentKey` provides a unique key to determine whether this NCAutoSuggest\n  component is being used for a `search`, a `source`, or a `target` selection\n\n  Replaces the deprecated AutoComplete and AutoSuggest components.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst UNISYS = require('unisys/client');\nconst { EDGE_NOT_SET_LABEL } = require('system/util/constant');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'NCAutoSuggest';\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet UDATA;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass NCAutoSuggest extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      matches: [], // {id, label}\n      higlightedLine: -1,\n      isValidNode: true,\n      uShowMatchlist: false\n    };\n\n    this.m_UIInputFocus = this.m_UIInputFocus.bind(this);\n    this.m_UIInputClick = this.m_UIInputClick.bind(this);\n    this.m_UIUpdate = this.m_UIUpdate.bind(this);\n    this.m_UISelectByLabel = this.m_UISelectByLabel.bind(this);\n    this.m_UISelectById = this.m_UISelectById.bind(this);\n    this.m_UIKeyDown = this.m_UIKeyDown.bind(this);\n    this.m_UIMouseHighlightLine = this.m_UIMouseHighlightLine.bind(this);\n    this.m_UIMouseUnhighlightLine = this.m_UIMouseUnhighlightLine.bind(this);\n    this.m_UIHighlightLine = this.m_UIHighlightLine.bind(this);\n    this.m_UIClickOutside = this.m_UIClickOutside.bind(this);\n\n    document.addEventListener('click', this.m_UIClickOutside);\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.m_UIClickOutside);\n  }\n\n  /**\n   * User has clicked inside the input field to set selection point\n   * This is needed to restore the selection point after a blur\n   * `focus` fires before `click`\n   */\n  m_UIInputFocus(event) {\n    event.target.select();\n    this.m_UIUpdate(event);\n  }\n\n  /**\n   * User has clicked in the input field, so update and show the matchlist\n   * and catch the event to prevent the document click handler from firing other actions\n   */\n  m_UIInputClick(event) {\n    event.preventDefault(); // this prevents the document click handler from closing the matchlist\n    event.stopPropagation();\n    this.setState({ uShowMatchlist: true });\n  }\n\n  /**\n   * User has typed in the input field, or the field is getting focus again.\n   * This processes the form data before passing it on to the parent handler.\n   * The callback function is generally an input state update method in\n   * NCNode or NCEdge\n   * @param {Object} event\n   */\n  m_UIUpdate(event) {\n    const { onChange } = this.props;\n    const key = event.target.id;\n    const value = event.target.value;\n    // save the selection cursor position\n    const selstart = event.target.selectionStart;\n    const inputEl = event.target;\n\n    let isValidNode = false;\n    UDATA.LocalCall('FIND_MATCHING_NODES', { searchString: value }).then(data => {\n      const matches =\n        data.nodes && data.nodes.length > 0\n          ? data.nodes.map(d => {\n              if (d.label === value) isValidNode = true;\n              return { id: d.id, label: d.label };\n            })\n          : undefined;\n      this.setState({ matches, isValidNode, uShowMatchlist: true });\n      if (typeof onChange === 'function')\n        onChange(key, value, () => {\n          // restore  selection cursor position\n          inputEl.selectionStart = selstart;\n          inputEl.selectionEnd = selstart;\n        });\n    });\n  }\n  /**\n   * User has clicked an item in the matchlist,\n   * or selected an item by typing ENTER\n   * selecting one of the autosuggest items\n   * @param {Object} event\n   * @param {string} parentKey Either `search`, `source` or `target`\n   * @param {string} value The autosuggest input value\n   */\n  m_UISelectByLabel(event, parentKey, value) {\n    event.preventDefault(); // catch click to close matchlist\n    event.stopPropagation();\n    const { onSelect } = this.props;\n    const { matches } = this.state;\n    const matchedNodeViaID = matches ? matches.find(n => n.id === value) : undefined;\n    this.setState({\n      isValidNode: matchedNodeViaID,\n      matches: [],\n      higlightedLine: -1,\n      uShowMatchlist: false\n    }); // clear matches\n    if (typeof onSelect === 'function') {\n      onSelect(\n        parentKey,\n        value,\n        matchedNodeViaID ? matchedNodeViaID.id : undefined // ...or id, not both\n      ); // callback function NCEdge.uiSourceTargetInputUpdate\n    }\n  }\n\n  m_UISelectById(event, parentKey, id) {\n    event.preventDefault(); // catch click to close matchlist\n    event.stopPropagation();\n    const { onSelect, value } = this.props;\n    const { matches } = this.state;\n    const matchedNodeViaID = matches ? matches.find(n => n.id === id) : undefined;\n    this.setState({\n      isValidNode: matchedNodeViaID,\n      matches: [],\n      higlightedLine: -1,\n      uShowMatchlist: false\n    }); // clear matches\n    if (typeof onSelect === 'function') {\n      onSelect(\n        parentKey,\n        value, // show the current input field value\n        matchedNodeViaID ? matchedNodeViaID.id : undefined // ...or `id`, not both\n      ); // callback function NCEdge.uiSourceTargetInputUpdate\n    }\n  }\n\n  /**\n   * Handle key strokes\n   * --  Typing UP/DOWN arrow will select the higlight\n   * --  Typing ESC will cancel the autosuggest, also hitting Tab will prevent selecting the next field\n   * --  Typing ENTER will select the item\n   * @param {Object} event\n   */\n  m_UIKeyDown(event) {\n    const { matches, higlightedLine } = this.state;\n    const { parentKey, value, onSelect } = this.props;\n    const keystroke = event.key;\n    const lastLine = matches ? matches.length : -1;\n    let newHighlightedLine = higlightedLine;\n    if (keystroke === 'Enter') {\n      if (higlightedLine > -1 && matches) {\n        // make sure matches exists, b/c hitting Enter with a typo can end up with bad match\n        // there is highlight, so select that using the id in the matchlist\n        const id = matches[higlightedLine].id;\n        this.m_UISelectById(event, parentKey, id); // user selects current highlight\n      } else if (value !== '') {\n        // Create a new node -- see also NCSearch\n        this.m_UISelectByLabel(event, parentKey, value); // user selects current highlight\n      }\n    }\n    if (keystroke === 'Escape' || keystroke === 'Tab') {\n      event.preventDefault(); // prevent tab key from going to the next field\n      event.stopPropagation();\n      this.setState({ matches: [], higlightedLine: -1 }); // close autosuggest\n    }\n    if (keystroke === 'ArrowUp') newHighlightedLine--;\n    if (keystroke === 'ArrowDown') newHighlightedLine++;\n    if (\n      higlightedLine !== newHighlightedLine &&\n      newHighlightedLine > -1 &&\n      lastLine > 0\n    ) {\n      this.m_UIHighlightLine(newHighlightedLine);\n    }\n  }\n\n  m_UIMouseHighlightLine(event, line) {\n    this.m_UIHighlightLine(line);\n  }\n  m_UIMouseUnhighlightLine(event) {\n    // Placeholder for future functionality\n    // Catch the event, but don't do anything.\n    // We want to keep the matchlist open even if you move the mouse\n    // outside of the line.\n  }\n\n  m_UIHighlightLine(line) {\n    const { matches } = this.state;\n    const lastLine = matches ? matches.length : -1;\n    line = Math.min(lastLine - 1, Math.max(0, line));\n    this.setState({ higlightedLine: line, uShowMatchlist: true });\n    const highlightedNode = matches[line];\n    UDATA.LocalCall('AUTOSUGGEST_HILITE_NODE', { nodeId: highlightedNode.id });\n  }\n\n  // Clicking outside of the matchlist should close the autosuggest\n  m_UIClickOutside(event) {\n    if (event.defaultPrevented)\n      return; // clicking on the input field or the matchlist catches the click and prevents inadvertently closing the matchlist\n    else this.setState({ matches: [], higlightedLine: -1, uShowMatchlist: false }); // close matchlist\n  }\n\n  render() {\n    const { matches, higlightedLine, isValidNode, uShowMatchlist } = this.state;\n    const { parentKey, value, onSelect } = this.props;\n    const matchList =\n      matches && matches.length > 0\n        ? matches.map((n, i) => (\n            <div\n              key={`${n.label}${i}`}\n              value={n.label}\n              className={higlightedLine === i ? 'highlighted' : ''}\n              onClick={event => this.m_UISelectById(event, parentKey, n.id)}\n              onMouseEnter={event => this.m_UIMouseHighlightLine(event, i)}\n            >\n              {n.label} <span className=\"id\">#{n.id}</span>\n            </div>\n          ))\n        : undefined;\n    return (\n      <div style={{ position: 'relative', flexGrow: '1' }}>\n        <div className=\"helptop\">Click on a node, or type a node name</div>\n        <input\n          id={parentKey}\n          key={`${parentKey}input`}\n          value={value}\n          type=\"string\"\n          className={!isValidNode ? 'invalid' : ''}\n          onChange={this.m_UIUpdate}\n          onKeyDown={this.m_UIKeyDown}\n          onFocus={this.m_UIInputFocus}\n          onClick={this.m_UIInputClick}\n          placeholder={EDGE_NOT_SET_LABEL}\n          autoComplete=\"off\" // turn off Chrome's default autocomplete, which conflicts\n        />\n        <br />\n        {uShowMatchlist && matchList && (\n          <div style={{ position: 'relative' }}>\n            <div\n              id=\"matchlist\"\n              className=\"matchlist\"\n              onMouseLeave={this.m_UIMouseUnhighlightLine}\n            >\n              {matchList}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NCAutoSuggest;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Generic Dialog\n\n  USE:\n\n    <NCDialog\n      statekey={key}\n      value={value}\n      onChange={this.handleInputUpdate}\n      onSelect={this.handleSelection}\n    />\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst Draggable = require('react-draggable');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'NCDialog';\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass NCDialog extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      message = 'Are you sure?',\n      okmessage = 'OK',\n      cancelmessage = 'Cancel',\n      onOK,\n      onCancel\n    } = this.props;\n    const OKBtn = <button onClick={onOK}>{okmessage}</button>;\n    const CancelBtn = onCancel ? (\n      <button onClick={onCancel}>{cancelmessage}</button>\n    ) : (\n      ''\n    );\n    return (\n      <div className=\"dialog\">\n        <div className=\"screen\"></div>\n        <Draggable>\n          <div className=\"dialogwindow\">\n            <div className=\"dialogmessage\">{message}</div>\n            <div className=\"dialogcontrolbar\">\n              {CancelBtn}\n              {`\\u00a0`}\n              {OKBtn}\n            </div>\n          </div>\n        </Draggable>\n      </div>\n    );\n  }\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NCDialog;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Citation Dialog\n\n  USE:\n\n    <NCDialogCitation\n      message={message}\n      copymessage={'Copy to Clipboard\"}\n      onClose={this.UIHandleClose}\n    />\n\n  This display citation text with a \"Copy to Clipboard\" button.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'NCDialogCitation';\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass NCDialogCitation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { copiedMessage: '' };\n    this.m_UIOnCopy = this.m_UIOnCopy.bind(this);\n  }\n\n  m_UIOnCopy() {\n    const { onClose } = this.props;\n    const messageEl = document.querySelector('#citationMessage');\n    messageEl.select();\n    document.execCommand('copy'); // deprecated, but other techniques require HTTPS\n    if (typeof onClose === 'function') {\n      this.setState({ copiedMessage: 'Copied to Clipboard!' }, () =>\n        setTimeout(onClose, 500)\n      );\n    }\n  }\n\n  render() {\n    const { copiedMessage } = this.state;\n    const {\n      message = 'message',\n      copymessage = 'Copy to Clipboard',\n      onClose\n    } = this.props;\n    const CopyBtn = <button onClick={this.m_UIOnCopy}>{copymessage}</button>;\n    return (\n      <div className=\"dialog\">\n        <div className=\"screen\"></div>\n        <div className=\"dialogwindow\">\n          <div className=\"dialogmessage\">\n            <textarea\n              id=\"citationMessage\"\n              defaultValue={message}\n              rows=\"5\"\n              cols=\"60\"\n              readOnly\n              style={{\n                fontSize: '12px',\n                fontStyle: 'italic',\n                padding: '5px 10px',\n                border: 'none',\n                color: '#333',\n                background: '#eef'\n              }}\n            />\n          </div>\n          <div className=\"dialogcontrolbar\">\n            {copiedMessage} {CopyBtn}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NCDialogCitation;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Image URL Input Dialog\n\n  Dialog that shows an input field for pasting an image URL into a Node or Edge.\n  If the URL is correct, the image will be previewed.\n\n  USE:\n\n    <NCDialogInput\n      message=\"Paste image URL:\"\n      okmessage=\"Insert\"\n      onOK={event => m_UIPasteImageURL(event, key, cb)}\n      cancelMessage=\"Cancel\"\n      onSCancel={m_UICancleInsertImageURL}\n    />\n\n  TO OPEN the DIALOG:\n\n    UDATA.LocalCall(\"IMAGE_URL_DIALOG_OPEN\")\n\n  This will look up matching nodes via FIND_MATCHING_NODES nc-logic request.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'NCDialogInput';\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet UDATA;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass NCDialogInsertImageURL extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      url: ''\n    };\n    this.m_UIOpenDialog = this.m_UIOpenDialog.bind(this);\n    this.m_UIInputChange = this.m_UIInputChange.bind(this);\n    this.m_UIOnOK = this.m_UIOnOK.bind(this);\n    this.m_UIOnCancel = this.m_UIOnCancel.bind(this);\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n    UDATA.HandleMessage('IMAGE_URL_DIALOG_OPEN', this.m_UIOpenDialog);\n  }\n\n  componentWillUnmount() {\n    UDATA.UnhandleMessage('IMAGE_URL_DIALOG_OPEN', this.m_UIOpenDialog);\n  }\n\n  m_UIOpenDialog(data) {\n    const { id } = this.props;\n    if (id === data.id) this.setState({ isOpen: true });\n  }\n\n  m_UIInputChange(event) {\n    this.setState({ url: event.target.value });\n  }\n\n  m_UIOnOK() {\n    const { url } = this.state;\n    const { onOK } = this.props;\n    this.setState({ isOpen: false }, () => onOK && onOK(url));\n  }\n\n  m_UIOnCancel() {\n    const { onCancel } = this.props;\n    this.setState({ isOpen: false }, () => onCancel && onCancel());\n  }\n\n  render() {\n    const { isOpen, url } = this.state;\n    const {\n      id,\n      message = 'Are you sure?',\n      okmessage = 'OK',\n      cancelmessage = 'Cancel',\n      onOK,\n      onCancel\n    } = this.props;\n    const OKBtn = <button onClick={this.m_UIOnOK}>{okmessage}</button>;\n    const CancelBtn = <button onClick={this.m_UIOnCancel}>{cancelmessage}</button>;\n\n    return !isOpen ? (\n      ''\n    ) : (\n      <div className=\"dialog\">\n        <div className=\"screen\"></div>\n        <div className=\"dialogwindow\">\n          <div className=\"dialogcontent\">\n            <h1 className=\"dialogtitle\">ADD IMAGE URL</h1>\n            <div className=\"dialogmessage\">\n              <div className=\"dialogpreview\">\n                <div className=\"label\">PREVIEW:</div>\n                <img src={url} alt=\"Pasted Image URL Preview\" />\n              </div>\n              <div>{message}</div>\n              <input onChange={this.m_UIInputChange} />\n            </div>\n            <div className=\"dialogcontrolbar\">\n              {CancelBtn}\n              {`\\u00a0`}\n              {OKBtn}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NCDialogInsertImageURL;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n    Prototype Simple NetCreate Edge Editor\n\n    Built for Version 2.0 ITEST.\n\n    Provides a viewer and editor for the currently selected edge.\n\n    USAGE\n\n      <NCNEdge edgeId={edgeId} parentNodeId={nodeId} key={e.id} />\n\n    This is designed to be embedded in an <NCNode> object.\n    There should only be one open NCEdge component at a time.\n\n    PERMISSIONS\n    Editting is restricted by:\n    * User must be logged in\n    * Template is not being edited\n    * Data is not being imported\n    * Someone else is not editing the edge (and has placed a lock on it)\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst UNISYS = require('unisys/client');\nconst { EDITORTYPE, BUILTIN_FIELDS_EDGE } = require('system/util/enum');\nconst {\n  EDGE_NOT_SET_LABEL,\n  ARROW_DOWN,\n  ARROW_UPDOWN,\n  ARROW_RIGHT\n} = require('system/util/constant');\nconst NCUI = require('../nc-ui');\nconst CMTMGR = require('../comment-mgr');\nconst NCLOGIC = require('../nc-logic');\nconst NCAutoSuggest = require('./NCAutoSuggest');\nconst NCDialog = require('./NCDialog');\nconst NCDialogCitation = require('./NCDialogCitation');\nconst SETTINGS = require('settings');\nimport URCommentBtn from './URCommentBtn';\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'NCEdge';\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst isAdmin = SETTINGS.IsAdmin();\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst TABS = {\n  // Also used as labels\n  ATTRIBUTES: 'ATTRIBUTES',\n  PROVENANCE: 'PROVENANCE'\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet UDATA;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass NCEdge extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoggedIn: false,\n      animateHeight: 0\n    }; // initialized on componentDidMount and clearSelection\n\n    // STATE MANAGEMENT\n    this.ResetState = this.ResetState.bind(this);\n    this.UpdateSession = this.UpdateSession.bind(this);\n    this.UpdateNCData = this.UpdateNCData.bind(this);\n    this.IsLoggedIn = this.IsLoggedIn.bind(this);\n    this.SetPermissions = this.SetPermissions.bind(this);\n    this.UpdatePermissions = this.UpdatePermissions.bind(this);\n\n    // EVENT HANDLERS\n    this.CheckUnload = this.CheckUnload.bind(this);\n    this.DoUnload = this.DoUnload.bind(this);\n    this.ClearSelection = this.ClearSelection.bind(this);\n    this.UpdateSelection = this.UpdateSelection.bind(this);\n    this.ReqLoadEdge = this.ReqLoadEdge.bind(this);\n    // DATA LOADING\n    this.LoadEdge = this.LoadEdge.bind(this);\n    this.DeleteEdge = this.DeleteEdge.bind(this);\n    this.LoadAttributes = this.LoadAttributes.bind(this);\n    this.LoadProvenance = this.LoadProvenance.bind(this);\n    this.LockEdge = this.LockEdge.bind(this);\n    this.UnlockEdge = this.UnlockEdge.bind(this);\n    this.IsEdgeLocked = this.IsEdgeLocked.bind(this);\n    this.EditEdge = this.EditEdge.bind(this);\n    this.UpdateDerivedValues = this.UpdateDerivedValues.bind(this);\n    this.ValidateSourceTarget = this.ValidateSourceTarget.bind(this);\n    this.OfferToCreateNewNode = this.OfferToCreateNewNode.bind(this);\n    this.CreateNode = this.CreateNode.bind(this);\n    this.BackToEditing = this.BackToEditing.bind(this);\n    this.SetSourceTarget = this.SetSourceTarget.bind(this);\n    this.ThenSaveSourceTarget = this.ThenSaveSourceTarget.bind(this);\n    // DATA SAVING\n    this.SaveEdge = this.SaveEdge.bind(this);\n    // HELPER METHODS\n    this.SetBackgroundColor = this.SetBackgroundColor.bind(this);\n    this.SetSourceTargetNodeColor = this.SetSourceTargetNodeColor.bind(this);\n    this.SwapSourceAndTarget = this.SwapSourceAndTarget.bind(this);\n    this.EdgeDisplayName = this.EdgeDisplayName.bind(this);\n    // UI MANIPULATION METHODS\n    this.EnableEditMode = this.UIEnableEditMode.bind(this);\n    // UI EVENT HANDLERS\n    this.UISelectTab = this.UISelectTab.bind(this);\n    this.UIRequestEditEdge = this.UIRequestEditEdge.bind(this);\n    this.UIDeselectEdge = this.UIDeselectEdge.bind(this);\n    this.UICancelEditMode = this.UICancelEditMode.bind(this);\n    this.UIDisableEditMode = this.UIDisableEditMode.bind(this);\n    this.UIDeleteEdge = this.UIDeleteEdge.bind(this);\n    this.UIInputUpdate = this.UIInputUpdate.bind(this);\n    this.UIProvenanceInputUpdate = this.UIProvenanceInputUpdate.bind(this);\n    this.UIEnableSourceTargetSelect = this.UIEnableSourceTargetSelect.bind(this);\n    this.UISourceTargetInputUpdate = this.UISourceTargetInputUpdate.bind(this);\n    this.UISourceTargetInputSelect = this.UISourceTargetInputSelect.bind(this);\n    this.UICitationShow = this.UICitationShow.bind(this);\n    this.UICitationClose = this.UICitationClose.bind(this);\n    // RENDERERS -- Main\n    this.RenderView = this.RenderView.bind(this);\n    this.RenderEdit = this.RenderEdit.bind(this);\n    // FORM RENDERERS\n    this.RenderSourceTargetButton = this.RenderSourceTargetButton.bind(this);\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    /// REGISTER LISTENERS\n    UDATA.OnAppStateChange('SESSION', this.UpdateSession);\n    UDATA.OnAppStateChange('NCDATA', this.UpdateNCData);\n    UDATA.OnAppStateChange('SELECTION', this.UpdateSelection);\n    UDATA.HandleMessage('EDGE_OPEN', this.ReqLoadEdge);\n    UDATA.HandleMessage('EDGE_DESELECT', this.ClearSelection);\n    UDATA.HandleMessage('EDIT_PERMISSIONS_UPDATE', this.SetPermissions);\n    UDATA.HandleMessage('EDGE_EDIT', this.EditEdge); // EdgeTable request\n    UDATA.HandleMessage('SELECT_SOURCETARGET', this.SetSourceTarget);\n  }\n\n  componentDidMount() {\n    this.ResetState(); // Initialize State\n\n    const { edgeId } = this.props;\n    const edge = UDATA.AppState('NCDATA').edges.find(e => e.id === edgeId);\n    this.LoadEdge(edge);\n\n    window.addEventListener('beforeunload', this.CheckUnload);\n    window.addEventListener('unload', this.DoUnload);\n  }\n  componentWillUnmount() {\n    UDATA.AppStateChangeOff('SESSION', this.UpdateSession);\n    UDATA.AppStateChangeOff('NCDATA', this.UpdateNCData);\n    UDATA.AppStateChangeOff('SELECTION', this.UpdateSelection);\n    UDATA.UnhandleMessage('EDGE_OPEN', this.ReqLoadEdge);\n    UDATA.UnhandleMessage('EDGE_DESELECT', this.ClearSelection);\n    UDATA.UnhandleMessage('EDIT_PERMISSIONS_UPDATE', this.SetPermissions);\n    UDATA.UnhandleMessage('EDGE_EDIT', this.EditEdge);\n    UDATA.UnhandleMessage('SELECT_SOURCETARGET', this.SetSourceTarget);\n    window.removeEventListener('beforeunload', this.CheckUnload);\n    window.removeEventListener('unload', this.DoUnload);\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// STATE MANAGEMENT\n  ///\n  ResetState() {\n    this.setState({\n      // EDGE DEFS 'core state data'\n      id: null,\n      // source: null, // avoid ambiguous keys, use sourceId instead\n      // target: null, // avoid ambiguous keys, use targetId instead\n      sourceId: null,\n      targetId: null,\n      type: '',\n      attributes: [],\n      provenance: [],\n      created: undefined,\n      updated: undefined,\n      revision: 0,\n\n      // SYSTEM STATE\n      // isLoggedIn: false, // don't clear session state!\n      // previousState: {},\n\n      // UI State 'u'\n      uEditBtnDisable: false,\n      uEditBtnHide: false,\n      uViewMode: NCUI.VIEWMODE.VIEW,\n      uSelectedTab: TABS.ATTRIBUTES,\n      uSelectSourceTarget: undefined,\n      uBackgroundColor: '#ccc', // edge component bgcolor determined by type/COLORMAP\n      uIsLockedByDB: false, // shows db lock message next to Edit Node button\n      uIsLockedByTemplate: false,\n      uIsLockedByImport: false,\n      uEditLockMessage: '',\n      uNewNodeKey: undefined,\n      uNewNodeLabel: undefined,\n      uShowCitationDialog: false,\n\n      // DERIVED VALUES 'd'\n      dSourceNode: undefined,\n      dSourceNodeColor: null,\n      dTargetNode: undefined,\n      dTargetNodeColor: null\n    });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// SYSTEM/NETWORK EVENT HANDLERS\n  ///\n  CheckUnload(event) {\n    event.preventDefault();\n    if (this.state.uViewMode === NCUI.VIEWMODE.EDIT) {\n      (event || window.event).returnValue = null;\n    } else {\n      Reflect.deleteProperty(event, 'returnValue');\n    }\n    return event;\n  }\n  DoUnload(event) {\n    if (this.state.uViewMode === NCUI.VIEWMODE.EDIT) {\n      UDATA.NetCall('SRV_DBUNLOCKEDGE', { edgeID: this.state.id });\n      UDATA.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.EDGE });\n    }\n  }\n  /**\n   * Handle change in SESSION data\n   * SESSION is called by SessionShell when the ID changes\n   * set system-wide. data: { classId, projId, hashedId, groupId, isValid }\n   * Called both by componentWillMount() and AppStateChange handler.\n   * The 'SESSION' state change is triggered in two places in SessionShell during\n   * its handleChange() when active typing is occuring, and also during\n   * SessionShell.componentWillMount()\n   */\n  UpdateSession(decoded) {\n    this.setState({ isLoggedIn: decoded.isValid }, () => this.UpdatePermissions());\n  }\n  /*\n      Called by NCDATA AppState updates\n  */\n  UpdateNCData(data) {\n    // If NCDATA is updated, reload the edge b/c db has changed\n    const updatedEdge = data.edges.find(e => e.id === this.props.edgeId);\n    this.LoadEdge(updatedEdge);\n  }\n  /**\n   * Checks current SESSION state to see if user is logged in.\n   * Since NCEdge is dynamically created and closed, we can't rely on\n   * SESSION AppState updates messages.\n   * NOTE updates state.\n   * @returns {boolean} True if user is logged in\n   */\n  IsLoggedIn() {\n    const SESSION = UDATA.AppState('SESSION');\n    const isLoggedIn = SESSION.isValid;\n    this.setState({ isLoggedIn });\n    return isLoggedIn;\n  }\n  SetPermissions(data) {\n    const { id } = this.state;\n    const edgeIsLocked = data.lockedEdges.includes(id);\n    this.setState(\n      {\n        uIsLockedByDB: edgeIsLocked,\n        uIsLockedByTemplate: data.templateBeingEdited,\n        uIsLockedByImport: data.importActive\n      },\n      () => this.UpdatePermissions()\n    );\n  }\n  UpdatePermissions() {\n    const { uIsLockedByDB, uIsLockedByTemplate, uIsLockedByImport } = this.state;\n    const isLoggedIn = this.IsLoggedIn();\n    const TEMPLATE = UDATA.AppState('TEMPLATE');\n    let uEditLockMessage = '';\n    let uEditBtnDisable = false;\n    let uEditBtnHide = true;\n    if (isLoggedIn) uEditBtnHide = false;\n    if (uIsLockedByDB) {\n      uEditBtnDisable = true;\n      uEditLockMessage += TEMPLATE.edgeIsLockedMessage;\n    }\n    if (uIsLockedByTemplate) {\n      uEditBtnDisable = true;\n      uEditLockMessage += TEMPLATE.templateIsLockedMessage;\n    }\n    if (uIsLockedByImport) {\n      uEditBtnDisable = true;\n      uEditLockMessage += TEMPLATE.importIsLockedMessage;\n    }\n    this.setState({ uEditBtnDisable, uEditBtnHide, uEditLockMessage });\n  }\n  ClearSelection() {\n    this.ResetState();\n  }\n  UpdateSelection(data) {\n    const { sourceTargetSelect } = this.state;\n    const selectedNode = data.nodes[0]; // select the first node\n    if (sourceTargetSelect === 'source') {\n      this.setState({\n        sourceId: selectedNode.id,\n        dSourceNode: selectedNode\n      });\n    } else if (sourceTargetSelect === 'target') {\n      this.setState({\n        targetId: selectedNode.id,\n        dTargetNode: selectedNode\n      });\n    } else {\n      // ignore the selection\n    }\n  }\n  ReqLoadEdge(data) {\n    // handler for UDATA call, interprets the net `data`\n    this.LoadEdge(data.edge);\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// DATA LOADING\n  ///\n  LoadEdge(edge) {\n    const { uViewMode } = this.state;\n\n    // If we're editing, ignore the select!\n    if (uViewMode === NCUI.VIEWMODE.EDIT) return;\n\n    // If no edge was selected, deselect\n    if (!edge) {\n      this.ClearSelection();\n      return;\n    }\n\n    // Load the edge\n    const attributes = this.LoadAttributes(edge);\n    const provenance = this.LoadProvenance(edge);\n    this.setState(\n      {\n        id: edge.id,\n        sourceId: edge.source,\n        targetId: edge.target,\n        type: edge.type,\n        attributes: attributes,\n        provenance: provenance,\n        created: edge.meta ? new Date(edge.meta.created).toLocaleString() : '',\n        createdBy: edge.createdBy,\n        updated: edge.meta ? new Date(edge.meta.updated).toLocaleString() : '',\n        updatedBy: edge.updatedBy,\n        revision: edge.meta ? edge.meta.revision : ''\n      },\n      () => this.UpdateDerivedValues()\n    );\n  }\n  /**\n   * Loads up the `attributes` object defined by the TEMPLATE\n   * Will skip\n   *   * BUILTIN fields\n   *   * attributes that are `hidden` by the template\n   * REVIEW: Currently the parameters will show up in random object order.\n   * @param {Object} edge\n   * @returns {Object} { ...attr-key: attr-value }\n   */\n  LoadAttributes(edge) {\n    const EDGEDEFS = UDATA.AppState('TEMPLATE').edgeDefs;\n    const attributes = {};\n    Object.keys(EDGEDEFS).forEach(k => {\n      if (BUILTIN_FIELDS_EDGE.includes(k)) return; // skip built-in fields\n      const attr_def = EDGEDEFS[k];\n      if (attr_def.hidden) return; // skip hidden fields\n      if (attr_def.isProvenance) return; // skip fields that are marked as provenance\n      attributes[k] = edge[k];\n    });\n    return attributes;\n  }\n  /**\n   * Loads up the `provenance` object defined by the TEMPLATE\n   * Will skip\n   *   * BUILTIN fields\n   *   * attributes that are `hidden` by the template\n   * REVIEW: Currently the parameters will show up in random object order.\n   * @param {Object} edge\n   * @returns {Object} { ...attr-key: attr-value }\n   */\n  LoadProvenance(edge) {\n    const EDGEDEFS = UDATA.AppState('TEMPLATE').edgeDefs;\n    const provenance = {};\n    Object.keys(EDGEDEFS).forEach(k => {\n      if (BUILTIN_FIELDS_EDGE.includes(k)) return; // skip built-in fields\n      const provenance_def = EDGEDEFS[k];\n      if (provenance_def.hidden) return; // skip hidden fields\n      if (!provenance_def.isProvenance) return; // skip fields that are not marked as provenance\n      provenance[k] = edge[k];\n    });\n    return provenance;\n  }\n\n  /**\n   * Tries to lock the edge for editing.\n   * If the lock fails, then it means the edge was already locked\n   * previously and we're not allowed to edit\n   * @param {function} cb callback function\n   * @returns {boolean} true if lock was successful\n   */\n  LockEdge(cb) {\n    const { id } = this.state;\n    let lockSuccess = false;\n    UDATA.NetCall('SRV_DBLOCKEDGE', { edgeID: id }).then(data => {\n      if (data.NOP) {\n        console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n      } else if (data.locked) {\n        console.log(`SERVER SAYS: lock success! you can edit Edge ${data.edgeID}`);\n        console.log(`SERVER SAYS: unlock the edge after successful DBUPDATE`);\n        lockSuccess = true;\n        // When a edge is being edited, lock the Template from being edited\n        UDATA.NetCall('SRV_REQ_EDIT_LOCK', { editor: EDITORTYPE.EDGE });\n      }\n      if (typeof cb === 'function') cb(lockSuccess);\n    });\n  }\n  /**\n   * Returns whether the unlock is successful\n   * @param {function} cb Callback function to handle cleanup after unlock\n   */\n  UnlockEdge(cb) {\n    const { id } = this.state;\n    let unlockSuccess = false;\n    UDATA.NetCall('SRV_DBUNLOCKEDGE', { edgeID: id }).then(data => {\n      if (data.NOP) {\n        console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n      } else if (data.unlocked) {\n        console.log(\n          `SERVER SAYS: unlock success! you have released Edge ${data.edgeID}`\n        );\n        unlockSuccess = true;\n        // Release Template lock\n        UDATA.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.EDGE });\n      }\n      if (typeof cb === 'function') cb(unlockSuccess);\n    });\n  }\n  IsEdgeLocked(cb) {\n    const { id } = this.state;\n    let edgeIsLocked = false;\n    UDATA.NetCall('SRV_DBISEDGELOCKED', { edgeID: id }).then(data => {\n      if (data.NOP) {\n        // ISSUE Server will return error can't lock if the edge\n        // hadn't been created yet.\n        // do we skip the lock here?\n        console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n      } else if (data.locked) {\n        console.log(\n          `SERVER SAYS: Edge is locked! You cannot edit Edge ${data.edgeID}`\n        );\n        edgeIsLocked = true;\n      }\n      if (typeof cb === 'function') cb(edgeIsLocked);\n    });\n  }\n  /**\n   * If `lockEdge` is not successful, then that means the edge was\n   * already locked, so we can't edit.\n   */\n  EditEdge() {\n    if (!this.IsLoggedIn()) return;\n    this.LockEdge(lockSuccess => {\n      this.setState({ uIsLockedByDB: !lockSuccess }, () => {\n        if (lockSuccess) this.UIEnableEditMode();\n      });\n    });\n  }\n\n  /**\n   * After loading or updating edge core parameters, run this to\n   * load and update any derived values.\n   */\n  UpdateDerivedValues() {\n    const { sourceId, targetId } = this.state;\n    // Look up source/target nodes\n    const NCDATA = UDATA.AppState('NCDATA');\n    const dSourceNode = NCDATA.nodes.find(n => n.id === sourceId) || {\n      label: ''\n    };\n    const dTargetNode = NCDATA.nodes.find(n => n.id === targetId) || {\n      label: ''\n    };\n    this.setState(\n      {\n        dSourceNode,\n        dTargetNode\n      },\n      () => {\n        this.SetBackgroundColor();\n        this.SetSourceTargetNodeColor();\n        // setTimeout(() => {\n        this.setState({ animateHeight: 'fullheight' }); // animate transition\n        // }, 500);\n        this.IsEdgeLocked(edgeIsLocked => {\n          this.setState({ uIsLockedByDB: edgeIsLocked }, () =>\n            this.UpdatePermissions()\n          );\n        });\n      }\n    );\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// SET SOURCE / TARGET\n  ///\n  /// Selecting a source or target node is a multi-step process.\n  /// 1. First, you need to Enable editing\n  /// 2. Then, you need to click on a Source or Target node to activate\n  ///    the source or target for selection\n  /// 3. Once you enable source or target editing, you need to decide\n  ///    how you want to select the node...\n  ///    A. Click on the node on the d3 graph to select the node, or...\n  ///    B. Type the full node name, or...\n  ///    C. Type a partial name, and..\n  ///       and arrow up/down to highlight\n  ///       and hit Enter to select\n  ///       or click name to select\n  ///    D. Type a new node name and\n  ///       and hit Enter to add a new node\n  ///       and show dialog confirm creating a new node\n  /// 5. Click \"Save\" to exit edit mode\n  ///\n  /**\n   * User has selected a new source or target\n   * validate it to make sure it exists\n   * if it doesn't, offer to create a new one\n   * Uses either `id` or `value` to find the node\n   *\n   * @param {string} key 'source' or 'target'\n   * @param {string} label\n   * @param {number} id\n   */\n  ValidateSourceTarget(key, label, id) {\n    // if we have an id, then the selected source/target is an existing node\n    // but we should probably validate it anyway?\n    let keyType, searchString;\n    if (id) {\n      // find node by 'id'\n      keyType = 'id';\n      searchString = id;\n    } else {\n      // find node by 'label'\n      keyType = 'label';\n      searchString = label;\n    }\n    UDATA.LocalCall('FIND_NODE_BY_PROP', {\n      key: keyType,\n      searchString\n    }).then(data => {\n      if (data.nodes.length > 0) {\n        const node = data.nodes[0];\n        this.ThenSaveSourceTarget(key, node);\n      } else {\n        this.OfferToCreateNewNode(key, label);\n      }\n    });\n  }\n  /**\n   * User has input a new node name that doesn't match an existing node\n   * so offer to create a new node\n   * @param {string} key 'source' or 'target'\n   * @param {string} value\n   */\n  OfferToCreateNewNode(key, value) {\n    this.setState({\n      uNewNodeKey: key,\n      uNewNodeLabel: value\n    });\n  }\n  /**\n   * NCDialog offer to create a new node -- user decided to create a new\n   * new node, so add it.\n   */\n  CreateNode() {\n    const { uNewNodeKey, uNewNodeLabel } = this.state;\n    UDATA.LocalCall('NODE_CREATE', { label: uNewNodeLabel }).then(node => {\n      this.setState({ uNewNodeKey: undefined, uNewNodeLabel: undefined }, () =>\n        this.ThenSaveSourceTarget(uNewNodeKey, node)\n      );\n    });\n  }\n  /**\n   * NCDialog offer to create a new node -- user clicked Cancel so\n   * go back to editing the node\n   */\n  BackToEditing() {\n    this.setState({ uNewNodeKey: undefined, uNewNodeLabel: undefined });\n  }\n  /**\n   * User has selected a source or target node by clicking on D3 graph\n   * Called by Selection Manager via SELECT_SOURCETARGET\n   * @param {Object} data\n   * @param {Object} data.node\n   */\n  SetSourceTarget(data) {\n    const { uSelectSourceTarget } = this.state;\n\n    // The source/target has been set already, so return to edge edit mode\n    UDATA.LocalCall('SELECTMGR_SET_MODE', { mode: 'edge_edit' });\n\n    // Clear the secondary selection\n    UDATA.LocalCall('SELECTMGR_DESELECT_SECONDARY');\n\n    this.ThenSaveSourceTarget(uSelectSourceTarget, data.node);\n  }\n  /**\n   * Save the source or target after either creating new node or selecting\n   * an existing ndoe.\n   * Runs after validateSourceTarget\n   * @param {string} key 'source' or 'target'\n   * @param {Object} node {id, label}\n   */\n  ThenSaveSourceTarget(key, node) {\n    // MUST save sourceId or targetId to determine source/target\n    // but ideally set all three?  because that's what loadEdge does?\n    const state = {\n      uSelectSourceTarget: undefined,\n      uNewNodeKey: undefined, // clear NCDialog\n      uNewNodeLabel: undefined // clear NCDialog\n    };\n    if (key === 'source') {\n      state.sourceId = node.id;\n    } else {\n      // 'target'\n      state.targetId = node.id;\n    }\n\n    // show secondary selection\n    UDATA.LocalCall('SELECTMGR_SELECT_SECONDARY', { node });\n\n    this.setState(state, () => this.UpdateDerivedValues());\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// DATA SAVING\n  ///\n  SaveEdge() {\n    const { id, sourceId, targetId, type, attributes, provenance } = this.state;\n    const uid = NCLOGIC.GetCurrentUserId();\n    const edge = {\n      id,\n      source: sourceId,\n      target: targetId,\n      type,\n      updatedBy: uid\n    };\n    Object.keys(attributes).forEach(k => (edge[k] = attributes[k]));\n    Object.keys(provenance).forEach(k => (edge[k] = provenance[k]));\n\n    this.setState(\n      {\n        uViewMode: NCUI.VIEWMODE.VIEW\n      },\n      () => {\n        this.AppCall('DB_UPDATE', { edge }).then(() => {\n          this.UnlockEdge(() => {\n            // Clear the secondary selection\n            UDATA.LocalCall('SELECTMGR_DESELECT_SECONDARY');\n\n            UDATA.LocalCall('SELECTMGR_SET_MODE', { mode: 'normal' });\n            this.setState({\n              uIsLockedByDB: false,\n              uSelectSourceTarget: undefined\n            });\n          });\n        });\n      }\n    );\n    UNISYS.Log('click save edge', id, this.EdgeDisplayName(), JSON.stringify(edge));\n  }\n  DeleteEdge() {\n    const { id } = this.state;\n    this.AppCall('DB_UPDATE', { edgeID: id }); // Calling DB_UPDATE with `edgeID` will remove the edge\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// HELPER METHODS\n  ///\n  /**\n   * Sets the background color of the node editor via `uBackgroundColor` state.\n   * Currently the background color is determined by the template edge type\n   * color mapping.  This will eventually be replaced with a color manager.\n   */\n  SetBackgroundColor() {\n    const { type } = this.state;\n    const COLORMAP = UDATA.AppState('COLORMAP');\n    const uBackgroundColor = COLORMAP.edgeColorMap[type] || '#555555';\n    this.setState({ uBackgroundColor });\n  }\n  SetSourceTargetNodeColor() {\n    const { dSourceNode, dTargetNode } = this.state;\n    const COLORMAP = UDATA.AppState('COLORMAP');\n    const dSourceNodeColor =\n      COLORMAP.nodeColorMap[dSourceNode ? dSourceNode.type : ''];\n    const dTargetNodeColor =\n      COLORMAP.nodeColorMap[dTargetNode ? dTargetNode.type : ''];\n    this.setState({ dSourceNodeColor, dTargetNodeColor });\n  }\n  SwapSourceAndTarget() {\n    const {\n      sourceId,\n      dSourceNode,\n      dSourceNodeColor,\n      targetId,\n      dTargetNode,\n      dTargetNodeColor\n    } = this.state;\n\n    // swap\n    const swappedTargetId = sourceId;\n    const swappedSourceId = targetId;\n    const swappedTargetNode = dSourceNode;\n    const swappedSourceNode = dTargetNode;\n    const swappedTargetNodeColor = dSourceNodeColor;\n    const swappedSourceNodeColor = dTargetNodeColor;\n\n    this.setState({\n      sourceId: swappedSourceId,\n      dSourceNode: swappedSourceNode,\n      dSourceNodeColor: swappedSourceNodeColor,\n      targetId: swappedTargetId,\n      dTargetNode: swappedTargetNode,\n      dTargetNodeColor: swappedTargetNodeColor\n    });\n  }\n  EdgeDisplayName() {\n    const { dSourceNode, dTargetNode } = this.state;\n    return `${dSourceNode.label}${ARROW_RIGHT}${dTargetNode.label}`;\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// UI MANIPULATION METHODS\n  ///\n  /**\n   * Save `previousState` so that we can undo/restore data if user cancels\n   */\n  UIEnableEditMode() {\n    const { uSelectedTab, id, sourceId, targetId, type, attributes, provenance } =\n      this.state;\n    const previousState = {\n      sourceId,\n      targetId,\n      type,\n      attributes: Object.assign({}, attributes)\n      // provenance: Object.assign({}, provenance) // uncomment after provenence is implemented\n    };\n    this.setState({\n      uViewMode: NCUI.VIEWMODE.EDIT,\n      uSelectedTab,\n      previousState\n    });\n    UDATA.LocalCall('SELECTMGR_SET_MODE', { mode: 'edge_edit' });\n\n    const edge = {\n      id,\n      source: sourceId,\n      target: targetId,\n      type,\n      provenance\n    };\n    Object.keys(attributes).forEach(k => (edge[k] = attributes[k]));\n    Object.keys(provenance).forEach(k => (edge[k] = provenance[k]));\n    UNISYS.Log('edit edge', id, this.EdgeDisplayName(), JSON.stringify(edge));\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// UI EVENT HANDLERS\n  ///\n  UISelectTab(event) {\n    event.stopPropagation();\n    const { id } = this.state;\n    this.setState({ uSelectedTab: event.target.value });\n    UNISYS.Log('select edge tab', id, this.EdgeDisplayName(), event.target.value);\n  }\n\n  UIRequestEditEdge(event) {\n    event.stopPropagation();\n    this.EditEdge();\n  }\n\n  UIDeselectEdge() {\n    UDATA.LocalCall('EDGE_DESELECT');\n  }\n\n  UICancelEditMode() {\n    const { id, revision, previousState } = this.state;\n\n    // if user is cancelling a newly created unsaved edge, delete the edge instead\n    if (revision < 1) {\n      this.UIDisableEditMode();\n      this.DeleteEdge();\n      return;\n    }\n\n    // restore previous state\n    this.setState(\n      {\n        sourceId: previousState.sourceId,\n        targetId: previousState.targetId,\n        type: previousState.type,\n        attributes: previousState.attributes,\n        uSelectSourceTarget: undefined\n        // provenance: Object.assign({}, provenance) // uncomment after provenence is implemented\n      },\n      () => {\n        this.UpdateDerivedValues();\n        this.UIDisableEditMode();\n      }\n    );\n    UNISYS.Log('cancel edit edge', id, this.EdgeDisplayName());\n  }\n  UIDisableEditMode() {\n    this.UnlockEdge(() => {\n      this.setState({\n        uViewMode: NCUI.VIEWMODE.VIEW,\n        uIsLockedByDB: false\n      });\n\n      // Clear the secondary selection\n      UDATA.LocalCall('SELECTMGR_DESELECT_SECONDARY');\n\n      UDATA.LocalCall('SELECTMGR_SET_MODE', { mode: 'normal' });\n      UDATA.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.EDGE });\n    });\n  }\n\n  UIDeleteEdge() {\n    this.UIDisableEditMode();\n    this.DeleteEdge();\n  }\n\n  UIInputUpdate(key, value) {\n    if (BUILTIN_FIELDS_EDGE.includes(key)) {\n      const data = {};\n      data[key] = value;\n      this.setState(data, () => this.SetBackgroundColor());\n    } else {\n      const { attributes } = this.state;\n      attributes[key] = value;\n      this.setState({ attributes }, () => this.SetBackgroundColor());\n    }\n  }\n  UIProvenanceInputUpdate(key, value) {\n    if (BUILTIN_FIELDS_EDGE.includes(key)) {\n      const data = {};\n      data[key] = value;\n      this.setState(data);\n    } else {\n      const { provenance } = this.state;\n      provenance[key] = value;\n      this.setState({ provenance }, () => this.SetBackgroundColor());\n    }\n  }\n\n  UIEnableSourceTargetSelect(event) {\n    const key = event.target.id;\n    this.setState({ uSelectSourceTarget: key });\n    UDATA.LocalCall('SELECTMGR_SET_MODE', { mode: 'sourcetarget' });\n  }\n\n  /**\n   * Handles keystrokes as user inputs new node in form\n   * @param {string} key\n   * @param {string} value\n   */\n  UISourceTargetInputUpdate(key, value) {\n    const updatedState = {};\n    if (key === 'source') {\n      updatedState.dSourceNode = { label: value };\n    } else {\n      updatedState.dTargetNode = { label: value };\n    }\n    this.setState(updatedState);\n  }\n\n  /**\n   * User has selected a node with NCAutoSuggest, either\n   * - Clicking on a suggested node\n   * - Hitting Enter with the form field showing either a valid node or a new node\n   * @param {string} key is 'id' or 'label'\n   * @param {string} label\n   * @param {number} id\n   */\n  UISourceTargetInputSelect(key, label, id) {\n    this.ValidateSourceTarget(key, label, id);\n  }\n\n  UICitationShow(event) {\n    event.stopPropagation();\n    this.setState({ uShowCitationDialog: true });\n  }\n  UICitationClose() {\n    this.setState({ uShowCitationDialog: false });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// RENDER METHODS\n  RenderView() {\n    const {\n      uSelectedTab,\n      uBackgroundColor,\n      animateHeight,\n      uEditBtnDisable,\n      uEditBtnHide,\n      uEditLockMessage,\n      uShowCitationDialog,\n      id,\n      dSourceNode = { label: undefined },\n      dTargetNode = { label: undefined },\n      type\n    } = this.state;\n    const bgcolor = uBackgroundColor + '66'; // hack opacity\n    const TEMPLATE = UDATA.AppState('TEMPLATE');\n    const defs = TEMPLATE.edgeDefs;\n    const uShowCitationButton = TEMPLATE.citation && !TEMPLATE.citation.hidden;\n    const disableSourceTargetInView = true;\n    const citation =\n      `NetCreate ${TEMPLATE.name} network, ` +\n      `Edge: (ID ${id}), ` +\n      `from \"${dSourceNode.label}\" to \"${dTargetNode.label}\". ` +\n      (TEMPLATE.citation && TEMPLATE.citation.text\n        ? `${TEMPLATE.citation.text}. `\n        : '') +\n      `Last accessed at ${NCUI.DateFormatted()}.`;\n    const collection_ref = CMTMGR.GetEdgeCREF(id);\n\n    return (\n      <div className={`nccomponent ncedge ${animateHeight}`}>\n        <div\n          className=\"view\"\n          style={{ backgroundColor: bgcolor }}\n          onClick={this.UIDeselectEdge}\n        >\n          {/* BUILT-IN - - - - - - - - - - - - - - - - - */}\n          <div className=\"titlebar\" style={{ marginBottom: '3px' }}>\n            <div className=\"nodenumber\">EDGE {id} </div>\n            <div></div>\n            <URCommentBtn cref={collection_ref} />\n          </div>\n          <div className=\"formview\">\n            {NCUI.RenderLabel('source', defs['source'].displayLabel)}\n            {this.RenderSourceTargetButton(\n              'source',\n              dSourceNode.label,\n              disableSourceTargetInView\n            )}\n            <div />\n            <div className=\"edgetypeRow\">\n              <div className=\"targetarrow\">{ARROW_DOWN}</div>\n              {/* Special handling for `type` field */}\n              {defs['type'] && !defs['type'].hidden ? (\n                <div className=\"formview typeview\">\n                  {NCUI.RenderLabel(\n                    'type',\n                    defs['type'].displayLabel,\n                    defs['type'].help\n                  )}\n                  {NCUI.RenderStringValue('type', type)}\n                </div>\n              ) : (\n                <div />\n              )}\n            </div>\n            {NCUI.RenderLabel('target', defs['target'].displayLabel)}\n            {this.RenderSourceTargetButton(\n              'target',\n              dTargetNode.label,\n              disableSourceTargetInView\n            )}\n          </div>\n          {/* TABS - - - - - - - - - - - - - - - - - - - */}\n          <div className=\"tabcontainer\">\n            {NCUI.RenderTabSelectors(TABS, this.state, this.UISelectTab)}\n            <div className=\"tabview\">\n              {uSelectedTab === TABS.ATTRIBUTES &&\n                NCUI.RenderAttributesTabView(this.state, defs)}\n              {uSelectedTab === TABS.PROVENANCE &&\n                NCUI.RenderProvenanceTabView(this.state, defs)}\n            </div>\n          </div>\n          {/* CONTROL BAR - - - - - - - - - - - - - - - - */}\n          <div className=\"controlbar\">\n            {uShowCitationButton && (\n              <button\n                id=\"citationbtn\"\n                className=\"citationbutton\"\n                onClick={this.UICitationShow}\n              >\n                Cite Edge\n              </button>\n            )}\n            <div style={{ flexGrow: 1 }}></div>\n            {!uEditBtnHide && uSelectedTab !== TABS.EDGES && (\n              <button\n                id=\"editbtn\"\n                onClick={this.UIRequestEditEdge}\n                disabled={uEditBtnDisable}\n              >\n                Edit\n              </button>\n            )}\n          </div>\n          {!uEditBtnHide && uEditLockMessage && (\n            <div className=\"message warning\" style={{ marginTop: '1em' }}>\n              <p>{uEditLockMessage}</p>\n              <p hidden={!isAdmin}>\n                <b>ADMINISTRATOR ONLY</b>: If you are absolutely sure this is an\n                error, you can force the unlock.\n                <button onClick={this.UIDisableEditMode} style={{ marginLeft: 0 }}>\n                  Force Unlock\n                </button>\n              </p>\n            </div>\n          )}\n        </div>\n        {uShowCitationDialog && (\n          <NCDialogCitation message={citation} onClose={this.UICitationClose} />\n        )}\n      </div>\n    );\n  }\n\n  RenderEdit() {\n    const { parentNodeId } = this.props;\n    const {\n      sourceId,\n      targetId,\n      type,\n      revision,\n      uSelectedTab,\n      uSelectSourceTarget,\n      uBackgroundColor,\n      uNewNodeLabel,\n      animateHeight,\n      dSourceNode,\n      dTargetNode\n    } = this.state;\n    const bgcolor = uBackgroundColor + '99'; // hack opacity\n    const defs = UDATA.AppState('TEMPLATE').edgeDefs;\n    const AskNodeDialog = uNewNodeLabel ? (\n      <NCDialog\n        message={`Node \"${uNewNodeLabel}\" does not exist.  Do you want to create it?`}\n        okmessage={`Create \"${uNewNodeLabel}\" node`}\n        onOK={this.CreateNode}\n        cancelmessage=\"Back to Edge Edit\"\n        onCancel={this.BackToEditing}\n      />\n    ) : (\n      ''\n    );\n    const saveIsDisabled = uSelectSourceTarget || isNaN(sourceId) || isNaN(targetId);\n    return (\n      <div>\n        <div className=\"screen\"></div>\n        <div className={`nccomponent ncedge ${animateHeight}`}>\n          <div\n            className=\"edit\"\n            style={{\n              background: bgcolor,\n              borderColor: uBackgroundColor\n            }}\n          >\n            {/* BUILT-IN - - - - - - - - - - - - - - - - - */}\n            <div className=\"formview\">\n              {NCUI.RenderLabel('source', defs['source'].displayLabel)}\n              {this.RenderSourceTargetButton(\n                'source',\n                dSourceNode.label,\n                parentNodeId === sourceId\n              )}\n              <div />\n              <div className=\"edgetypeRow\">\n                <div className=\"targetarrow\">\n                  <button\n                    className=\"swapbtn\"\n                    onClick={this.SwapSourceAndTarget}\n                    title=\"Swap 'Source' and 'Target' nodes\"\n                  >\n                    {ARROW_UPDOWN}\n                  </button>\n                </div>\n                {/* Special handling for `type` field */}\n                {defs['type'] && !defs['type'].hidden && (\n                  <div className=\"formview typeview\">\n                    {NCUI.RenderLabel(\n                      'type',\n                      defs['type'].displayLabel,\n                      defs['type'].help\n                    )}\n                    {NCUI.RenderOptionsInput(\n                      'type',\n                      type,\n                      defs,\n                      this.UIInputUpdate,\n                      defs['type'].help\n                    )}\n                  </div>\n                )}\n              </div>\n              {NCUI.RenderLabel('target', defs['target'].displayLabel)}\n              {this.RenderSourceTargetButton(\n                'target',\n                dTargetNode.label,\n                parentNodeId === targetId\n              )}\n            </div>\n            {/* TABS - - - - - - - - - - - - - - - - - - - */}\n            <div className=\"tabcontainer\">\n              {NCUI.RenderTabSelectors(TABS, this.state, this.UISelectTab)}\n              <div className=\"tabview\">\n                {uSelectedTab === TABS.ATTRIBUTES &&\n                  NCUI.RenderAttributesTabEdit(this.state, defs, this.UIInputUpdate)}\n                {uSelectedTab === TABS.PROVENANCE &&\n                  NCUI.RenderProvenanceTabEdit(\n                    this.state,\n                    defs,\n                    this.UIProvenanceInputUpdate\n                  )}\n              </div>\n            </div>\n            {/* CONTROL BAR - - - - - - - - - - - - - - - - */}\n            <div className=\"controlbar\" style={{ justifyContent: 'space-between' }}>\n              {revision > 0 && (\n                <button className=\"cancelbtn\" onClick={this.UIDeleteEdge}>\n                  Delete\n                </button>\n              )}\n              <button className=\"cancelbtn\" onClick={this.UICancelEditMode}>\n                Cancel\n              </button>\n              <button onClick={this.SaveEdge} disabled={saveIsDisabled}>\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n        {AskNodeDialog}\n      </div>\n    );\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// FORM RENDERERS\n  ///\n\n  /**\n   * The Source and Target Buttons are used for\n   * - Displaying the source / target name in the view/edit panel\n   * - Click on Source or Target to select a new one\n   * - Showing a focus ring (outline) after having secondarily selected a source/target\n   * @param {string} key 'source' or 'target'\n   * @param {string} value\n   * @param {boolean} disabled Used by renderView to disable source/target selection buttons\n   *                           when it isn't being edited\n   * @returns {jsx}\n   */\n  RenderSourceTargetButton(key, value, disabled) {\n    const {\n      sourceId,\n      targetId,\n      uSelectSourceTarget,\n      dSourceNodeColor,\n      dTargetNodeColor\n    } = this.state;\n    let color;\n    if (!disabled && (uSelectSourceTarget === key || value === undefined)) {\n      return (\n        <NCAutoSuggest\n          parentKey={key}\n          value={value}\n          onChange={this.UISourceTargetInputUpdate}\n          onSelect={this.UISourceTargetInputSelect}\n        />\n      );\n    } else {\n      color = key === 'source' ? dSourceNodeColor : dTargetNodeColor;\n      // Secondary selection?\n      const SELECTION = UDATA.AppState('SELECTION');\n      let isSecondarySelection = false;\n      if (key === 'source') {\n        isSecondarySelection = SELECTION.selectedSecondary === sourceId;\n      } else {\n        // key === 'target'\n        isSecondarySelection = SELECTION.selectedSecondary === targetId;\n      }\n      const selected = isSecondarySelection ? 'selected' : '';\n      return (\n        <div>\n          <button\n            id={key}\n            key={`${key}value`}\n            className={`sourcetargetbtn ${selected}`}\n            onClick={this.UIEnableSourceTargetSelect}\n            style={{ backgroundColor: color + '55', borderColor: color }}\n            disabled={disabled}\n          >\n            {value || EDGE_NOT_SET_LABEL}\n          </button>\n        </div>\n      );\n    }\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// MAIN RENDER\n  ///\n  render() {\n    const { id, uViewMode } = this.state;\n    if (!id) return ''; // nothing selected\n    if (uViewMode === NCUI.VIEWMODE.VIEW) {\n      return this.RenderView();\n    } else {\n      return this.RenderEdit();\n    }\n  }\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NCEdge;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n    EdgeTable is used to to display a table of edges for review.\n\n    It displays NCDATA.\n    But also read FILTEREDNCDATA to show highlight/filtered state\n\n\n  ## PROPS\n\n    * tableHeight -- sets height based on InfoPanel dragger\n    * isOpen -- whether the table is visible\n\n\n  ## TO USE\n\n    EdgeTable is self contained and relies on global NCDATA to load.\n\n      <EdgeTable tableHeight isOpen />\n\n\n    Set `DBG` to true to show the `ID` column.\n\n  ## 2018-12-07 Update\n\n    Since we're not using tab navigation:\n    1. The table isExpanded is now true by default.\n    2. The \"Show/Hide Table\" button is hidden.\n\n    Reset these to restore previous behavior.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst NCUI = require('../nc-ui');\nconst CMTMGR = require('../comment-mgr');\nconst SETTINGS = require('settings');\nconst FILTER = require('./filter/FilterEnums');\nconst UNISYS = require('unisys/client');\nimport HDATE from 'system/util/hdate';\nimport URCommentVBtn from './URCommentVBtn';\nimport URTable from './URTable';\nconst { BUILTIN_FIELDS_EDGE } = require('system/util/enum');\nconst { ICON_PENCIL, ICON_VIEW } = require('system/util/constant');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst isAdmin = SETTINGS.IsAdmin();\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UDATA = null;\n\n/// UTILITY METHODS ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction u_GetButtonId(cref) {\n  return `table-comment-button-${cref}`;\n}\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass NCEdgeTable extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n\n    const TEMPLATE = this.AppState('TEMPLATE');\n    this.state = {\n      edgeDefs: TEMPLATE.edgeDefs,\n      edges: [],\n      selectedEdgeId: undefined,\n      selectedEdgeColor: TEMPLATE.sourceColor,\n      filteredEdges: [],\n      nodes: [], // needed for dereferencing source/target\n      disableEdit: false,\n      isLocked: false,\n      isExpanded: true,\n      sortkey: 'Relationship',\n      dummy: 0, // used to force render update\n\n      COLUMNDEFS: []\n    };\n\n    this.onUpdateCommentUI = this.onUpdateCommentUI.bind(this);\n    this.onStateChange_SESSION = this.onStateChange_SESSION.bind(this);\n    this.onStateChange_SELECTION = this.onStateChange_SELECTION.bind(this);\n    this.onEDGE_OPEN = this.onEDGE_OPEN.bind(this);\n    this.updateEdgeFilterState = this.updateEdgeFilterState.bind(this);\n    this.handleDataUpdate = this.handleDataUpdate.bind(this);\n    this.handleFilterDataUpdate = this.handleFilterDataUpdate.bind(this);\n    this.updateEditState = this.updateEditState.bind(this);\n    this.OnTemplateUpdate = this.OnTemplateUpdate.bind(this);\n    this.onViewButtonClick = this.onViewButtonClick.bind(this);\n    this.onEditButtonClick = this.onEditButtonClick.bind(this);\n    this.onToggleExpanded = this.onToggleExpanded.bind(this);\n    this.onHighlightNode = this.onHighlightNode.bind(this);\n    this.m_FindMatchingObjsByProp = this.m_FindMatchingObjsByProp.bind(this);\n    this.m_FindMatchingEdgeByProp = this.m_FindMatchingEdgeByProp.bind(this);\n    this.m_FindEdgeById = this.m_FindEdgeById.bind(this);\n    this.lookupNodeLabel = this.lookupNodeLabel.bind(this);\n\n    this.SetColumnDefs = this.SetColumnDefs.bind(this);\n\n    this.sortDirection = 1;\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n\n    UDATA.HandleMessage('EDGE_OPEN', this.onEDGE_OPEN);\n    UDATA.HandleMessage('EDIT_PERMISSIONS_UPDATE', this.updateEditState);\n\n    // SESSION is called by SessionSHell when the ID changes\n    //  set system-wide. data: { classId, projId, hashedId, groupId, isValid }\n    this.OnAppStateChange('SESSION', this.onStateChange_SESSION);\n\n    // Always make sure class methods are bind()'d before using them\n    // as a handler, otherwise object context is lost\n    this.OnAppStateChange('NCDATA', this.handleDataUpdate);\n\n    // Handle Template updates\n    this.OnAppStateChange('TEMPLATE', this.OnTemplateUpdate);\n\n    // Track Filtered Data Updates too\n    this.OnAppStateChange('FILTEREDNCDATA', this.handleFilterDataUpdate);\n\n    this.OnAppStateChange('SELECTION', this.onStateChange_SELECTION);\n\n    // Comment Message Handlers\n    // Force update whenever threads are opened or closed\n    UDATA.HandleMessage('CTHREADMGR_THREAD_OPENED', this.onUpdateCommentUI);\n    UDATA.HandleMessage('CTHREADMGR_THREAD_CLOSED', this.onUpdateCommentUI);\n    UDATA.HandleMessage('CTHREADMGR_THREAD_CLOSED_ALL', this.onUpdateCommentUI);\n  } // constructor\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  componentDidMount() {\n    if (DBG) console.log('EdgeTable.componentDidMount!');\n\n    this.onStateChange_SESSION(this.AppState('SESSION'));\n\n    // Explicitly retrieve data because we may not have gotten a NCDATA\n    // update while we were hidden.\n    // filtered data needs to be set before D3Data\n    const FILTEREDNCDATA = UDATA.AppState('FILTEREDNCDATA');\n    this.setState({ filteredEdges: FILTEREDNCDATA.edges }, () => {\n      let NCDATA = this.AppState('NCDATA');\n      this.handleDataUpdate(NCDATA);\n      this.SetColumnDefs();\n    });\n\n    // Request edit state too because the update may have come\n    // while we were hidden\n    this.updateEditState();\n  }\n\n  componentWillUnmount() {\n    UDATA.UnhandleMessage('EDGE_OPEN', this.onEDGE_OPEN);\n    UDATA.UnhandleMessage('EDIT_PERMISSIONS_UPDATE', this.updateEditState);\n    this.AppStateChangeOff('SESSION', this.onStateChange_SESSION);\n    this.AppStateChangeOff('NCDATA', this.handleDataUpdate);\n    this.AppStateChangeOff('FILTEREDNCDATA', this.handleFilterDataUpdate);\n    this.AppStateChangeOff('TEMPLATE', this.OnTemplateUpdate);\n    this.AppStateChangeOff('SELECTION', this.onStateChange_SELECTION);\n    UDATA.UnhandleMessage('CTHREADMGR_THREAD_OPENED', this.onUpdateCommentUI);\n    UDATA.UnhandleMessage('CTHREADMGR_THREAD_CLOSED', this.onUpdateCommentUI);\n    UDATA.UnhandleMessage('CTHREADMGR_THREAD_CLOSED_ALL', this.onUpdateCommentUI);\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// Force update so that URCommentVBtn selection state is updated\n  onUpdateCommentUI(data) {\n    this.setState({ dummy: this.state.dummy + 1 });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  onStateChange_SELECTION(data) {\n    this.setState({\n      selectedEdgeId: data.edges.length > 0 ? data.edges[0].id : undefined\n    });\n  }\n  /** Handle change in SESSION data\n    Called both by componentWillMount() and AppStateChange handler.\n    The 'SESSION' state change is triggered in two places in SessionShell during\n    its handleChange() when active typing is occuring, and also during\n    SessionShell.componentWillMount()\n   */\n  onStateChange_SESSION(decoded) {\n    this.setState({ isLocked: !decoded.isValid });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  displayUpdated(nodeEdge) {\n    // Prevent error if `meta` info is not defined yet, or not properly imported\n    if (!nodeEdge.meta) return '';\n\n    var d = new Date(\n      nodeEdge.meta.revision > 0 ? nodeEdge.meta.updated : nodeEdge.meta.created\n    );\n\n    var year = String(d.getFullYear());\n    var date = d.getMonth() + 1 + '/' + d.getDate() + '/' + year.substr(2, 4);\n    var time = d.toTimeString().substr(0, 5);\n    var dateTime = date + ' at ' + time;\n    var titleString = 'v' + nodeEdge.meta.revision;\n    if (nodeEdge._nlog)\n      titleString += ' by ' + nodeEdge._nlog[nodeEdge._nlog.length - 1];\n    var tag = <span title={titleString}> {dateTime} </span>;\n\n    return tag;\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// User selected edge usu by clicking NCNode's edge item in Edges tab\n  onEDGE_OPEN(data) {\n    this.setState({ selectedEdgeId: data.edge.id });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// Set edge filtered status based on current filteredNodes\n  updateEdgeFilterState(edges, filteredEdges) {\n    // add highlight/filter status\n    if (filteredEdges.length > 0) {\n      // If we're transitioning from \"HILIGHT/FADE\" to \"COLLAPSE\" or \"FOCUS\", then we\n      // also need to remove edges that are not in filteredEdges\n      const FILTERDEFS = UDATA.AppState('FILTERDEFS');\n      if (\n        FILTERDEFS.filterAction === FILTER.ACTION.REDUCE ||\n        FILTERDEFS.filterAction === FILTER.ACTION.FOCUS\n      ) {\n        // Reduce (remove) or Focus\n        edges = edges.filter(edge => {\n          const filteredEdge = filteredEdges.find(e => e.id === edge.id);\n          return filteredEdge; // keep if it's in the list of filtered edges\n        });\n      } else {\n        // Fade\n        // Fading is handled by setting node.filteredTransparency which is\n        // directly handled by the filter now.  So no need to process it\n        // here in the table.\n      }\n    }\n    this.setState({ edges });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Handle updated SELECTION: NCDATA updates\n   */\n  handleDataUpdate(data) {\n    if (data && data.edges && data.nodes) {\n      // NCDATA.edges no longer uses source/target objects\n      // ...1. So we need to save nodes for dereferencing.\n      this.setState({ nodes: data.nodes }, () => {\n        // ...2. So we stuff 'sourceLabel' and 'targetLabel' into the local edges array\n        let edges = data.edges.map(e => {\n          e.sourceLabel = this.lookupNodeLabel(e.source); // requires `state.nodes` be set\n          e.targetLabel = this.lookupNodeLabel(e.target);\n          return e;\n        });\n        this.setState({ edges });\n        const { filteredEdges } = this.state;\n        this.updateEdgeFilterState(edges, filteredEdges);\n      });\n    }\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Handle FILTEREDNCDATA updates sent by filters-logic.m_FiltersApply\n      Note that edge.soourceLabel and edge.targetLabel should already be set\n      by filter-mgr.\n   */\n  handleFilterDataUpdate(data) {\n    if (data.edges) {\n      const filteredEdges = data.edges;\n      // If we're transitioning from \"COLLAPSE\" or \"FOCUS\" to \"HILIGHT/FADE\", then we\n      // also need to add back in edges that are not in filteredEdges\n      // (because \"COLLAPSE\" and \"FOCUS\" removes edges that are not matched)\n      const FILTERDEFS = UDATA.AppState('FILTERDEFS');\n      if (FILTERDEFS.filterAction === FILTER.ACTION.FADE) {\n        const NCDATA = UDATA.AppState('NCDATA');\n        this.setState(\n          {\n            edges: NCDATA.edges,\n            filteredEdges\n          },\n          () => {\n            const edges = NCDATA.edges;\n            this.updateEdgeFilterState(edges, filteredEdges);\n          }\n        );\n      } else {\n        this.setState(\n          {\n            edges: filteredEdges,\n            filteredEdges\n          },\n          () => {\n            const edges = filteredEdges;\n            this.updateEdgeFilterState(edges, filteredEdges);\n          }\n        );\n      }\n    }\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  updateEditState() {\n    // disable edit if someone else is editing a template, node, or edge\n    let disableEdit = false;\n    UDATA.NetCall('SRV_GET_EDIT_STATUS').then(data => {\n      // someone else might be editing a template or importing or editing node or edge\n      disableEdit =\n        data.templateBeingEdited ||\n        data.importActive ||\n        data.nodeOrEdgeBeingEdited ||\n        data.commentBeingEditedByMe; // only lock out if this user is the one editing comments, allow network commen edits\n      this.setState({ disableEdit });\n    });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  OnTemplateUpdate(data) {\n    this.setState({\n      edgeDefs: data.edgeDefs,\n      selectedEdgeColor: data.sourceColor\n    });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Look up the Node label for source / target ids\n   */\n  lookupNodeLabel(nodeId) {\n    const node = this.state.nodes.find(n => n.id === nodeId);\n    if (node === undefined) return '...';\n    // if (node === undefined) throw new Error('EdgeTable: Could not find node', nodeId);\n    return node.label;\n  }\n\n  /// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onViewButtonClick(event, edgeId) {\n    event.preventDefault();\n    event.stopPropagation();\n    let edgeID = parseInt(edgeId);\n    let edge = this.m_FindEdgeById(edgeID);\n    if (DBG) console.log('EdgeTable: Edge id', edge.id, 'selected for viewing');\n    // Load Source Node then Edge\n    UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [edge.source] }).then(() => {\n      UDATA.LocalCall('EDGE_SELECT', { edgeId: edge.id });\n    });\n  }\n  onEditButtonClick(event, edgeId) {\n    event.preventDefault();\n    event.stopPropagation();\n    let edgeID = parseInt(edgeId);\n    let edge = this.m_FindEdgeById(edgeID);\n    if (DBG) console.log('EdgeTable: Edge id', edge.id, 'selected for editing');\n    // Load Source Node then Edge\n    UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [edge.source] }).then(() => {\n      UDATA.LocalCall('EDGE_SELECT_AND_EDIT', { edgeId: edge.id });\n    });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onToggleExpanded(event) {\n    this.setState({\n      isExpanded: !this.state.isExpanded\n    });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n  /*/\n  onHighlightNode(nodeId) {\n    UDATA.LocalCall('TABLE_HILITE_NODE', { nodeId });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/\n   */\n  setSortKey(key, type) {\n    if (key === this.state.sortkey) this.sortDirection = -1 * this.sortDirection;\n    // if this was already the key, flip the direction\n    else this.sortDirection = 1;\n\n    const edges = this.sortTable(key, this.state.edges, type);\n    this.setState({\n      edges,\n      sortkey: key\n    });\n    UNISYS.Log('sort edge table', key, this.sortDirection);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  selectNode(id, event) {\n    event.preventDefault();\n\n    // Load Source\n    if (DBG) console.log('EdgeTable: Edge id', id, 'selected for editing');\n    UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [id] });\n  }\n\n  /// URTABLE COLUMN DEFS /////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  SetColumnDefs() {\n    const { edges, edgeDefs, disableEdit, isLocked } = this.state;\n    let attributeDefs = Object.keys(edgeDefs).filter(\n      k => !BUILTIN_FIELDS_EDGE.includes(k)\n    );\n\n    /// CLICK HANDLERS\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    function ui_ClickViewEdge(event, value) {\n      event.preventDefault();\n      event.stopPropagation();\n      const { edgeId, sourceId } = value;\n      // Load Source Node then Edge\n      UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [sourceId] }).then(() => {\n        UDATA.LocalCall('EDGE_SELECT', { edgeId });\n      });\n    }\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    function ui_ClickEditEdge(event, value) {\n      event.preventDefault();\n      event.stopPropagation();\n      const { edgeId, sourceId } = value;\n      // Load Source Node then Edge\n      UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [sourceId] }).then(() => {\n        UDATA.LocalCall('EDGE_SELECT_AND_EDIT', { edgeId });\n      });\n    }\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    function ui_ClickViewNode(event, nodeId) {\n      event.preventDefault();\n      event.stopPropagation();\n      UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [parseInt(nodeId)] });\n    }\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    /// Toggle Comment Button on and off\n    function ui_ClickComment(cref) {\n      const position = CMTMGR.GetCommentThreadPosition(u_GetButtonId(cref));\n      const uiref = u_GetButtonId(cref);\n      CMTMGR.ToggleCommentCollection(uiref, cref, position);\n    }\n    /// RENDERERS\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    function RenderViewOrEdit(value) {\n      return (\n        <div>\n          {!disableEdit && (\n            <button\n              className=\"outline\"\n              onClick={event => ui_ClickViewEdge(event, value)}\n            >\n              {ICON_VIEW}\n            </button>\n          )}\n          {!disableEdit && !isLocked && (\n            <button\n              className=\"outline\"\n              onClick={event => ui_ClickEditEdge(event, value)}\n            >\n              {ICON_PENCIL}\n            </button>\n          )}\n        </div>\n      );\n    }\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    // interface TTblNodeObject {\n    //   id: String;\n    //   label: String;\n    // }\n    function RenderNode(value) {\n      if (!value) return; // skip if not defined yet\n      if (value.id === undefined || value.label === undefined) {\n        // During Edge creation, source/target may not be defined yet\n        return <span style={{ color: 'red' }}>...</span>;\n      }\n      return (\n        <button\n          className=\"outline\"\n          onClick={event => ui_ClickViewNode(event, value.id)}\n        >\n          <span style={{ color: 'blue' }}>{value.label}</span>\n        </button>\n      );\n    }\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    function RenderCommentBtn(value) {\n      return (\n        <URCommentVBtn\n          uiref={u_GetButtonId(value.cref)}\n          count={value.count}\n          hasUnreadComments={value.hasUnreadComments}\n          selected={value.selected}\n          cb={e => ui_ClickComment(value.cref)}\n        />\n      );\n    }\n    /// CUSTOM SORTERS\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    /// tdata = TTblNodeObject[] = { id: String, label: String }\n    function SortNodes(key, tdata, order) {\n      const sortedData = [...tdata].sort((a, b) => {\n        if (a[key].label < b[key].label) return order;\n        if (a[key].label > b[key].label) return order * -1;\n        return 0;\n      });\n      return sortedData;\n    }\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    function SortCommentsByCount(key, tdata, order) {\n      const sortedData = [...tdata].sort((a, b) => {\n        if (a[key].count < b[key].count) return order;\n        if (a[key].count > b[key].count) return order * -1;\n        return 0;\n      });\n      return sortedData;\n    }\n    /// COLUMN DEFINITIONS\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    // column definitions for custom attributes\n    // (built in columns are: view, degrees, label)\n    const ATTRIBUTE_COLUMNDEFS = attributeDefs.map(key => {\n      const title = edgeDefs[key].displayLabel;\n      const type = edgeDefs[key].type;\n      return {\n        title,\n        type,\n        data: key\n      };\n    });\n    const COLUMNDEFS = [\n      {\n        title: '', // View/Edit\n        data: 'id',\n        type: 'number',\n        width: 50, // in px\n        renderer: RenderViewOrEdit\n      },\n      {\n        title: edgeDefs['source'].displayLabel,\n        width: 130, // in px\n        data: 'sourceDef',\n        renderer: RenderNode,\n        sorter: SortNodes\n      }\n    ];\n    if (edgeDefs['type'] && !edgeDefs['type'].hidden) {\n      COLUMNDEFS.push({\n        title: edgeDefs['type'].displayLabel,\n        type: 'text',\n        width: 130, // in px\n        data: 'type'\n      });\n    }\n    COLUMNDEFS.push(\n      {\n        title: edgeDefs['target'].displayLabel,\n        width: 130, // in px\n        data: 'targetDef',\n        renderer: RenderNode,\n        sorter: SortNodes\n      },\n      ...ATTRIBUTE_COLUMNDEFS,\n      {\n        title: 'Comments',\n        data: 'commentVBtnDef',\n        type: 'text',\n        width: 50, // in px\n        renderer: RenderCommentBtn,\n        sorter: SortCommentsByCount\n      }\n    );\n    this.setState({ COLUMNDEFS });\n  }\n\n  /// OBJECT HELPERS ////////////////////////////////////////////////////////////\n  /// these probably should go into a utility class\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Return array of objects that match the match_me object keys/values\n    NOTE: make sure that strings are compared with strings, etc\n   */\n  m_FindMatchingObjsByProp(obj_list, match_me = {}) {\n    // operate on arrays only\n    if (!Array.isArray(obj_list))\n      throw Error('FindMatchingObjectsByProp arg1 must be array');\n    let matches = obj_list.filter(obj => {\n      let pass = true;\n      for (let key in match_me) {\n        if (match_me[key] !== obj[key]) pass = false;\n        break;\n      }\n      return pass;\n    });\n    // return array of matches (can be empty array)\n    return matches;\n  }\n\n  /// EDGE HELPERS //////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Return array of nodes that match the match_me object keys/values\n    NOTE: make sure that strings are compared with strings, etc\n   */\n  m_FindMatchingEdgeByProp(match_me = {}) {\n    return this.m_FindMatchingObjsByProp(this.state.edges, match_me);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Convenience function to retrieve edge by ID\n   */\n  m_FindEdgeById(id) {\n    return this.m_FindMatchingEdgeByProp({ id })[0];\n  }\n\n  /// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** This is not yet implemented as of React 16.2.  It's implemented in 16.3.\n      getDerivedStateFromProps (props, state) {\n        console.error('getDerivedStateFromProps!!!');\n      }\n   */\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  render() {\n    const { edges, edgeDefs, disableEdit, isLocked, COLUMNDEFS } = this.state;\n    const { isOpen, tableHeight } = this.props;\n    const uid = CMTMGR.GetCurrentUserId();\n\n    // Only include built in fields\n    // Only include non-hidden fields\n    let attributeDefs = Object.keys(edgeDefs).filter(\n      k => !BUILTIN_FIELDS_EDGE.includes(k) && !edgeDefs[k].hidden\n    );\n\n    // show 'type' between 'source' and 'target' if `type` has been defined\n    // if it isn't defined, just show attribute fields after `source` and 'target`\n    const hasTypeField = edgeDefs['type'];\n    if (hasTypeField) attributeDefs = attributeDefs.filter(a => a !== 'type');\n\n    /// TABLE DATA GENERATION\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    const TABLEDATA = edges.map((edge, i) => {\n      const { id, source, target, sourceLabel, targetLabel, type } = edge;\n\n      const sourceDef = { id: source, label: sourceLabel };\n      const targetDef = { id: target, label: targetLabel };\n\n      // custom attributes\n      const attributes = {};\n      attributeDefs.forEach((key, i) => {\n        let data = {};\n        if (edgeDefs[key].type === 'markdown') {\n          // for markdown:\n          // a. provide the raw markdown string\n          // b. provide the HTML string\n          data.html = NCUI.Markdownify(edge[key]);\n          data.raw = edge[key];\n        } else if (edgeDefs[key].type === 'hdate')\n          data = edge[key] && edge[key].formattedDateString;\n        else data = edge[key];\n        attributes[key] = data;\n      });\n\n      // comment button definition\n      const cref = CMTMGR.GetNodeCREF(id);\n      const commentCount = CMTMGR.GetThreadedViewObjectsCount(cref, uid);\n      const ccol = CMTMGR.GetCommentCollection(cref) || {};\n      const hasUnreadComments = ccol.hasUnreadComments;\n      const selected = CMTMGR.GetOpenComments(cref);\n      const commentVBtnDef = {\n        cref,\n        count: commentCount,\n        hasUnreadComments,\n        selected\n      };\n\n      return {\n        id: { edgeId: id, sourceId: source }, // { edgeId, sourceId} for click handler\n        sourceDef, // { id: String, label: String }\n        targetDef, // { id: String, label: String }\n        type,\n        ...attributes,\n        commentVBtnDef,\n        meta: {\n          filteredTransparency: edge.filteredTransparency\n        }\n      };\n    });\n    return (\n      <div className=\"NCEdgeTable\" style={{ height: tableHeight }}>\n        <URTable isOpen={isOpen} data={TABLEDATA} columns={COLUMNDEFS} />\n      </div>\n    );\n  }\n} // class EdgeTable\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NCEdgeTable;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  NetGraph is a React wrapper for a D3 network graph component.\n\n  This component uses React to create the base dom element, but ncGraphRenderer\n  handles the data updates, rendering and animation updates.\n\n  React is explicitly prevented from updating the component (see\n  shouldComponentUpdate)\n\n  ## TO USE\n\n          <NCGraph/>\n\n  ## Why not use FauxDom?\n\n  https://lab.oli.me.uk/react-faux-dom-state/\n  This article suggests that maybe using force graphs with react-faux-dom\n  not quite work.\n      \"If you want to animate things, use a React animation library (they’re\n        great and work fine with faux DOM), you have to find the React way to\n        do things, sadly some D3 concepts just don’t translate. If you want\n        some physics based graph full of state then you’re probably better\n        off keeping to the original way of embedding D3 in React, dropping\n        out of React and letting D3 mutate that element.\"\n  Indeed, in our testing, the animation updates were not optimal.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst ReactDOM = require('react-dom');\nconst ReactStrap = require('reactstrap');\nconst { Button } = ReactStrap;\nconst NCGraphRenderer = require('./NCGraphRenderer');\nconst UNISYS = require('unisys/client');\nconst RENDERMGR = require('../render-mgr');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'NCGraph';\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet UDATA = null;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass NCGraph extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ncGraphRenderer: {},\n      d3data: {},\n      nodeTypes: [],\n      edgeTypes: []\n    };\n\n    this.updateVData = this.updateVData.bind(this);\n    this.updateTemplate = this.updateTemplate.bind(this);\n    this.updateColorMap = this.updateColorMap.bind(this);\n    this.updateSelection = this.updateSelection.bind(this);\n    this.onZoomReset = this.onZoomReset.bind(this);\n    this.onZoomIn = this.onZoomIn.bind(this);\n    this.onZoomOut = this.onZoomOut.bind(this);\n    this.constructGraph = this.constructGraph.bind(this);\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n\n    UDATA.OnAppStateChange('VDATA', this.updateVData);\n    UDATA.OnAppStateChange('TEMPLATE', this.updateTemplate);\n    UDATA.OnAppStateChange('COLORMAP', this.updateColorMap);\n    UDATA.OnAppStateChange('SELECTION', this.updateSelection);\n    UDATA.OnAppStateChange('HILITE', this.updateSelection);\n    UDATA.HandleMessage('CONSTRUCT_GRAPH', this.constructGraph);\n  } // constructor\n\n  /// CLASS PRIVATE METHODS /////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// DATA METHODS\n  /**\n   *\n   * @param {object} data\n   * @param {array} data.nodes\n   * @param {array} data.edges\n   */\n  updateVData(data) {\n    if (DBG) console.log(PR, 'got state D3DATA', data, RENDERMGR);\n    const d3data = RENDERMGR.ProcessNCData(data);\n    this.state.ncGraphRenderer.SetData(d3data);\n  }\n  /**\n   * Update default values when template has changed\n   * @param {object} data TEMPLATE\n   */\n  updateTemplate(data) {\n    if (DBG) console.log(PR, 'got state TEMPLATE', data);\n    const TEMPLATE = this.AppState('TEMPLATE');\n    // Update Legends\n    const nodeTypes = TEMPLATE.nodeDefs.type.options;\n    const edgeTypes = TEMPLATE.edgeDefs.type.options;\n    // Update\n    this.setState({ nodeTypes, edgeTypes }, () => {\n      this.forceUpdate(); // just once, needed to overcome shouldComponentUpdate override\n    });\n  }\n  /**\n   * Node/Edge Colors in Template have been changed.\n   * The template may be loaded or changed after NCDATA is loaded.\n   * So we need to explicitly update the colors if the color\n   * definitions have changed.\n   */\n  updateColorMap(data) {\n    if (DBG) console.log(PR, 'got state COLORMAP', data);\n    this.state.ncGraphRenderer.UpdateGraph();\n  }\n  /**\n   *\n   * @param {*} data\n   */\n  updateSelection(data) {\n    if (DBG) console.log(PR, 'updateSelection', data);\n    const d3data = RENDERMGR.UpdateSelection(data);\n    this.state.ncGraphRenderer.SetData(d3data, { skipForceUpdate: true });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// UI METHODS\n\n  /**\n   */\n  onZoomReset() {\n    this.state.ncGraphRenderer.ZoomReset();\n  }\n  /**\n   */\n  onZoomIn() {\n    this.state.ncGraphRenderer.ZoomIn();\n  }\n  /**\n   */\n  onZoomOut() {\n    this.state.ncGraphRenderer.ZoomOut();\n  }\n\n  /// REACT LIFECYCLE ///////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  constructGraph() {\n    // first destroy any existing SVG graph elements\n    const netgraph = document.getElementById('netgraph');\n    if (netgraph) netgraph.remove();\n\n    // ncGraphRenderer Constructor\n    const TEMPLATE = this.AppState('TEMPLATE');\n    if (this.state.ncGraphRenderer && this.state.ncGraphRenderer.Deregister) {\n      // if ncGraphRenderer was previously created, deregister it so it stops receiving data updates\n      this.state.ncGraphRenderer.Deregister();\n    }\n    const ncGraphRenderer = new NCGraphRenderer(this.dom); // this.dom defined in render via ref\n    try {\n      const nodeTypes = TEMPLATE.nodeDefs.type.options;\n      const edgeTypes = TEMPLATE.edgeDefs.type.options;\n      this.setState({ ncGraphRenderer, nodeTypes, edgeTypes });\n      this.forceUpdate(); // just once, needed to overcome shouldComponentUpdate override\n    } catch (err) {\n      console.warn('constructGraph error', err);\n    }\n  }\n\n  /// REACT LIFECYCLE ///////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  componentDidMount() {\n    this.constructGraph();\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  componentWillUnMount() {\n    UDATA.AppStateChangeOff('VDATA', this.updateVData);\n    UDATA.AppStateChangeOff('TEMPLATE', this.updateTemplate);\n    UDATA.AppStateChangeOff('COLORMAP', this.updateColorMap);\n    UDATA.AppStateChangeOff('SELECTION', this.updateSelection);\n    UDATA.AppStateChangeOff('HILITE', this.updateSelection);\n    UDATA.UnhandleMessage('CONSTRUCT_GRAPH', this.constructGraph);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  shouldComponentUpdate() {\n    // This prevents React from updating the component,\n    // allowing D3 to handle the simulation animation updates\n    // This is also necessary for D3 to handle the\n    // drag events.\n    return false;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  render() {\n    const { nodeTypes, edgeTypes } = this.state;\n    return (\n      <div\n        className=\"--NCGraph\"\n        ref={dom => (this.dom = dom)}\n        style={{ height: '100%', position: 'relative' }}\n      >\n        <div style={{ margin: '10px 0 0 10px' }}>\n          <div className=\"tooltipAnchor\">\n            <span style={{ fontSize: '9px' }}>\n              <div className=\"badge\">?</div>\n              NETGRAPH for {this.AppState('TEMPLATE').name}\n            </span>\n            <span style={{ fontSize: '12px' }} className=\"tooltiptext\">\n              {this.AppState('TEMPLATE').description}\n            </span>\n          </div>\n        </div>\n        <div\n          style={{ position: 'absolute', right: '10px', width: '50px', zIndex: 1001 }}\n        >\n          <Button\n            outline\n            onClick={this.onZoomIn}\n            style={{ width: '35px', backgroundColor: '#fff', opacity: '0.8' }}\n          >\n            +\n          </Button>\n          &nbsp;\n          <Button\n            outline\n            onClick={this.onZoomReset}\n            style={{ width: '35px', backgroundColor: '#fff', opacity: '0.8' }}\n          >\n            &bull;\n          </Button>\n          &nbsp;\n          <Button\n            outline\n            onClick={this.onZoomOut}\n            style={{ width: '35px', backgroundColor: '#fff', opacity: '0.8' }}\n          >\n            -\n          </Button>\n        </div>\n        <div\n          style={{\n            position: 'absolute',\n            bottom: '5px',\n            marginLeft: '10px',\n            marginBottom: '0px',\n            fontSize: '10px'\n          }}\n        >\n          <div style={{ display: 'inline-block', paddingRight: '2em' }}>KEY</div>\n          <br></br>\n          <div style={{ display: 'inline-block', paddingRight: '2em' }}>\n            {' '}\n            - Node Types:\n          </div>\n          {nodeTypes.map((type, i) => (\n            <div key={i} className=\"tooltipAnchor\">\n              <div\n                style={{\n                  display: 'inline-block',\n                  paddingRight: '2em',\n                  lineHeight: '10px'\n                }}\n              >\n                <div\n                  style={{\n                    display: 'inline-block',\n                    width: '10px',\n                    height: '8px',\n                    backgroundColor: type.color\n                  }}\n                ></div>\n                &nbsp;{type.label === '' ? 'No Type Selected' : type.label}\n              </div>\n              <span className=\"tooltiptextabove\">\n                {type.label === '' ? 'No Type Selected' : type.help || type.label}\n              </span>\n            </div>\n          ))}\n          <br></br>\n          <div style={{ display: 'inline-block', paddingRight: '2em' }}>\n            {' '}\n            - Edge Types:\n          </div>\n          {edgeTypes.map((type, i) => (\n            <div key={i} className=\"tooltipAnchor\">\n              <div\n                style={{\n                  display: 'inline-block',\n                  paddingRight: '2em',\n                  lineHeight: '10px'\n                }}\n              >\n                <div\n                  style={{\n                    display: 'inline-block',\n                    width: '10px',\n                    height: '8px',\n                    backgroundColor: type.color\n                  }}\n                ></div>\n                &nbsp;{type.label === '' ? 'No Type Selected' : type.label}\n              </div>\n              <span className=\"tooltiptextabove\">\n                {type.label === '' ? 'No Type Selected' : type.help || type.label}\n              </span>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n} // class NetGraph\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NCGraph;\n","/* eslint-disable prefer-reflect */\n/* d3.call() is false-triggering the above rule */\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  NCGraphRenderer\n\n  This uses D3 Version 4.0.\n\n  This is a pure data renderer based on d3-simplenetgraph.\n  It does not rely on any outside data sources/dependencies or UNISYS calls.\n\n  The one exception is that `mouseover` and `node click` events are\n  broadcast through UNISYS calls.\n\n  This is designed to work with the NCGraph React component.\n\n  NCGraph calls NCGraphRenderer.SetData whenever it receives an updated data object.\n  This triggers NCGraphRenderer to redraw itself.\n\n  VDATA\n  -----\n  The data for display is generally referred to as VDATA, for visual\n  rendering data.\n\n    VDATA = { nodes:Object, edges:Object }\n    nodes = [ ...{ id :number,\n                    label :string,\n                    selected :boolean,\n                    selectedSecondary :boolean,  // for selected source/target node\n                    size :number,\n                    color :string(css),\n                    opacity :number(0-1),\n                    strokeColor :string(css),\n                    strokeWidth :number,\n                    textColor :string(css),\n                    help :string\n                  }],\n    edges = [ ...{ id :number,\n                    sourceId :number,\n                    targetId :number,\n                    size: number,\n                    color: string(css),\n                    opacity: number(0-1)\n                  }]\n\n\n  Using NCGraphRenderer\n  ---------------------\n  Embed NCGraphRender in a parent component.  See NCGraph for an example of use.\n  1. const graph = NCGraphRender(this.dom) -- Root element to attach the SVG graph to\n  2. graph.SetData(VDATA) -- Define data to draw\n      graph.UpdateGraph()   -- Force a redraw using the loaded data set\n\n  External Controls\n  * graph.ZoomReset()\n  * graph.ZoomIn()\n  * graph.ZoomOut()\n\n\n  Zoom/Pan\n  --------\n  Zooming/panning is handled via D3's zoom() function.  Basically it\n  involves creating a `g` element that wraps the node and link elements\n  and applying transforms on that wrapper.\n\n\n  Provenance\n  ----------\n  d3-simplenetgraph was based on:\n  *  rdpoor's commented version of mbostock's original code\n      https://gist.github.com/rdpoor/3a66b3e082ffeaeb5e6e79961192f7d8\n  *  danilo's v4 update\n      https://bl.ocks.org/tezzutezzu/cd04b3f1efee4186ff42aae66c87d1a7\n  *  mbostock's general update pattern\n      https://bl.ocks.org/mbostock/3808218\n  *  Coderwall's zoom and pan method\n      https://coderwall.com/p/psogia/simplest-way-to-add-zoom-pan-on-d3-js\n  *  Vladyslav Babenko's zoom buttons example\n      https://jsfiddle.net/vbabenko/jcsqqu6j/9/\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst d3 = require('d3');\nconst UNISYS = require('unisys/client');\nvar UDATA = null;\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'NCGraphRenderer';\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet m_width = 800;\nlet m_height = 800;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst M_FORCEPROPERTIES = {\n  // values for all forces\n  center: {\n    x: 0.5,\n    y: 0.5\n  },\n  charge: {\n    // 'charge' provides a repelling force against other nodes\n    enabled: true,\n    // -50 works well for small networks with no links\n    strength: -200, // during _UpdateForces, 'strength' is multipled by the size of the node (degrees+1)\n    // -50 close < -1000 pushes nodes far apart\n    distanceMin: 1, // use 'collide' to keep nodes from intersecting, not distance\n    distanceMax: 750 // max keeps large clusters from pushing unattached nodes too far away\n    // 250 close < 500 med < 1000 spacious < 10000 far away\n  },\n  collide: {\n    // 'collide' keeps nodes from overlapping each other\n    // collide's `radius` value maintains a minimum distance between nodes\n    enabled: true,\n    strength: 0.75, // 1 keeps nodes from intersecting during drag so nodes feel more solid\n    // 0.75 softens the collisions so they don't feel so jarring\n    // 0.3 will allow nodes to intersect, then iterations will push them out\n    iterations: 5, // need at least 3 iterations to stabilize\n    // at 1 graph takes a long time to reach equilibrium\n    radius: 7 // `radius` is added to node.degrees + defaultSize during _UpdateForces with the node radius\n  },\n  forceX: {\n    // 'forceX' pushes nodes towards a normalized x position\n    // x is calculated relative to the m_width\n    // e.g. x=0.5 is the center\n    // higher strength will push harder towards the x point\n    // e.g. to create a narrow tall graph, use strength: 2\n    enabled: true,\n    strength: 0.25, // 1 clumped < 0.3 med  < 0.2 loose < 0.1 very loose\n    x: 0.5\n  },\n  forceY: {\n    // 'forceY' pushes nodes towards a normalized y position\n    // y is calculated relative to the m_height\n    // e.g. y=0.5 is the center\n    // higher strength will push harder towards the y point\n    // e.g. to create a wide short graph, use strength: 2\n    enabled: true,\n    strength: 0.25, // 1 clumped < 0.3 med  < 0.2 loose < 0.1 very loose\n    y: 0.5\n  },\n  link: {\n    enabled: true,\n    distance: 50, // sets the basic link distance between nodes\n    // 10 is a little too close\n    // 25 is cozy\n    // 50 is spacious\n    // 100 leaves everything too far apart\n    iterations: 5 // Orig val = 1.  More iterations will give graph time to settle\n  }\n}; // M_FORCEPROPERTIES\n\n/// NCGraphRenderer CLASS //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass NCGraphRenderer {\n  constructor(rootElement) {\n    this.rootElement = rootElement;\n    this.d3svg = {};\n    this.zoom = {};\n    this.zoomWrapper = {};\n    this.simulation = {};\n    this.data = { nodes: [], edges: [] };\n\n    this.clickFn = {};\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n\n    /// D3 CODE ///////////////////////////////////////////////////////////////////\n    /// note: this is all inside the class constructor function!\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n    // this.UpdateDefaultValues(); // needs TEMPLATE\n\n    // Set up Zoom\n    this.zoom = d3.zoom().on('zoom', this.m_HandleZoom);\n\n    /** Create svg element which will contain our D3 DOM elements.\n        Add default click handler so when clicking empty space, deselect all.\n        NOTE: the svg element is actualy d3.selection object, not an svg obj.\n     */\n    this.d3svg = d3\n      .select(rootElement)\n      .append('svg')\n      .attr('id', 'netgraph')\n      .attr('width', '100%') // maximize width and height\n      .attr('height', '100%') // then set center dynamically below\n      .on('click', (e, event) => {\n        // Deselect\n        UDATA.LocalCall('D3_SELECT_NODE', { nodeLabels: [] });\n        // DEPRECATED for now 7/2023 -- use D3_SELECT_NODE instead\n        // UDATA.LocalCall('SOURCE_SELECT', { nodeLabels: [] });\n      })\n      .on('mouseover', d => {\n        UDATA.LocalCall('USER_HILITE_NODE', { nodeId: undefined });\n        // Deselect edges\n        d3.selectAll('.edge')\n          .transition()\n          .duration(1500)\n          .style('stroke-width', e => e.width);\n        d3.event.stopPropagation();\n      })\n      .call(this.zoom);\n\n    this.zoomWrapper = this.d3svg.append('g').attr('class', 'zoomer');\n\n    // Set SVG size and centering.\n    let svg = document.getElementById('netgraph');\n    m_width = svg.clientWidth;\n    m_height = svg.clientHeight;\n\n    this.simulation = d3.forceSimulation();\n\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    /// END D3 CODE ///////////////////////////////////////////////////////////////\n\n    this.ClearSVG = this.ClearSVG.bind(this);\n    this.SetData = this.SetData.bind(this);\n    this.m_Initialize = this.m_Initialize.bind(this);\n    this.UpdateGraph = this.UpdateGraph.bind(this);\n    this.m_UpdateForces = this.m_UpdateForces.bind(this);\n    this.m_Tick = this.m_Tick.bind(this);\n    this.ZoomReset = this.ZoomReset.bind(this);\n    this.ZoomIn = this.ZoomIn.bind(this);\n    this.ZoomOut = this.ZoomOut.bind(this);\n    this.ZoomPanReset = this.ZoomPanReset.bind(this);\n    this.m_HandleZoom = this.m_HandleZoom.bind(this);\n    this.m_Transition = this.m_Transition.bind(this);\n    this.m_Dragstarted = this.m_Dragstarted.bind(this);\n    this.m_Dragged = this.m_Dragged.bind(this);\n    this.m_Dragended = this.m_Dragended.bind(this);\n  }\n\n  /// CLASS PUBLIC METHODS //////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  Deregister() {\n    if (DBG) console.log(PR, 'NCGraphRenderer.DESTRUCT!!!');\n    // Take care of any de-registration of listeners...\n    // ...there aren't any at the moment...\n  }\n\n  /// CLASS PRIVATE METHODS /////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  /** Clear the SVG data\n      Currently not used because we just deconstruct d3-simplenetgraph insead.\n      Was thought to be needed during imports otherwise _UpdateGraph reads data from existing\n      SVG elements rather than the new data.\n   */\n  ClearSVG() {\n    this.zoomWrapper.selectAll('.edge').remove();\n    this.zoomWrapper.selectAll('.node').remove();\n  }\n\n  /** The parent container passes data to the d3 graph via this SetData call\n   *  which then triggers all the internal updates\n   *\n   *  When a SELECTION is updated, we use skipForceUpdate to preven the\n   *  simulation from re-applying forces, causing nodes to move.  Without this\n   *  as you mouseover a node, ALL the nodes move and it becomes impossible to\n   *  select the node.\n   *  @param {Object} newData VDATA { nodes, edges }\n   *  @param {Object} options\n   *  @param {boolean} options.skipForceUpdate skip force updates during selection updates\n   */\n  SetData(newData, options = {}) {\n    if (newData) {\n      // Make a shallow copy to protect against mutation, while\n      // recycling old nodes to preserve position and velocity.\n      // From https://observablehq.com/@d3/modifying-a-force-directed-graph?collection=@d3/d3-force\n      // grab the SVG nodes\n      const svgNodes = this.zoomWrapper.selectAll('.node');\n      const oldNodes = new Map(svgNodes.data().map(d => [d.id, d]));\n\n      this.data.nodes = newData.nodes.map(d =>\n        Object.assign(oldNodes.get(d.id) || {}, d)\n      );\n      this.data.edges = newData.edges.map(d => Object.assign({}, d));\n\n      // FIXME: REVIEW: is this not necessary?  Just check initialize once?\n      if (!options.skipForceUpdate) this.m_Initialize();\n      if (!options.skipForceUpdate) this.m_UpdateForces();\n      this.UpdateGraph(options.skipForceUpdate);\n\n      // updates ignored until this is run restarts the simulation\n      // (important if simulation has already slowed down)\n      // skipForceUpdate here is helpful for preventing force updates when hovering\n      // or tryng to select an object.\n      if (!options.skipForceUpdate) this.simulation.alpha(0.1).restart(); // was 1 - JD\n    }\n  }\n\n  /** This sets up the force properties for the simulation and tick handler.\n   */\n  m_Initialize() {\n    // Create the force layout.  After a call to force.start(), the tick\n    // method will be called repeatedly until the layout \"gels\" in a stable\n    // configuration.\n    this.simulation\n      .force('link', d3.forceLink())\n      .force('charge', d3.forceManyBody())\n      .force('collide', d3.forceCollide())\n      .force('center', d3.forceCenter())\n      .force('forceX', d3.forceX())\n      .force('forceY', d3.forceY())\n\n      .on('tick', this.m_Tick);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   * Call UpdateGraph() after new data has been loaded. This creates link and node\n      svg objects and sets their forceProperties.\n      The component `node` structure:\n          <g class=\"node\">  // node group object\n            <circle>\n            <text>         // label\n            <title>        // tooltip\n          </g>\n\n      This method implements the unified enter/exit/update pattern described\n      here: http://d3indepth.com/enterexit/#general-update-pattern\n\n      By convention, selection methods that return the current selection use\n      four spaces of indent, while methods that return a new selection use only two.\n      This helps reveal changes of context by making them stick out of the chain.\n\n      This method actually does more than just \"update\" an existing graph; in D3\n      you can write code that initializes AND updates data.\n   */\n  UpdateGraph() {\n    // DATA JOIN\n    // select all elemnts with class .node in d3svg\n    // bind selected elements with elements in this.data.nodes,\n    // assigning each one an id using the key function.\n\n    // nodeElements is a d3.selection object\n    let nodeElements = this.zoomWrapper\n      .selectAll('.node')\n      .data(this.data.nodes, d => {\n        return d.id;\n      }); // fn returns the calculated key for the data object\n\n    // linkElements is a d3.selection object\n    let linkElements = this.zoomWrapper\n      .selectAll('.edge')\n      .data(this.data.edges, d => {\n        return d.id;\n      }); // fn returns the calculated key for the data object\n\n    // TELL D3 HOW TO HANDLE NEW NODE DATA\n    // the d3.selection.enter() method sets the operational scope for\n    // subsequent calls\n    let elementG = nodeElements.enter().append('g').classed('node', true);\n\n    // enter node: append 'g' (group) element and click behavior\n    elementG\n      .call(\n        d3\n          .drag()\n          .on('start', d => {\n            this.m_Dragstarted(d, this);\n          })\n          .on('drag', this.m_Dragged)\n          .on('end', d => {\n            this.m_Dragended(d, this);\n          })\n      )\n      .on('click', d => {\n        if (DBG) console.log('clicked on', d.label, d.id);\n        UDATA.LocalCall('D3_SELECT_NODE', { nodeIDs: [d.id] });\n        // DEPRECATED for now 7/2023 -- use D3_SELECT_NODE instead\n        // UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [d.id] });\n        d3.event.stopPropagation();\n      })\n      .on('mouseover', d => {\n        UDATA.LocalCall('USER_HILITE_NODE', { nodeId: d.id });\n        d3.selectAll('.edge')\n          .transition()\n          .duration(500)\n          .style('stroke-width', e => e.width);\n        d3.event.stopPropagation();\n      });\n\n    // enter node: also append 'circle' element of a calculated size\n    elementG\n      .append('circle')\n      .attr('r', d => d.size) // \"r\" has to be set here or circles don't draw.\n      .attr('fill', d => d.color)\n      .style('opacity', d => d.opacity);\n\n    // EXPERIMENTAL: Show rectangle shapes\n    // REVIEW: Is there a way not to create this if it's not needed?\n    // elementG\n    //   .append('rect')\n    //   .attr('width', d => d.size * 2)\n    //   .attr('height', d => d.size * 2)\n    //   .attr('x', d => -d.size)\n    //   .attr('y', d => -d.size)\n    //   .attr('fill', d => d.color)\n    //   .style('opacity', 0);\n\n    // enter node: also append 'text' element\n    elementG\n      .append('text')\n      .classed('noselect', true)\n      .attr('font-size', 10)\n      .attr('dx', d => d.size + 5)\n      .attr('dy', '0.35em') // \".15em\")\n      .text(d => d.label)\n      .style('opacity', d => d.opacity);\n\n    // enter node: also append a 'title' tag\n    // we should move this to our tooltip functions, but it works for now\n    elementG\n      .append('title') // node tooltip\n      .text(d => d.help);\n\n    /** TRICKY D3 CODE CONCEPTS AHEAD\n\n        CONTEXT: The author of this code has assumed that NCDATA may\n        completely changed, so his update code is written with this in mind.\n\n        At this point in the code, nodeElements is operating on the enter()\n        selection set (remember: nodeElements is a REFERENCE to the\n        original d3 selection object, which is being transmutted by every\n        operation).\n\n        Given the above, .merge() will combine the current active d3\n        selection (enter()) with all the nodes (nodeEntry in its entirety).\n\n        It may seem weird because:\n\n        (1) the d3.selection() context isn't always obvious unless you\n            know that d3.selections and key ops like .enter(), .update(),\n            and .exit() affect certain other ops.\n        (2) this code reads like it's executing immediately on nodeElements,\n            but it actually is a PROGRAM being defined for a d3.selection\n            event that runs later. The value of the parameter nodeElements\n            will have a different value in the future than it does at the\n            time of definition here.\n\n        In effect, the merge() operation is used to use the same\n        initialization code for both enter() and manual refresh.\n\n        ASIDE: There is an d3.selection.update() operation, but that  is\n        called when d3 detects that data node bound to an existing DOM\n        element has changed. This code doesn't use update(), and instead\n        relies on manual event detection to force a full data refresh and\n        update. D3 doesn't die because it is aware of the persistent SVG\n        elements  it created, and checks data binding through the id. This\n        is fast, and the SVG elements do not have to be recreated.\n\n     */\n\n    // UPDATE circles in each node for all nodes\n    nodeElements\n      .merge(nodeElements)\n      .selectAll('circle')\n      .attr('stroke', d => d.strokeColor)\n      .attr('stroke-width', d => d.strokeWidth)\n      .attr('fill', d => d.color)\n      .attr('r', d => d.size)\n      .transition()\n      .duration(500)\n      .style('opacity', d => d.opacity);\n\n    // UPDATE text in each node for all nodes\n    // (technically this could have proceeded from the previous operation,\n    // but this makes it a little easier to findthe text-specific code as\n    // a block\n    nodeElements\n      .merge(nodeElements)\n      .selectAll('text')\n      .attr('fill', d => d.textColor)\n      // .attr('stroke', d => d.strokeColor) // stroke overlaps on text\n      // .attr('stroke-width', '0.5px') // stroke overlaps on text\n      .attr('font-weight', d => {\n        return d.strokeColor ? 'bold' : undefined;\n      })\n      .text(d => d.label) // in case text is updated\n      .transition()\n      .duration(500)\n      .style('opacity', d => d.opacity);\n\n    nodeElements\n      .merge(nodeElements)\n      .selectAll('title') // node tooltip\n      .text(d => d.help);\n\n    // EXPERIMENTAL: Show rectangle shapes\n    // nodeElements\n    //   .merge(nodeElements)\n    //   .selectAll('rect')\n    //   .attr('stroke', d => d.strokeColor)\n    //   .attr('stroke-width', d => d.strokeWidth)\n    //   .style('opacity', d => d.shape === 'rectangle' ? 1 : 0);\n\n    // TELL D3 what to do when a data node goes away\n    nodeElements.exit().remove();\n\n    // NOW TELL D3 HOW TO HANDLE NEW EDGE DATA\n    // .insert will add an svg `line` before the objects classed `.node`\n    // .enter() sets the initial state of links as they are created\n    linkElements\n      .enter()\n      .insert('line', '.node')\n      .classed('edge', true)\n      .style('stroke', e => e.color)\n      .style('stroke-width', e => e.width)\n      .style('stroke-linecap', 'round')\n      // Edge selection disabled.\n      // .on(\"click\",   (d) => {\n      //   if (DBG) console.log('clicked on',d.label,d.id)\n      //   this.edgeClickFn( d )\n      // })\n      .style('opacity', e => e.opacity);\n\n    // .merge() updates the visuals whenever the data is updated.\n    linkElements\n      .merge(linkElements)\n      // .classed(\"selected\", e => e.selected) // is this used?\n      .style('stroke', e => e.color)\n      .style('stroke-width', e => e.width)\n      .style('stroke-linecap', 'round')\n      .transition()\n      .duration(500)\n      .style('opacity', e => e.opacity);\n\n    linkElements.exit().remove();\n\n    // UPDATE ANIMATED SIMULATION\n    // this is a plugin\n    this.simulation.nodes(this.data.nodes);\n    if (this.data.edges) {\n      this.simulation.force('link').links(this.data.edges);\n    }\n\n    // SELECTION ARROW\n    this.d3svg.selectAll('#selectorArrow').remove();\n    this.d3svg.selectAll('#secondarySelectorArrow').remove();\n\n    // SINGLE ARROW APPROACH\n    // nodeElements\n    //   .merge(nodeElements)\n    //   .filter(d => d.selected)\n    //   .append('g')\n    //   .attr('id', 'selectorArrow')\n    //   .attr('transform', d => `translate(${- d.size - 5},0)`)\n    //   .append('polygon')\n    //   .attr('points', '0,0 -10,5 -10,-5 ')\n    //   .attr('fill', 'red')\n    //   .append('animateTransform')\n    //   .attr('attributeName', 'transform')\n    //   .attr('attributeType', 'XML')\n    //   .attr('type', 'rotate')\n    //   .attr('from', d => `0 ${d.size + 5} 0`)\n    //   .attr('to', d => `360 ${d.size + 5} 0`)\n    //   .attr('dur', '2s')\n    //   .attr('repeatCount', 'indefinite')\n\n    // MULTIPLE ARROW APPROACH\n    this.selectorArrows = nodeElements\n      .merge(nodeElements)\n      .filter(d => d.selected)\n      .append('g')\n      .attr('id', 'selectorArrow')\n      .attr('transform', d => `translate(${-d.size - 5},0)`);\n    this.selectorArrows\n      .append('polygon')\n      .attr('points', '0,0 -10,5 -10,-5 ')\n      .attr('fill', d => d.strokeColor)\n      .append('animateTransform')\n      .attr('attributeName', 'transform')\n      .attr('attributeType', 'XML')\n      .attr('type', 'rotate')\n      .attr('from', d => `0 ${d.size + 5} 0`)\n      .attr('to', d => `360 ${d.size + 5} 0`)\n      .attr('dur', '6s')\n      .attr('repeatCount', 'indefinite');\n    this.selectorArrows\n      .append('polygon')\n      .attr('transform', d => `translate(${d.size + 5},0)`)\n      .attr('points', '0,0 -10,5 -10,-5 ')\n      .attr('fill', d => d.strokeColor)\n      .append('animateTransform')\n      .attr('attributeName', 'transform')\n      .attr('attributeType', 'XML')\n      .attr('type', 'rotate')\n      .attr('from', d => `120 ${d.size + 5} 0`) // different rotation start\n      .attr('to', d => `480 ${d.size + 5} 0`) // different rotation end\n      .attr('dur', '6s')\n      .attr('repeatCount', 'indefinite');\n    this.selectorArrows\n      .append('polygon')\n      .attr('transform', d => `translate(${d.size + 5},0)`)\n      .attr('points', '0,0 -10,5 -10,-5 ')\n      .attr('fill', d => d.strokeColor)\n      .append('animateTransform')\n      .attr('attributeName', 'transform')\n      .attr('attributeType', 'XML')\n      .attr('type', 'rotate')\n      .attr('from', d => `240 ${d.size + 5} 0`) // different rotation start\n      .attr('to', d => `600 ${d.size + 5} 0`) // different rotation end\n      .attr('dur', '6s')\n      .attr('repeatCount', 'indefinite');\n\n    // SECONDARY SELECTOR ARROW\n    nodeElements\n      .merge(nodeElements)\n      .filter(d => d.selectedSecondary)\n      .append('g')\n      .attr('id', 'secondarySelectorArrow')\n      .attr('transform', d => `translate(${-d.size - 5},0)`)\n      .append('polygon')\n      .attr('points', '0,0 -10,5 -10,-5 ')\n      .attr('fill', 'blue')\n      // .attr('fill', d => d.strokeColor)\n      .append('animateTransform')\n      .attr('attributeName', 'transform')\n      .attr('attributeType', 'XML')\n      .attr('type', 'rotate')\n      .attr('from', d => `0 ${d.size + 5} 0`)\n      .attr('to', d => `360 ${d.size + 5} 0`)\n      .attr('dur', '2s')\n      .attr('repeatCount', 'indefinite');\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Apply new force properties\n      Call this on construct and if forceProperties have changed.\n   */\n  m_UpdateForces() {\n    this.simulation\n      .force(\n        'link',\n        d3\n          .forceLink()\n          .id(d => d.id) // note `d` is an edge, not a node\n          // all edges use the same link distance, charge is what pushes them apart\n          .distance(M_FORCEPROPERTIES.link.distance)\n          .iterations(M_FORCEPROPERTIES.link.iterations)\n      )\n      .force(\n        'charge',\n        d3\n          .forceManyBody()\n          // the larger the node, the harder it pushes\n          .strength(\n            d =>\n              d.size *\n              M_FORCEPROPERTIES.charge.strength *\n              M_FORCEPROPERTIES.charge.enabled\n          )\n          .distanceMin(M_FORCEPROPERTIES.charge.distanceMin)\n          .distanceMax(M_FORCEPROPERTIES.charge.distanceMax)\n      )\n      .force(\n        'collide',\n        d3\n          .forceCollide()\n          .strength(\n            M_FORCEPROPERTIES.collide.strength * M_FORCEPROPERTIES.collide.enabled\n          )\n          // node radius (defaultSize+degrees) + preset radius keeps nodes separated\n          // from each other like bouncing balls\n          .radius(d => d.size + M_FORCEPROPERTIES.collide.radius)\n          .iterations(M_FORCEPROPERTIES.collide.iterations)\n      )\n      .force(\n        'center',\n        d3\n          .forceCenter()\n          .x(m_width * M_FORCEPROPERTIES.center.x)\n          .y(m_height * M_FORCEPROPERTIES.center.y)\n      )\n      .force(\n        'forceX',\n        d3\n          .forceX()\n          .strength(\n            M_FORCEPROPERTIES.forceX.strength * M_FORCEPROPERTIES.forceX.enabled\n          )\n          .x(m_width * M_FORCEPROPERTIES.forceX.x)\n      )\n      .force(\n        'forceY',\n        d3\n          .forceY()\n          .strength(\n            M_FORCEPROPERTIES.forceY.strength * M_FORCEPROPERTIES.forceY.enabled\n          )\n          .y(m_height * M_FORCEPROPERTIES.forceY.y)\n      );\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Update the display positions after each simulation tick\n\n    This tick method is called repeatedly until the layout stabilizes.\n\n    NOTE: the order in which we update nodes and links does NOT determine which\n    gets drawn first -- the drawing order is determined by the ordering in the\n    DOM.  See the notes under link_update.enter() above for one technique for\n    setting the ordering in the DOM.\n   */\n  m_Tick() {\n    // Drawing the nodes: Update the location of each node group element\n    // from the x, y fields of the corresponding node object.\n    this.zoomWrapper.selectAll('.node').attr('transform', d => {\n      return 'translate(' + d.x + ',' + d.y + ')';\n    });\n\n    // Drawing the links: Update the start and end points of each line element\n    // from the x, y fields of the corresponding source and target node objects.\n    this.zoomWrapper\n      .selectAll('.edge')\n      .attr('x1', d => {\n        return d.source.x;\n      })\n      .attr('y1', d => {\n        return d.source.y;\n      })\n      .attr('x2', d => {\n        return d.target.x;\n      })\n      .attr('y2', d => {\n        return d.target.y;\n      });\n  }\n\n  /// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  ZoomReset(data) {\n    if (DBG) console.log(PR, 'ZOOM_RESET got state NCDATA', data);\n    // NOTE: The transition/duration call means _HandleZoom will be called multiple times\n    this.d3svg.transition().duration(200).call(this.zoom.scaleTo, 1);\n  }\n\n  ZoomIn(data) {\n    if (DBG) console.log(PR, 'ZOOM_IN got state NCDATA', data);\n    this.m_Transition(1.2);\n  }\n\n  ZoomOut(data) {\n    if (DBG) console.log(PR, 'ZOOM_OUT got state NCDATA', data);\n    this.m_Transition(0.8);\n  }\n\n  // Pan to 0,0 and zoom scale to 1\n  // (Currently not used)\n  ZoomPanReset(data) {\n    if (DBG) console.log(PR, 'ZOOM_PAN_RESET got state NCDATA', data);\n    const transform = d3.zoomIdentity.translate(0, 0).scale(1);\n    this.d3svg.call(this.zoom.transform, transform);\n  }\n\n  /** This primarily handles mousewheel zooms\n   */\n  m_HandleZoom() {\n    if (DBG) console.log(PR, 'HandleZoom');\n    d3.select('.zoomer').attr('transform', d3.event.transform);\n  }\n  /** This handles zoom button zooms.\n   */\n  m_Transition(zoomLevel) {\n    if (DBG) console.log(PR, 'Transition');\n    this.d3svg\n      .transition()\n      //.delay(100)\n      .duration(200)\n      .call(this.zoom.scaleBy, zoomLevel);\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  m_Dragstarted(d, self) {\n    if (DBG) console.log(PR, 'Dragstarted', d.x, d.y);\n    // if (!d3.event.active) self.simulation.alphaTarget(0.3).restart(); // orig value results in a lot of movement after selection\n    if (!d3.event.active) self.simulation.alphaTarget(0.01).restart(); // minimize shift after selection\n    d.fx = d.x;\n    d.fy = d.y;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  m_Dragged(d) {\n    if (DBG) console.log(PR, 'Dragged');\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  m_Dragended(d, self) {\n    if (DBG) console.log(PR, 'Dragended');\n    if (!d3.event.active) self.simulation.alphaTarget(0.0001);\n    d.fx = null;\n    d.fy = null;\n  }\n  // update window size-related forces\n  // d3.select(window).on(\"resize\", (){ =>\n  //     width = +svg.node().getBoundingClientRect().width;\n  //     height = +svg.node().getBoundingClientRect().height;\n  //     updateForces();\n  // });\n} // class NCGraphRenderer\n\n/// EXPORT MODULE /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NCGraphRenderer;\n/* Exports should be\n\nDeregister,\nClearSVG,\nSetData,\nUpdateGraph,\nZoomReset\nZoomIn\nZoomOut\nZoomPanReset\n\n*/\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Prototype Simple NetCreate Node Editor\n\n  Built for Version 2.0 ITEST.\n\n  Provides a viewer and editor for the currently selected node.\n\n  USAGE\n\n    <NCNode />\n\n  Main changes for 2.0:\n  * Node data is made up of built-in parameters (e.g. label, provenance),\n    and arbitrary custom parameters defined via the template.  This Node\n    editor can support wide variety of data.\n\n  DATA UPDATES\n  * Updates are triggered mostly by:\n    1.  SELECTION state updates when nodes and edges change\n    2.  PERMISSION state updates when locks are set and released.\n\n  Data is currently in a transitional state.\n  Currently all properties are saved in a flat list.\n  Eventually we might want to differentiate between\n  built-in properties (e.g. id, created), and template-defined custom\n  `attributes`.  There is an awkward translation between these two\n  representations during data load, update, and save.\n\n\n  PERMISSIONS\n  Editting is restricted by:\n  * User must be logged in\n  * Template is not being edited\n  * Data is not being imported\n  * Someone else is not editing the node (and has placed a lock on it)\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst UNISYS = require('unisys/client');\nconst EDGEMGR = require('../edge-mgr'); // handles edge synthesis\nconst CMTMGR = require('../comment-mgr');\nconst { EDITORTYPE, BUILTIN_FIELDS_NODE } = require('system/util/enum');\nconst { EDGE_NOT_SET_LABEL, ARROW_RIGHT } = require('system/util/constant');\nconst NCLOGIC = require('../nc-logic');\nconst NCUI = require('../nc-ui');\nconst NCEdge = require('./NCEdge');\nconst NCDialogCitation = require('./NCDialogCitation');\nconst SETTINGS = require('settings');\nimport URCommentBtn from './URCommentBtn';\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'NCNode';\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst isAdmin = SETTINGS.IsAdmin();\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst TABS = {\n  // Also used as labels\n  ATTRIBUTES: 'ATTRIBUTES',\n  EDGES: 'EDGES',\n  PROVENANCE: 'PROVENANCE'\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet UDATA;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass NCNode extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoggedIn: false\n    }; // initialized on componentDidMount and clearSelection\n\n    // STATE MANAGEMENT\n    this.ResetState = this.ResetState.bind(this);\n    this.UpdateSession = this.UpdateSession.bind(this);\n    this.UpdateNCData = this.UpdateNCData.bind(this);\n    this.SetPermissions = this.SetPermissions.bind(this);\n    this.UpdatePermissions = this.UpdatePermissions.bind(this);\n\n    // EVENT HANDLERS\n    this.CheckUnload = this.CheckUnload.bind(this);\n    this.DoUnload = this.DoUnload.bind(this);\n    this.ClearSelection = this.ClearSelection.bind(this);\n    this.UpdateSelection = this.UpdateSelection.bind(this);\n    this.SelectEdgeAndEdit = this.SelectEdgeAndEdit.bind(this);\n    this.SelectEdge = this.SelectEdge.bind(this);\n    this.DeselectEdge = this.DeselectEdge.bind(this);\n    // DATA LOADING\n    this.LoadNode = this.LoadNode.bind(this);\n    this.LoadEdges = this.LoadEdges.bind(this);\n    this.LoadAttributes = this.LoadAttributes.bind(this);\n    this.LockNode = this.LockNode.bind(this);\n    this.UnlockNode = this.UnlockNode.bind(this);\n    this.IsNodeLocked = this.IsNodeLocked.bind(this);\n    // DATA SAVING\n    this.SaveNode = this.SaveNode.bind(this);\n    this.DeleteNode = this.DeleteNode.bind(this);\n    // HELPER METHODS\n    this.SetBackgroundColor = this.SetBackgroundColor.bind(this);\n    this.UpdateMatchingList = this.UpdateMatchingList.bind(this);\n    // UI HANDLERS\n    this.UISelectTab = this.UISelectTab.bind(this);\n    this.UIRequestEditNode = this.UIRequestEditNode.bind(this);\n    this.UIReplacementNodeIdUpdate = this.UIReplacementNodeIdUpdate.bind(this);\n    this.UIAddEdge = this.UIAddEdge.bind(this);\n    this.UIEnableEditMode = this.UIEnableEditMode.bind(this);\n    this.UICancelEditMode = this.UICancelEditMode.bind(this);\n    this.UIDisableEditMode = this.UIDisableEditMode.bind(this);\n    this.UIInputUpdate = this.UIInputUpdate.bind(this);\n    this.UIProvenanceInputUpdate = this.UIProvenanceInputUpdate.bind(this);\n    this.UILabelInputUpdate = this.UILabelInputUpdate.bind(this);\n    this.UIViewEdge = this.UIViewEdge.bind(this);\n    this.UIEditEdge = this.UIEditEdge.bind(this);\n    this.UICitationShow = this.UICitationShow.bind(this);\n    this.UICitationClose = this.UICitationClose.bind(this);\n    // RENDERERS -- Main\n    this.RenderView = this.RenderView.bind(this);\n    this.RenderEdit = this.RenderEdit.bind(this);\n    // RENDER HELPERS\n    this.RenderEdgesTab = this.RenderEdgesTab.bind(this);\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    /// REGISTER LISTENERS\n    UDATA.OnAppStateChange('SESSION', this.UpdateSession);\n    UDATA.OnAppStateChange('NCDATA', this.UpdateNCData);\n    UDATA.OnAppStateChange('SELECTION', this.UpdateSelection);\n    UDATA.HandleMessage('EDIT_PERMISSIONS_UPDATE', this.SetPermissions);\n    UDATA.HandleMessage('NODE_EDIT', this.UIRequestEditNode); // Node Table request\n    UDATA.HandleMessage('EDGE_SELECT_AND_EDIT', this.SelectEdgeAndEdit);\n    UDATA.HandleMessage('EDGE_SELECT', this.SelectEdge);\n    UDATA.HandleMessage('EDGE_DESELECT', this.DeselectEdge);\n  }\n\n  componentDidMount() {\n    this.ResetState(); // Initialize State\n    window.addEventListener('beforeunload', this.CheckUnload);\n    window.addEventListener('unload', this.DoUnload);\n  }\n  componentWillUnmount() {\n    UDATA.AppStateChangeOff('SESSION', this.UpdateSession);\n    UDATA.AppStateChangeOff('NCDATA', this.UpdateNCData);\n    UDATA.AppStateChangeOff('SELECTION', this.UpdateSelection);\n    UDATA.UnhandleMessage('EDIT_PERMISSIONS_UPDATE', this.SetPermissions);\n    UDATA.UnhandleMessage('NODE_EDIT', this.UIRequestEditNode);\n    UDATA.UnhandleMessage('EDGE_SELECT_AND_EDIT', this.SelectEdgeAndEdit);\n    UDATA.UnhandleMessage('EDGE_SELECT', this.SelectEdge);\n    UDATA.UnhandleMessage('EDGE_DESELECT', this.DeselectEdge);\n    window.removeEventListener('beforeunload', this.CheckUnload);\n    window.removeEventListener('unload', this.DoUnload);\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// STATE MANAGEMENT\n  ///\n  ResetState() {\n    const TEMPLATE = this.AppState('TEMPLATE');\n    this.setState({\n      // NODE DEFS\n      id: null,\n      label: '',\n      type: '',\n      degrees: null,\n      attributes: [],\n      provenance: [],\n      created: undefined,\n      createdBy: undefined,\n      updated: undefined,\n      updatedBy: undefined,\n      revision: 0,\n      // EDGES\n      edges: [], // selected nodes' edges not ALL edges\n      // SYSTEM STATE\n      // isLoggedIn: false, // don't clear session state!\n      // isAdmin: false,\n      previousState: {},\n      // UI State\n      uEditBtnDisable: false,\n      uEditBtnHide: false,\n      uViewMode: NCUI.VIEWMODE.VIEW,\n      uSelectedTab: TABS.ATTRIBUTES,\n      selectedEdgeId: null,\n      uBackgroundColor: 'transparent',\n      uIsLockedByDB: false, // shows db lock message next to Edit Node button\n      uIsLockedByTemplate: false,\n      uIsLockedByImport: false,\n      uIsLockedByComment: false,\n      uEditLockMessage: '',\n      uHideDeleteNodeButton: TEMPLATE.hideDeleteNodeButton,\n      uReplacementNodeId: '',\n      uIsValidReplacementNodeID: true,\n      uShowMatchlist: false,\n      uShowCitationDialog: false\n    });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// EVENT HANDLERS\n  ///\n  CheckUnload(event) {\n    if (this.state.uViewMode === NCUI.VIEWMODE.EDIT) {\n      event.preventDefault();\n      (event || window.event).returnValue = null;\n    } else {\n      Reflect.deleteProperty(event, 'returnValue');\n    }\n    return event;\n  }\n  DoUnload(event) {\n    if (this.state.uViewMode === NCUI.VIEWMODE.EDIT) {\n      UDATA.NetCall('SRV_DBUNLOCKNODE', { nodeID: this.state.id });\n      UDATA.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.NODE });\n    }\n  }\n\n  /**\n   * Handle change in SESSION data\n   * SESSION is called by SessionShell when the ID changes\n   * set system-wide. data: { classId, projId, hashedId, groupId, isValid }\n   * Called both by componentWillMount() and AppStateChange handler.\n   * The 'SESSION' state change is triggered in two places in SessionShell during\n   * its handleChange() when active typing is occuring, and also during\n   * SessionShell.componentWillMount()\n   */\n  UpdateSession(decoded) {\n    this.setState({ isLoggedIn: decoded.isValid }, () => this.UpdatePermissions());\n  }\n  /*\n      Called by NCDATA AppState updates\n  */\n  UpdateNCData(data) {\n    // If NCDATA is updated, reload the node AND the edges b/c db has changed\n    const updatedNode = data.nodes.find(n => n.id === this.state.id);\n    this.LoadNode(updatedNode);\n    this.LoadEdges(this.state.id);\n  }\n  SetPermissions(data) {\n    UDATA.NetCall('SRV_GET_EDIT_STATUS').then(data => {\n      // someone else might be editing a template or importing or editing node or edge\n      const { id } = this.state;\n      const nodeIsLocked = data.lockedNodes.includes(id);\n      this.setState(\n        {\n          uIsLockedByDB: nodeIsLocked,\n          uIsLockedByTemplate: data.templateBeingEdited,\n          uIsLockedByImport: data.importActive,\n          uIsLockedByComment: data.commentBeingEditedByMe\n        },\n        () => this.UpdatePermissions()\n      );\n    });\n  }\n  UpdatePermissions() {\n    const {\n      isLoggedIn,\n      uIsLockedByDB,\n      uIsLockedByTemplate,\n      uIsLockedByImport,\n      uIsLockedByComment\n    } = this.state;\n    const TEMPLATE = UDATA.AppState('TEMPLATE');\n    let uEditLockMessage = '';\n    let uEditBtnDisable = false;\n    let uEditBtnHide = true;\n    if (isLoggedIn) uEditBtnHide = false;\n    if (uIsLockedByDB) {\n      uEditBtnDisable = true;\n      uEditLockMessage += TEMPLATE.nodeIsLockedMessage;\n    }\n    if (uIsLockedByTemplate) {\n      uEditBtnDisable = true;\n      uEditLockMessage += TEMPLATE.templateIsLockedMessage;\n    }\n    if (uIsLockedByImport) {\n      uEditBtnDisable = true;\n      uEditLockMessage += TEMPLATE.importIsLockedMessage;\n    }\n    if (uIsLockedByComment) {\n      uEditBtnDisable = true;\n      uEditLockMessage += '';\n    }\n    this.setState({ uEditBtnDisable, uEditBtnHide, uEditLockMessage });\n  }\n  ClearSelection() {\n    this.ResetState();\n  }\n  UpdateSelection(data) {\n    if (!data.nodes) return; // SELECTION cleared?\n    const node = data.nodes[0]; // select the first node\n    this.LoadNode(node);\n  }\n  /**\n   * In order to edit an edge, we must first select the source\n   * 1. (this assumes SOURCE_SELECT was already called)\n   * 2. select the Edges tab\n   * 3. open the edge (load the edge data into NCEdge)\n   * 4. trigger edge edit mode\n   * @param {Object} data\n   * @param {string} data.edgeId\n   */\n  SelectEdgeAndEdit(data) {\n    const { edgeId } = data;\n    this.setState({ uSelectedTab: TABS.EDGES, selectedEdgeId: edgeId }, () => {\n      const { edges } = this.state;\n      const edge = edges.find(e => e.id === Number(edgeId));\n      this.setState({ selectedEdgeId: edgeId });\n      UDATA.LocalCall('EDGE_OPEN', { edge }).then(() => {\n        UDATA.LocalCall('EDGE_EDIT', { edgeId });\n      });\n    });\n  }\n  SelectEdge(data) {\n    const { edgeId } = data;\n    this.setState({ uSelectedTab: TABS.EDGES, selectedEdgeId: edgeId }, () => {\n      const { edges } = this.state;\n      const edge = edges.find(e => e.id === Number(edgeId));\n      this.setState({ selectedEdgeId: edgeId });\n      UDATA.LocalCall('EDGE_OPEN', { edge });\n    });\n  }\n  DeselectEdge() {\n    this.setState({ selectedEdgeId: null });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// DATA LOADING\n  ///\n  LoadNode(node) {\n    const { id, uViewMode } = this.state;\n\n    // If we're editing, ignore the select!\n    if (uViewMode === NCUI.VIEWMODE.EDIT) return;\n\n    // If no node was selected, deselect\n    if (!node) {\n      this.ClearSelection();\n      return;\n    }\n\n    // if we're loading a new node, close any open edges\n    if (node.id !== id) UDATA.LocalCall('EDGE_DESELECT');\n\n    // Load the node\n    const attributes = this.LoadAttributes(node);\n    const provenance = this.LoadProvenance(node);\n    this.setState(\n      {\n        id: node.id,\n        label: node.label,\n        type: node.type,\n        degrees: node.degrees,\n        attributes: attributes,\n        provenance: provenance,\n        created: node.meta ? new Date(node.meta.created).toLocaleString() : '',\n        createdBy: node.createdBy,\n        updated: node.meta ? new Date(node.meta.updated).toLocaleString() : '',\n        updatedBy: node.updatedBy,\n        revision: node.meta ? node.meta.revision : ''\n      },\n      () => {\n        this.SetBackgroundColor();\n        this.UpdateMatchingList(node.label);\n        this.LoadEdges(node.id);\n        this.IsNodeLocked(nodeIsLocked => {\n          this.setState(\n            {\n              uIsLockedByDB: nodeIsLocked\n            },\n            () => this.UpdatePermissions()\n          );\n        });\n      }\n    );\n  }\n  LoadEdges(id) {\n    // -- First, sort edges by source, then target\n    const NCDATA = UDATA.AppState('NCDATA');\n    const linkedEdges = NCDATA.edges.filter(e => e.source === id || e.target === id);\n    linkedEdges.sort((a, b) => {\n      // same source label, sort on target\n      if (a.sourceLabel === b.sourceLabel) {\n        if (a.targetLabel < b.targetLabel) return -1;\n        if (a.targetLabel > b.targetLabel) return 1;\n      }\n      // Always list `this` node first\n      if (a.source === id) return -1;\n      if (b.source === id) return 1;\n      // Otherwise sort on source\n      if (a.sourceLabel < b.sourceLabel) return -1;\n      if (a.sourceLabel > b.sourceLabel) return 1;\n      return 0;\n    });\n    this.setState({ edges: linkedEdges });\n  }\n  /**\n   * Loads up the `attributes` object defined by the TEMPLATE\n   * Will skip\n   *   * BUILTIN fields\n   *   * attributes that are `hidden` by the template\n   * REVIEW: Currently the parameters will show up in random object order.\n   * @param {Object} node\n   * @returns {Object} { ...attr-key: attr-value }\n   */\n  LoadAttributes(node) {\n    const NODEDEFS = UDATA.AppState('TEMPLATE').nodeDefs;\n    const attributes = {};\n    Object.keys(NODEDEFS).forEach(k => {\n      if (BUILTIN_FIELDS_NODE.includes(k)) return; // skip built-in fields\n      const attr_def = NODEDEFS[k];\n      if (attr_def.hidden) return; // skip hidden fields\n      if (attr_def.isProvenance) return; // skip fields that are marked as provenance\n      attributes[k] = node[k];\n    });\n    return attributes;\n  }\n  /**\n   * Loads up the `provenance` object defined by the TEMPLATE\n   * Will skip\n   *   * BUILTIN fields\n   *   * attributes that are `hidden` by the template\n   * REVIEW: Currently the parameters will show up in random object order.\n   * @param {Object} node\n   * @returns {Object} { ...attr-key: attr-value }\n   */\n  LoadProvenance(node) {\n    const NODEDEFS = UDATA.AppState('TEMPLATE').nodeDefs;\n    const provenance = {};\n    Object.keys(NODEDEFS).forEach(k => {\n      if (BUILTIN_FIELDS_NODE.includes(k)) return; // skip built-in fields\n      const provenance_def = NODEDEFS[k];\n      if (provenance_def.hidden) return; // skip hidden fields\n      if (!provenance_def.isProvenance) return; // skip fields that are not marked as provenance\n      provenance[k] = node[k];\n    });\n    return provenance;\n  }\n\n  /**\n   * Tries to lock the node for editing.\n   * If the lock fails, then it means the node was already locked\n   * previously and we're not allowed to edit\n   * @param {function} cb callback function\n   * @returns {boolean} true if lock was successful\n   */\n  LockNode(cb) {\n    const { id } = this.state;\n    let lockSuccess = false;\n    UDATA.NetCall('SRV_DBLOCKNODE', { nodeID: id }).then(data => {\n      if (data.NOP) {\n        console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n      } else if (data.locked) {\n        console.log(`SERVER SAYS: lock success! you can edit Node ${data.nodeID}`);\n        console.log(`SERVER SAYS: unlock the node after successful DBUPDATE`);\n        lockSuccess = true;\n        // When a node is being edited, lock the Template from being edited\n        UDATA.NetCall('SRV_REQ_EDIT_LOCK', { editor: EDITORTYPE.NODE });\n      }\n      if (typeof cb === 'function') cb(lockSuccess);\n    });\n  }\n  UnlockNode(cb) {\n    const { id } = this.state;\n    let unlockSuccess = false;\n    UDATA.NetCall('SRV_DBUNLOCKNODE', { nodeID: id }).then(data => {\n      if (data.NOP) {\n        console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n      } else if (data.unlocked) {\n        console.log(\n          `SERVER SAYS: unlock success! you have released Node ${data.nodeID}`\n        );\n        unlockSuccess = true;\n        // Release Template lock\n        UDATA.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.NODE });\n      }\n      if (typeof cb === 'function') cb(unlockSuccess);\n    });\n  }\n  IsNodeLocked(cb) {\n    const { id } = this.state;\n    let nodeIsLocked = false;\n    UDATA.NetCall('SRV_DBISNODELOCKED', { nodeID: id }).then(data => {\n      if (data.NOP) {\n        console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n      } else if (data.locked) {\n        console.log(\n          `SERVER SAYS: Node is locked! You cannot edit Node ${data.nodeID}`\n        );\n        nodeIsLocked = true;\n      }\n      if (typeof cb === 'function') cb(nodeIsLocked);\n    });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// DATA SAVING\n  ///\n  SaveNode() {\n    const { id, label, type, attributes, provenance, created, updated, revision } =\n      this.state;\n    const uid = NCLOGIC.GetCurrentUserId();\n    const node = {\n      id,\n      label,\n      type,\n      updatedBy: uid\n    };\n    Object.keys(attributes).forEach(k => (node[k] = attributes[k]));\n    Object.keys(provenance).forEach(k => (node[k] = provenance[k]));\n\n    // Exit Edit mode first, then send the update\n    // (This is necessary otherwise the db update will trigger a\n    // NCDATA update followed by LoadNode, which will skip loading because\n    // it's still in edit mode)\n    this.setState(\n      {\n        uViewMode: NCUI.VIEWMODE.VIEW\n      },\n      () => {\n        // write data to database\n        // setting dbWrite to true will distinguish this update\n        // from a remote one\n        this.AppCall('DB_UPDATE', { node }).then(() => {\n          this.UnlockNode(() => {\n            this.setState({ uIsLockedByDB: false });\n          });\n        });\n      }\n    );\n    UNISYS.Log('click save node', id, label, JSON.stringify(node));\n  }\n  DeleteNode() {\n    const { id, uReplacementNodeId } = this.state;\n\n    // Re-link edges or delete edges?\n    // `NaN` is not valid JSON, so we need to pass -1\n    const replacementNodeID =\n      uReplacementNodeId === '' ? -1 : parseInt(uReplacementNodeId); // '' = Delete edges by default\n\n    this.ResetState();\n    this.AppCall('DB_UPDATE', {\n      nodeID: id,\n      replacementNodeID: replacementNodeID\n    });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// HELPER METHODS\n  /**\n   * Sets the background color of the node editor via `uBackgroundColor` state.\n   * Currently the background color is determined by the template node type\n   * color mapping.  This will eventually be replaced with a color manager.\n   */\n  SetBackgroundColor() {\n    const { type } = this.state;\n    const COLORMAP = UDATA.AppState('COLORMAP');\n    const uBackgroundColor = COLORMAP.nodeColorMap[type] || '#555555';\n    this.setState({ uBackgroundColor });\n  }\n\n  UpdateMatchingList(value) {\n    const { id } = this.state;\n    UDATA.LocalCall('FIND_MATCHING_NODES', { searchString: value }).then(data => {\n      const matchingNodes = data.nodes.filter(n => n.id !== id); // don't include self\n      this.setState({ matchingNodes });\n    });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// UI EVENT HANDLERS\n\n  UISelectTab(event) {\n    const { id, label } = this.state;\n    const uSelectedTab = event.target.value;\n    this.setState({ uSelectedTab });\n    if (event.target.value !== TABS.EDGES) UDATA.LocalCall('EDGE_DESELECT');\n    UNISYS.Log('select node tab', id, label, uSelectedTab);\n  }\n\n  /**\n   * If `lockNode` is not successful, then that means the node was\n   * already locked, so we can't edit.\n   */\n  UIRequestEditNode() {\n    const { isLoggedIn } = this.state;\n    if (!isLoggedIn) return;\n    this.LockNode(lockSuccess => {\n      this.setState({ uIsLockedByDB: !lockSuccess }, () => {\n        if (lockSuccess) this.UIEnableEditMode();\n      });\n    });\n  }\n\n  UIReplacementNodeIdUpdate(event) {\n    const replacementNodeId = parseInt(event.target.value);\n    let isValid = false;\n    // Allow `` because we use a a blank field to indicate delete node without relinking edges.\n    if (\n      event.target.value === '' ||\n      UDATA.AppState('NCDATA').nodes.find(node => {\n        return node.id === replacementNodeId;\n      })\n    ) {\n      isValid = true;\n    }\n    this.setState({\n      uReplacementNodeId: replacementNodeId,\n      uIsValidReplacementNodeID: isValid\n    });\n  }\n\n  UIAddEdge(event) {\n    event.preventDefault();\n    UDATA.LocalCall('EDGE_CREATE', { nodeId: this.state.id }).then(edge => {\n      // enable editing right away\n      this.UIEditEdge(edge.id);\n    });\n  }\n\n  UIEnableEditMode() {\n    const { uSelectedTab, id, label, type, attributes, provenance } = this.state;\n    // If user was on Edges tab while requesting edit (e.g. from Node Table), then\n    // switch to Attributes tab first.\n    const editableTab = uSelectedTab === TABS.EDGES ? TABS.ATTRIBUTES : uSelectedTab;\n    const previousState = {\n      label,\n      type,\n      attributes: Object.assign({}, attributes)\n      // provenance: Object.assign({}, provenance) // uncomment after provenence is implemented\n    };\n    this.setState({\n      uViewMode: NCUI.VIEWMODE.EDIT,\n      uSelectedTab: editableTab,\n      previousState\n    });\n\n    const node = {\n      id,\n      label,\n      type,\n      provenance\n    };\n    Object.keys(attributes).forEach(k => (node[k] = attributes[k]));\n    Object.keys(provenance).forEach(k => (node[k] = provenance[k]));\n    UNISYS.Log('edit node', id, label, JSON.stringify(node));\n  }\n\n  UICancelEditMode() {\n    const { id, label, revision, previousState } = this.state;\n\n    // if user is cancelling a newly created unsaved node, delete the node instead\n    // Initial Node creation is rev 0, saving it for the first time bumps it to rev 1\n    if (revision < 1) {\n      this.UIDisableEditMode();\n      this.DeleteNode();\n      return;\n    }\n\n    // restore previous state\n    this.setState(\n      {\n        label: previousState.label,\n        type: previousState.type,\n        attributes: previousState.attributes\n        // provenance: previousState.provenance // uncomment after provenence is implemented\n      },\n      () => this.UIDisableEditMode()\n    );\n    UNISYS.Log('cancel edit node', id, label);\n  }\n\n  UIDisableEditMode() {\n    this.UnlockNode(() => {\n      this.setState({\n        uViewMode: NCUI.VIEWMODE.VIEW,\n        uIsLockedByDB: false\n      });\n      UDATA.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.NODE });\n    });\n  }\n  UIInputUpdate(key, value) {\n    if (BUILTIN_FIELDS_NODE.includes(key)) {\n      const data = {};\n      data[key] = value;\n      this.setState(data);\n    } else {\n      const { attributes } = this.state;\n      attributes[key] = value;\n      this.setState({ attributes }, () => this.SetBackgroundColor());\n    }\n  }\n  UIProvenanceInputUpdate(key, value) {\n    if (BUILTIN_FIELDS_NODE.includes(key)) {\n      const data = {};\n      data[key] = value;\n      this.setState(data);\n    } else {\n      const { provenance } = this.state;\n      provenance[key] = value;\n      this.setState({ provenance }, () => this.SetBackgroundColor());\n    }\n  }\n  UILabelInputUpdate(key, value) {\n    const data = {};\n    data[key] = value;\n    this.setState(data);\n    this.UpdateMatchingList(value);\n  }\n\n  UIViewEdge(edgeId) {\n    const { edges } = this.state;\n    const edge = edges.find(e => e.id === Number(edgeId));\n    this.setState({ selectedEdgeId: edgeId });\n    UDATA.LocalCall('EDGE_OPEN', { edge });\n  }\n\n  UIEditEdge(edgeId) {\n    const { edges } = this.state;\n    const edge = edges.find(e => e.id === Number(edgeId));\n    this.setState({ selectedEdgeId: edgeId });\n    UDATA.LocalCall('EDGE_OPEN', { edge }).then(() =>\n      UDATA.LocalCall('EDGE_EDIT', { edge })\n    );\n  }\n\n  UICitationShow() {\n    this.setState({ uShowCitationDialog: true });\n  }\n  UICitationClose() {\n    this.setState({ uShowCitationDialog: false });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// RENDER METHODS\n  RenderView() {\n    const {\n      uSelectedTab,\n      uBackgroundColor,\n      uEditBtnDisable,\n      uEditBtnHide,\n      uEditLockMessage,\n      uHideDeleteNodeButton,\n      uReplacementNodeId,\n      uIsValidReplacementNodeID,\n      uShowCitationDialog,\n      id,\n      label,\n      type\n    } = this.state;\n    const TEMPLATE = UDATA.AppState('TEMPLATE');\n    const defs = TEMPLATE.nodeDefs;\n    const uShowCitationButton = TEMPLATE.citation && !TEMPLATE.citation.hidden;\n    const bgcolor = uBackgroundColor + '44'; // hack opacity\n    const citation =\n      `NetCreate ${TEMPLATE.name} network, ` +\n      `Node: \"${label}\" (ID ${id}). ` +\n      (TEMPLATE.citation && TEMPLATE.citation.text\n        ? `${TEMPLATE.citation.text}. `\n        : '') +\n      `Last accessed at ${NCUI.DateFormatted()}.`;\n    const collection_ref = CMTMGR.GetNodeCREF(id);\n    return (\n      <div className=\"--NCNode_View nccomponent\">\n        <div className=\"view\" style={{ background: bgcolor }}>\n          {/* BUILT-IN - - - - - - - - - - - - - - - - - */}\n          <div className=\"titlebar\">\n            <div className=\"nodenumber\">NODE {id}</div>\n            <div className=\"nodelabel\">{NCUI.RenderLabel('label', label)}</div>\n            <URCommentBtn cref={collection_ref} />\n            {/* using key resets with a new URComment <URCommentBtn cref={collection_ref} key={collection_ref} /> */}\n          </div>\n          {/* Special handling for `type` field */}\n          {defs['type'] && !defs['type'].hidden && (\n            <div className=\"formview typeview\">\n              {NCUI.RenderLabel('type', defs['type'].displayLabel, defs['type'].help)}\n              {NCUI.RenderStringValue('type', type)}\n            </div>\n          )}\n          {/* TABS - - - - - - - - - - - - - - - - - - - */}\n          <div className=\"--NCNode_View_Tabs tabcontainer\">\n            {NCUI.RenderTabSelectors(TABS, this.state, this.UISelectTab)}\n            <div className=\"tabview\">\n              {uSelectedTab === TABS.ATTRIBUTES &&\n                NCUI.RenderAttributesTabView(this.state, defs)}\n              {uSelectedTab === TABS.EDGES && this.RenderEdgesTab()}\n              {uSelectedTab === TABS.PROVENANCE &&\n                NCUI.RenderProvenanceTabView(this.state, defs)}\n            </div>\n          </div>\n          {/* CONTROL BAR - - - - - - - - - - - - - - - - */}\n          {!uEditBtnHide && uEditLockMessage && (\n            <div className=\"message warning\" style={{ marginTop: '1em' }}>\n              <p>{uEditLockMessage}</p>\n              <p hidden={!isAdmin}>\n                <b>ADMINISTRATOR ONLY</b>: If you are absolutely sure this is an\n                error, you can force the unlock.\n                <button onClick={this.UIDisableEditMode} style={{ marginLeft: 0 }}>\n                  Force Unlock\n                </button>\n              </p>\n            </div>\n          )}\n          <div className=\"--NCNode_View_Controls controlbar\">\n            {uShowCitationButton && (\n              <button\n                id=\"citationbtn\"\n                className=\"citationbutton\"\n                onClick={this.UICitationShow}\n              >\n                Cite Node\n              </button>\n            )}\n            <div style={{ flexGrow: 1 }}></div>\n            {!uEditBtnHide && uSelectedTab !== TABS.EDGES && (\n              <button\n                id=\"editbtn\"\n                onClick={this.UIRequestEditNode}\n                disabled={uEditBtnDisable}\n              >\n                Edit\n              </button>\n            )}\n          </div>\n          {isAdmin && !uEditBtnDisable && !uHideDeleteNodeButton && (\n            <div className=\"controlbar deletenode\">\n              <div className=\"message\">\n                Re-link edges to this Node ID (leave blank to delete edge)\n              </div>\n              <div>\n                <input\n                  type=\"number\"\n                  id=\"replacementNodeID\"\n                  className={`deleteinput ${\n                    uIsValidReplacementNodeID ? '' : 'invalid'\n                  }`}\n                  value={uReplacementNodeId || ''}\n                  onChange={this.UIReplacementNodeIdUpdate}\n                />\n                {!uIsValidReplacementNodeID && (\n                  <div className=\"message warning\">Invalid Node ID!</div>\n                )}\n              </div>\n              <button onClick={this.DeleteNode}>Delete</button>\n            </div>\n          )}\n        </div>\n        {uShowCitationDialog && (\n          <NCDialogCitation message={citation} onClose={this.UICitationClose} />\n        )}\n      </div>\n    );\n  }\n\n  RenderEdit() {\n    const {\n      uSelectedTab,\n      uBackgroundColor,\n      uShowMatchlist,\n      matchingNodes,\n      id,\n      label,\n      type\n    } = this.state;\n    const defs = UDATA.AppState('TEMPLATE').nodeDefs;\n    const bgcolor = uBackgroundColor + '66'; // hack opacity\n    const matchList = matchingNodes\n      ? matchingNodes.map(n => (\n          <div key={`${n.label}${n.id}`} value={n.id}>\n            {n.label} <span className=\"id\">#{n.id}</span>\n          </div>\n        ))\n      : undefined;\n    const isDuplicate = matchingNodes && matchingNodes.find(n => n.label === label);\n    const duplicateWarning = UDATA.AppState('TEMPLATE').duplicateWarning;\n    return (\n      <div className=\"--NCNode_Edit\">\n        <div className=\"screen\"></div>\n        <div className=\"nccomponent\">\n          <div\n            className=\"edit\"\n            style={{\n              background: bgcolor,\n              borderColor: uBackgroundColor\n            }}\n          >\n            {/* BUILT-IN - - - - - - - - - - - - - - - - - */}\n            <div className=\"nodelabel\">\n              {NCUI.RenderStringInput(\n                'label',\n                label,\n                this.UILabelInputUpdate,\n                '',\n                () => this.setState({ uShowMatchlist: true }),\n                () => this.setState({ uShowMatchlist: false })\n              )}\n              {uShowMatchlist && matchList && (\n                <div className=\"matchlist\">\n                  {isDuplicate && <div className=\"warning\">{duplicateWarning}</div>}\n                  {matchList}\n                </div>\n              )}\n              {isDuplicate && <div className=\"message\">{duplicateWarning}</div>}\n            </div>\n            {/* Special handling for `type` field */}\n            {defs['type'] && !defs['type'].hidden && (\n              <div className=\"formview typeview\">\n                {NCUI.RenderLabel(\n                  'type',\n                  defs['type'].displayLabel,\n                  defs['type'].help\n                )}\n                {NCUI.RenderOptionsInput(\n                  'type',\n                  type,\n                  defs,\n                  this.UIInputUpdate,\n                  defs['type'].help\n                )}\n              </div>\n            )}\n            {/* TABS - - - - - - - - - - - - - - - - - - - */}\n            <div className=\"tabcontainer\">\n              {NCUI.RenderTabSelectors(TABS, this.state, this.UISelectTab)}\n              <div className=\"tabview\">\n                {uSelectedTab === TABS.ATTRIBUTES &&\n                  NCUI.RenderAttributesTabEdit(this.state, defs, this.UIInputUpdate)}\n                {uSelectedTab === TABS.EDGES && this.RenderEdgesTab()}\n                {uSelectedTab === TABS.PROVENANCE &&\n                  NCUI.RenderProvenanceTabEdit(\n                    this.state,\n                    defs,\n                    this.UIProvenanceInputUpdate\n                  )}\n              </div>\n            </div>\n            {/* CONTROL BAR - - - - - - - - - - - - - - - - */}\n            <div className=\"controlbar\">\n              <button className=\"cancelbtn\" onClick={this.UICancelEditMode}>\n                Cancel\n              </button>\n              <button onClick={this.SaveNode}>Save</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// RENDER HELPERS\n  ///\n  RenderEdgesTab() {\n    const {\n      uSelectedTab,\n      selectedEdgeId,\n      uEditBtnDisable,\n      uEditBtnHide,\n      id,\n      label,\n      edges\n    } = this.state;\n    const NCDATA = UDATA.AppState('NCDATA');\n    const TEMPLATE = UDATA.AppState('TEMPLATE');\n    const me = (\n      <span style={{ color: 'rgba(0,0,0,0.2)', fontStyle: 'italic' }}>this node</span>\n    );\n    return (\n      <div className=\"edges\">\n        {edges.map(e => {\n          const sourceNode = NCDATA.nodes.find(n => n.id === e.source) || {\n            label: EDGE_NOT_SET_LABEL\n          };\n          const targetNode = NCDATA.nodes.find(n => n.id === e.target) || {\n            label: EDGE_NOT_SET_LABEL\n          };\n          const color = EDGEMGR.LookupEdgeColor(e, TEMPLATE);\n          const bgcolor = color + '33'; // opacity hack\n          if (e.id === selectedEdgeId) {\n            return <NCEdge edgeId={e.id} parentNodeId={id} key={e.id} />;\n          } else {\n            return (\n              <div key={e.id}>\n                <button\n                  className=\"edgebutton\"\n                  onClick={() => this.UIViewEdge(e.id)}\n                  style={{ backgroundColor: bgcolor }}\n                >\n                  {id === e.source ? me : sourceNode.label}\n                  &nbsp;<span title={e.type}>{ARROW_RIGHT}</span>&nbsp;\n                  {id === e.target ? me : targetNode.label}\n                </button>\n              </div>\n            );\n          }\n        })}\n        {!uEditBtnHide && uSelectedTab === TABS.EDGES && (\n          <button\n            className=\"addedgebutton\"\n            onClick={this.UIAddEdge}\n            disabled={uEditBtnDisable}\n          >\n            New Edge\n          </button>\n        )}\n      </div>\n    );\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// MAIN RENDER\n  render() {\n    const { id, uViewMode } = this.state;\n    if (!id) return ''; // nothing selected\n    if (uViewMode === NCUI.VIEWMODE.VIEW) {\n      return this.RenderView();\n    } else {\n      return this.RenderEdit();\n    }\n  }\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NCNode;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n    NCNodeTable is used to to display a table of nodes for review.\n\n    It displays NCDATA.\n    But also checks FILTEREDNCDATA to show highlight/filtered state\n\n    This is intended to be a generic table implementation that enables\n    swapping in different table implementations.\n\n    This is an abstraction of the original NodeTable component to make\n    it easier to swap in custom table components.\n\n\n  ## PROPS\n\n    * tableHeight -- sets height based on InfoPanel dragger\n    * isOpen -- whether the table is visible\n\n  ## TO USE\n\n    NCNodeTable is self contained and relies on global NCDATA to load.\n\n      <NCNodeTable tableHeight isOpen/>\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst NCUI = require('../nc-ui');\nconst CMTMGR = require('../comment-mgr');\nconst SETTINGS = require('settings');\nconst FILTER = require('./filter/FilterEnums');\nconst { BUILTIN_FIELDS_NODE } = require('system/util/enum');\nconst UNISYS = require('unisys/client');\nimport HDATE from 'system/util/hdate';\nimport URCommentVBtn from './URCommentVBtn';\nimport URTable from './URTable';\nconst { ICON_PENCIL, ICON_VIEW } = require('system/util/constant');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nlet UDATA = null;\n\n/// UTILITY METHODS ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Comment Button ID based on cref\n/// NOTE: This is different from the commenButtonID of URComentBtn,\n/// which is simply `comment-button-${cref}` so that we can distinguish\n/// clicks from the NCNodeTable from clicks from Node/Edges.\nfunction u_GetButtonId(cref) {\n  return `table-comment-button-${cref}`;\n}\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass NCNodeTable extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n\n    const TEMPLATE = this.AppState('TEMPLATE');\n    this.state = {\n      nodeDefs: TEMPLATE.nodeDefs,\n      nodes: [],\n      selectedNodeId: undefined,\n      hilitedNodeId: undefined,\n      selectedNodeColor: TEMPLATE.sourceColor,\n      hilitedNodeColor: TEMPLATE.searchColor,\n      filteredNodes: [],\n      disableEdit: false,\n      isLocked: false,\n      isExpanded: true,\n      sortkey: 'label',\n      dummy: 0, // used to force render update\n\n      COLUMNDEFS: []\n    };\n\n    this.onUpdateCommentUI = this.onUpdateCommentUI.bind(this);\n    this.onStateChange_SESSION = this.onStateChange_SESSION.bind(this);\n    this.onStateChange_SELECTION = this.onStateChange_SELECTION.bind(this);\n    this.onStateChange_HILITE = this.onStateChange_HILITE.bind(this);\n    this.displayUpdated = this.displayUpdated.bind(this);\n    this.updateNodeFilterState = this.updateNodeFilterState.bind(this);\n    this.updateEditState = this.updateEditState.bind(this);\n    this.handleDataUpdate = this.handleDataUpdate.bind(this);\n    this.handleFilterDataUpdate = this.handleFilterDataUpdate.bind(this);\n    this.OnTemplateUpdate = this.OnTemplateUpdate.bind(this);\n    this.onViewButtonClick = this.onViewButtonClick.bind(this);\n    this.onEditButtonClick = this.onEditButtonClick.bind(this);\n    this.onToggleExpanded = this.onToggleExpanded.bind(this);\n    this.onHighlightRow = this.onHighlightRow.bind(this);\n\n    this.SetColumnDefs = this.SetColumnDefs.bind(this);\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n\n    UDATA.HandleMessage('EDIT_PERMISSIONS_UPDATE', this.updateEditState);\n\n    // SESSION is called by SessionSHell when the ID changes\n    //  set system-wide. data: { classId, projId, hashedId, groupId, isValid }\n    this.OnAppStateChange('SESSION', this.onStateChange_SESSION);\n\n    // Always make sure class methods are bind()'d before using them\n    // as a handler, otherwise object context is lost\n    this.OnAppStateChange('NCDATA', this.handleDataUpdate);\n\n    // Track Filtered Data Updates too\n    this.OnAppStateChange('FILTEREDNCDATA', this.handleFilterDataUpdate);\n\n    // Handle Template updates\n    this.OnAppStateChange('TEMPLATE', this.OnTemplateUpdate);\n\n    this.OnAppStateChange('SELECTION', this.onStateChange_SELECTION);\n    this.OnAppStateChange('HILITE', this.onStateChange_HILITE);\n\n    // Comment Message Handlers\n    // Force update whenever threads are opened or closed\n    UDATA.HandleMessage('CTHREADMGR_THREAD_OPENED', this.onUpdateCommentUI);\n    UDATA.HandleMessage('CTHREADMGR_THREAD_CLOSED', this.onUpdateCommentUI);\n    UDATA.HandleMessage('CTHREADMGR_THREAD_CLOSED_ALL', this.onUpdateCommentUI);\n  } // constructor\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  componentDidMount() {\n    if (DBG) console.log('NodeTable.componentDidMount!');\n    this.onStateChange_SESSION(this.AppState('SESSION'));\n\n    // Explicitly retrieve data because we may not have gotten a NCDATA\n    // update while we were hidden.\n    // filtered data needs to be set before D3Data\n    const FILTEREDNCDATA = UDATA.AppState('FILTEREDNCDATA');\n    this.setState({ filteredNodes: FILTEREDNCDATA.nodes }, () => {\n      let NCDATA = this.AppState('NCDATA');\n      this.handleDataUpdate(NCDATA);\n      this.SetColumnDefs();\n    });\n\n    // Request edit state too because the update may have come\n    // while we were hidden\n    this.updateEditState();\n  }\n\n  componentWillUnmount() {\n    UDATA.UnhandleMessage('EDIT_PERMISSIONS_UPDATE', this.updateEditState);\n    this.AppStateChangeOff('SESSION', this.onStateChange_SESSION);\n    this.AppStateChangeOff('NCDATA', this.handleDataUpdate);\n    this.AppStateChangeOff('FILTEREDNCDATA', this.handleFilterDataUpdate);\n    this.AppStateChangeOff('TEMPLATE', this.OnTemplateUpdate);\n    this.AppStateChangeOff('SELECTION', this.onStateChange_SELECTION);\n    this.AppStateChangeOff('HILITE', this.onStateChange_HILITE);\n    UDATA.UnhandleMessage('CTHREADMGR_THREAD_OPENED', this.onUpdateCommentUI);\n    UDATA.UnhandleMessage('CTHREADMGR_THREAD_CLOSED', this.onUpdateCommentUI);\n    UDATA.UnhandleMessage('CTHREADMGR_THREAD_CLOSED_ALL', this.onUpdateCommentUI);\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// Force update so that URCommentVBtn selection state is updated\n  onUpdateCommentUI(data) {\n    this.setState({ dummy: this.state.dummy + 1 });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  onStateChange_SELECTION(data) {\n    this.setState({\n      selectedNodeId: data.nodes.length > 0 ? data.nodes[0].id : undefined\n    });\n  }\n\n  onStateChange_HILITE(data) {\n    const { userHighlightNodeId, autosuggestHiliteNodeId } = data; // ignores `tableHiliteNodeId`\n    let hilitedNodeId;\n    if (autosuggestHiliteNodeId !== undefined)\n      hilitedNodeId = autosuggestHiliteNodeId;\n    if (userHighlightNodeId !== undefined) hilitedNodeId = userHighlightNodeId;\n    this.setState({ hilitedNodeId });\n  }\n\n  /** Handle change in SESSION data\n    Called both by componentWillMount() and AppStateChange handler.\n    The 'SESSION' state change is triggered in two places in SessionShell during\n    its handleChange() when active typing is occuring, and also during\n    SessionShell.componentWillMount()\n   */\n  onStateChange_SESSION(decoded) {\n    this.setState({ isLocked: !decoded.isValid });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  displayUpdated(nodeEdge) {\n    // Prevent error if `meta` info is not defined yet, or not properly imported\n\n    // this does not ever fire, revert!\n    console.error('NodeTable meta not defined yet', nodeEdge);\n    if (!nodeEdge.meta) {\n      return '';\n    }\n    var d = new Date(\n      nodeEdge.meta.revision > 0 ? nodeEdge.meta.updated : nodeEdge.meta.created\n    );\n\n    var year = String(d.getFullYear());\n    var date = d.getMonth() + 1 + '/' + d.getDate() + '/' + year.substr(2, 4);\n    var time = d.toTimeString().substr(0, 5);\n    var dateTime = date + ' at ' + time;\n    var titleString = 'v' + nodeEdge.meta.revision;\n    if (nodeEdge._nlog)\n      titleString += ' by ' + nodeEdge._nlog[nodeEdge._nlog.length - 1];\n    var tag = <span title={titleString}> {dateTime} </span>;\n\n    return tag;\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// Set node filtered status based on current filteredNodes\n  updateNodeFilterState(nodes, filteredNodes) {\n    // set filter status\n    if (filteredNodes.length > 0) {\n      // If we're transitioning from \"HILIGHT/FADE\" to \"COLLAPSE\" or \"FOCUS\", then we\n      // also need to remove nodes that are not in filteredNodes\n      const FILTERDEFS = UDATA.AppState('FILTERDEFS');\n      if (\n        FILTERDEFS.filterAction === FILTER.ACTION.REDUCE ||\n        FILTERDEFS.filterAction === FILTER.ACTION.FOCUS\n      ) {\n        // Reduce (remove) or Focus\n        nodes = nodes.filter(node => {\n          const filteredNode = filteredNodes.find(n => n.id === node.id);\n          return filteredNode; // keep if it's in the list of filtered nodes\n        });\n      } else {\n        // Fade\n        // Fading is handled by setting node.filteredTransparency which is\n        // directly handled by the filter now.  So no need to process it\n        // here in the table.\n      }\n    }\n    this.setState({ nodes, filteredNodes });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  updateEditState() {\n    // disable edit if someone else is editing a template, node, or edge\n    let disableEdit = false;\n    UDATA.NetCall('SRV_GET_EDIT_STATUS').then(data => {\n      // someone else might be editing a template or importing or editing node or edge\n      disableEdit =\n        data.templateBeingEdited ||\n        data.importActive ||\n        data.nodeOrEdgeBeingEdited ||\n        data.commentBeingEditedByMe; // only lock out if this user is the one editing comments, allow network commen edits\n      this.setState({ disableEdit });\n    });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Handle updated SELECTION\n   */\n  handleDataUpdate(data) {\n    if (DBG) console.log('handle data update');\n    if (data.nodes) {\n      // const nodes = this.sortTable(this.state.sortkey, data.nodes);\n      const nodes = data.nodes;\n      const { filteredNodes } = this.state;\n      this.updateNodeFilterState(nodes, filteredNodes);\n    }\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  handleFilterDataUpdate(data) {\n    if (data.nodes) {\n      const filteredNodes = data.nodes;\n      // If we're transitioning from \"COLLAPSE\" or \"FOCUS\" to \"HILIGHT/FADE\", then we\n      // also need to add back in nodes that are not in filteredNodes\n      // (because \"COLLAPSE\" and \"FOCUS\" removes nodes that are not matched)\n      const NCDATA = UDATA.AppState('NCDATA');\n      const FILTERDEFS = UDATA.AppState('FILTERDEFS');\n      if (FILTERDEFS.filterAction === FILTER.ACTION.FADE) {\n        this.setState(\n          {\n            nodes: NCDATA.nodes,\n            filteredNodes\n          },\n          () => {\n            const nodes = NCDATA.nodes;\n            this.updateNodeFilterState(nodes, filteredNodes);\n          }\n        );\n      } else {\n        this.setState(\n          {\n            nodes: filteredNodes,\n            filteredNodes\n          },\n          () => {\n            const nodes = filteredNodes;\n            this.updateNodeFilterState(nodes, filteredNodes);\n          }\n        );\n      }\n    }\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  OnTemplateUpdate(data) {\n    this.setState({\n      nodeDefs: data.nodeDefs,\n      selectedNodeColor: data.sourceColor,\n      hilitedNodeColor: data.searchColor\n    });\n  }\n\n  /// UTILITIES /////////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  /// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onViewButtonClick(event, nodeId) {\n    event.preventDefault();\n    event.stopPropagation();\n    let nodeID = parseInt(nodeId);\n    UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [nodeID] });\n  }\n  /**\n   */\n  onEditButtonClick(event, nodeId) {\n    event.preventDefault();\n    event.stopPropagation();\n    let nodeID = parseInt(nodeId);\n    UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [nodeID] }).then(() => {\n      if (DBG) console.error('NodeTable: Calling NODE_EDIT', nodeID);\n      UDATA.LocalCall('NODE_EDIT', { nodeID: nodeID });\n    });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onToggleExpanded(event) {\n    this.setState({\n      isExpanded: !this.state.isExpanded\n    });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onHighlightRow(nodeId) {\n    UDATA.LocalCall('TABLE_HILITE_NODE', { nodeId });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  selectNode(id, event) {\n    event.preventDefault();\n\n    // REVIEW: For some reason React converts the integer IDs into string\n    // values when returned in event.target.value.  So we have to convert\n    // it here.\n    // Load Source\n    UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [parseInt(id)] });\n  }\n\n  /// URTABLE COLUMN DEFS /////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  SetColumnDefs() {\n    const { nodeDefs, disableEdit, isLocked } = this.state;\n\n    // Only include built in fields\n    // Only include non-hidden fields\n    const attributeDefs = Object.keys(nodeDefs).filter(\n      k => !BUILTIN_FIELDS_NODE.includes(k) && !nodeDefs[k].hidden\n    );\n\n    /// CLICK HANDLERS\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    function ui_ClickViewNode(event, nodeId) {\n      event.preventDefault();\n      event.stopPropagation();\n      UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [parseInt(nodeId)] });\n    }\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    function ui_ClickEditNode(event, nodeId) {\n      event.preventDefault();\n      event.stopPropagation();\n      const nodeID = parseInt(nodeId);\n      UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [nodeID] }).then(() => {\n        if (DBG) console.error('NodeTable: Calling NODE_EDIT', nodeID);\n        UDATA.LocalCall('NODE_EDIT', { nodeID: nodeID });\n      });\n    }\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    function ui_ClickCommentBtn(cref) {\n      const position = CMTMGR.GetCommentThreadPosition(u_GetButtonId(cref));\n      const uiref = u_GetButtonId(cref);\n      CMTMGR.ToggleCommentCollection(uiref, cref, position);\n    }\n    /// RENDERERS\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    function RenderViewOrEdit(value) {\n      return (\n        <div>\n          {!disableEdit && (\n            <button\n              className=\"outline\"\n              onClick={event => ui_ClickViewNode(event, value)}\n            >\n              {ICON_VIEW}\n            </button>\n          )}\n          {!disableEdit && !isLocked && (\n            <button\n              className=\"outline\"\n              onClick={event => ui_ClickEditNode(event, value)}\n            >\n              {ICON_PENCIL}\n            </button>\n          )}\n        </div>\n      );\n    }\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    // interface TTblNodeObject {\n    //   id: String;\n    //   label: String;\n    // }\n    function RenderNode(value) {\n      if (!value) return; // skip if not defined yet\n      if (value.id === undefined)\n        throw new Error('RenderNode: value.id is undefined');\n      if (value.label === undefined)\n        throw new Error('RenderNode: value.label is undefined');\n      return (\n        <button\n          className=\"outline\"\n          onClick={event => ui_ClickViewNode(event, value.id)}\n        >\n          <span style={{ color: 'blue' }}>{value.label}</span>\n        </button>\n      );\n    }\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    function RenderCommentBtn(value) {\n      return (\n        <URCommentVBtn\n          uiref={u_GetButtonId(value.cref)}\n          count={value.count}\n          hasUnreadComments={value.hasUnreadComments}\n          selected={value.selected}\n          cb={e => ui_ClickCommentBtn(value.cref)}\n        />\n      );\n    }\n    /// CUSTOM SORTERS\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    /// tdata = TTblNodeObject[] = { id: String, label: String }\n    function SortNodes(key, tdata, order) {\n      const sortedData = [...tdata].sort((a, b) => {\n        if (a[key].label < b[key].label) return order;\n        if (a[key].label > b[key].label) return order * -1;\n        return 0;\n      });\n      return sortedData;\n    }\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    function SortCommentsByCount(key, tdata, order) {\n      const sortedData = [...tdata].sort((a, b) => {\n        if (a[key].count < b[key].count) return order;\n        if (a[key].count > b[key].count) return order * -1;\n        return 0;\n      });\n      return sortedData;\n    }\n    /// COLUMN DEFINITIONS\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    // column definitions for custom attributes\n    // (built in columns are: view, degrees, label)\n    const ATTRIBUTE_COLUMNDEFS = attributeDefs.map(key => {\n      const title = nodeDefs[key].displayLabel;\n      const type = nodeDefs[key].type;\n      return {\n        title,\n        type,\n        data: key\n      };\n    });\n    const COLUMNDEFS = [\n      {\n        title: '', // View/Edit\n        data: 'id',\n        type: 'number',\n        width: 45, // in px\n        renderer: RenderViewOrEdit\n      },\n      {\n        title: nodeDefs['degrees'].displayLabel,\n        type: 'number',\n        width: 50, // in px\n        data: 'degrees'\n      },\n      {\n        title: nodeDefs['label'].displayLabel,\n        data: 'label',\n        width: 300, // in px\n        renderer: RenderNode,\n        sorter: SortNodes\n      }\n    ];\n    if (nodeDefs['type'] && !nodeDefs['type'].hidden) {\n      COLUMNDEFS.push({\n        title: nodeDefs['type'].displayLabel,\n        type: 'text',\n        width: 130, // in px\n        data: 'type'\n      });\n    }\n    COLUMNDEFS.push(...ATTRIBUTE_COLUMNDEFS, {\n      title: 'Comments',\n      data: 'commentVBtnDef',\n      width: 50, // in px\n      renderer: RenderCommentBtn,\n      sorter: SortCommentsByCount\n    });\n    this.setState({ COLUMNDEFS });\n  }\n\n  /// REACT LIFECYCLE METHODS /////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  render() {\n    const {\n      nodes,\n      nodeDefs,\n      selectedNodeId,\n      hilitedNodeId,\n      selectedNodeColor,\n      hilitedNodeColor,\n      disableEdit,\n      isLocked,\n      COLUMNDEFS\n    } = this.state;\n    if (nodes === undefined) return '';\n    const { isOpen, tableHeight } = this.props;\n\n    // skip rendering if COLUMNDEFS is not defined yet\n    // This ensures that URTable is inited only AFTER data has been loaded.\n    if (COLUMNDEFS.length < 1) return '';\n\n    const uid = CMTMGR.GetCurrentUserId();\n\n    const attributeDefs = Object.keys(nodeDefs).filter(\n      k => !BUILTIN_FIELDS_NODE.includes(k)\n    );\n\n    /// TABLE DATA GENERATION\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    const TABLEDATA = nodes.map((node, i) => {\n      const { id, label, type, degrees } = node;\n\n      const sourceDef = { id, label };\n\n      // custom attributes\n      const attributes = {};\n      attributeDefs.forEach((key, i) => {\n        let data = {};\n        if (nodeDefs[key].type === 'markdown') {\n          // for markdown:\n          // a. provide the raw markdown string\n          // b. provide the HTML string\n          data.html = NCUI.Markdownify(node[key]);\n          data.raw = node[key];\n        } else if (nodeDefs[key].type === 'hdate')\n          data = node[key] && node[key].formattedDateString;\n        else data = node[key];\n        attributes[key] = data;\n      });\n\n      // comment button definition\n      const cref = CMTMGR.GetNodeCREF(id);\n      const commentCount = CMTMGR.GetThreadedViewObjectsCount(cref, uid);\n      const ccol = CMTMGR.GetCommentCollection(cref) || {};\n      const hasUnreadComments = ccol.hasUnreadComments;\n      const selected = CMTMGR.GetOpenComments(cref);\n      const commentVBtnDef = {\n        cref,\n        count: commentCount,\n        hasUnreadComments,\n        selected\n      };\n\n      return {\n        id,\n        label: sourceDef, // { id, label } so that we can render a button\n        type,\n        degrees,\n        ...attributes,\n        commentVBtnDef,\n        meta: {\n          filteredTransparency: node.filteredTransparency\n        }\n      };\n    });\n\n    return (\n      <div className=\"NCNodeTable\" style={{ height: tableHeight }}>\n        <URTable isOpen={isOpen} data={TABLEDATA} columns={COLUMNDEFS} />\n      </div>\n    );\n  }\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NCNodeTable;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Prototype Simple NetCreate Search Field\n\n  Built for Version 2.0 ITEST.\n\n  Provides a:\n  * Search Field\n  * \"Add New Node\" button\n  * Autosuggest highlighter\n\n  USAGE\n\n    <NCSearch />\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst UNISYS = require('unisys/client');\nconst NCAutoSuggest = require('./NCAutoSuggest');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'NCSearch';\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet UDATA;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass NCSearch extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoggedIn: false,\n      uIsLockedByComment: false,\n      value: ''\n    }; // initialized on componentDidMount and clearSelection\n\n    this.UpdateSession = this.UpdateSession.bind(this);\n    this.SetPermissions = this.SetPermissions.bind(this);\n    this.UIOnChange = this.UIOnChange.bind(this);\n    this.UIOnSelect = this.UIOnSelect.bind(this);\n    this.UINewNode = this.UINewNode.bind(this);\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    /// REGISTER LISTENERS\n    UDATA.OnAppStateChange('SESSION', this.UpdateSession);\n    UDATA.HandleMessage('EDIT_PERMISSIONS_UPDATE', this.SetPermissions);\n  }\n\n  componentWillUnmount() {\n    UDATA.AppStateChangeOff('SESSION', this.UpdateSession);\n    UDATA.UnhandleMessage('EDIT_PERMISSIONS_UPDATE', this.SetPermissions);\n  }\n\n  /**\n   * Handle change in SESSION data\n   * SESSION is called by SessionShell when the ID changes\n   * set system-wide. data: { classId, projId, hashedId, groupId, isValid }\n   * Called both by componentWillMount() and AppStateChange handler.\n   * The 'SESSION' state change is triggered in two places in SessionShell during\n   * its handleChange() when active typing is occuring, and also during\n   * SessionShell.componentWillMount()\n   */\n  UpdateSession(decoded) {\n    this.setState({ isLoggedIn: decoded.isValid });\n  }\n\n  SetPermissions(data) {\n    UDATA.NetCall('SRV_GET_EDIT_STATUS').then(data => {\n      this.setState({\n        uIsLockedByComment: data.commentBeingEditedByMe\n      });\n    });\n  }\n  /**\n   * The callback function (cb) is used to restore the selection point\n   * otherwise the `value` state update will leave the cursor at the end of the field.\n   */\n  UIOnChange(key, value, cb) {\n    // Pass the input value (node label search string) to UDATA\n    // which will in turn pass the searchLabel back to the SEARCH\n    // state handler in the constructor, which will in turn set the state\n    // of the input value to be passed on to AutoSuggest\n    this.AppCall('SOURCE_SEARCH', { searchString: value });\n    // Update current input value and restore the cursor position\n    this.setState({ value }, () => {\n      if (typeof cb === 'function') cb();\n    });\n  }\n\n  UIOnSelect(key, value, id) {\n    const { isLoggedIn } = this.state;\n    // match existing vs create new\n    this.setState({ value }, () => {\n      if (id) {\n        // open existing node\n        UDATA.LocalCall('D3_SELECT_NODE', { nodeIDs: [id] });\n      } else if (isLoggedIn) {\n        // create a new node\n        this.UINewNode();\n      }\n    }); // Enter will create a new node\n  }\n\n  UINewNode() {\n    const { value } = this.state;\n    const data = {};\n    data.label = value;\n    UDATA.LocalCall('NODE_CREATE', data).then(node => {\n      UDATA.LocalCall('D3_SELECT_NODE', { nodeIDs: [node.id] }).then(() => {\n        UDATA.LocalCall('NODE_EDIT', { nodeID: node.id });\n      });\n    });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// MAIN RENDER\n  ///\n  render() {\n    const { value, isLoggedIn, uIsLockedByComment } = this.state;\n    const newNodeBtnHidden = !isLoggedIn || uIsLockedByComment;\n    const newNodeBtnDisabled = value === '';\n    const key = 'search'; // used for search/source/target, placeholder for search\n    return (\n      <div className=\"--NCSearch ncsearch\">\n        <NCAutoSuggest\n          parentKey={key}\n          value={value}\n          onChange={this.UIOnChange}\n          onSelect={this.UIOnSelect}\n        />\n        <button\n          hidden={newNodeBtnHidden}\n          disabled={newNodeBtnDisabled}\n          onClick={this.UINewNode}\n        >\n          New Node\n        </button>\n      </div>\n    );\n  }\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NCSearch;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n\n    DEPRECATED -- NCGraph replaces NetGraph\n\n\n\n\n\n    NetGraph is a React wrapper for a D3 net graph component.\n\n    This component uses React to create the base dom element, but D3NetGraph\n    handles the data updates, rendering and animation updates.\n\n    React is explicitly prevented from updating the component (see\n    shouldComponentUpdate)\n\n    ## TO USE\n\n            <NetGraph/>\n\n    ## Why not use FauxDom?\n\n    https://lab.oli.me.uk/react-faux-dom-state/\n    This article suggests that maybe using force graphs with react-faux-dom\n    not quite work.\n        \"If you want to animate things, use a React animation library (they’re\n         great and work fine with faux DOM), you have to find the React way to\n         do things, sadly some D3 concepts just don’t translate. If you want\n         some physics based graph full of state then you’re probably better\n         off keeping to the original way of embedding D3 in React, dropping\n         out of React and letting D3 mutate that element.\"\n    Indeed, in our testing, the animation updates were not optimal.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst ReactDOM = require('react-dom');\nconst ReactStrap = require('reactstrap');\nconst { Button } = ReactStrap;\nconst D3NetGraph = require('./d3-simplenetgraph');\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar DBG = false;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet UDATA = null;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass NetGraph extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      d3NetGraph: {},\n      nodeTypes: [],\n      edgeTypes: []\n    };\n\n    this.onZoomReset = this.onZoomReset.bind(this);\n    this.onZoomIn = this.onZoomIn.bind(this);\n    this.onZoomOut = this.onZoomOut.bind(this);\n    this.updateLegend = this.updateLegend.bind(this);\n    this.constructGraph = this.constructGraph.bind(this);\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n\n    this.OnAppStateChange('TEMPLATE', this.updateLegend);\n    UDATA.HandleMessage('CONSTRUCT_GRAPH', this.constructGraph);\n  } // constructor\n\n  /// CLASS PRIVATE METHODS /////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  onZoomReset() {\n    this.AppCall('ZOOM_RESET', {});\n  }\n  onZoomIn() {\n    this.AppCall('ZOOM_IN', {});\n  }\n  onZoomOut() {\n    this.AppCall('ZOOM_OUT', {});\n  }\n  updateLegend() {\n    // Update Legends\n    const TEMPLATE = this.AppState('TEMPLATE');\n    const nodeTypes = TEMPLATE.nodeDefs.type.options;\n    const edgeTypes = TEMPLATE.edgeDefs.type.options;\n    this.setState({ nodeTypes, edgeTypes }, () => {\n      this.forceUpdate(); // just once, needed to overcome shouldComponentUpdate override\n    });\n  }\n\n  /// REACT LIFECYCLE ///////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  constructGraph() {\n    // first destroy any existing SVG graph elements\n    const netgraph = document.getElementById('netgraph');\n    if (netgraph) netgraph.remove();\n    // D3NetGraph Constructor\n\n    // eslint-disable-next-line react/no-find-dom-node\n    const el = ReactDOM.findDOMNode(this);\n    const TEMPLATE = this.AppState('TEMPLATE');\n    if (this.state.d3NetGraph && this.state.d3NetGraph.Deregister) {\n      // if d3NetGraph was previously created, deregister it so it stops receiving data updates\n      this.state.d3NetGraph.Deregister();\n    }\n    const d3NetGraph = new D3NetGraph(el, TEMPLATE.nodeDefs);\n    const nodeTypes = TEMPLATE.nodeDefs.type.options;\n    const edgeTypes = TEMPLATE.edgeDefs.type.options;\n    this.setState({ d3NetGraph, nodeTypes, edgeTypes });\n    this.forceUpdate(); // just once, needed to overcome shouldComponentUpdate override\n  }\n\n  /// REACT LIFECYCLE ///////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  componentDidMount() {\n    this.constructGraph();\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  componentWillUnMount() {\n    this.AppStateChangeOff('TEMPLATE', this.updateLegend);\n    UDATA.UnhandleMessage('CONSTRUCT_GRAPH', this.constructGraph);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  shouldComponentUpdate() {\n    // This prevents React from updating the component,\n    // allowing D3 to handle the simulation animation updates\n    // This is also necessary for D3 to handle the\n    // drag events.\n    return false;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  render() {\n    const { nodeTypes, edgeTypes } = this.state;\n    return (\n      <div style={{ height: '100%' }}>\n        <div style={{ margin: '10px 0 0 10px' }}>\n          <div className=\"tooltipAnchor\">\n            <span style={{ fontSize: '9px' }}>\n              <div className=\"badge\">?</div>\n              NETGRAPH for {this.AppState('TEMPLATE').name}\n            </span>\n            <span style={{ fontSize: '12px' }} className=\"tooltiptext\">\n              {this.AppState('TEMPLATE').description}\n            </span>\n          </div>\n        </div>\n        <div\n          style={{ position: 'absolute', right: '10px', width: '50px', zIndex: 1001 }}\n        >\n          <Button\n            outline\n            onClick={this.onZoomIn}\n            style={{ width: '35px', backgroundColor: '#fff', opacity: '0.8' }}\n          >\n            +\n          </Button>\n          &nbsp;\n          <Button\n            outline\n            onClick={this.onZoomReset}\n            style={{ width: '35px', backgroundColor: '#fff', opacity: '0.8' }}\n          >\n            &bull;\n          </Button>\n          &nbsp;\n          <Button\n            outline\n            onClick={this.onZoomOut}\n            style={{ width: '35px', backgroundColor: '#fff', opacity: '0.8' }}\n          >\n            -\n          </Button>\n        </div>\n        <div\n          style={{\n            position: 'absolute',\n            bottom: '40px',\n            marginLeft: '10px',\n            marginBottom: '15px',\n            fontSize: '10px'\n          }}\n        >\n          <div style={{ display: 'inline-block', paddingRight: '2em' }}>KEY</div>\n          <br></br>\n          <div style={{ display: 'inline-block', paddingRight: '2em' }}>\n            {' '}\n            - Node Types:\n          </div>\n          {nodeTypes.map((type, i) => (\n            <div key={i} className=\"tooltipAnchor\">\n              <div\n                style={{\n                  display: 'inline-block',\n                  paddingRight: '2em',\n                  lineHeight: '10px'\n                }}\n              >\n                <div\n                  style={{\n                    display: 'inline-block',\n                    width: '10px',\n                    height: '8px',\n                    backgroundColor: type.color\n                  }}\n                ></div>\n                &nbsp;{type.label === '' ? 'No Type Selected' : type.label}\n              </div>\n              <span className=\"tooltiptextabove\">\n                {type.label === '' ? 'No Type Selected' : type.help || type.label}\n              </span>\n            </div>\n          ))}\n          <br></br>\n          <div style={{ display: 'inline-block', paddingRight: '2em' }}>\n            {' '}\n            - Edge Types:\n          </div>\n          {edgeTypes.map((type, i) => (\n            <div key={i} className=\"tooltipAnchor\">\n              <div\n                style={{\n                  display: 'inline-block',\n                  paddingRight: '2em',\n                  lineHeight: '10px'\n                }}\n              >\n                <div\n                  style={{\n                    display: 'inline-block',\n                    width: '10px',\n                    height: '8px',\n                    backgroundColor: type.color\n                  }}\n                ></div>\n                &nbsp;{type.label === '' ? 'No Type Selected' : type.label}\n              </div>\n              <span className=\"tooltiptextabove\">\n                {type.label === '' ? 'No Type Selected' : type.help || type.label}\n              </span>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n} // class NetGraph\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NetGraph;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Node Detail is a display widget that shows all of the meta information\n  contained in each data node.\n\n  If label is undefined the component will not be shown.\n\n  Node Detail automatically shows the SELECTION.hilitedNode object.\n\n\n  ## TO USE\n\n    Add the following to the render() of the parent component:\n\n      render() {\n        return (\n          ...\n                <NodeDetail/>\n          ...\n        )\n      }\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { Table, FormText } = ReactStrap;\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar DBG = false;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass NodeDetail extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: undefined,\n      type: '',\n      info: '',\n      notes: ''\n    };\n    this.handleSelection = this.handleSelection.bind(this);\n\n    // Always make sure that class methods are bind()'d before\n    // assigning them to a handler\n    this.OnAppStateChange('SELECTION', stateChange => {\n      this.handleSelection(stateChange.hilitedNode);\n    });\n  } // constructor\n\n  /// UI HANDLERS ///////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  handleSelection(hilitedNode) {\n    let node = hilitedNode || {};\n    node.attributes = node.attributes || {}; // validate attributes\n    this.setState({\n      label: node.label,\n      type: node.type,\n      info: node.info,\n      notes: node.notes\n    });\n  } // handleSelection\n\n  /// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  render() {\n    return (\n      <div\n        className={this.state.label === undefined ? 'd-none' : ''}\n        style={{\n          minHeight: '300px',\n          minWidth: '240px',\n          backgroundColor: '#c7f1f1',\n          padding: '5px',\n          marginBottom: '10px'\n        }}\n      >\n        <FormText>NODE DETAIL (RF)</FormText>\n        <Table borderless striped size=\"sm\">\n          <tbody>\n            <tr>\n              <td>Label:&nbsp;&nbsp;</td>\n              <td>{this.state.label}</td>\n            </tr>\n            <tr>\n              <td>Type: </td>\n              <td>{this.state.type}</td>\n            </tr>\n            <tr>\n              <td>Notes:</td>\n              <td>{this.state.notes}</td>\n            </tr>\n            <tr>\n              <td>Info: </td>\n              <td>{this.state.info}</td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n} // class NodeDetail\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NodeDetail;\n","/* eslint-disable complexity */\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n  NodeSelector is a form for searching for, viewing, selecting, and editing\n  Node information.\n\n  NodeSelector does not modify any data.  It passes all events (text updates,\n  highlights, and suggestion selections) up to nc-logic. it\n  should process the events and update the data accordingly.  The\n  updated data is then rendered by NodeSelector.\n\n  ## USAGE\n\n    <NodeSelector/>\n\n  ## TECHNICAL DESCRIPTION\n\n  NodeSelector handles three basic functions:\n\n  1. Display the current SELECTION.nodes[0]\n  2. Support input of node fields\n  3. Send updated node field data to SOURCE_UPDATE\n\n  As the user edits the form, we locally save the changes and send it to UNISYS\n  when the user clicks \"SAVE\"\n\n  The currently selected/editing node is set via SELECTION.nodes.\n\n  Updates are sent to UNISYS via SOURCE_UPDATE.\n\n  The AutoComplete search field is handled a little differently from the other\n  input fields because it is independent of NodeSelector.  In order to keep\n  NodeSelector's internal representation of form data up-to-date, we rely on\n  the SELECTION updates' searchLabel field to update the label.\n\n  There are different levels of write-access:\n\n    isLocked        Nodes can be selected for viewing, but editing\n                    cannot be enabled.\n\n    isStandalone    Nodes can be selected for viewing, but editing\n                    cannot be enabled.\n\n    disableEdit     Template is being edited, disable \"Edit Node\" button\n\n    isBeingEdited   The form fields are active and text can be changed.\n\n\n  Delete Button\n  The Delete button is only displayed for an admin user.  Right now we are detecting\n  this by displaying it only when the user is on `localhost`,\n\n\n  ## STATES\n\n    formData        Node data that is shown in the form\n\n    isLocked        If true (defauilt), nodes can be displayed, but\n                    \"Add New Node\" and \"Edit Node\" buttons are hidden.\n                    The state is unlocked when the user logs in.\n\n    isEditable      If true, form fields are enabled for editing\n                    If false, form is readonly\n\n    dbIsLocked\n                    If someone else has selected the node for editing,\n                    this flag will cause the dbIsLockedMessage\n                    to be displayed.  This is only checked when\n                    the user clicks \"Edit\".\n\n\n  ## TESTING\n\n  Edit Existing Node\n\n    1. Type 'ah'\n          * Nodes on graph should hilite\n          * Suggestions should be displayed\n          * \"Add New Node\" should be shown.\n    2. Highlight 'Ah Sing'\n          * Ah Sing node detail should be shown\n    3. Unhighlight all selections (move mouse out)\n          * NodeDetail should disappear\n    4. Click 'Ah Sing'\n          * 'Ah Sing's details should load in form\n          * \"Edit Node\" button should be shown.\n    5. Click \"Edit Node\"\n          * \"Save\" should be shown\n          * All fields should be enabled\n    6. Edit 'Ah Sing' to 'Ah Sing A'\n          * Form should not change\n          * Hilited graph node should go away\n    7. Edit fields (add text)\n    8. Click \"Save\"\n          * Form should clear\n    9. Check 'Ah Sing' contents to make sure changes were saved\n\n  Create New Node\n\n    1. Type 'ah'\n          * Nodes on graph should hilite\n          * Suggestions should be displayed\n          * \"Add New Node\" should be shown.\n    2. Click 'Add New Node'\n          * Fields should be enabled\n          * A new ID should be added\n          * \"Save\" button should appear\n    3. Edit fields\n    4. Click \"Save\"\n          * New node should appear in graph\n          * The node should have the label you added 'ah'\n    5. Select the node to verify the contents\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst mdReact = require('markdown-react-js');\nconst mdEmoji = require('markdown-it-emoji');\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { Button, Col, Form, FormGroup, FormFeedback, FormText, Label, Input } =\n  ReactStrap;\nconst AutoComplete = require('./AutoComplete');\nconst NodeDetail = require('./NodeDetail');\nconst EdgeEditor = require('./EdgeEditor');\n\nconst UNISYS = require('unisys/client');\nconst DATASTORE = require('system/datastore');\nconst SETTINGS = require('settings');\nconst { EDITORTYPE } = require('system/util/enum');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'NodeSelector';\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst thisIdentifier = 'nodeSelector'; // SELECTION identifier\nconst isAdmin = SETTINGS.IsAdmin();\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UDATA = null;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass NodeSelector extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n    const TEMPLATE = this.AppState('TEMPLATE');\n    this.state = {\n      nodeDefs: TEMPLATE.nodeDefs,\n      citation: TEMPLATE.citation,\n      duplicateWarning: TEMPLATE.duplicateWarning,\n      nodeIsLockedMessage: TEMPLATE.nodeIsLockedMessage,\n      editLockMessage: '',\n      hideDeleteNodeButton: TEMPLATE.hideDeleteNodeButton,\n      formData: {\n        label: '',\n        type: '',\n        info: '',\n        provenance: '',\n        comments: '',\n        notes: '',\n        degrees: 0,\n        id: '', // Always convert this to a Number\n        isNewNode: true\n      },\n      edges: [],\n      isLocked: true,\n      isStandalone: false,\n      edgesAreLocked: false,\n      dbIsLocked: false,\n      disableEdit: false,\n      isBeingEdited: false,\n      isValid: false,\n      isDuplicateNodeLabel: false,\n      duplicateNodeID: '',\n      replacementNodeID: '',\n      isValidReplacementNodeID: true,\n      hideModal: true\n    };\n    // Bind functions to this component's object context\n    this.clearForm = this.clearForm.bind(this);\n    this.setTemplate = this.setTemplate.bind(this);\n    this.updateEditState = this.updateEditState.bind(this);\n    this.setEditState = this.setEditState.bind(this);\n    this.releaseOpenEditor = this.releaseOpenEditor.bind(this);\n    this.getNewNodeID = this.getNewNodeID.bind(this);\n    this.handleSelection = this.handleSelection.bind(this);\n    this.onStateChange_SEARCH = this.onStateChange_SEARCH.bind(this);\n    this.onStateChange_SESSION = this.onStateChange_SESSION.bind(this);\n    this.loadFormFromNode = this.loadFormFromNode.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.onLabelChange = this.onLabelChange.bind(this);\n    this.onTypeChange = this.onTypeChange.bind(this);\n    this.onNotesChange = this.onNotesChange.bind(this);\n    this.onInfoChange = this.onInfoChange.bind(this);\n    this.onProvenanceChange = this.onProvenanceChange.bind(this);\n    this.onCommentsChange = this.onCommentsChange.bind(this);\n    this.onReplacementNodeIDChange = this.onReplacementNodeIDChange.bind(this);\n    this.onNewNodeButtonClick = this.onNewNodeButtonClick.bind(this);\n    this.onDeleteButtonClick = this.onDeleteButtonClick.bind(this);\n    this.onEditButtonClick = this.onEditButtonClick.bind(this);\n    this.onCiteButtonClick = this.onCiteButtonClick.bind(this);\n    this.onCloseCiteClick = this.onCloseCiteClick.bind(this);\n    this.dateFormatted = this.dateFormatted.bind(this);\n    this.requestEditNode = this.requestEditNode.bind(this);\n    this.editNode = this.editNode.bind(this);\n    this.onAddNewEdgeButtonClick = this.onAddNewEdgeButtonClick.bind(this);\n    this.onCancelButtonClick = this.onCancelButtonClick.bind(this);\n    this.onEditOriginal = this.onEditOriginal.bind(this);\n    this.onCloseDuplicateDialog = this.onCloseDuplicateDialog.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.checkUnload = this.checkUnload.bind(this);\n    this.doUnload = this.doUnload.bind(this);\n    this.onForceUnlock = this.onForceUnlock.bind(this);\n\n    // NOTE: assign UDATA handlers AFTER functions have been bind()'ed\n    // otherwise they will lose context\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    /** SESSION is called by SessionSHell when the ID changes\n      set system-wide. data: { classId, projId, hashedId, groupId, isValid }\n   */\n    this.OnAppStateChange('SESSION', this.onStateChange_SESSION);\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    this.OnAppStateChange('SELECTION', this.handleSelection);\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    this.OnAppStateChange('SEARCH', this.onStateChange_SEARCH);\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    // Handle Template updates\n    this.OnAppStateChange('TEMPLATE', this.setTemplate);\n    UDATA.HandleMessage('EDIT_PERMISSIONS_UPDATE', this.setEditState);\n\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    /** If someone on the network updates a node or edge, SOURCE_UPDATE is broadcast.\n      We catch it here and update the selection if the node we're displaying matches\n      the updated node.\n      This basically handles updated Node labels in both the main node and in related\n      edges.\n    */\n    UDATA.HandleMessage('SOURCE_UPDATE', data => {\n      let needsUpdate = false;\n      let currentNodeID = this.state.formData.id;\n      let updatedNodeID = data.node.id;\n      if (currentNodeID === updatedNodeID) needsUpdate = true;\n      this.state.edges.forEach(edge => {\n        if (edge.source === updatedNodeID || edge.target === updatedNodeID)\n          needsUpdate = true;\n      });\n      if (needsUpdate) {\n        if (DBG)\n          console.log(\n            'NodeSelector.SOURCE_UPDATE triggering SOURCE_SELECT with',\n            currentNodeID\n          );\n        UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [currentNodeID] });\n      }\n    });\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    /** NODE_EDIT is usually requested by NodeTable. Only allow edit if the\n     *  request has a valid nodeID Ignore the request if we're already editing\n     *  a node.\n     */\n    UDATA.HandleMessage('NODE_EDIT', data => {\n      const { isBeingEdited, isLocked } = this.state;\n      if (\n        data.nodeID !== undefined &&\n        typeof data.nodeID === 'number' &&\n        !isBeingEdited &&\n        !isLocked\n      ) {\n        this.requestEditNode(data.nodeID);\n      } else {\n        if (typeof data.nodeID !== 'number')\n          console.warn(\n            'NodeSelector.NODE_EDIT called with bad data.nodeID:',\n            data.nodeID\n          );\n        if (isBeingEdited)\n          console.warn(\n            'NodeSelector.NODE_EDIT denied because isBeingEdited',\n            isBeingEdited\n          );\n        if (isLocked)\n          console.warn('NodeSelector.NODE_EDIT denied because isLocked', isLocked);\n      }\n    });\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    /** This will add any new edges that have links to the currently selected node\n      to the list of edges in the NodeSelector.\n      IMPORTANT: We ignore edge updates if an edge is currently being edited to\n      prevent edge updates from clobbering the edit.  The list of edges is\n      updated after the edit is completed, so new edges are added then.\n    */\n    UDATA.HandleMessage('EDGE_UPDATE', data => {\n      if (DBG)\n        console.log(\n          'NodeSelector: Received EDGE_UPDATE edgesAreLocked',\n          this.state.edgesAreLocked,\n          data\n        );\n      let currentNodeID = this.state.formData.id;\n      /* EDGE_UPDATES are triggered under two circumnstances:\n           a. When an existing edge is updated\n           b. When a new edge is created\n           The call sequence is:\n           1. EdgeEditor.Submit calls datastore.DB_UPDATE\n           2. datastore.DB_UPDATE calls server.SRV_DBUPDATE\n           3. server.SRV_DBUPDATE broadcasts EDGE_UPDATE\n              At this point, edge.source and edge.target are broadcast as Numbers.\n           4. EDGE_UPDATE is handled by:\n              a. nc-logic.handleMessage(\"EDGE_UPDATE\"), and\n              b. NodeSelector.handlemMessage(\"EDGE_UPDATE\") (this method)\n           5. nc-logic.handleMessage(\"EDGE_UPDATE\") processes the data and\n              actually adds a new edge or updates the existing edge in D3DATA.\n              *** The key is that there is a difference in how it's handled.\n              For updates, the edge is simply updated.\n              But for new edges, the edge object is updated and then pushed to D3DATA.\n           6. When the edge object is pushed to D3DATA, D3 processes it and converts\n              edge.source and edge.target into node objects.\n              *** By the time NodeSelector receives the edge data, edge.source and\n              edge.target are node objects, not numbers.\n           So this method needs to account for the fact that edge.source and edge.target might be\n           received as either numbers or objects.\n        */\n      let sourceID =\n        typeof data.edge.source === 'number' ? data.edge.source : data.edge.source.id;\n      let targetID =\n        typeof data.edge.target === 'number' ? data.edge.target : data.edge.target.id;\n      let updatedNodeIDs = [sourceID, targetID];\n      if (updatedNodeIDs.includes(currentNodeID) && !this.state.edgesAreLocked) {\n        if (DBG) console.log('NodeSelector: EDGE UPDATE: Calling SOURCE_SELECT!');\n        UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [currentNodeID] });\n      }\n    });\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    /** Handler for canceling a new edge\n      Called by EdgeEditor\n      Normally we would just use SOURCE_SELECT to reload the node.\n      There are two issues with just using SOURCE_SELECT:\n      1. This special handler is necessary because the newly added edge\n         component is not affected by updates to this.state.edges.  Its key\n         is not in the this.state.edges array, so it is not properly cleared\n         even if we use SOURCE_SELECT to reset the node.\n      2. In order for `handleSelection` to properly reload all the edges,\n         two states have to be cleared first: this node needs to NOT be\n         the ACTIVEAUTOCOMPLETE field, and this node's edges need to be\n         EDGEEDIT_UNLOCKed.  The problem is that these states are set\n         asynchronously, so `handleSelection` ends up getting called\n         before the states are updated.\n      To fix this, we use setState's callback to trigger the reload.\n\n      Call this with no data object to trigger deselect.  Used when\n      source is deleted by admin user.\n    */\n    UDATA.HandleMessage('EDGE_NEW_CANCEL', data => {\n      if (data.nodeID === this.state.formData.id) {\n        this.setState({ edgesAreLocked: false }, () => {\n          // Do this in callback, otherwise, edges are not unlocked\n          // and the source_select never triggers an update\n          UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [this.state.formData.id] });\n        });\n      } else {\n        // Edge is requesting a SOURCE deselect because the source\n        // node was deleted by admin\n        this.setState({ edgesAreLocked: false }, () => {\n          // Do this in callback, otherwise, edges are not unlocked\n          // and the source_select never triggers an update\n          UDATA.LocalCall('SOURCE_SELECT'); // Deselect\n        });\n      }\n    });\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    // This handler is not necessary because SELECTION event clears the form\n    // UDATA.HandleMessage(\"NODE_DELETE\", (data) => {\n    // });\n    // This handler is not necessary because SELECTION event will update the edges\n    // UDATA.HandleMessage(\"EDGE_DELETE\", (data) => {\n    // });\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    /** This keeps track of whether an edge is being edited to prevent network\n      updates from clobbering an in-process edit.\n    */\n    UDATA.HandleMessage('EDGEEDIT_LOCK', data => {\n      this.setState({ edgesAreLocked: true });\n    });\n    UDATA.HandleMessage('EDGEEDIT_UNLOCK', data => {\n      this.setState({ edgesAreLocked: false });\n    });\n\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    /** Prevent editing if server is disconnected.\n      This is necessary to hide the \"Add New Node\" button.\n    */\n    this.OnDisconnect(() => {\n      console.log('NodeSelector got disconnect');\n      this.setState({ isLocked: true });\n    });\n  } // constructor\n\n  /// UTILITIES /////////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Clear the form with optional label\n   */\n  clearForm(label = '') {\n    this.releaseOpenEditor();\n    this.setState({\n      formData: {\n        label,\n        type: '',\n        info: '',\n        provenance: '',\n        comments: '',\n        notes: '',\n        degrees: 0,\n        id: '', // Always convert this to a Number\n        isNewNode: true\n      },\n      edges: [],\n      dbIsLocked: false,\n      isBeingEdited: false,\n      isValid: false,\n      isDuplicateNodeLabel: false,\n      duplicateNodeID: '',\n      replacementNodeID: '',\n      isValidReplacementNodeID: true,\n      hideModal: true\n    });\n  } // clearFform\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  setTemplate(data) {\n    this.setState({ nodeDefs: data.nodeDefs });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Disable Node Edit if a Template is being edited\n   */\n  updateEditState() {\n    // disable edit if template is being edited\n    this.NetCall('SRV_GET_EDIT_STATUS').then(data => {\n      this.setEditState(data);\n    });\n  }\n  setEditState(data) {\n    const disableEdit = data.templateBeingEdited || data.importActive;\n    const TEMPLATE = this.AppState('TEMPLATE');\n    let editLockMessage = '';\n    if (data.templateBeingEdited) editLockMessage = TEMPLATE.templateIsLockedMessage;\n    if (data.importActive) editLockMessage = TEMPLATE.importIsLockedMessage;\n    this.setState({ disableEdit, editLockMessage });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Deregister as an open editor\n    Remove 'node' from OPENEDITORS\n  */\n  releaseOpenEditor() {\n    // NOTE: We only deregister if we're currently actively editing\n    //       otherwise we might inadvertently deregister\n    if (this.state.isBeingEdited)\n      this.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.NODE });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Return a new unique ID\n    REVIEW: Should this be in nc-logic?\n    ANSWER: YES. There shouldn't be ANY data-synthesis code in a component!\n    HACK: Replace this code with a server call\n  */ getNewNodeID() {\n    throw new Error(\"Don't use getNewNodeID() because it is not network safe\");\n    /*/\n      let highestID = 0;\n      let ids  = this.AppState('D3DATA').nodes.map( node => { return Number(node.id) } );\n      if (ids.length>0) {\n        highestID = ids.reduce( (a,b) => { return Math.max(a,b) } );\n      }\n      // REVIEW: Should ids be strings or numbers?\n      // Right now most edge ids are strings\n      return (highestID+1).toString();\n      /*/\n  } // getNewNodeID\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Return a new unique ID\n   */\n  getNewEdgeID() {\n    throw new Error(\"Don't use getNewEdgeID() because it is not network safe\");\n    /*/\n      let highestID = 0;\n      let ids  = this.AppState('D3DATA').edges.map( edge => { return Number(edge.id) } )\n      if (ids.length>0) {\n        highestID = ids.reduce( (a,b) => { return Math.max(a,b) } );\n      }\n      // REVIEW: Should ids be strings or numbers?\n      // Right now most edge ids are strings\n      return (highestID+1).toString();\n      /*/\n  } // getNewEdgeID\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Handle updated SELECTION\n   */\n  handleSelection(data) {\n    if (DBG) console.log('NodeSelector: got state SELECTION', data);\n\n    // Only update if we are the currently active field\n    // otherwise an Edge might be active\n    let { activeAutoCompleteId } = this.AppState('ACTIVEAUTOCOMPLETE');\n    if (activeAutoCompleteId !== thisIdentifier && activeAutoCompleteId !== 'search')\n      return;\n\n    if (!this.state.isBeingEdited && !this.state.edgesAreLocked) {\n      if (data.nodes && data.nodes.length > 0) {\n        // A node was selected, so load it\n        // We're not editing, so it's OK to update the form\n        if (DBG) console.log('NodeSelector: updating selection', data.nodes[0]);\n        // grab the first node\n        let node = data.nodes[0];\n        this.loadFormFromNode(node);\n\n        // Load edges\n        let thisId = this.state.formData.id;\n        // -- First, sort edges by source, then target\n        data.edges.sort((a, b) => {\n          // same source label, sort on target\n          if (a.sourceLabel === b.sourceLabel) {\n            if (a.targetLabel < b.targetLabel) {\n              return -1;\n            }\n            if (a.targetLabel > b.targetLabel) {\n              return 1;\n            }\n          }\n          // Always list `this` node first\n          if (a.source === thisId) {\n            return -1;\n          }\n          if (b.source === thisId) {\n            return 1;\n          }\n          // Otherwise sort on source\n          if (a.sourceLabel < b.sourceLabel) {\n            return -1;\n          }\n          if (a.sourceLabel > b.sourceLabel) {\n            return 1;\n          }\n\n          return 0;\n        });\n        this.setState({\n          edges: data.edges\n        });\n        // Exit now because we just selected a node and don't want to\n        // override the form label with form updates.  Otherwise, the\n        // the form label is overriden with old form data.\n        return;\n      } else {\n        if (DBG) console.log('NodeSelector: No data.nodes, so clearing form');\n        this.clearForm();\n      }\n    } else {\n      // We're already editing, and another selection has come in.\n      // What should we do?\n      // * force exit?\n      // * prevent load?\n      // * prevent selection?\n      if (DBG) console.log('NodeSelector: Already editing, ignoring SELECTION');\n    }\n\n    this.validateForm();\n  } // handleSelection\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Handle change in SESSION data\n    Called both by componentWillMount() and AppStateChange handler.\n    The 'SESSION' state change is triggered in two places in SessionShell during\n    its handleChange() when active typing is occuring, and also during\n    SessionShell.componentWillMount()\n  */\n  onStateChange_SESSION(decoded) {\n    let update = { isLocked: !decoded.isValid };\n    this.setState(update);\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Handle updated SEARCH\n    AutoComplete handles its internal updates, but we do need to validate the form\n    When AutoComplete's input field is updated, it sends a SOURCE_SEARCH to ACL\n    which returns the updated value in SEARCH state.  AutoComplete updates\n    the input field using SEARCH.  We need to update the form data here\n    and validate it for NodeSelector.\n  */\n  onStateChange_SEARCH(data) {\n    // Only update if we are the currently active field\n    // otherwise an Edge might be active\n    let { activeAutoCompleteId } = this.AppState('ACTIVEAUTOCOMPLETE');\n    if (activeAutoCompleteId !== thisIdentifier) return;\n    let formData = this.state.formData;\n    formData.label = data.searchLabel;\n\n    // \"Duplicate Node Label\" is only a warning, not an error.\n    // We want to allow students to enter a duplicate label if necessary\n    // This is a case insensitive search\n    var isDuplicateNodeLabel = false;\n    var duplicateNodeID = void 0;\n    if (\n      formData.label !== '' &&\n      this.AppState('NCDATA').nodes.find(function (node) {\n        if (node.id !== formData.id) {\n          if (node.label) {\n            if (\n              node.label.localeCompare(formData.label, 'en', {\n                usage: 'search',\n                sensitivity: 'base'\n              }) === 0\n            ) {\n              duplicateNodeID = node.id;\n              return true;\n            }\n            return false;\n          } else {\n            console.log('error processing node: ' + node.id + ' in netc-app.js\\n');\n            return false;\n          }\n        }\n      })\n    ) {\n      isDuplicateNodeLabel = true;\n    }\n\n    this.setState({\n      formData,\n      isDuplicateNodeLabel,\n      duplicateNodeID\n    });\n\n    this.validateForm();\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Copy the node data passed via SELECTION in the form\n   */\n  loadFormFromNode(newNode) {\n    if (DBG) console.log('NodeSelector.loadFormFromNode', newNode);\n    if (newNode === undefined) {\n      throw 'NodeSelector.loadFormFromNode called with undefined newNode!';\n    }\n    // Clean data\n    // REVIEW: Basic data structure probably needs updating\n    let node = { attributes: {} };\n    if (newNode.attributes === undefined) {\n      newNode.attributes = {};\n    }\n    // Backward Compatibility: Always convert ids to a Number or loki lookups will fail.\n    if (isNaN(newNode.id)) {\n      newNode.id = parseInt(newNode.id);\n    }\n    //\n    node.label = newNode.label || '';\n    node.id = newNode.id || '';\n    node.type = newNode.type;\n    node.info = newNode.info;\n    node.provenance = newNode.provenance;\n    node.comments = newNode.comments;\n    node.notes = newNode.notes;\n    node.degrees = newNode.degrees;\n\n    // Copy to form\n    this.releaseOpenEditor();\n    this.setState({\n      formData: {\n        label: node.label,\n        type: node.type,\n        info: node.info,\n        provenance: node.provenance,\n        comments: node.comments,\n        notes: node.notes,\n        degrees: node.degrees,\n        id: node.id,\n        isNewNode: false\n      },\n      dbIsLocked: false,\n      isBeingEdited: false,\n      isDuplicateNodeLabel: false,\n      hideModal: true\n    });\n\n    this.validateForm();\n  } // loadFormFromNode\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  validateForm() {\n    let isValid = false;\n    let formData = this.state.formData;\n\n    if (formData.label !== '' && formData.label !== undefined) isValid = true;\n    if (DBG)\n      console.log(\n        'NodeSElector.validateForm: Validating',\n        isValid,\n        'because label is',\n        formData.label,\n        '!'\n      );\n    this.setState({\n      isValid: isValid\n    });\n  }\n\n  /// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// REVIEW: Do we really need to manage each input field change with a state update\n  /// or can we just grab the final text during the \"SAVE\"?\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onLabelChange(label) {\n    // REVIEW: Currently this is not being called because AutoComplete\n    // doesn't have a change handler\n    let node = this.state.formData;\n    node.label = label;\n    this.setState({ formData: node });\n    this.validateForm();\n  } // onLabelChange\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onTypeChange(event) {\n    let node = this.state.formData;\n    node.type = event.target.value;\n    this.setState({ formData: node });\n  } // onTypeChange\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onNotesChange(event) {\n    let node = this.state.formData;\n    node.notes = event.target.value;\n    this.setState({ formData: node });\n  } // onNotesChange\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onInfoChange(event) {\n    let node = this.state.formData;\n    node.info = event.target.value;\n    this.setState({ formData: node });\n  } // onInfoChange\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onProvenanceChange(event) {\n    let node = this.state.formData;\n    node.provenance = event.target.value;\n    this.setState({ formData: node });\n  } // onProvenanceChange\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onCommentsChange(event) {\n    let node = this.state.formData;\n    node.comments = event.target.value;\n    this.setState({ formData: node });\n  } // onCommentsChange\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onReplacementNodeIDChange(event) {\n    let replacementNodeID = parseInt(event.target.value);\n    let isValid = false;\n    // Allow `` because we use a a blank field to indicate delete node without relinking edges.\n    if (\n      event.target.value === '' ||\n      this.AppState('NCDATA').nodes.find(node => {\n        return node.id === replacementNodeID;\n      })\n    ) {\n      isValid = true;\n    }\n    this.setState({\n      replacementNodeID: replacementNodeID,\n      isValidReplacementNodeID: isValid\n    });\n  } // onReplacementNodeIDChange\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onNewNodeButtonClick(event) {\n    event.preventDefault();\n\n    // Save the search label to re-insert into the new node\n    let label = this.AppState('SEARCH').searchLabel;\n\n    // claim the AutoComplete form and populate it with the\n    // current search term\n    this.AppCall('AUTOCOMPLETE_SELECT', { id: thisIdentifier }).then(() => {\n      this.AppCall('SOURCE_SEARCH', { searchString: label });\n    });\n\n    // provenance\n    const session = this.AppState('SESSION');\n    const timestamp = new Date().toLocaleDateString('en-US');\n    const provenance_str = `Added by ${session.token} on ${timestamp}`;\n\n    // HACK: call server to retrieve an unused node ID\n    // FIXME: this kind of data manipulation should not be in a GUI component\n    DATASTORE.PromiseNewNodeID().then(newNodeID => {\n      this.setState({\n        formData: {\n          label: label,\n          type: '',\n          info: '',\n          provenance: provenance_str,\n          comments: '',\n          notes: '',\n          degrees: 0,\n          id: newNodeID,\n          isNewNode: true\n        },\n        edges: [],\n        isBeingEdited: true,\n        isValid: false\n      });\n\n      this.validateForm();\n    });\n  } // onNewNodeButtonClick\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onDeleteButtonClick() {\n    // nodeID needs to be a Number.  It should have been set in loadFormFromNode\n    let nodeID = this.state.formData.id;\n\n    // Re-link edges or delete edges?\n    // `NaN` is not valid JSON, so we need to pass -1\n    let replacementNodeID =\n      this.state.replacementNodeID === ''\n        ? -1\n        : parseInt(this.state.replacementNodeID); // '' = Delete edges by default\n\n    this.clearForm();\n    this.AppCall('DB_UPDATE', {\n      nodeID: nodeID,\n      replacementNodeID: replacementNodeID\n    });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  // this is an admin only function to allow unlocking of locked nodes without having to reload\n  onForceUnlock() {\n    // nodeID needs to be a Number.  It should have been set in loadFormFromNode\n    let nodeID = this.state.formData.id;\n\n    this.NetCall('SRV_DBUNLOCKNODE', { nodeID: this.state.formData.id }).then(\n      data => {\n        if (data.NOP) {\n          if (DBG) console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n        } else if (data.unlocked) {\n          if (DBG)\n            console.log(\n              `SERVER SAYS: unlock success! you have released Node ${data.nodeID}`\n            );\n          this.setState({ dbIsLocked: false });\n        }\n      }\n    );\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onEditButtonClick(event) {\n    event.preventDefault();\n\n    // hide the modal window if it is open (probably this can be handled better)\n    this.setState({ hideModal: true });\n\n    // nodeID needs to be a Number.  It should have been set in loadFormFromNode\n    let nodeID = this.state.formData.id;\n    this.requestEditNode(nodeID);\n  } // onEditButtonClick\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onCiteButtonClick(event) {\n    event.preventDefault();\n\n    this.setState({ hideModal: false });\n  } // onCiteButtonClick\n\n  onCloseCiteClick(event) {\n    event.preventDefault();\n\n    this.setState({ hideModal: true });\n  } //   this.onCloseCiteClick\n\n  dateFormatted() {\n    var today = new Date();\n    var year = '' + today.getFullYear();\n    var date = today.getMonth() + 1 + '/' + today.getDate() + '/' + year.substr(2, 4);\n    var time = today.toTimeString().substr(0, 5);\n    var dateTime = time + ' on ' + date;\n    return dateTime;\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  requestEditNode(nodeID) {\n    this.NetCall('SRV_DBLOCKNODE', { nodeID: nodeID }).then(data => {\n      if (data.NOP) {\n        console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n        this.setState({ dbIsLocked: true });\n      } else if (data.locked) {\n        console.log(`SERVER SAYS: lock success! you can edit Node ${data.nodeID}`);\n        console.log(`SERVER SAYS: unlock the node after successful DBUPDATE`);\n        this.setState({ dbIsLocked: false });\n        this.editNode();\n      }\n    });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  editNode() {\n    // Add ID if one isn't already defined\n    let formData = this.state.formData;\n    if (formData.id === '') {\n      throw Error(\n        \"NodeSelector.onEditButtonClick trying to edit a node with no id!  This shouldn't happen!\"\n      );\n    }\n    this.AppCall('AUTOCOMPLETE_SELECT', { id: thisIdentifier }).then(() => {\n      // Set AutoComplete field to current data, otherwise, previously canceled label\n      // might be displayed\n      // this.AppCall('SOURCE_SEARCH', { searchString: formData.label }); // JD removed because I think it is redundant and slowing things down?\n    });\n    this.setState({\n      formData,\n      isBeingEdited: true\n    });\n    this.validateForm();\n\n    // When a node is being edited, lock the Template from being edited\n    this.NetCall('SRV_REQ_EDIT_LOCK', { editor: EDITORTYPE.NODE }).then(data => {\n      const disableEdit = data.isBeingEdited;\n      this.setState({ disableEdit });\n    });\n  } // editNode\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onAddNewEdgeButtonClick(event) {\n    event.preventDefault();\n    /*\n            When creating a new edge, we first\n            1. Add a bare bones edge object with a new ID to the local state.edges\n            2. Pass it to render, so that a new EdgeEditor will be created.\n            3. In EdgeEditor, we create a dummy edge object\n      */\n\n    // HACK: call server to retrieve an unused edge ID\n    // FIXME: this kind of data manipulation should not be in a GUI component\n    DATASTORE.PromiseNewEdgeID().then(newEdgeID => {\n      // Add it to local state for now\n      let edge = {\n        id: newEdgeID,\n        source: undefined,\n        target: undefined,\n        attributes: {}\n      };\n      let edges = this.state.edges;\n      edges.push(edge);\n      this.setState({ edges: edges });\n    });\n  } // onAddNewEdgeButtonClick\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onCancelButtonClick() {\n    // If we were editing, then revert and exit\n    if (this.state.isBeingEdited) {\n      let originalNode = this.AppState('NCDATA').nodes.filter(node => {\n        return node.id === this.state.formData.id;\n      })[0];\n      if (originalNode === undefined) {\n        // user abandoned editing a new node that was never saved\n        this.clearForm();\n      } else {\n        // restore original node\n        this.loadFormFromNode(originalNode);\n        this.releaseOpenEditor();\n        this.setState({ isBeingEdited: false });\n        // unlock\n        this.NetCall('SRV_DBUNLOCKNODE', { nodeID: this.state.formData.id }).then(\n          data => {\n            if (data.NOP) {\n              console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n            } else if (data.unlocked) {\n              console.log(\n                `SERVER SAYS: unlock success! you have released Node ${data.nodeID}`\n              );\n              this.setState({ dbIsLocked: false });\n            }\n          }\n        );\n      }\n      this.AppCall('AUTOCOMPLETE_SELECT', { id: 'search' });\n      this.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.NODE });\n    }\n  } // onCancelButtonClick\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Select the node for editing\n   */\n  onEditOriginal(event) {\n    event.preventDefault();\n    let duplicateNodeID = parseInt(this.state.duplicateNodeID);\n    this.clearForm();\n    this.releaseOpenEditor();\n    this.setState(\n      {\n        isBeingEdited: false,\n        isDuplicateNodeLabel: false\n      },\n      () => {\n        // Wait for the edit state to clear, then open up the original node\n        if (DBG)\n          console.log(\n            'NodeSelector.onEditOriginal triggering SOURCE_SELECT with',\n            duplicateNodeID\n          );\n        UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [duplicateNodeID] });\n      }\n    );\n    this.AppCall('AUTOCOMPLETE_SELECT', { id: 'search' });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** User confirms they want to edit the existing node.\n   */\n  onCloseDuplicateDialog() {\n    this.setState({ isDuplicateNodeLabel: false });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onSubmit(event) {\n    event.preventDefault();\n    // Update the data with the selectedNode\n    let formData = this.state.formData;\n    let node = {\n      label: formData.label ? formData.label : '',\n      id: formData.id,\n      type: formData.type,\n      info: formData.info,\n      provenance: formData.provenance,\n      comments: formData.comments,\n      notes: formData.notes,\n      degrees: formData.degrees\n    };\n    this.releaseOpenEditor();\n    this.setState({ isBeingEdited: false });\n    // clear AutoComplete form\n    this.AppCall('AUTOCOMPLETE_SELECT', { id: 'search' }).then(() => {\n      // Reselect the saved node\n      this.AppCall('SOURCE_SEARCH', { searchString: node.label });\n    });\n    // write data to database\n    // setting dbWrite to true will distinguish this update\n    // from a remote one\n    this.AppCall('DB_UPDATE', { node }).then(() => {\n      this.NetCall('SRV_DBUNLOCKNODE', { nodeID: formData.id }).then(data => {\n        if (data.NOP) {\n          console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n        } else if (data.unlocked) {\n          console.log(\n            `SERVER SAYS: unlock success! you have released Node ${data.nodeID}`\n          );\n          this.setState({ dbIsLocked: false });\n        }\n      });\n    });\n    // probably should unlock the node:\n    this.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.NODE });\n  } // onSubmit\n\n  /// REACT LIFECYCLE ///////////////////////////////////////////////////////////\n  /** REACT calls this to receive the component layout and data sources\n   */\n  render() {\n    const {\n      nodeDefs,\n      duplicateWarning,\n      nodeIsLockedMessage,\n      editLockMessage,\n      hideDeleteNodeButton,\n      formData,\n      isLocked,\n      isStandalone,\n      disableEdit,\n      isBeingEdited\n    } = this.state;\n    let { citation } = this.state;\n    if (citation == undefined) {\n      citation = {};\n      citation.hidden = true;\n    }\n    return (\n      <div>\n        <FormGroup\n          className=\"text-right\"\n          style={{ marginTop: '10px', paddingRight: '5px' }}\n        >\n          <Button\n            outline\n            size=\"sm\"\n            disabled={disableEdit}\n            hidden={isLocked || isBeingEdited}\n            onClick={this.onNewNodeButtonClick}\n          >\n            {'Add New Node'}\n          </Button>\n        </FormGroup>\n        <Form\n          className=\"nodeEntry\"\n          style={{\n            minHeight: '300px',\n            backgroundColor: '#B8EDFF',\n            padding: '5px',\n            marginBottom: '0px'\n          }}\n          onSubmit={this.onSubmit}\n        >\n          <FormText>\n            <b>NODE {formData.id || ''}</b>\n          </FormText>\n          <FormGroup row>\n            <Col sm={3} style={{ hyphens: 'auto' }} className=\"pr-0\">\n              <Label for=\"nodeLabel\" className=\"tooltipAnchor small text-muted\">\n                {nodeDefs.label.displayLabel}\n                <span className=\"tooltiptext\">{this.helpText(nodeDefs.label)}</span>\n              </Label>\n            </Col>\n            <Col sm={9}>\n              <AutoComplete\n                identifier={thisIdentifier}\n                disabledValue={formData.label}\n                inactiveMode={'disabled'}\n                shouldIgnoreSelection={isBeingEdited}\n              />\n            </Col>\n            <div\n              hidden={!this.state.isDuplicateNodeLabel}\n              style={{\n                width: '200px',\n                height: '150px',\n                backgroundColor: '#B8EDFF',\n                position: 'fixed',\n                left: '350px',\n                zIndex: '1000',\n                padding: '10px'\n              }}\n            >\n              <p className=\"text-danger small\">{duplicateWarning}</p>\n              <Button size=\"sm\" onClick={this.onEditOriginal}>\n                View Existing\n              </Button>\n              <Button outline size=\"sm\" onClick={this.onCloseDuplicateDialog}>\n                Continue\n              </Button>\n            </div>\n          </FormGroup>\n          <div style={{ position: 'absolute', left: '300px', maxWidth: '300px' }}>\n            <NodeDetail />\n          </div>\n          <FormGroup row hidden={nodeDefs.type.hidden}>\n            <Col sm={3} style={{ hyphens: 'auto' }} className=\"pr-0\">\n              <Label for=\"type\" className=\"tooltipAnchor small text-muted\">\n                {nodeDefs.type.displayLabel}\n                <span className=\"tooltiptext\">{this.helpText(nodeDefs.type)}</span>\n              </Label>\n            </Col>\n            <Col sm={9}>\n              <Input\n                type=\"select\"\n                name=\"type\"\n                id=\"typeSelect\"\n                value={formData.type || ''}\n                onChange={this.onTypeChange}\n                disabled={!isBeingEdited}\n              >\n                {nodeDefs.type.options.map(option => (\n                  <option key={option.label}>{option.label}</option>\n                ))}\n              </Input>\n            </Col>\n          </FormGroup>\n          <FormGroup row hidden={nodeDefs.notes.hidden}>\n            <Col sm={3} style={{ hyphens: 'auto' }} className=\"pr-0\">\n              <Label for=\"notes\" className=\"tooltipAnchor small text-muted\">\n                {nodeDefs.notes.displayLabel}\n                <span className=\"tooltiptext\">{this.helpText(nodeDefs.notes)}</span>\n              </Label>\n            </Col>\n            <Col sm={9}>\n              <Input\n                type=\"textarea\"\n                name=\"note\"\n                id=\"notesText\"\n                style={{ display: isBeingEdited ? 'block' : 'none' }}\n                value={formData.notes || ''}\n                onChange={this.onNotesChange}\n                readOnly={!isBeingEdited}\n              />\n              {this.markdownDisplay(formData.notes || '')}\n            </Col>\n          </FormGroup>\n          <FormGroup row hidden={nodeDefs.info.hidden}>\n            <Col sm={3} style={{ hyphens: 'auto' }} className=\"pr-0\">\n              <Label for=\"info\" className=\"tooltipAnchor small text-muted\">\n                {nodeDefs.info.displayLabel}\n                <span className=\"tooltiptext\">{this.helpText(nodeDefs.info)}</span>\n              </Label>\n            </Col>\n            <Col sm={9}>\n              <Input\n                type=\"text\"\n                name=\"info\"\n                id=\"info\"\n                value={formData.info || ''}\n                onChange={this.onInfoChange}\n                readOnly={!isBeingEdited}\n              />\n            </Col>\n          </FormGroup>\n          <FormGroup row hidden={nodeDefs.provenance.hidden}>\n            <Col sm={3} style={{ hyphens: 'auto' }} className=\"pr-0\">\n              <Label for=\"provenance\" className=\"tooltipAnchor small text-muted\">\n                {nodeDefs.provenance.displayLabel}\n                <span className=\"tooltiptext\">\n                  {this.helpText(nodeDefs.provenance)}\n                </span>\n              </Label>\n            </Col>\n            <Col sm={9}>\n              <Input\n                type=\"textarea\"\n                name=\"provenance\"\n                id=\"provenance\"\n                value={formData.provenance || ''}\n                onChange={this.onProvenanceChange}\n                readOnly={!isBeingEdited}\n              />\n            </Col>\n          </FormGroup>\n          <FormGroup row hidden={nodeDefs.comments.hidden}>\n            <Col sm={3} style={{ hyphens: 'auto' }} className=\"pr-0\">\n              <Label for=\"comments\" className=\"tooltipAnchor small text-muted\">\n                {nodeDefs.comments.displayLabel}\n                <span className=\"tooltiptext\">\n                  {this.helpText(nodeDefs.comments)}\n                </span>\n              </Label>\n            </Col>\n            <Col sm={9}>\n              <Input\n                type=\"textarea\"\n                name=\"comments\"\n                id=\"comments\"\n                className=\"comments\"\n                value={formData.comments || ''}\n                onChange={this.onCommentsChange}\n                readOnly={!isBeingEdited}\n                disabled={!isBeingEdited}\n              />\n            </Col>\n          </FormGroup>\n\n          <div\n            id=\"citationWindow\"\n            hidden={this.state.hideModal}\n            className=\"modal-content\"\n          >\n            <span className=\"close\" onClick={this.onCloseCiteClick}>\n              &times;\n            </span>\n            <p>\n              <em>Copy the text below:</em>\n              <br />\n              <br />\n              NetCreate {this.AppState('TEMPLATE').name} network, Node:{' '}\n              {formData.label} (ID {formData.id}). {citation.text}. Last accessed at{' '}\n              {this.dateFormatted()}.\n            </p>\n          </div>\n          <br />\n\n          <FormGroup className=\"text-right\" style={{ paddingRight: '5px' }}>\n            <Button\n              outline\n              size=\"sm\"\n              hidden={citation.hidden || formData.id === ''}\n              onClick={this.onCiteButtonClick}\n            >\n              Cite Node\n            </Button>\n            &nbsp;&nbsp;\n            <div\n              hidden={isLocked || isStandalone || isBeingEdited || formData.id === ''}\n              style={{ display: 'inline' }}\n            >\n              <Button\n                outline\n                size=\"sm\"\n                disabled={disableEdit}\n                onClick={this.onEditButtonClick}\n              >\n                Edit Node\n              </Button>\n              <p\n                hidden={!this.state.dbIsLocked}\n                className=\"small text-danger warning\"\n              >\n                {nodeIsLockedMessage}\n                <span hidden={!isAdmin}>\n                  &nbsp;<b>ADMINISTRATOR ONLY</b>: If you are absolutely sure this is\n                  an error, you can force the unlock:\n                  <br />\n                  <Button\n                    className=\"small btn btn-outline-light warning\"\n                    size=\"sm\"\n                    onClick={this.onForceUnlock}\n                  >\n                    Force Unlock\n                  </Button>\n                </span>\n              </p>\n              <p hidden={!disableEdit} className=\"small text-danger warning\">\n                {editLockMessage}\n              </p>\n            </div>\n          </FormGroup>\n          <FormGroup className=\"text-right\" style={{ paddingRight: '5px' }}>\n            <Button\n              outline\n              size=\"sm\"\n              hidden={!isBeingEdited}\n              onClick={this.onCancelButtonClick}\n            >\n              {isBeingEdited ? 'Cancel' : 'Close'}\n            </Button>\n            &nbsp;\n            <Button\n              color=\"primary\"\n              size=\"sm\"\n              disabled={!this.state.isValid}\n              hidden={!isBeingEdited}\n            >\n              Save\n            </Button>\n          </FormGroup>\n          <FormGroup\n            row\n            className=\"text-left\"\n            style={{\n              padding: '10px 5px',\n              margin: '0 -4px',\n              backgroundColor: '#c5e0ef'\n            }}\n            hidden={\n              !isAdmin || isLocked || formData.id === '' || hideDeleteNodeButton\n            }\n          >\n            <Col sm={6}>\n              <FormText>\n                Re-link edges to this Node ID (leave blank to delete edge)\n              </FormText>\n            </Col>\n            <Col sm={6}>\n              <Input\n                type=\"text\"\n                name=\"replacementNodeID\"\n                id=\"replacementNodeID\"\n                value={this.state.replacementNodeID || ''}\n                onChange={this.onReplacementNodeIDChange}\n                className=\"\"\n                style={{ width: `4em` }}\n                bsSize=\"sm\"\n                invalid={!this.state.isValidReplacementNodeID}\n              />\n              <FormFeedback>Invalid Node ID!</FormFeedback>\n              <Button\n                className=\"small btn btn-outline-light\"\n                size=\"sm\"\n                onClick={this.onDeleteButtonClick}\n              >\n                Delete\n              </Button>\n            </Col>\n          </FormGroup>\n        </Form>\n        <div\n          style={{ backgroundColor: '#B9DFFF', padding: '5px', marginBottom: '10px' }}\n        >\n          <FormText>EDGES</FormText>\n          {/* `key` is needed during edge deletion so EdgeEditors are properly\n                 removed when an edge is deleted.\n                 REVIEW: Can we replace edgeID with key?  */}\n          {this.state.edges.map((edge, i) => (\n            <EdgeEditor\n              edgeID={edge.id}\n              key={edge.id}\n              parentNodeLabel={formData.label}\n              parentNodeIsLocked={isLocked}\n            />\n          ))}\n          <FormGroup className=\"text-right\">\n            <Button\n              outline\n              size=\"sm\"\n              disabled={disableEdit}\n              hidden={isLocked || formData.id === '' || isBeingEdited}\n              onClick={this.onAddNewEdgeButtonClick}\n            >\n              Add New Edge\n            </Button>\n          </FormGroup>\n        </div>\n      </div>\n    );\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  helpText(obj) {\n    if (!obj) return;\n    var text = '';\n\n    if (obj.help == undefined || obj.help == '') text = obj.label;\n    else text = obj.help;\n    return text;\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  markdownDisplay(text) {\n    if (!this.state.isBeingEdited)\n      return mdReact({\n        onIterate: this.markdownIterate,\n        markdownOptions: { typographer: true, linkify: true },\n        plugins: [mdEmoji]\n      })(text);\n  }\n\n  markdownIterate(Tag, props, children, level) {\n    if (Tag === 'a') {\n      props.target = '_blank';\n    }\n\n    return <Tag {...props}>{children}</Tag>;\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */ componentDidMount() {\n    this.onStateChange_SESSION(this.AppState('SESSION'));\n    this.validateForm();\n    this.updateEditState();\n    this.setState({\n      // hide Edit button if in standalone mode\n      isStandalone: UNISYS.IsStandaloneMode()\n    });\n    window.addEventListener('beforeunload', this.checkUnload);\n    window.addEventListener('unload', this.doUnload);\n  }\n\n  checkUnload(e) {\n    e.preventDefault();\n    if (this.state.isBeingEdited) {\n      (e || window.event).returnValue = null;\n    } else {\n      Reflect.deleteProperty(e, 'returnValue');\n    }\n    return e;\n  }\n\n  doUnload(e) {\n    if (this.state.isBeingEdited) {\n      this.NetCall('SRV_DBUNLOCKNODE', { nodeID: this.state.formData.id });\n      this.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.NODE });\n    }\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Release the lock if we're unmounting\n   */ componentWillUnmount() {\n    if (DBG) console.log('NodeEditor.componentWillUnMount!');\n    if (this.state.isBeingEdited) {\n      this.NetCall('SRV_DBUNLOCKNODE', { nodeID: this.state.formData.id }).then(\n        data => {\n          if (data.NOP) {\n            if (DBG) console.log(`SERVER SAYS: ${data.NOP} ${data.INFO}`);\n          } else if (data.unlocked) {\n            if (DBG)\n              console.log(\n                `SERVER SAYS: unlock success! you have released Node ${data.nodeID}`\n              );\n            this.setState({ dbIsLocked: false });\n          }\n        }\n      );\n      this.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.NODE });\n    }\n    // deregister ACTIVEAUTOMPLETE when component unmounts\n    // otherwise state updates trigger a setState on unmounted component error\n    this.AppStateChangeOff('SESSION', this.onStateChange_SESSION);\n    this.AppStateChangeOff('SELECTION', this.handleSelection);\n    this.AppStateChangeOff('SEARCH', this.onStateChange_SEARCH);\n    this.AppStateChangeOff('TEMPLATE', this.setTemplate);\n    UDATA.UnhandleMessage('EDIT_PERMISSIONS_UPDATE', this.setEditState);\n    window.removeEventListener('beforeunload', this.checkUnload);\n    window.removeEventListener('unload', this.doUnload);\n  }\n} // class NodeSelector\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NodeSelector;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n    NodeTable is used to to display a table of nodes for review.\n\n    It displays NCDATA.\n    But also checks FILTEREDNCDATA to show highlight/filtered state\n\n  ## TO USE\n\n    NodeTable is self contained and relies on global NCDATA to load.\n\n      <NodeTable/>\n\n  ## 2018-12-07 Update\n\n    Since we're not using tab navigation:\n    1. The table isExpanded is now true by default.\n    2. The \"Show/Hide Table\" button is hidden.\n\n    Reset these to restore previous behavior.\n\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst NCUI = require('../nc-ui');\nconst CMTMGR = require('../comment-mgr');\nconst SETTINGS = require('settings');\nconst FILTER = require('./filter/FilterEnums');\nconst { BUILTIN_FIELDS_NODE } = require('system/util/enum');\nconst { ICON_PENCIL, ICON_VIEW } = require('system/util/constant');\nconst { Button } = ReactStrap;\nconst UNISYS = require('unisys/client');\nimport HDATE from 'system/util/hdate';\nimport URCommentBtn from './URCommentBtn';\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar DBG = false;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst isLocalHost =\n  SETTINGS.EJSProp('client').ip === '127.0.0.1' ||\n  location.href.includes('admin=true');\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UDATA = null;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass NodeTable extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n\n    const TEMPLATE = this.AppState('TEMPLATE');\n    this.state = {\n      nodeDefs: TEMPLATE.nodeDefs,\n      nodes: [],\n      selectedNodeId: undefined,\n      hilitedNodeId: undefined,\n      selectedNodeColor: TEMPLATE.sourceColor,\n      hilitedNodeColor: TEMPLATE.searchColor,\n      filteredNodes: [],\n      disableEdit: false,\n      isLocked: false,\n      isExpanded: true,\n      sortkey: 'label'\n    };\n\n    this.onStateChange_SESSION = this.onStateChange_SESSION.bind(this);\n    this.onStateChange_SELECTION = this.onStateChange_SELECTION.bind(this);\n    this.onStateChange_HILITE = this.onStateChange_HILITE.bind(this);\n    this.displayUpdated = this.displayUpdated.bind(this);\n    this.updateNodeFilterState = this.updateNodeFilterState.bind(this);\n    this.updateEditState = this.updateEditState.bind(this);\n    this.handleDataUpdate = this.handleDataUpdate.bind(this);\n    this.handleFilterDataUpdate = this.handleFilterDataUpdate.bind(this);\n    this.OnTemplateUpdate = this.OnTemplateUpdate.bind(this);\n    this.onViewButtonClick = this.onViewButtonClick.bind(this);\n    this.onEditButtonClick = this.onEditButtonClick.bind(this);\n    this.onToggleExpanded = this.onToggleExpanded.bind(this);\n    this.onHighlightRow = this.onHighlightRow.bind(this);\n    this.setSortKey = this.setSortKey.bind(this);\n    this.sortSymbol = this.sortSymbol.bind(this);\n\n    this.sortDirection = 1; // alphabetical A-Z\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n\n    UDATA.HandleMessage('EDIT_PERMISSIONS_UPDATE', this.updateEditState);\n\n    // SESSION is called by SessionSHell when the ID changes\n    //  set system-wide. data: { classId, projId, hashedId, groupId, isValid }\n    this.OnAppStateChange('SESSION', this.onStateChange_SESSION);\n\n    // Always make sure class methods are bind()'d before using them\n    // as a handler, otherwise object context is lost\n    this.OnAppStateChange('NCDATA', this.handleDataUpdate);\n\n    // Track Filtered Data Updates too\n    this.OnAppStateChange('FILTEREDNCDATA', this.handleFilterDataUpdate);\n\n    // Handle Template updates\n    this.OnAppStateChange('TEMPLATE', this.OnTemplateUpdate);\n\n    this.OnAppStateChange('SELECTION', this.onStateChange_SELECTION);\n    this.OnAppStateChange('HILITE', this.onStateChange_HILITE);\n  } // constructor\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  componentDidMount() {\n    if (DBG) console.error('NodeTable.componentDidMount!');\n\n    this.onStateChange_SESSION(this.AppState('SESSION'));\n\n    // Explicitly retrieve data because we may not have gotten a NCDATA\n    // update while we were hidden.\n    // filtered data needs to be set before D3Data\n    const FILTEREDNCDATA = UDATA.AppState('FILTEREDNCDATA');\n    this.setState({ filteredNodes: FILTEREDNCDATA.nodes }, () => {\n      let NCDATA = this.AppState('NCDATA');\n      this.handleDataUpdate(NCDATA);\n    });\n\n    // Request edit state too because the update may have come\n    // while we were hidden\n    this.updateEditState();\n  }\n\n  componentWillUnmount() {\n    UDATA.UnhandleMessage('EDIT_PERMISSIONS_UPDATE', this.updateEditState);\n    this.AppStateChangeOff('SESSION', this.onStateChange_SESSION);\n    this.AppStateChangeOff('NCDATA', this.handleDataUpdate);\n    this.AppStateChangeOff('FILTEREDNCDATA', this.handleFilterDataUpdate);\n    this.AppStateChangeOff('TEMPLATE', this.OnTemplateUpdate);\n    this.AppStateChangeOff('SELECTION', this.onStateChange_SELECTION);\n    this.AppStateChangeOff('HILITE', this.onStateChange_HILITE);\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  onStateChange_SELECTION(data) {\n    this.setState({\n      selectedNodeId: data.nodes.length > 0 ? data.nodes[0].id : undefined\n    });\n  }\n\n  onStateChange_HILITE(data) {\n    const { userHighlightNodeId, autosuggestHiliteNodeId } = data; // ignores `tableHiliteNodeId`\n    let hilitedNodeId;\n    if (autosuggestHiliteNodeId !== undefined)\n      hilitedNodeId = autosuggestHiliteNodeId;\n    if (userHighlightNodeId !== undefined) hilitedNodeId = userHighlightNodeId;\n    this.setState({ hilitedNodeId });\n  }\n\n  /** Handle change in SESSION data\n    Called both by componentWillMount() and AppStateChange handler.\n    The 'SESSION' state change is triggered in two places in SessionShell during\n    its handleChange() when active typing is occuring, and also during\n    SessionShell.componentWillMount()\n   */\n  onStateChange_SESSION(decoded) {\n    this.setState({ isLocked: !decoded.isValid });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  displayUpdated(nodeEdge) {\n    // Prevent error if `meta` info is not defined yet, or not properly imported\n\n    // this does not ever fire, revert!\n    console.error('NodeTable meta not defined yet', nodeEdge);\n    if (!nodeEdge.meta) {\n      return '';\n    }\n    var d = new Date(\n      nodeEdge.meta.revision > 0 ? nodeEdge.meta.updated : nodeEdge.meta.created\n    );\n\n    var year = String(d.getFullYear());\n    var date = d.getMonth() + 1 + '/' + d.getDate() + '/' + year.substr(2, 4);\n    var time = d.toTimeString().substr(0, 5);\n    var dateTime = date + ' at ' + time;\n    var titleString = 'v' + nodeEdge.meta.revision;\n    if (nodeEdge._nlog)\n      titleString += ' by ' + nodeEdge._nlog[nodeEdge._nlog.length - 1];\n    var tag = <span title={titleString}> {dateTime} </span>;\n\n    return tag;\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// Set node filtered status based on current filteredNodes\n  updateNodeFilterState(nodes, filteredNodes) {\n    // set filter status\n    if (filteredNodes.length > 0) {\n      // If we're transitioning from \"HILIGHT/FADE\" to \"COLLAPSE\" or \"FOCUS\", then we\n      // also need to remove nodes that are not in filteredNodes\n      const FILTERDEFS = UDATA.AppState('FILTERDEFS');\n      if (\n        FILTERDEFS.filterAction === FILTER.ACTION.REDUCE ||\n        FILTERDEFS.filterAction === FILTER.ACTION.FOCUS\n      ) {\n        nodes = nodes.filter(node => {\n          const filteredNode = filteredNodes.find(n => n.id === node.id);\n          return filteredNode; // keep if it's in the list of filtered nodes\n        });\n      } else {\n        nodes = nodes.map(node => {\n          const filteredNode = filteredNodes.find(n => n.id === node.id);\n          node.isFiltered = !filteredNode; // not in filteredNode, so it's been removed\n          return node;\n        });\n      }\n    }\n    this.setState({ nodes, filteredNodes });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  updateEditState() {\n    // disable edit if someone else is editing a template, node, or edge\n    let disableEdit = false;\n    UDATA.NetCall('SRV_GET_EDIT_STATUS').then(data => {\n      // someone else might be editing a template or importing or editing node or edge\n      disableEdit =\n        data.templateBeingEdited ||\n        data.importActive ||\n        data.nodeOrEdgeBeingEdited ||\n        data.commentBeingEditedByMe; // only lock out if this user is the one editing comments, allow network commen edits\n      this.setState({ disableEdit });\n    });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Handle updated SELECTION\n   */\n  handleDataUpdate(data) {\n    if (DBG) console.log('handle data update');\n    if (data.nodes) {\n      const nodes = this.sortTable(this.state.sortkey, data.nodes);\n      const { filteredNodes } = this.state;\n      this.updateNodeFilterState(nodes, filteredNodes);\n    }\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  handleFilterDataUpdate(data) {\n    if (data.nodes) {\n      const filteredNodes = data.nodes;\n      // If we're transitioning from \"COLLAPSE\" or \"FOCUS\" to \"HILIGHT/FADE\", then we\n      // also need to add back in nodes that are not in filteredNodes\n      // (because \"COLLAPSE\" and \"FOCUS\" removes nodes that are not matched)\n      const FILTERDEFS = UDATA.AppState('FILTERDEFS');\n      if (FILTERDEFS.filterAction === FILTER.ACTION.FADE) {\n        const NCDATA = UDATA.AppState('NCDATA');\n        this.setState(\n          {\n            nodes: NCDATA.nodes,\n            filteredNodes\n          },\n          () => {\n            const nodes = this.sortTable(this.state.sortkey, NCDATA.nodes);\n            this.updateNodeFilterState(nodes, filteredNodes);\n          }\n        );\n      } else {\n        this.setState(\n          {\n            nodes: filteredNodes,\n            filteredNodes\n          },\n          () => {\n            const nodes = this.sortTable(this.state.sortkey, filteredNodes);\n            this.updateNodeFilterState(nodes, filteredNodes);\n          }\n        );\n      }\n    }\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  OnTemplateUpdate(data) {\n    this.setState({\n      nodeDefs: data.nodeDefs,\n      selectedNodeColor: data.sourceColor,\n      hilitedNodeColor: data.searchColor\n    });\n  }\n\n  /// UTILITIES /////////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  sortByID(nodes) {\n    if (nodes) {\n      return nodes.sort((a, b) => {\n        let akey = a.id,\n          bkey = b.id;\n        if (akey < bkey) return -1 * Number(this.sortDirection);\n        if (akey > bkey) return 1 * Number(this.sortDirection);\n        return 0;\n      });\n    }\n    return 0;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  sortByEdgeCount(nodes) {\n    if (nodes) {\n      return nodes.sort((a, b) => {\n        let akey = a.degrees || 0,\n          bkey = b.degrees || 0;\n        // sort descending\n        if (akey > bkey) return 1 * Number(this.sortDirection);\n        if (akey < bkey) return -1 * Number(this.sortDirection);\n        return 0;\n      });\n    }\n    return 0;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  sortByLabel(nodes) {\n    if (nodes) {\n      return nodes.sort((a, b) => {\n        let akey = a.label ? a.label : '',\n          bkey = b.label ? b.label : '';\n        return akey.localeCompare(bkey) * this.sortDirection;\n      });\n    }\n    return 0;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** DEPRECATED -- 'attributes' is no longer being used\n   */\n  sortByAttribute(nodes, key) {\n    if (nodes) {\n      return nodes.sort((a, b) => {\n        let akey = a.attributes[key],\n          bkey = b.attributes[key];\n        if (akey < bkey) return -1 * Number(this.sortDirection);\n        if (akey > bkey) return 1 * Number(this.sortDirection);\n        return 0;\n      });\n    }\n    return 0;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  sortByKey(nodes, key, type) {\n    if (nodes) {\n      return nodes.sort((a, b) => {\n        let akey, bkey;\n        if (type === FILTER.TYPES.STRING) {\n          akey = a[key] || ''; // fall back to blank if a[key] is not defined\n          // a[key] might be undefined if the template/db\n          // was changed but the full db wasn't updated\n          bkey = b[key] || '';\n        } else if (type === FILTER.TYPES.NUMBER) {\n          akey = Number(a[key] || ''); // force number for sorting\n          bkey = Number(b[key] || '');\n        } else if (type === FILTER.TYPES.HDATE) {\n          if (!a[key] || !b[key]) return 0;\n          akey = HDATE.Parse(a[key].value); // parseResult\n          bkey = HDATE.Parse(b[key].value);\n          if (akey.length < 1 || bkey.length < 1) return '';\n          const da = akey[0].start.knownValues;\n          const db = bkey[0].start.knownValues;\n          let order;\n          if (da.year !== db.year) {\n            order = da.year - db.year;\n          } else if (da.month !== db.month) {\n            order = da.month - db.month;\n          } else if (da.day !== db.day) {\n            order = da.day - db.day;\n          } else if (da.hour !== db.hour) {\n            order = da.hour - db.hour;\n          } else if (da.minute !== db.minute) {\n            order = da.minute - db.minute;\n          } else if (da.second !== db.second) {\n            order = da.second - db.second;\n          }\n          return order * Number(this.sortDirection);\n        } else {\n          /* some other type */\n          akey = a[key];\n          bkey = b[key];\n        }\n        if (akey < bkey) return -1 * Number(this.sortDirection);\n        if (akey > bkey) return 1 * Number(this.sortDirection);\n        return 0;\n      });\n    }\n    return 0;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  sortByUpdated(nodes) {\n    if (nodes) {\n      return nodes.sort((a, b) => {\n        let akey = a.meta.revision > 0 ? a.meta.updated : a.meta.created,\n          bkey = b.meta.revision > 0 ? b.meta.updated : b.meta.created;\n        if (akey < bkey) return -1 * Number(this.sortDirection);\n        if (akey > bkey) return 1 * Number(this.sortDirection);\n        return 0;\n      });\n    }\n    return undefined;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  sortByComment(nodes) {\n    // stuff the count into nodes for calculation\n    const uid = CMTMGR.GetCurrentUserId();\n    const countednodes = nodes.map(n => {\n      const cref = CMTMGR.GetNodeCREF(n.id);\n      n.commentcount = CMTMGR.GetThreadedViewObjectsCount(cref, uid);\n      return n;\n    });\n    if (countednodes) {\n      return countednodes.sort((a, b) => {\n        let akey = a.commentcount || 0,\n          bkey = b.commentcount || 0;\n        // sort descending\n        if (akey > bkey) return 1 * Number(this.sortDirection);\n        if (akey < bkey) return -1 * Number(this.sortDirection);\n        return 0;\n      });\n    }\n    return 0;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** If no `sortkey` is passed, the sort will use the existing state.sortkey\n    Returns the sorted nodes so that the calling function can handle\n    state updates all at once.\n   */\n  sortTable(sortkey = this.state.sortkey, nodes, type) {\n    switch (sortkey) {\n      case 'id':\n        return this.sortByID(nodes);\n      case 'edgeCount':\n        return this.sortByEdgeCount(nodes);\n      // case 'updated':\n      //   return this.sortByUpdated(nodes);\n      case 'label':\n        return this.sortByLabel(nodes);\n      case 'commentbtn':\n        return this.sortByComment(nodes);\n      default:\n        return this.sortByKey(nodes, sortkey, type);\n    }\n  }\n\n  sortSymbol(key) {\n    if (key !== this.state.sortkey)\n      return ''; // this is not the current sort, so don't show anything\n    else return this.sortDirection === 1 ? '▼' : '▲'; // default to \"decreasing\" and flip if clicked again\n  }\n\n  /// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onViewButtonClick(event, nodeId) {\n    event.preventDefault();\n    event.stopPropagation();\n    let nodeID = parseInt(nodeId);\n    UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [nodeID] });\n  }\n  /**\n   */\n  onEditButtonClick(event, nodeId) {\n    event.preventDefault();\n    event.stopPropagation();\n    let nodeID = parseInt(nodeId);\n    UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [nodeID] }).then(() => {\n      if (DBG) console.error('NodeTable: Calling NODE_EDIT', nodeID);\n      UDATA.LocalCall('NODE_EDIT', { nodeID: nodeID });\n    });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onToggleExpanded(event) {\n    this.setState({\n      isExpanded: !this.state.isExpanded\n    });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  onHighlightRow(nodeId) {\n    UDATA.LocalCall('TABLE_HILITE_NODE', { nodeId });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  setSortKey(key, type) {\n    if (key === this.state.sortkey) this.sortDirection = -1 * this.sortDirection;\n    // if this was already the key, flip the direction\n    else this.sortDirection = 1;\n\n    const nodes = this.sortTable(key, this.state.nodes, type);\n    this.setState({ sortkey: key, nodes });\n    UNISYS.Log('sort node table', key, this.sortDirection);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  selectNode(id, event) {\n    event.preventDefault();\n\n    // REVIEW: For some reason React converts the integer IDs into string\n    // values when returned in event.target.value.  So we have to convert\n    // it here.\n    // Load Source\n    UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [parseInt(id)] });\n  }\n\n  /// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /*/ This is not yet implemented as of React 16.2.  It's implemented in 16.3.\n    getDerivedStateFromProps (props, state) {\n      console.error('getDerivedStateFromProps!!!');\n    }\n  /*/\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  render() {\n    if (this.state.nodes === undefined) return '';\n    const {\n      nodeDefs,\n      selectedNodeId,\n      hilitedNodeId,\n      selectedNodeColor,\n      hilitedNodeColor,\n      disableEdit,\n      isLocked\n    } = this.state;\n    const { tableHeight } = this.props;\n    const styles = `thead, tbody { font-size: 0.8em }\n                  .table {\n                    display: table; /* override bootstrap for fixed header */\n                    border-spacing: 0;\n                  }\n                  .table th {\n                    position: -webkit-sticky;\n                    position: sticky;\n                    top: 0;\n                    background-color: #eafcff;\n                    border-top: none;\n                  }\n                  xtbody { overflow: auto; }\n                  .btn-sm { font-size: 0.6rem; padding: 0.1rem 0.2rem }\n                  `;\n    const attributes = Object.keys(nodeDefs).filter(\n      k => !BUILTIN_FIELDS_NODE.includes(k)\n    );\n    return (\n      <div\n        onMouseLeave={() => this.onHighlightRow(undefined)}\n        style={{\n          overflow: 'auto',\n          position: 'relative',\n          display: 'block',\n          left: '1px',\n          right: '10px',\n          height: tableHeight,\n          backgroundColor: '#eafcff'\n        }}\n      >\n        <style>{styles}</style>\n        <table\n          hidden={!this.state.isExpanded}\n          // size=\"sm\" hover responsive striped // ReactStrap properties\n          // Need to use a standard 'table' not ReactStrap so that we can set\n          // the container div height and support non-scrolling headers\n          className=\"table table-striped table-responsive table-hover table-sm nodetable w-auto\"\n        >\n          <thead>\n            <tr>\n              <th width=\"4%\">\n                <div style={{ color: '#f3f3ff' }}>_Edit_</div>\n              </th>\n              <th width=\"4%\" hidden={!DBG}>\n                <Button\n                  size=\"sm\"\n                  onClick={() => this.setSortKey('id', nodeDefs.id.type)}\n                >\n                  ID\n                </Button>\n              </th>\n              <th width=\"4%\">\n                <Button\n                  size=\"sm\"\n                  onClick={() => this.setSortKey('edgeCount', nodeDefs.degrees.type)}\n                >\n                  {nodeDefs.degrees.displayLabel} {this.sortSymbol('edgeCount')}\n                </Button>\n              </th>\n              <th width=\"15%\">\n                <Button\n                  size=\"sm\"\n                  onClick={() => this.setSortKey('label', nodeDefs.label.type)}\n                >\n                  {nodeDefs.label.displayLabel} {this.sortSymbol('label')}\n                </Button>\n              </th>\n              {attributes.map(a => (\n                <th hidden={nodeDefs[a].hidden} key={a}>\n                  <Button\n                    size=\"sm\"\n                    onClick={() => this.setSortKey(a, nodeDefs[a].type)}\n                  >\n                    {nodeDefs[a].displayLabel} {this.sortSymbol(a)}\n                  </Button>\n                </th>\n              ))}\n              <th style={{ zIndex: 1 }}>\n                <div\n                  className=\"comment-icon-inline comment-intable\"\n                  onClick={() => this.setSortKey('commentbtn')}\n                >\n                  {CMTMGR.COMMENTICON}\n                  {this.sortSymbol('commentbtn')}\n                </div>\n              </th>\n              {/*\n              <th width=\"10%\" hidden={!isLocalHost}>\n                <Button\n                  size=\"sm\"\n                  onClick={() => this.setSortKey('updated', FILTER.TYPES.STRING)}\n                >\n                  Updated {this.sortSymbol('updated')}\n                </Button>\n              </th>\n              */}\n            </tr>\n          </thead>\n          <tbody style={{ maxHeight: tableHeight, fontSize: '12px' }}>\n            {this.state.nodes.map((node, i) => (\n              <tr\n                key={i}\n                style={{\n                  color: node.isFiltered ? 'red' : 'black',\n                  opacity: node.filteredTransparency,\n                  border:\n                    (hilitedNodeId === node.id\n                      ? `3px solid ${hilitedNodeColor}`\n                      : false) ||\n                    (selectedNodeId === node.id\n                      ? `3px solid ${selectedNodeColor}`\n                      : 'none')\n                }}\n                onMouseOver={() => this.onHighlightRow(node.id)}\n              >\n                <td>\n                  {!disableEdit && (\n                    <button\n                      className=\"small outline\"\n                      onClick={event => this.onViewButtonClick(event, node.id)}\n                    >\n                      {ICON_VIEW}\n                    </button>\n                  )}\n                  {!disableEdit && !isLocked && (\n                    <button\n                      className=\"small outline\"\n                      onClick={event => this.onEditButtonClick(event, node.id)}\n                    >\n                      {ICON_PENCIL}\n                    </button>\n                  )}\n                </td>\n                <td hidden={!DBG}>{node.id}</td>\n                <td>{node.degrees}</td>\n                <td>\n                  {!disableEdit ? (\n                    <a href=\"#\" onClick={e => this.selectNode(node.id, e)}>\n                      {node.label}\n                    </a>\n                  ) : (\n                    node.label\n                  )}\n                </td>\n                {attributes.map(a => (\n                  <td hidden={nodeDefs[a].hidden} key={`${node.id}${a}`}>\n                    {nodeDefs[a].type === 'markdown'\n                      ? NCUI.Markdownify(node[a])\n                      : nodeDefs[a].type === 'hdate'\n                      ? (node[a] && node[a].formattedDateString) || ''\n                      : node[a]}\n                  </td>\n                ))}\n                <td>\n                  <URCommentBtn\n                    cref={CMTMGR.GetNodeCREF(node.id)}\n                    uuiid={'nodetable'}\n                  />\n                </td>\n                {/*\n                <td hidden={!isLocalHost} style={{ fontSize: '9px' }}>\n                  {this.displayUpdated(node)}\n                </td>\n                <td\n                  hidden={nodeDefs.comments.hidden}\n                  style={{ backgroundColor: '#ffff6633' }}\n                >\n                  {node.comments}\n                </td>\n                */}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n} // class NodeTable\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NodeTable;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n  The DuplicateNodeDialog is displayed when the user is trying to add a new\n  node that share the same label as an existing node.  It presents the user\n  with two options:\n  * Edit the existing ndoe\n  * Continue adding the new node\n\n  The dialog is displayed next to the node label so that the user can make\n  a decision.\n\n  We allow duplicate nodes because there might be places/people with the\n  same name.\n\n  ## PROPS\n      nodeID\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst UNISYS = require('unisys/client');\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col, Button } = ReactStrap;\nconst classnames = require('classnames');\nconst Help = require('./Help');\nconst NodeTable = require('./NodeTable');\nconst EdgeTable = require('./EdgeTable');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar DBG = true;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UDATA = null;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass SaveChangesDialog extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      nodeDefs: this.AppState('TEMPLATE').nodeDefs\n    };\n\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n  } // constructor\n\n  /// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Select the node for editing\n   */\n  handleEdit(event) {\n    event.preventDefault();\n    let nodeID = parseInt(event.target.value);\n    UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [nodeID] });\n  }\n\n  handleCancel() {\n    event.preventDefault();\n  }\n\n  /// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** This this fires after render().\n   */\n  componentDidMount() {\n    let tabpanel = document.getElementById('tabpanel');\n    this.setState({\n      tabpanelTop: tabpanel.offsetTop\n    });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  render() {\n    let { nodeDefs } = this.state;\n    const Modal = props => {};\n    const ModalBody = props => {};\n    return (\n      <Modal>\n        <ModalBody>\n          {\"You've made changes to the Node. Are you sure you want to\"}\n        </ModalBody>\n      </Modal>\n    );\n  }\n} // class SaveChangesDialog\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = SaveChangesDialog;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n      This provides a search field for looking up nodes.\n\n      1. Users type in the field.\n      2. The field will suggest matching nodes.\n      3. User selects something from the suggestion list.\n      4. The node will get loaded in NodeSelector.\n\n  ## USAGE\n\n    <Search/>\n\n  ## TECHNICAL DESCRIPTION\n\n      This provides a simple wrapper around AutoSuggest to handle\n      messaging and data passing.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { Col, FormGroup, Label } = ReactStrap;\nconst AutoComplete = require('./AutoComplete');\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar DBG = false;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst thisIdentifier = 'search'; // SELECTION identifier\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass Search extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: ''\n    };\n    this.OnStart(() => {\n      // always wrap UNISYS calls in a lifescycle hook otherwise you may try to execute a call\n      // before it has been declared in another module\n      if (DBG)\n        console.log(\n          'Search.OnStart: Setting active autocomplete id to',\n          thisIdentifier\n        );\n      this.AppCall('AUTOCOMPLETE_SELECT', {\n        id: thisIdentifier,\n        value: this.state.searchString\n      });\n    });\n  } // constructor\n\n  /// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  /// REACT LIFECYCLE ///////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */\n  componentWillMount() {}\n  /** REACT calls this to receive the component layout and data sources\n   */\n  render() {\n    return (\n      <FormGroup row>\n        <Col>\n          <AutoComplete\n            identifier={thisIdentifier}\n            disabledValue={this.state.searchString}\n            inactiveMode={'disabled'}\n          />\n          <Label className=\"small text-muted\">Type to search or add a node:</Label>\n        </Col>\n      </FormGroup>\n    );\n  }\n} // class Search\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = Search;\n","/* eslint-disable no-alert */\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Template Editor View\n\n  Displays a variety of tools to edit templates:\n  * Edit Node Types\n  * Edit Edge Types\n  * Edit Current Template\n  * Download Current Template\n  * Create New Template\n  * Import Template from File\n\n  This is displayed on the More.jsx component/panel but can be moved\n  anywhere.\n\n  Templates can only be edited if:\n  * There are no nodes or edges being edited\n  * No one is trying to import data\n  * There are no other templates being edited\n\n  Conversely, if a Template is being edited, Import, Node and Edge editing\n  will be disabled.\n\n  ## BACKGROUND\n\n    Template data is loaded by `server-database` DB.InitializeDatabase call.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { Button } = ReactStrap;\nimport { JSONEditor } from '@json-editor/json-editor';\nconst UNISYS = require('unisys/client');\nconst { EDITORTYPE } = require('system/util/enum');\nconst TEMPLATE_MGR = require('../templateEditor-mgr');\nconst SCHEMA = require('../template-schema');\nconst DATASTORE = require('system/datastore');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet UDATA = null;\nlet EDITOR; // json-editor object\nlet typeOptions;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass Template extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disableEdit: false,\n      isBeingEdited: false,\n      editScope: undefined, // Determines whether the user is tring to edit the\n      // template's root (everything in the template),\n      // or just focused on a subsection: nodeTypeOptions,\n      // edgeTypeOptions\n      tomlfile: undefined,\n      tomlfileStatus: '',\n      tomlfileErrors: undefined,\n      tomlfilename: 'loading...'\n    };\n    this.loadEditor = this.loadEditor.bind(this);\n    this.updateEditState = this.updateEditState.bind(this);\n    this.disableOrigLabelFields = this.disableOrigLabelFields.bind(this);\n    this.releaseOpenEditor = this.releaseOpenEditor.bind(this);\n    this.onNewTemplate = this.onNewTemplate.bind(this);\n    this.onCurrentTemplateLoad = this.onCurrentTemplateLoad.bind(this);\n    this.onEditNodeTypes = this.onEditNodeTypes.bind(this);\n    this.onEditEdgeTypes = this.onEditEdgeTypes.bind(this);\n    this.onTOMLfileSelect = this.onTOMLfileSelect.bind(this);\n    this.onDownloadTemplate = this.onDownloadTemplate.bind(this);\n    this.onSaveChanges = this.onSaveChanges.bind(this);\n    this.onCancelEdit = this.onCancelEdit.bind(this);\n\n    UDATA = UNISYS.NewDataLink(this);\n    UDATA.HandleMessage('EDIT_PERMISSIONS_UPDATE', this.updateEditState);\n  } // constructor\n\n  componentDidMount() {\n    this.updateEditState();\n    DATASTORE.GetTemplateTOMLFileName().then(result => {\n      this.setState({ tomlfilename: result.filename });\n    });\n  }\n\n  componentWillUnmount() {\n    if (EDITOR) EDITOR.destroy();\n    this.releaseOpenEditor();\n    UDATA.UnhandleMessage('EDIT_PERMISSIONS_UPDATE', this.updateEditState);\n  }\n\n  /// METHODS /////////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   * Load JSON Editor\n   * -- If schema is not defined, the default schema is used\n   * -- If startval is not defined, an empty template created from the default\n   *    schema is used.\n   * @param {object} parms { schema, startval }\n   * @param {function} cb - Callback function\n   */\n  loadEditor(parms, cb) {\n    UDATA.NetCall('SRV_REQ_EDIT_LOCK', { editor: EDITORTYPE.TEMPLATE }).then(data => {\n      const el = document.getElementById('editor');\n      const schema = (parms && parms.schema) || SCHEMA.TEMPLATE;\n      const startval = parms && parms.startval;\n\n      const options = {\n        theme: 'bootstrap4', // spectre, bootstrap3, tailwind, html\n        disable_edit_json: true, // set to false allow direct viewing/editing of json for debugging\n        disable_properties: false, // needed to allow user to add missing properties\n        object_layout: 'table', // 'grid', 'grid-strict', 'categories'\n        no_additional_properties: true, // prevent users from adding new non-schema properties\n        schema\n        // iconlib: 'fontawesome5', // fontawesome is not currently loaded\n      };\n      if (startval) options.startval = startval; // only add startval if its defined, otherwise you end up with an empty template\n      if (EDITOR) EDITOR.destroy(); // clear any existing editor\n      EDITOR = new JSONEditor(el, options);\n\n      this.setState({ isBeingEdited: true });\n\n      if (cb === undefined || typeof cb !== 'function') return;\n      cb();\n    });\n  }\n\n  /// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  updateEditState() {\n    // disable edit if someone else is editing a template, node, or edge\n    let disableEdit = false;\n    UDATA.NetCall('SRV_GET_EDIT_STATUS').then(data => {\n      // someone else might be editing a template or importing or editing node or edge\n      disableEdit =\n        data.templateBeingEdited || data.importActive || data.nodeOrEdgeBeingEdited;\n      this.setState({ disableEdit });\n    });\n  }\n\n  // When editing Node or Edge Type Options, the original label field should be\n  // disabled so they can't be edited\n  // ClassName added in template-schema.GetTypeEditorSchema()\n  disableOrigLabelFields() {\n    const origLabelFields = document.getElementsByClassName('disabledField');\n    // origLabelFields is a HTMLCollection, not an array\n    // FISHY FIX...is the use of arrow function here correct? The arrow function\n    // arg 'f' is shadowing the 'const f' in the for...of...\n    for (const f of origLabelFields) f => f.setAttribute('disabled', 'disabled');\n  }\n\n  releaseOpenEditor() {\n    UDATA.NetCall('SRV_RELEASE_EDIT_LOCK', { editor: EDITORTYPE.TEMPLATE });\n  }\n\n  onNewTemplate() {\n    this.setState({ editScope: 'root', isBeingEdited: true });\n    this.loadEditor(); // new blank template with default schema\n  }\n\n  onCurrentTemplateLoad(e) {\n    UDATA.LocalCall('EDIT_CURRENT_TEMPLATE') // nc-logic\n      .then(result => {\n        this.setState({ editScope: 'root', isBeingEdited: true });\n        this.loadEditor({ startval: result.template });\n      });\n  }\n\n  onEditNodeTypes() {\n    UDATA.LocalCall('EDIT_CURRENT_TEMPLATE') // nc-logic\n      .then(result => {\n        const schemaNodeTypeOptions = SCHEMA.NODETYPEOPTIONS;\n        // Wrap options in custom Schema to show Delete management UI\n        const nodeTypeEditorSchema =\n          SCHEMA.GetTypeEditorSchema(schemaNodeTypeOptions);\n        const startval = { options: result.template.nodeDefs.type.options };\n        this.setState({ editScope: 'nodeTypeOptions', isBeingEdited: true });\n        this.loadEditor(\n          {\n            schema: nodeTypeEditorSchema,\n            startval\n          },\n          () => {\n            this.disableOrigLabelFields();\n            // HACK: After a row is added, we need to also disable the newly added\n            // \"Label\" field -- the new label should be added in the \"Change To\" field\n            EDITOR.on('addRow', editor => {\n              this.disableOrigLabelFields();\n            });\n          }\n        );\n      });\n  }\n\n  onEditEdgeTypes() {\n    UDATA.LocalCall('EDIT_CURRENT_TEMPLATE') // nc-logic\n      .then(result => {\n        const schemaEdgeTypeOptions = SCHEMA.EDGETYPEOPTIONS;\n        // Wrap options in custom Schema to show Delete management UI\n        const edgeTypeEditorSchema =\n          SCHEMA.GetTypeEditorSchema(schemaEdgeTypeOptions);\n        const startval = { options: result.template.edgeDefs.type.options };\n        this.setState({ editScope: 'edgeTypeOptions', isBeingEdited: true });\n        this.loadEditor(\n          {\n            schema: edgeTypeEditorSchema,\n            startval\n          },\n          () => {\n            this.disableOrigLabelFields();\n            // HACK: After a row is added, we need to also disable the newly added\n            // \"Label\" field -- the new label should be added in the \"Change To\" field\n            EDITOR.on('addRow', editor => {\n              this.disableOrigLabelFields();\n            });\n          }\n        );\n      });\n  }\n\n  onTOMLfileSelect(e) {\n    // import\n    const tomlfile = e.target.files[0];\n    TEMPLATE_MGR.ValidateTOMLFile({ tomlfile }).then(result => {\n      if (result.isValid) {\n        this.setState({\n          editScope: 'root'\n        });\n        this.loadEditor({\n          schema: SCHEMA.TEMPLATE,\n          startval: result.templateJSON\n        });\n      } else {\n        const errorMsg = result.error;\n        this.setState({\n          tomlfile: undefined,\n          tomlfileStatus: 'Invalid template file!!!',\n          tomlfileErrors: errorMsg\n        });\n      }\n    });\n  }\n\n  onDownloadTemplate() {\n    TEMPLATE_MGR.DownloadTemplate();\n  }\n\n  onSaveChanges() {\n    const templateJSON = EDITOR.getValue(); // could be a snippet\n    const { editScope } = this.state;\n    const template = TEMPLATE_MGR.UpdateTemplate(templateJSON, editScope);\n    TEMPLATE_MGR.SaveTemplateToFile(template).then(result => {\n      if (!result.OK) {\n        alert(result.info);\n      } else {\n        this.setState({ isBeingEdited: false });\n      }\n    });\n    this.releaseOpenEditor();\n  }\n\n  onCancelEdit() {\n    this.setState({ isBeingEdited: false });\n    this.releaseOpenEditor();\n  }\n\n  /// REACT LIFECYCLE METHODS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  render() {\n    const {\n      disableEdit,\n      isBeingEdited,\n      tomlfile,\n      tomlfileStatus,\n      tomlfileErrors,\n      tomlfilename\n    } = this.state;\n    let editorjsx;\n\n    if (disableEdit && !isBeingEdited) {\n      // Node or Edge is being edited, show disabled message\n      editorjsx = (\n        <div>\n          <p>\n            <i>\n              Templates cannot be edited while someone is editing a node, edge, or\n              template, or importing data.\n            </i>\n          </p>\n          <p>\n            <i>Please finish editing and try again.</i>\n          </p>\n        </div>\n      );\n    } else {\n      // OK to Edit, show edit buttons\n      editorjsx = (\n        <div hidden={isBeingEdited}>\n          <p>\n            <b>PROCEED WITH CAUTION!</b>: Editing templates will modify the data in\n            your dataset and may leave your dataset in an unusable state. Only{' '}\n            <b>expert users</b> who know how the data is set up should do this.\n          </p>\n          <div\n            style={{\n              display: 'grid',\n              gridTemplateColumns: 'repeat(2, 1fr)',\n              columnGap: '10px',\n              rowGap: '5px'\n            }}\n          >\n            <i className=\"small text-muted\">Edit Current Template Options</i>\n            <br />\n            <Button size=\"sm\" onClick={this.onEditNodeTypes}>\n              Edit Node Types\n            </Button>\n            <Button size=\"sm\" onClick={this.onEditEdgeTypes}>\n              Edit Edge Types\n            </Button>\n            <p></p>\n            <p></p>\n            <hr />\n            <hr />\n            <p>ADVANCED USERS ONLY</p>\n            <p></p>\n            <i className=\"small text-muted\">Edit Current Template</i>\n            <br />\n            <Button size=\"sm\" onClick={this.onCurrentTemplateLoad}>\n              Edit Current Template\n            </Button>\n            <Button outline size=\"sm\" onClick={this.onDownloadTemplate}>\n              Download Current Template\n            </Button>\n            <p></p>\n            <p></p>\n            <i className=\"small text-muted\">Create New Template</i>\n            <br />\n            <Button size=\"sm\" onClick={this.onNewTemplate}>\n              New Template\n            </Button>\n            <div>\n              <i className=\"small text-muted\">\n                Import TOML template (replace existing template)\n              </i>\n              <br />\n              <label>\n                <input\n                  type=\"file\"\n                  accept=\"text/toml\"\n                  id=\"tomlfileInput\"\n                  onChange={this.onTOMLfileSelect}\n                />\n                &nbsp;<i>{tomlfileStatus}</i>\n                <br />\n                {tomlfileErrors && (\n                  <span style={{ color: 'red' }}>{tomlfileErrors}</span>\n                )}\n              </label>\n              <br />\n            </div>\n          </div>\n          <hr />\n        </div>\n      );\n    }\n    return (\n      <div\n        style={{\n          backgroundColor: 'rgba(240,240,240,0.95)',\n          padding: '10px 20px'\n        }}\n      >\n        <h4>Template Editor</h4>\n        <p>\n          <label>Current Template File Name:</label> <code>{tomlfilename}</code>\n        </p>\n        {editorjsx}\n        <div hidden={!isBeingEdited}>\n          <Button onClick={this.onCancelEdit} size=\"sm\" outline>\n            Cancel\n          </Button>\n          &nbsp;\n          <Button onClick={this.onSaveChanges} size=\"sm\" color=\"primary\">\n            Save Changes\n          </Button>\n          <hr />\n        </div>\n        <div id=\"editor\" hidden={!isBeingEdited}></div>\n      </div>\n    );\n  }\n} // class Help\n\n// NOTES on using json-editor\n// Not needed anymore, but keep for reference for managing json-editor\n//\n// // Handle Delete Events\n// EDITOR.on('deleteRow', editor => {\n//   const val = EDITOR.getValue();\n//   const currentOptions = val ? val.options : [];\n//   console.log('currentOptions', currentOptions);\n//   typeOptionsRemoved = []; // start from scratch each time\n//   typeOptions.forEach(o => {\n//     if (!currentOptions.find(c => c.label === o.label)) typeOptionsRemoved.push(o);\n//   });\n//   console.log('removed options', typeOptionsRemoved);\n//   const deletions = EDITOR.getEditor('root.deletions');\n//   if (deletions) deletions.setValue(typeOptionsRemoved);\n//\n//   // key is 0 for first row\n//   // editor and key are undefined for last row\n//   // console.log('deleteRow', editor && editor.key)\n//   // const deletions = EDITOR.getEditor('root.deletions');\n//   // if (deletions) deletions.setValue([{ label: 'yo', color: '#ffffff' }]);\n//   // EDITOR.setValue({ deleted: 'yes' });\n// });\n//\n//\n// watch one\n// root.1 refers to second field, fields are 0-indexed\n// EDITOR.watch('root.1.label', (e) => {\n//   // `e` is undefined\n//   console.log('change', e);\n// });\n//\n// watch ALL\n// works but watches too much?\n// const watcherCallback = function (path) {\n//   console.log(`field with path: [${path}] changed to [${JSON.stringify(this.getEditor(path).getValue())}]`);\n//   // Do something\n// }\n// for (let key in EDITOR.editors) {\n//   if (EDITOR.editors.hasOwnProperty(key) && key !== 'root') {\n//     EDITOR.watch(key, watcherCallback.bind(EDITOR, key));\n//   }\n// }\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = Template;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  URComment is a representation of an individual comment, used in the context\n  of a URCommentThread.\n\n  USE:\n\n    <URComment\n      cref={cref} // collection reference (e.g. node, edge, project)\n      cid={cvobj.comment_id} // comment id\n      uid={uid} // user id\n      key={cvobj.comment_id} // part of thread array\n    />\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport UNISYS from 'unisys/client';\nimport NetMessage from 'unisys/common-netmessage-class';\nimport CMTMGR from '../comment-mgr';\nimport URCommentPrompt from './URCommentPrompt';\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Initialize UNISYS DATA LINK for react component\nconst UDATAOwner = { name: 'URComment' };\nconst UDATA = UNISYS.NewDataLink(UDATAOwner);\n/// Debug Flags\nconst DBG = false;\nconst PR = 'URComment';\n\n/// REACT FUNCTIONAL COMPONENT ////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** URComment renders a single comment in the context of a URCommentThread\n *  manager.\n *  @param {string} cref - Collection reference\n *  @param {string} cid - Comment ID\n *  @param {string} uid - User ID\n *  @returns {React.Component} - URComment\n */\nfunction URComment({ cref, cid, uid }) {\n  const [element, setElement] = useState(null);\n  const [state, setState] = useState({\n    commenter: '',\n    createtime_string: '',\n    modifytime_string: '',\n    selected_comment_type: '',\n    commenter_text: ['hah'],\n    comment_error: '',\n    uViewMode: CMTMGR.VIEWMODE.VIEW,\n    uIsSelected: false,\n    uIsBeingEdited: false,\n    uIsEditable: false,\n    uIsDisabled: false,\n    uAllowReply: false\n  });\n\n  /** Component Effect - initial comment viewobject on mount */\n  useEffect(\n    () => c_LoadCommentVObj(),\n    [] // run once because no dependencies are declared\n  );\n\n  /** Component Effect - scroll component into view on mount */\n  useEffect(() => {\n    if (element) element.scrollIntoView({ behavior: 'smooth' });\n  }, [element]);\n\n  /** Component Effect - updated comment */\n  useEffect(() => {\n    // declare helpers\n    const urmsg_UpdatePermissions = data => {\n      const isLoggedIn = NetMessage.GlobalGroupID();\n      setState(prevState => ({\n        ...prevState,\n        uIsDisabled: data.commentBeingEditedByMe || !isLoggedIn\n      }));\n    };\n    const urstate_UpdateCommentVObjs = () => c_LoadCommentVObj();\n\n    // hook UNISYS state change and message handlers\n    UDATA.OnAppStateChange('COMMENTVOBJS', urstate_UpdateCommentVObjs);\n    UDATA.HandleMessage('COMMENT_UPDATE_PERMISSIONS', urmsg_UpdatePermissions);\n\n    // cleanup methods for functional component unmount\n    return () => {\n      if (state.uIsBeingEdited) CMTMGR.UnlockComment(cid);\n      UDATA.AppStateChangeOff('COMMENTVOBJS', urstate_UpdateCommentVObjs);\n      UDATA.UnhandleMessage('COMMENT_UPDATE_PERMISSIONS', urmsg_UpdatePermissions);\n    };\n  }, [state.uIsBeingEdited]); // run when uIsBeingEdited changes\n\n  /// COMPONENT HELPER METHODS ////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Declare helper method to load viewdata from comment manager into the\n   *  component state */\n  function c_LoadCommentVObj() {\n    const cvobj = CMTMGR.GetCommentVObj(cref, cid);\n    const comment = CMTMGR.GetComment(cid);\n\n    // When deleting, COMMENTVOBJS state change will trigger a load and render\n    // before the component is unmounted.  So catch it and skip the state update.\n    if (!cvobj || !comment) {\n      console.error('c_LoadCommentVObj: comment or cvobj not found!');\n      return;\n    }\n\n    // Error check: verify that comment types exist, if not, fall back gracefully to default type\n    const { comment_error, selected_comment_type } = c_ValidateCommentType(\n      comment.comment_type\n    );\n\n    // set component state from retrieved data\n    setState({\n      // Data\n      comment_id_parent: comment.comment_id_parent,\n      commenter: CMTMGR.GetUserName(comment.commenter_id),\n      selected_comment_type,\n      commenter_text: [...comment.commenter_text],\n      createtime_string: cvobj.createtime_string,\n      modifytime_string: cvobj.modifytime_string,\n      // Messaging\n      comment_error,\n      // UI State\n      uViewMode: cvobj.isBeingEdited ? CMTMGR.VIEWMODE.EDIT : CMTMGR.VIEWMODE.VIEW,\n      uIsSelected: cvobj.isSelected,\n      uIsBeingEdited: cvobj.isBeingEdited,\n      uIsEditable: cvobj.isEditable,\n      uAllowReply: cvobj.allowReply\n    });\n\n    // Lock edit upon creation of a new comment or a new reply\n    if (cvobj.isBeingEdited) CMTMGR.LockComment(comment.comment_id);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Validate selected comment type\n   *  Make sure the selected comment type exists.  If not, show error.\n   */\n  function c_ValidateCommentType(selected_comment_type) {\n    let comment_error = '';\n    if (!CMTMGR.GetCommentType(selected_comment_type)) {\n      const defaultCommentTypeObject = CMTMGR.GetDefaultCommentType();\n      comment_error = `Comment type \"${selected_comment_type}\" not found: Falling back to default  \"${defaultCommentTypeObject.label}\"`;\n      console.warn(comment_error);\n      selected_comment_type = defaultCommentTypeObject.slug;\n    }\n    // set component state from retrieved data\n    return { comment_error, selected_comment_type };\n  }\n  /// COMPONENT UI HANDLERS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** handle edit button, which toggles the viewmode of this URComment */\n  function evt_EditBtn() {\n    const uViewMode =\n      state.uViewMode === CMTMGR.VIEWMODE.EDIT\n        ? CMTMGR.VIEWMODE.VIEW\n        : CMTMGR.VIEWMODE.EDIT;\n    setState(prevState => ({\n      ...prevState,\n      uViewMode\n    }));\n\n    CMTMGR.LockComment(cid);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** handle save button, which saves the state to comment manager.\n   *  looks like there are some side effects being handled at the end */\n  function evt_SaveBtn() {\n    const { selected_comment_type, commenter_text } = state;\n    const comment = CMTMGR.GetComment(cid);\n    comment.comment_type = selected_comment_type;\n    comment.commenter_text = [...commenter_text]; // clone, not byref\n    comment.commenter_id = uid;\n    CMTMGR.UpdateComment(comment);\n    CMTMGR.UnlockComment(cid);\n    setState(prevState => ({\n      ...prevState,\n      uViewMode: CMTMGR.VIEWMODE.VIEW\n    }));\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** handle reply button, which adds a new comment via comment manager,\n   *  updating the thread data structure associated with URCommentThread */\n  function evt_ReplyBtn() {\n    const { comment_id_parent } = state;\n    if (comment_id_parent === '') {\n      // Reply to a root comment\n      CMTMGR.AddComment({\n        cref,\n        comment_id_parent: cid,\n        comment_id_previous: '',\n        commenter_id: uid\n      });\n    } else {\n      // Reply to a threaded comment\n      CMTMGR.AddComment({\n        cref,\n        comment_id_parent,\n        comment_id_previous: cid,\n        commenter_id: uid\n      });\n    }\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** handle delete button, which removes the comment associated with this\n   *  commment from the comment manager */\n  function evt_DeleteBtn() {\n    CMTMGR.RemoveComment({\n      collection_ref: cref,\n      comment_id: cid,\n      uid\n    });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** handle cancel button, which reverts the comment to its previous state,\n   *  doing additional housekeeping to keep comment manager consistent */\n  function evt_CancelBtn() {\n    const { commenter_text } = state;\n    let savedCommentIsEmpty = true;\n    commenter_text.forEach(t => {\n      if (t !== '') savedCommentIsEmpty = false;\n    });\n\n    const cb = () => CMTMGR.UnlockComment(cid);\n\n    if (savedCommentIsEmpty) {\n      // \"Cancel\" will always remove the comment if the comment is empty\n      // - usually because it's a newly created comment\n      // - but also if the user clears all the text fields\n      // We don't care if the user entered any text\n      CMTMGR.RemoveComment(\n        {\n          collection_ref: cref,\n          comment_id: cid,\n          uid,\n          showCancelDialog: true\n        },\n        cb\n      );\n    } else {\n      // revert to previous text if current text is empty\n      const comment = CMTMGR.GetComment(cid);\n      setState(prevState => ({\n        ...prevState,\n        commenter_text: [...comment.commenter_text], // restore previous text clone, not by ref\n        uViewMode: CMTMGR.VIEWMODE.VIEW\n      }));\n\n      cb();\n    }\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** handle select button, which updates the comment type associated with this\n   *  comment via comment manager */\n  function evt_TypeSelector(event) {\n    const selection = event.target.value;\n    // Error check: verify that comment types exist, if not, fall back gracefully to default type\n    const { comment_error, selected_comment_type } = c_ValidateCommentType(selection);\n    setState(prevState => ({\n      ...prevState,\n      comment_error,\n      selected_comment_type\n    }));\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** handle input update, which updates the text associated with this comment\n   *  via comment manager */\n  function evt_CommentText(index, event) {\n    const { commenter_text } = state;\n    commenter_text[index] = event.target.value;\n    setState(prevState => ({\n      ...prevState,\n      commenter_text: [...commenter_text]\n    }));\n  }\n\n  /// COMPONENT RENDER ////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** The URComment conditionally renders its display state based on several\n   *  states:\n   *  - isAdmin - read from commentmgr directly\n   *  - state.uViewMode - \"edit\" or \"view\" mode of comment\n   *  - state.uIsSelected - is current selected comment\n   *  - state.uIsBeingEdited - is being live edited\n   *  - state.uIsEditable - can be edited\n   *  - state.uIsDisabled - is active/inactive\n   */\n  const {\n    commenter,\n    selected_comment_type,\n    commenter_text,\n    createtime_string,\n    modifytime_string,\n    comment_error,\n    uViewMode,\n    uIsDisabled,\n    uAllowReply\n  } = state;\n\n  const isAdmin = CMTMGR.IsAdmin();\n  const comment = CMTMGR.GetComment(cid);\n  const commentTypes = CMTMGR.GetCommentTypes();\n\n  if (!comment) {\n    if (DBG)\n      console.log(`URComment rendering skipped because comment ${cid} was removed`);\n    return '';\n  }\n  if (!commenter) return null; // not ready\n\n  // TODO Allow admins\n  const isAllowedToEditOwnComment = uid === comment.commenter_id;\n\n  /// SUB COMPONENTS\n  const EditBtn = (\n    <button className=\"outline small\" onClick={evt_EditBtn}>\n      Edit\n    </button>\n  );\n  const DeleteBtn = (\n    <button className=\"outline small danger\" onClick={evt_DeleteBtn}>\n      Delete\n    </button>\n  );\n  const SaveBtn = <button onClick={evt_SaveBtn}>Save</button>;\n  const ReplyBtn = uAllowReply ? (\n    <button onClick={evt_ReplyBtn}>Reply</button>\n  ) : (\n    <div></div> // empty div to keep layout consistent\n  );\n  const CancelBtn = (\n    <button className=\"secondary\" onClick={evt_CancelBtn}>\n      Cancel\n    </button>\n  );\n  const TypeSelector = (\n    <select value={selected_comment_type} onChange={evt_TypeSelector}>\n      {[...commentTypes.entries()].map(type => (\n        <option key={type[0]} value={type[0]}>\n          {type[1].label}\n        </option>\n      ))}\n    </select>\n  );\n  // Alternative three-dot menu approach to hide \"Edit\" and \"Delete\"\n  // const UIOnEditMenuSelect = event => {\n  //   switch (event.target.value) {\n  //     case 'edit':\n  //       evt_EditBtn();\n  //       break;\n  //     case 'delete':\n  //       evt_DeleteBtn();\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // };\n  // const EditMenu = (\n  //   <select className=\"editmenu\" onChange={this.UIOnEditMenuSelect}>\n  //     <option>...</option>\n  //     <option value=\"edit\">EDIT</option>\n  //     <option value=\"delete\">DELETE</option>\n  //   </select>\n  // );\n\n  const cvobj = CMTMGR.GetCommentVObj(cref, cid);\n\n  let CommentComponent;\n  if (uViewMode === CMTMGR.VIEWMODE.EDIT) {\n    // EDIT mode\n    CommentComponent = (\n      <div\n        id={cid}\n        ref={setElement}\n        className={`comment ${comment.comment_isMarkedDeleted && 'deleted'}`}\n        onMouseDown={e => e.stopPropagation()}\n      >\n        <div>\n          <div className=\"commenter\">{commenter}</div>\n          <div className=\"date\">{modifytime_string || createtime_string}</div>\n        </div>\n        <div>\n          <div className=\"commentId\">#{cid}</div>\n          <div>{TypeSelector}</div>\n          <URCommentPrompt\n            cref={cref}\n            commentType={selected_comment_type}\n            commenterText={commenter_text}\n            isMarkedDeleted={comment.comment_isMarkedDeleted}\n            isMarkedRead={cvobj.isMarkedRead}\n            viewMode={CMTMGR.VIEWMODE.EDIT}\n            onChange={evt_CommentText}\n            errorMessage={comment_error}\n          />\n          <div className=\"editbar\">\n            {CancelBtn}\n            {SaveBtn}\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    // VIEW mode\n    CommentComponent = (\n      <div\n        id={cid}\n        ref={setElement}\n        className={`comment ${comment.comment_isMarkedDeleted ? 'deleted' : ''}`}\n      >\n        <div>\n          <div className=\"commenter\">{commenter}</div>\n          <div className=\"date\">{modifytime_string || createtime_string}</div>\n        </div>\n        <div>\n          <div className=\"commentId\">#{cid}</div>\n          <URCommentPrompt\n            cref={cref}\n            commentType={selected_comment_type}\n            commenterText={commenter_text}\n            isMarkedDeleted={comment.comment_isMarkedDeleted}\n            isMarkedRead={cvobj.isMarkedRead}\n            viewMode={CMTMGR.VIEWMODE.VIEW}\n            onChange={evt_CommentText}\n            errorMessage={comment_error}\n          />\n          {uid && (\n            <div className=\"commentbar\">\n              {!uIsDisabled && !comment.comment_isMarkedDeleted && ReplyBtn}\n              {(!uIsDisabled &&\n                isAllowedToEditOwnComment &&\n                !comment.comment_isMarkedDeleted &&\n                EditBtn) || <div></div>}\n              {(((!uIsDisabled &&\n                isAllowedToEditOwnComment &&\n                !comment.comment_isMarkedDeleted) ||\n                isAdmin) &&\n                DeleteBtn) || <div></div>}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n  // Simple show threads -- if comment has a parent, indent it\n  return cvobj.level > 0 ? (\n    <div className=\"commentIndented\">{CommentComponent}</div>\n  ) : (\n    CommentComponent\n  );\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nexport default URComment;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  URCommentBtn\n\n  URCommentBtn is the main UI element for comments.  It can be attached to any\n  UI component and provides a place to anchor and display comments.\n  * Clicking the CommentBtn will toggle the comment view on and off\n  * Closing the comment by clicking the \"Close\" or \"X\" button will mark\n    the comments \"read\".\n  * \"Read/Unread\" status is tied to a user id.\n  * Any open URCommentThread windows will be positioned close to the\n    URCommentBtn that opened it upon a window resize.\n\n  It displays a summary of the comment status:\n  * count of number of comments\n  * has unread comments (gold color)\n  * all comments are read (gray color)\n\n  During Edit\n  While a comment is being edited, we need to catch events to prevent\n  the comment from inadvertently being closed, e.g. for Net.Create:\n  * prevent NodeTable or EdgeTable view/edit actions from triggering\n    (handled by selection-mgr)\n  * prevent NCNode from being able to click \"Edit\"\n  * prevent URCommentBtn close toggles (handled by URCommentBtn)\n  * prevent NCGraphRenderer events from selecting another node\n    (handled by selection-mgr)\n  This is handled via comment-mgr.LockComment.\n\n  USE:\n\n    <URCommentBtn\n      cref={collection_ref}\n      uuiid={uuiid}\n    />\n\n  PROPS:\n    * cref    -- collection reference (usu node id, edge id)\n    * uuiid   -- unique user interface id\n                 used to differentiate comment buttons on tables vs nodes/edges\n                 ensures that each comment button id is unique\n\n  STATES:\n    * Empty             -- No comments.  Empty chat bubble.\n    * HasUnreadComments -- Gold comment icon with count of comments in red\n    * HasReadComments   -- Gray comment icon with count of comments in white\n\n    * commentIsOpen     -- Corresponding comment window is open.  Comment icon outlined.\n    * commentBtnIsSelected -- This comment button is selected.  Comment icon outlined.\n    * x, y              -- position of CommentThread window\n    * commentButtonId   -- unique id for each button\n                           allows showing open/closed status for the same comment\n\n  STRUCTURE\n\n    <URCommentBtn>\n      <URCommentThread>\n        <URComment />\n        <URComment />\n        ...\n      </URCommentThread>\n    </URCommentBtn>\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nimport React, { useState, useEffect } from 'react';\nimport UNISYS from 'unisys/client';\nimport CMTMGR from '../comment-mgr';\nimport URCommentThread from './URCommentThread';\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Initialize UNISYS DATA LINK for functional react component\nconst UDATAOwner = { name: 'URCommentThread' };\nconst UDATA = UNISYS.NewDataLink(UDATAOwner);\n/// Debug Flags\nconst DBG = false;\nconst PR = 'URCommentBtn';\n\n/// REACT FUNCTIONAL COMPONENT ////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** URCommentBtn renders the comment icon button on objects that can support\n *  comments.  It displays the number of comments and the \"read\" status.\n *  @param {string} cref - Collection reference\n *  @param {boolean} [uuiid] - Optional secondary identifier for comment button\n *  @returns {React.Component} - URCommentBtn\n */\nfunction URCommentBtn({ cref, uuiid }) {\n  const uid = CMTMGR.GetCurrentUserId();\n  const btnid = c_GenerateBtnId(cref, uuiid);\n  const [commentButtonId, setCommentButtonId] = useState(\n    c_GenerateCommentButtonId(btnid)\n  );\n  const [commentIsOpen, setCommentIsOpen] = useState(false);\n  const [commentBtnIsSelected, setCommentBtnIsSelected] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [position, setPosition] = useState({ x: '300px', y: '120px' });\n  const [dummy, setDummy] = useState(0); // Dummy state variable to force update\n\n  /** Component Effect - set up listeners on mount */\n  useEffect(() => {\n    UDATA.OnAppStateChange('COMMENTCOLLECTION', urstate_UpdateCommentCollection);\n    UDATA.OnAppStateChange('COMMENTVOBJS', urstate_UpdateCommentVObjs);\n    UDATA.HandleMessage('COMMENT_UPDATE_PERMISSIONS', urmsg_UpdatePermissions);\n    UDATA.HandleMessage('COMMENT_SELECT', urmsg_COMMENT_SELECT);\n    window.addEventListener('resize', evt_OnResize);\n\n    setPosition(c_GetCommentThreadPosition());\n\n    return () => {\n      UDATA.AppStateChangeOff('COMMENTCOLLECTION', urstate_UpdateCommentCollection);\n      UDATA.AppStateChangeOff('COMMENTVOBJS', urstate_UpdateCommentVObjs);\n      UDATA.UnhandleMessage('COMMENT_UPDATE_PERMISSIONS', urmsg_UpdatePermissions);\n      UDATA.UnhandleMessage('COMMENT_SELECT', urmsg_COMMENT_SELECT);\n      window.removeEventListener('resize', evt_OnResize);\n    };\n  }, []);\n\n  /// UR HANDLERS /////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function urstate_UpdateCommentCollection(COMMENTCOLLECTION) {\n    const uistate = CMTMGR.GetCommentUIState(commentButtonId);\n    const open_uiref = CMTMGR.GetOpenComments(cref);\n    if (open_uiref === commentButtonId) {\n      // The currently open comment is connected to this button\n      setCommentIsOpen(true);\n      setCommentBtnIsSelected(true);\n    } else if (open_uiref !== undefined) {\n      // The currently open comment is this comment, but connected to another button\n      setCommentIsOpen(false);\n      setCommentBtnIsSelected(true);\n    } else {\n      // No comments are open\n      setCommentIsOpen(false);\n      setCommentBtnIsSelected(false);\n    }\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function urstate_UpdateCommentVObjs() {\n    // This is necessary to force a re-render of the threads\n    // when the comment collection changes on the net\n    setDummy(dummy => dummy + 1); // Trigger re-render\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function urmsg_UpdatePermissions(data) {\n    setIsDisabled(data.commentBeingEditedByMe);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function urmsg_COMMENT_SELECT(data) {\n    if (data.cref === cref) c_OpenComment(true);\n  }\n\n  /// COMPONENT HELPER METHODS ////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function c_GenerateBtnId(cref, uuiid) {\n    return `${cref}${uuiid ? uuiid : ''}`;\n  }\n  function c_GenerateCommentButtonId(btnid) {\n    return `comment-button-${btnid}`;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function c_OpenComment(isOpen) {\n    const position = c_GetCommentThreadPosition();\n    setCommentIsOpen(isOpen);\n    setPosition(position);\n    CMTMGR.ToggleCommentCollection(commentButtonId, cref, position);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function c_GetCommentThreadPosition() {\n    const btn = document.getElementById(commentButtonId);\n    const cmtbtnx = btn.getBoundingClientRect().left;\n    const windowWidth = Math.min(screen.width, window.innerWidth);\n    let x;\n    if (windowWidth - cmtbtnx < 500) {\n      x = cmtbtnx - 405;\n    } else {\n      x = cmtbtnx + 35;\n    }\n    const y = btn.getBoundingClientRect().top + window.scrollY;\n    return { x, y };\n  }\n\n  /// COMPONENT UI HANDLERS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** handle URCommentBtn click, which opens and closes the URCommentThread */\n  function evt_OnClick(event) {\n    event.stopPropagation();\n    if (!isDisabled) {\n      const updatedIsOpen = !commentIsOpen;\n      c_OpenComment(updatedIsOpen);\n    }\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** handles window resize, which will adjust the URCommentThread window\n   *  position relative to the resized location of the URCommentBtn\n   */\n  function evt_OnResize() {\n    const position = c_GetCommentThreadPosition();\n    setPosition(position);\n  }\n\n  /// COMPONENT RENDER ////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** URCommentBtn displays:\n   *  - the number of comments in the thread\n   *  - the \"read\" status of all comments: unread (gold) or read (gray)\n   *  - isOpen - click on the button to display threads in a new window\n   */\n  const count = CMTMGR.GetThreadedViewObjectsCount(cref, uid);\n  const ccol = CMTMGR.GetCommentCollection(cref) || {};\n\n  let css = 'commentbtn ';\n  if (ccol.hasUnreadComments) css += 'hasUnreadComments ';\n  else if (ccol.hasReadComments) css += 'hasReadComments ';\n  css += commentBtnIsSelected ? 'isOpen ' : '';\n\n  // REVIEW: Replace with svg symbols!\n\n  const label = count > 0 ? count : '';\n\n  return (\n    <div id={commentButtonId}>\n      <div className={css} onClick={evt_OnClick}>\n        {CMTMGR.COMMENTICON}\n        <div className=\"comment-count\">{label}</div>\n      </div>\n      {commentIsOpen && (\n        <URCommentThread\n          uiref={commentButtonId}\n          cref={cref}\n          uid={uid}\n          x={position.x}\n          y={position.y}\n        />\n      )}\n    </div>\n  );\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nexport default URCommentBtn;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  URCommentPrompt\n\n  In edit mode, displays input widgets for entering prompts.\n  In view mode, displays static comment prompt.\n  A comment can contain one or more comment prompts.\n  Each prompt can use a different prompt format.\n\n  PROMPT FORMATS:\n    - text\n    - dropdown\n    - checkbox\n    - likert\n    - radio\n    - discrete-slider\n\n  Prompt formats use exact `text` matching to determine the selected item,\n  not an index.  So if you change the label on the prompt type, you will\n  have to update the selection as well.  The rationale for this is that\n  we want the comment database data to be as human-readable as possible.\n  Otherwise comment data would mostly be a series of indices that you\n  would have to back-match:\n    - dropdown\n    - likert\n    - radio\n  The exceptions are:\n    - checkbox -- matches `text` within a \\n-delimited string\n    - discrete-slider -- matches based on the selected index value\n                         In this case, using the value makes sense\n                         because the saved data is a number.\n\n  This uses a lot of props because it really is a helper componnent for\n  URComment.  The current state is maintained in URComment, but during\n  edit, input updates are stored temporarily in this component.\n\n  USE:\n\n    <URCommentPrompt\n      cref={cref}  // collection reference (e.g. node, edge, project)\n      commentType={comment_type} // currently selected comment type, not stored comment.comment_type\n      commenterText={commenter_text}\n      isMarkedDeleted={comment.comment_isMarkedDeleted}\n      isMarkedRead={cvobj.isMarkedRead}\n      viewMode={uViewMode}\n      onChange={this.UIOnInputUpdate}\n      errorMessage={comment_error}\n    />\n\n    We use props (especially `commenter_text`) here because URComment stores the\n    current interim state of the comment text during editing.  The `commment`\n    object stores the previous saved state.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport CMTMGR from '../comment-mgr';\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Debug Flags\nconst DBG = false;\nconst PR = 'URCommentPrompt';\n/// Constants\nconst CHECKBOX_DELIMITER = /\\n/;\n\n/// REACT FUNCTIONAL COMPONENT ////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction URCommentPrompt({\n  cref,\n  commentType,\n  commenterText,\n  isMarkedDeleted,\n  isMarkedRead,\n  viewMode,\n  onChange,\n  errorMessage\n}) {\n  const commentTypes = CMTMGR.GetCommentTypes();\n\n  /** Component Effect - set the focus to the first empty field on\n   *  entering edit mode, or selecting a new comment type\n   */\n  useEffect(() => {\n    if (viewMode === CMTMGR.VIEWMODE.EDIT) {\n      // find the first empty `text` prompt\n      let foundIndex = -1;\n      commentTypes.get(commentType).prompts.find((prompt, promptIndex) => {\n        if (prompt.format === 'text' && !commenterText[promptIndex]) {\n          foundIndex = promptIndex;\n          return true;\n        }\n      });\n      // set focus to the found empty 'text' prompt\n      const foundTextArea = document.getElementById(u_TextareaId(cref, foundIndex));\n      if (foundTextArea) foundTextArea.focus();\n    }\n  }, [viewMode, commentType]);\n\n  /// UTILITIES ///////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Used for radio buttons to indicate that there is nothing selected\n   * @param {string} commenterTextStr current radio button value\n   * @returns {boolean} true if the string is empty\n   */\n  function u_IsEmpty(commenterTextStr) {\n    return (\n      commenterTextStr === undefined ||\n      commenterTextStr === null ||\n      commenterTextStr === ''\n    );\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Converts `index` into \"prompt-<index>\" for use in HTML id attributes */\n  function u_TextareaId(cref, index) {\n    return `prompt-${cref}-${index}`;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   * Converts \"Apple Pie\\nApple Fritter\" into [\"Apple Pie\", \"Apple Fritter\"]\n   * @param {string} commenterTextStr newline delimited string, e.g. \"Apple Pie\\nApple Fritter\"\n   * @returns {string[]} updated commenter text\n   */\n  function u_SplitCheckboxCommentText(commenterTextStr) {\n    if (!commenterTextStr) return [];\n    return commenterTextStr.split(CHECKBOX_DELIMITER);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   * Converts a selection 0-based index into a stacked discrete slider string\n   * to save as comment text, e.g. 2 becomes `★★★`\n   * Each option can have a different value\n   * @param {number} index the selected item index (0-based)\n   * @param {string[]} options e.g.  ['💙', '💚', '💛', '🧡', '🩷']\n   * @returns {string} e.g. 2 returns '💙💚💛'\n   */\n  function u_SelectedIndex2CommentText(index, options) {\n    return options.map((o, i) => (i <= index ? o : '')).join('');\n  }\n\n  /// COMPONENT UI HANDLERS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   * handles checkbox changing by\n   * 1. combining all checkbox items into a single newline-delimited string\n   * 2. calling onChange handler with derived data for checkboxes\n   * e.g. \"Apple\\nBanana\"\n   * @param {number} promptIndex index pointing to the currently active prompt\n   * @param {number} optionIndex index of the checkbox option item\n   * @param {Object} options all of the checkbox options\n   * @param {Object} event\n   */\n  function evt_OnCheck(promptIndex, optionIndex, options, event) {\n    // e.g. selectedCheckboxes =  [\"Apple Pie\", \"Apple Fritter\"]\n    const selectedCheckboxes = u_SplitCheckboxCommentText(commenterText[promptIndex]);\n    let items = [];\n    options.forEach((o, index) => {\n      if (optionIndex === index) {\n        // handle the current selection\n        if (event.target.checked) items[index] = o;\n        else items[index] = '';\n      } else {\n        // handle previous selections\n        if (selectedCheckboxes.includes(o)) items[index] = o;\n        else items[index] = '';\n      }\n    });\n    event.target.value = items.join('\\n');\n    onChange(promptIndex, event);\n  }\n\n  /// COMPONENT RENDER ////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** URCommentPrompt renders its display state based on:\n   *  - viewMode -- \"edit\" or \"view\" mode\n   */\n  const RenderEditMode = () => {\n    return commentTypes.get(commentType).prompts.map((prompt, promptIndex) => {\n      let inputJSX;\n      switch (prompt.format) {\n        case 'text':\n          inputJSX = (\n            <textarea\n              id={u_TextareaId(cref, promptIndex)}\n              autoFocus\n              onChange={event => onChange(promptIndex, event)}\n              value={commenterText[promptIndex] || ''}\n            />\n          );\n          break;\n        case 'dropdown':\n          inputJSX = (\n            <select\n              value={commenterText[promptIndex] || ''}\n              onChange={event => onChange(promptIndex, event)}\n            >\n              {prompt.options.map((option, index) => (\n                <option key={index} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n          );\n          break;\n        case 'checkbox': {\n          // converts commment text into [\"Apple\", \"Banana\"]\n          const selectedCheckboxes = u_SplitCheckboxCommentText(\n            commenterText[promptIndex]\n          );\n          inputJSX = (\n            <div className=\"prompt\">\n              {prompt.options.map((option, optionIndex) => (\n                <label key={optionIndex}>\n                  <input\n                    type=\"checkbox\"\n                    value={option}\n                    onChange={event =>\n                      evt_OnCheck(promptIndex, optionIndex, prompt.options, event)\n                    }\n                    checked={selectedCheckboxes.includes(option)}\n                  />\n                  {option}\n                </label>\n              ))}\n            </div>\n          );\n          break;\n        }\n        case 'radio':\n          inputJSX = (\n            <div>\n              {prompt.options.map((option, index) => (\n                <label key={index}>\n                  <input\n                    type=\"radio\"\n                    value={option}\n                    onChange={event => onChange(promptIndex, event)}\n                    checked={commenterText[promptIndex] === option}\n                  />\n                  {option}\n                </label>\n              ))}\n            </div>\n          );\n          break;\n        case 'likert':\n          inputJSX = (\n            <div className=\"prompt\">\n              {prompt.options.map((option, optionIndex) => (\n                <button\n                  key={optionIndex}\n                  value={option}\n                  className={\n                    commenterText[promptIndex] === option ? 'selected' : 'notselected'\n                  }\n                  onClick={event => onChange(promptIndex, event)}\n                >\n                  {option}\n                </button>\n              ))}\n            </div>\n          );\n          break;\n        case 'discrete-slider':\n          inputJSX = (\n            <div className=\"prompt\">\n              {prompt.options.map((option, index) => (\n                <button\n                  key={index}\n                  value={[index, u_SelectedIndex2CommentText(index, prompt.options)]}\n                  className={\n                    String(index) <= commenterText[promptIndex]\n                      ? 'selected'\n                      : 'notselected'\n                  }\n                  onClick={event => onChange(promptIndex, event)}\n                >\n                  {option}\n                </button>\n              ))}\n            </div>\n          );\n          break;\n        default:\n          break;\n      }\n      return (\n        <div key={promptIndex}>\n          <div className=\"label\">{prompt.prompt}</div>\n          <div className=\"help\">{prompt.help}</div>\n          {inputJSX}\n          <div className=\"feedback\">{prompt.feedback}</div>\n          <div className=\"error\">{errorMessage}</div>\n          <hr />\n        </div>\n      );\n    });\n  };\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  const RenderViewMode = () => {\n    const NOTHING_SELECTED = <span className=\"help\">(nothing selected)</span>;\n\n    return commentTypes.get(commentType).prompts.map((prompt, promptIndex) => {\n      let displayJSX;\n      switch (prompt.format) {\n        case 'text':\n        case 'dropdown':\n        case 'radio':\n          displayJSX = (\n            <div className=\"commenttext\">\n              {!isMarkedDeleted && commenterText[promptIndex]}\n              {u_IsEmpty(commenterText[promptIndex]) && NOTHING_SELECTED}\n            </div>\n          );\n          break;\n        case 'checkbox': {\n          const selectedCheckboxes = u_SplitCheckboxCommentText(\n            commenterText[promptIndex]\n          );\n          displayJSX = (\n            <div className=\"prompt\">\n              {prompt.options.map((option, optionIndex) => (\n                <label key={optionIndex}>\n                  <input\n                    type=\"checkbox\"\n                    value={option}\n                    checked={selectedCheckboxes.includes(option)}\n                    readOnly // React will emit warning if there isn't an onChange handler\n                    className={'readonly'} // css: class is necessary for styling\n                    // css: `input[type='checkbox']:read-only` doesn't work -- it matches non-`readOnly` too\n                    // css: `disabled` grays out the checkbox too much, use the css class to style\n                  />\n                  {option}\n                </label>\n              ))}\n            </div>\n          );\n          break;\n        }\n        case 'likert':\n          displayJSX = (\n            <div className=\"prompt\">\n              {prompt.options.map((option, index) => (\n                <button\n                  key={index}\n                  value={option}\n                  className={\n                    commenterText[promptIndex] === option ? 'selected' : 'notselected'\n                  }\n                  disabled\n                >\n                  {option}\n                </button>\n              ))}\n            </div>\n          );\n          break;\n        case 'discrete-slider':\n          displayJSX = (\n            <div className=\"prompt\">\n              {prompt.options.map((option, index) => (\n                <button\n                  key={index}\n                  value={option}\n                  className={\n                    String(index) <= commenterText[promptIndex]\n                      ? 'selected'\n                      : 'notselected'\n                  }\n                  disabled\n                >\n                  {option}\n                </button>\n              ))}\n            </div>\n          );\n          break;\n        default:\n          break;\n      }\n\n      return (\n        <div key={promptIndex} className=\"comment-item\">\n          <div className=\"label\">\n            <div className=\"comment-icon-inline\">\n              {!isMarkedRead && !isMarkedDeleted && CMTMGR.COMMENTICON}\n            </div>\n            {prompt.prompt}\n          </div>\n          {/* <div className=\"help\">{prompt.help}</div> */}\n          {displayJSX}\n          {/* <div className=\"feedback\">{prompt.feedback}</div> */}\n          <div className=\"error\">{errorMessage}</div>\n          <hr />\n        </div>\n      );\n    });\n  };\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  return viewMode === CMTMGR.VIEWMODE.EDIT ? RenderEditMode() : RenderViewMode();\n}\n\nexport default URCommentPrompt;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  URCommentStatus displays a summary of new comments being added across the\n  network in the nav bar.  There are two views:\n  - uiIsExpanded = false: A count of the most recent read and unread comments\n  - uiIsExpanded = true: The full list of the the most recent comments\n  In addition, there are two commands:\n  - \"Mark All Read\" will mark all of the messages in the status list \"read\"\n  - Close will close the status list\n\n  The comment status messages remain visible through the whole user session.\n  Marking all messages as \"read\" will clear the status list.\n\n  USE:\n\n    <URCommentStatus message={message} handleMessageUpdate/>\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport UNISYS from 'unisys/client';\nimport NetMessage from 'unisys/common-netmessage-class';\nimport CMTMGR from '../comment-mgr';\nimport URCommentThreadMgr from './URCommentThreadMgr';\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Initialize UNISYS DATA LINK for functional react component\nconst UDATAOwner = { name: 'URCommentStatus' };\nconst UDATA = UNISYS.NewDataLink(UDATAOwner);\n/// Debug Flags\nconst DBG = false;\nconst PR = 'URCommentStatus';\n/// Animation Timers\nlet AppearTimer;\nlet DisappearTimer;\nlet ResetTimer;\n\n/// REACT FUNCTIONAL COMPONENT ////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** URCommentStatus renders a summary of new comments in the nav bar.\n * @param {*} props currently not used\n * @returns\n */\nfunction URCommentStatus(props) {\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [activeCSS, setActiveCSS] = useState('');\n  const [uiIsExpanded, setUiIsExpanded] = useState(false);\n  const [dummy, setDummy] = useState(0); // Dummy state variable to force update\n\n  /** Component Effect - register listeners on mount */\n  useEffect(() => {\n    UDATA.OnAppStateChange('COMMENTCOLLECTION', urmsg_DUMMY_COMMENTS_UPDATE); // respond to close\n    UDATA.HandleMessage('COMMENTS_UPDATE', urmsg_DUMMY_COMMENTS_UPDATE);\n    UDATA.HandleMessage('COMMENT_UPDATE', urmsg_COMMENT_UPDATE);\n\n    return () => {\n      UDATA.AppStateChangeOff('COMMENTCOLLECTION', urmsg_DUMMY_COMMENTS_UPDATE); // respond to close\n      UDATA.UnhandleMessage('COMMENTS_UPDATE', urmsg_DUMMY_COMMENTS_UPDATE);\n      UDATA.UnhandleMessage('COMMENT_UPDATE', urmsg_COMMENT_UPDATE);\n    };\n  }, []);\n\n  /// UR HANDLERS /////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** force re-render after COMMENTS_UPDATE from a new comment another user */\n  function urmsg_DUMMY_COMMENTS_UPDATE() {\n    // This is necessary to force a re-render of the comment summaries\n    // when the comment collection changes on the net\n    setDummy(dummy => dummy + 1); // Trigger re-render\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** animate the addition of new comment messages after a new comment from another user */\n  function urmsg_COMMENT_UPDATE(data) {\n    const { comment, uaddr } = data;\n\n    const my_uaddr = UNISYS.SocketUADDR();\n    const isNotMe = my_uaddr !== uaddr;\n\n    if (comment && comment.commenter_text.length > 0) {\n      let source;\n      if (comment.comment_id_parent) {\n        source = `${comment.commenter_id} replied: `;\n      } else {\n        source = `${comment.commenter_id} commented: `;\n      }\n      comment.commenter_id = source;\n      const message = c_GetCommentItemJSX(comment);\n      setMessages(prevMessages => [...prevMessages, message]);\n\n      // Only show status update if it's coming from another\n      if (isNotMe) {\n        clearTimeout(AppearTimer);\n        clearTimeout(DisappearTimer);\n        clearTimeout(ResetTimer);\n        // clear it first, then appear (so that each new comment triggers the animation)\n        setMessage(message);\n        setActiveCSS('');\n        AppearTimer = setTimeout(() => {\n          setActiveCSS('appear');\n        }, 250);\n        DisappearTimer = setTimeout(() => {\n          setActiveCSS('disappear');\n        }, 8000);\n        ResetTimer = setTimeout(() => {\n          setMessage('');\n          setActiveCSS('');\n        }, 13000); // should equal the `disappear` ease-in period + 'disappear' timeout\n      } else {\n        setDummy(dummy => dummy + 1); // force update to update counts\n      }\n    }\n  }\n\n  /// COMPONENT UI HANDLERS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function evt_ExpandPanel() {\n    clearTimeout(DisappearTimer);\n    clearTimeout(ResetTimer);\n    setActiveCSS('appear');\n    setUiIsExpanded(true);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function evt_Close() {\n    setMessage('');\n    setActiveCSS('');\n    setUiIsExpanded(false);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function evt_MarkAllRead() {\n    CMTMGR.MarkAllRead();\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function evt_OpenReferent(event, cref) {\n    event.preventDefault();\n    event.stopPropagation();\n    CMTMGR.OpenReferent(cref);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function evt_OpenComment(event, cref, cid) {\n    event.preventDefault();\n    event.stopPropagation();\n    CMTMGR.OpenComment(cref, cid);\n  }\n\n  /// RENDER HELPERS //////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Renders each comment item summary as a JSX element\n   *  @param {TCommentObject} comment\n   *  @returns {JSX.Element}\n   */\n  function c_GetCommentItemJSX(comment) {\n    if (comment.comment_isMarkedDeleted) return ''; // was marked deleted, so skip\n    const cref = comment ? comment.collection_ref : '';\n    const { typeLabel, sourceLabel } = CMTMGR.GetCREFSourceLabel(cref);\n    if (sourceLabel === undefined) return ''; // source was deleted, so skip\n    return (\n      <div className=\"comment-item\" key={comment.comment_id}>\n        <div className=\"comment-sourcetype\">{typeLabel}&nbsp;</div>\n        <a\n          href=\"#\"\n          className=\"comment-sourcelabel\"\n          onClick={event => evt_OpenReferent(event, cref)}\n        >\n          {sourceLabel}\n        </a>\n        <div className=\"commenter\">: {comment.commenter_id}&nbsp;</div>\n        <a\n          href=\"#\"\n          onClick={event => evt_OpenComment(event, cref, comment.comment_id)}\n        >{`#${comment.comment_id}`}</a>\n        &nbsp;&ldquo;\n        <div className=\"comment-text\">\n          {String(comment.commenter_text.join('|')).trim()}\n        </div>\n        &rdquo;\n      </div>\n    );\n  }\n\n  /// COMPONENT RENDER ////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  const isLoggedIn = NetMessage.GlobalGroupID();\n\n  const { countRepliesToMe, countUnread } = CMTMGR.GetCommentStats();\n  const unreadRepliesToMe = CMTMGR.GetUnreadRepliesToMe();\n  const unreadRepliesToMeItems = unreadRepliesToMe.map(comment =>\n    c_GetCommentItemJSX(comment)\n  );\n  const unreadComments = CMTMGR.GetUnreadComments();\n  const unreadCommentItems = unreadComments.map(comment =>\n    c_GetCommentItemJSX(comment)\n  );\n\n  const UnreadRepliesToMeButtonJSX = (\n    <div>\n      <div\n        className={`commentbtn ${\n          countRepliesToMe ? 'hasNewComments' : 'hasReadComments'\n        }`}\n        onClick={evt_ExpandPanel}\n      >\n        {CMTMGR.COMMENTICON}\n        <div className=\"comment-count\">{countRepliesToMe}</div>\n      </div>\n      <h3>&nbsp;unread replies to me</h3>\n    </div>\n  );\n  const UnreadButtonJSX = (\n    <div>\n      <div\n        className={`commentbtn ${\n          countUnread ? 'hasUnreadComments' : 'hasReadComments'\n        }`}\n        onClick={evt_ExpandPanel}\n      >\n        {CMTMGR.COMMENTICON}\n        <div className=\"comment-count\">{countUnread}</div>\n      </div>\n      <h3>&nbsp;unread</h3>\n    </div>\n  );\n\n  return (\n    <div>\n      <URCommentThreadMgr />\n      <div id=\"comment-bar\">\n        <div\n          id=\"comment-alert\"\n          className={`${activeCSS} ${uiIsExpanded ? ' expanded' : ''}`}\n        >\n          {!uiIsExpanded && <div className=\"comment-status-body\">{message}</div>}\n        </div>\n        <div>\n          <div\n            id=\"comment-summary\"\n            className={`${uiIsExpanded ? ' expanded' : ''}`}\n            onClick={evt_ExpandPanel}\n          >\n            {UnreadRepliesToMeButtonJSX}&nbsp;&nbsp;{UnreadButtonJSX}\n          </div>\n          <div\n            id=\"comment-panel\"\n            className={`${uiIsExpanded ? ' expanded' : ''}`}\n            onClick={evt_Close}\n          >\n            <div className=\"comments-unread\">\n              {UnreadRepliesToMeButtonJSX}\n              <div className=\"comment-status-body\">{unreadRepliesToMeItems}</div>\n              {UnreadButtonJSX}\n              <div className=\"comment-status-body\">{unreadCommentItems}</div>\n              <div className=\"commentbar\">\n                <button className=\"small\" onClick={evt_Close}>\n                  Close\n                </button>\n                <button className=\"small\" onClick={evt_MarkAllRead}>\n                  Mark All Read\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nexport default URCommentStatus;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  URCommentThread displays all of the comments and replies for a given referent\n  object.  It is a draggable window that can be opened and closed by the user\n  via the URCommentBtn.  Clickin \"X\" or close will mark all comments as \"read\".\n\n  USE:\n\n    <URCommentThread\n      uiref\n      cref={collection_ref}\n      uid\n      x\n      y\n    />\n\n  PROPS:\n    * uiref   -- reference to the ui component that opened the thread, usu commentButtonId\n    * cref    -- collection reference (usu node id, edge id)\n    * uid     -- user id of current active user viewing or changing comment\n    * x,y     -- position of open comment thread used to set proximity to\n                 comment button\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Draggable from 'react-draggable';\nimport UNISYS from 'unisys/client';\nimport CMTMGR from '../comment-mgr';\nimport URComment from './URComment';\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Initialize UNISYS DATA LINK for react component\nconst UDATAOwner = { name: 'URCommentThread' };\nconst UDATA = UNISYS.NewDataLink(UDATAOwner);\n/// Debug Flags\nconst DBG = false;\nconst PR = 'URCommentThread';\n\n/// REACT FUNCTIONAL COMPONENT ////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** URCommentThread renders the set of individual comments and replies\n *  (URComment) in a single window.  Handles marking comments as \"read\"\n *  when the thread is closed.\n */\nfunction URCommentThread({ uiref, cref, uid, x, y }) {\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  /** Component Effect - set up listeners on mount */\n  useEffect(() => {\n    function urmsg_UpdatePermissions(data) {\n      setIsDisabled(data.commentBeingEditedByMe);\n    }\n\n    UDATA.HandleMessage('COMMENT_UPDATE_PERMISSIONS', urmsg_UpdatePermissions);\n\n    return () => {\n      UDATA.UnhandleMessage('COMMENT_UPDATE_PERMISSIONS', urmsg_UpdatePermissions);\n    };\n  }, []);\n\n  /// COMPONENT UI HANDLERS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** handles clicking the \"Click to add a Comment\" textarea to create a new\n   *  coment.\n   */\n  function evt_OnAddComment() {\n    const commentVObjs = CMTMGR.GetThreadedViewObjects(cref, uid);\n    const numComments = commentVObjs.length;\n    if (numComments < 1) {\n      // Add first root comment\n      CMTMGR.AddComment({\n        cref,\n        comment_id_parent: '',\n        comment_id_previous: '',\n        commenter_id: uid\n      });\n    } else {\n      // Add reply to last ROOT comment in thread (last comment at level 0)\n      const lastComment = commentVObjs.reverse().find(cvobj => cvobj.level === 0);\n      CMTMGR.AddComment({\n        cref,\n        comment_id_parent: '',\n        comment_id_previous: lastComment.comment_id,\n        commenter_id: uid\n      });\n    }\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** handles the \"X\" or \"Close\" button click, marks all comments \"read\" */\n  function evt_OnClose() {\n    CMTMGR.CloseCommentCollection(uiref, cref, uid);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** handles clicking on the name of the object being commented on\n   *  opens the object -- useful for finding the source object if the\n   *  thread window has moved.\n   */\n  function evt_OnReferentClick(event, cref) {\n    event.preventDefault();\n    event.stopPropagation();\n    CMTMGR.OpenReferent(cref);\n  }\n\n  /// COMPONENT RENDER ////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  const commentVObjs = CMTMGR.GetThreadedViewObjects(cref, uid);\n\n  /// SUB COMPONENTS\n  const CloseBtn = (\n    <button onClick={evt_OnClose} disabled={isDisabled}>\n      Close\n    </button>\n  );\n\n  // HACK: To keep the comment from going off screen:\n  const windowHeight = Math.min(screen.height, window.innerHeight);\n  const commentMaxHeight = `${windowHeight - y - 100}px`;\n\n  const { typeLabel, sourceLabel } = CMTMGR.GetCREFSourceLabel(cref);\n\n  return (\n    <Draggable>\n      <div\n        className=\"commentThread\"\n        style={{ left: `${x}px`, top: `${y}px`, maxHeight: commentMaxHeight }}\n        onClick={e => e.stopPropagation()}\n      >\n        <div className=\"topbar\">\n          <div className=\"commentTitle\">\n            Comments on {typeLabel}{' '}\n            <a href=\"#\" onClick={event => evt_OnReferentClick(event, cref)}>\n              {sourceLabel}\n            </a>\n          </div>\n          {!isDisabled && (\n            <div className=\"closeBtn\" onClick={evt_OnClose}>\n              X\n            </div>\n          )}\n        </div>\n        <div className=\"commentScroller\">\n          {commentVObjs.map(cvobj => (\n            <URComment\n              cref={cref}\n              cid={cvobj.comment_id}\n              uid={uid}\n              key={cvobj.comment_id}\n            />\n          ))}\n          {!isDisabled && uid && (\n            <textarea\n              className=\"add\"\n              placeholder=\"Click to add a Comment...\"\n              readOnly\n              onClick={evt_OnAddComment}\n            ></textarea>\n          )}\n          {!uid && commentVObjs.length < 1 && (\n            <div className=\"label\" style={{ textAlign: 'center' }}>\n              No comments\n            </div>\n          )}\n        </div>\n        <div className=\"commentbar\">{CloseBtn}</div>\n      </div>\n    </Draggable>\n  );\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nexport default URCommentThread;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  URCommentThreadMgr\n\n  URCommentThreadMgr handles the opening and closing of URCommentThreads\n  being requested from three sources:\n  * Evidence Links -- via URCOmmentBtnAlias\n  * SVG props      -- in class-vbadge via UR.Publish(`CTHREADMGR_THREAD_OPENED`) calls\n  * SVG Mechanisms -- in class-vbadge via UR.Publish(`CTHREADMGR_THREAD_OPENED`) calls\n\n  URCommentVBtn is a visual component that passes clicks\n  to URCommentThreadMgr via UR.Publish(`CTHREADMGR_THREAD_OPENED`) calls\n\n\n  HOW IT WORKS\n    When an EVLink, SVG prop, or SVG mechanism clicks on the\n    URCommentVBtn, URCommentThreadMgr will:\n    * Add the requested Thread to the URCommentThreadMgr\n    * Open the URCommentThread\n    * When the URCommentThread is closed, it will be removed from the URCommentThreadMgr\n\n  See [Whimsical Comment Data Structures](https://whimsical.com/comment-data-structures-3zPhDYLVsEKt2gY7xyMMKS) for how the current system is implemented.\n\n  UR MESSAGES\n    *  CTHREADMGR_THREAD_OPENED {cref, position}\n    *  CTHREADMGR_THREAD_CLOSED {cref}            Just closed, update views\n    *  CTHREADMGR_THREAD_CLOSED_ALL\n\n\n  NOTES\n\n  * Differences with URCommentBtn\n\n    URCommentBtn displays Comment Collections (e.g. URCommentThread) as children\n    of the URCommentBtn.\n    In contrast, URCommentThread are displayed as children of URCommentTHreadMgr.\n    This gets around the problem of URCommentBtns beimg hidden inside Evidence Links.\n\n    To get around this, URCommentThreadMgr essentially replaces the\n    functionality of URCommentBtn with three pieces, acting as a middle\n    man and breaking out the...\n    * visual display    -- URCommentBtnAlias\n    * UI click requests -- UR messages\n    * thread opening / closing requests -- URCommentThreadMgr\n    ...into different functions handled by different components.\n\n  USE:\n\n    <URCommentThreadMgr message={message} handleMessageUpdate/>\n\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport UNISYS from 'unisys/client';\n\nimport CMTMGR from '../comment-mgr';\nimport URCommentThread from './URCommentThread';\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Initialize UNISYS DATA LINK for functional react component\nconst UDATAOwner = { name: 'URCommentThreadMgr' };\nconst UDATA = UNISYS.NewDataLink(UDATAOwner);\n//\nconst DBG = true;\nconst PR = 'URCommentThreadMgr';\n\n/// REACT FUNCTIONAL COMPONENT ////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction URCommentThreadMgr() {\n  const uid = CMTMGR.GetCurrentUserId();\n  const [cmtBtns, setCmtBtns] = useState([]); // { uiref, cref, position }\n  const [dummy, setDummy] = useState(100);\n\n  /** Component Effect - register listeners on mount */\n  useEffect(() => {\n    UDATA.OnAppStateChange('COMMENTVOBJS', urstate_UpdateCommentVObjs);\n    UDATA.HandleMessage('CTHREADMGR_THREAD_OPENED', urmsg_THREAD_OPEN);\n    UDATA.HandleMessage('CTHREADMGR_THREAD_CLOSED', urmsg_THREAD_CLOSE);\n    UDATA.HandleMessage('CTHREADMGR_THREAD_CLOSED_ALL', urmsg_THREAD_CLOSE_ALL);\n\n    return () => {\n      UDATA.AppStateChangeOff('COMMENTVOBJS', urstate_UpdateCommentVObjs);\n      UDATA.UnhandleMessage('CTHREADMGR_THREAD_OPENED', urmsg_THREAD_OPEN);\n      UDATA.UnhandleMessage('CTHREADMGR_THREAD_CLOSED', urmsg_THREAD_CLOSE);\n      UDATA.UnhandleMessage('CTHREADMGR_THREAD_CLOSED_ALL', urmsg_THREAD_CLOSE_ALL);\n    };\n  }, []);\n\n  /// COMPONENT HELPER METHODS ////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  /// UR HANDLERS /////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function urstate_UpdateCommentVObjs(data) {\n    // This is necessary to force a re-render of the threads\n    // when the comment collection changes on the net\n    // especially when a new comment is added.\n    setDummy(dummy => dummy + 1); // Trigger re-render\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   * Handle CTHREADMGR_THREAD_OPENED message\n   * 1. Register the button, and\n   * 2. Open the URCommentBtn\n   * @param {Object} data\n   * @param {string} data.uiref - ID of UI component initiating the request\n   * @param {string} data.cref - Collection reference\n   * @param {Object} data.position - Position of the button\n   */\n  function urmsg_THREAD_OPEN(data) {\n    if (DBG) console.log(PR, 'urmsg_THREAD_OPEN', data);\n    // Validate\n    if (data.uiref === undefined)\n      throw new Error(\n        `URCommentThreadMgr: urmsg_THREAD_OPEN: missing uiref ${JSON.stringify(data)}`\n      );\n    if (\n      data.position === undefined ||\n      data.position.x === undefined ||\n      data.position.y === undefined\n    )\n      throw new Error(\n        `URCommentThreadMgr: urmsg_THREAD_OPEN: missing position data ${JSON.stringify(\n          data\n        )}`\n      );\n    // 1. Register the button\n    setCmtBtns(prevBtns => [...prevBtns, data]);\n    // 2. Open the URCommentThread\n    // NOTE: Call is to data.uiref, not data.cref\n    CMTMGR.UpdateCommentUIState(data.uiref, { cref: data.cref, isOpen: true });\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function urmsg_THREAD_CLOSE(data) {\n    if (DBG) console.log('urmsg_THREAD_CLOSE', data);\n    setCmtBtns(prevBtns => prevBtns.filter(btn => btn.cref !== data.cref));\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function urmsg_THREAD_CLOSE_ALL(data) {\n    if (DBG) console.log('urmsg_THREAD_CLOSE_ALL', data);\n    setCmtBtns([]);\n  }\n\n  /// COMPONENT RENDER ////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  return (\n    <div className=\"URCommentThreadMgr\">\n      {cmtBtns.map(btn => (\n        <URCommentThread\n          key={btn.cref}\n          uiref={btn.uiref}\n          cref={btn.cref}\n          uid={uid}\n          x={btn.position.x}\n          y={btn.position.y}\n        />\n      ))}\n    </div>\n  );\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nexport default URCommentThreadMgr;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  URCommentVBtn\n\n  A purely visual button.\n\n  It shows three visual states:\n  * read/unread status\n    * has unread comments (gold color)\n    * all comments are read (gray color)\n  * is open / selected (displaying comments)\n  * the number of comments.\n\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nimport React, { useState, useEffect } from 'react';\nimport CMTMGR from '../comment-mgr';\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n/// REACT FUNCTIONAL COMPONENT ////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction URCommentVBtn({ uiref, count, hasUnreadComments, selected, cb }) {\n  let icon;\n  if (selected) {\n    if (hasUnreadComments) icon = CMTMGR.ICN_COMMENT_UNREAD_SELECTED;\n    else if (count === 0) icon = CMTMGR.ICN_COMMENT_UNREAD_SELECTED;\n    else icon = CMTMGR.ICN_COMMENT_READ_SELECTED;\n  } else {\n    // not selected\n    if (hasUnreadComments) icon = CMTMGR.ICN_COMMENT_UNREAD;\n    else if (count === 0) icon = CMTMGR.ICN_COMMENT_UNREAD;\n    else icon = CMTMGR.ICN_COMMENT_READ;\n  }\n\n  return (\n    <button id={uiref} onClick={cb} className=\"URCommentVBtn\">\n      {icon}\n      <div className={`count ${hasUnreadComments ? 'unread' : ''}`}>\n        {count === 0 ? '' : count}\n      </div>\n    </button>\n  );\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nexport default URCommentVBtn;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  URDateField\n\n  A general date input field that can support a variety of calendar formats\n  for historical projects, e.g. 1000 AD, 10,000 BCE.\n\n  The intent is to provide a unstructured input field that allows users to\n  enter arbitrary date-related strings that can be parsed by the application\n  well enough to support filtering and sorting.\n\n  This is primarily used for data input rather than timestamping.\n\n  The input field itself is intended to be flexible, using the `chrono-node`\n  library to parse a wide variety of date formats.\n  1. The user inputs a raw date-related string, e.g. \"circa 1492\"\n  2. The component then interprets the parsed date and offers a selection of\n     formats for the user to choose from.  The user has the option to select\n     the format \"as entered\" or to choose from a list of suggested formats\n     based on the parsed date.\n  3. The selected format is then displayed in the field.\n  4. When the user clicks \"Save\", the date is saved as\n      {value: \"raw date string\", format: \"selected format\"}\n\n  Formats are dynamically generated based on the available parsed date,\n  displaying only formats that match the the parsed dimensions. For example, if\n  the parsed data includes a year, month, and day, the component will offer\n  a variety of formats including \"April 1, 2024\" and \"2024/4/1\". If the parsed\n  date only includes a year and month, the component will offer formats like\n  \"April 2024\" and \"2024/4\", but not \"April 1, 2024\" if the day is missing.\n  If the parsed date only includes a year, the component will offer formats\n  like \"2024\" and \"2024 CE\", etc.\n\n  Eras are handled via a template setting. The user can set the era to BCE/CE or BC/AD.\n  Dates can be entered in any format, e.g. \"2024 BCE\", \"2024 BC\", \"2024 CE\",\n  but the selected format will use the format defined in the template, e.g.\n  if the eras format is set to \"BCE/CE\", entering \"1024 ad\" will be formatted\n  as \"1024 CE\".  (If you select \"as entered\" as the format you can still use \"1024 ad\")\n\n  For ambiguous years, adding a \"CE\" or \"AD\" to the end of the date can\n  clarify the era. For example, \"102\" can't be parsed, but \"102 ad\"\n  will parse the input as a year.\n\n  You can add extra descriptive text to the field.  As long as the field can\n  interpret the date, the exact text doesn't matter.  So you can add other\n  descriptive text as part of the field and sorting and filtering should still\n  work.  This doesn't work if the input can't be interpreted.  And you do have\n  to make sure the interpretation is correct.\n\n  The stored value of a historical date field includes:\n  - The raw input string (`value`)\n  - The selected format ('format')\n  - The formatted date string (`formattedDateString`)\n  The final output is then dynamically generated based on the selection.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport HDATE from 'system/util/hdate';\nimport UNISYS from 'unisys/client';\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Initialize UNISYS DATA LINK for functional react component\nconst UDATAOwner = { name: 'URDateField' };\nconst UDATA = UNISYS.NewDataLink(UDATAOwner);\nconst DBG = false;\nconst PR = 'URDateField';\n\n/// REACT FUNCTIONAL COMPONENT ////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction URDateField({\n  id,\n  value = '', // string or {value, format, formattedDateString}\n  dateFormat = 'AS_ENTERED',\n  allowFormatSelection = false,\n  readOnly,\n  onChange,\n  helpText,\n  isFilter = false,\n  disabled = false\n}) {\n  /// CONSTANTS + STATES\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  const inputRef = useRef(null);\n  const cursorPos = useRef(0);\n\n  const [hdate, setHDate] = useState({\n    value: typeof value === 'object' ? value.value : value,\n    format: allowFormatSelection ? value.format || dateFormat : dateFormat,\n    formattedDateString: value.formattedDateString || ''\n  });\n  const [dateValidationStr, setValidationStr] = useState(); // human-readable verification e.g. 'month:2024'\n  const [formatMenuOptions, setFormatMenuOptions] = useState([\n    { value: 'AS_ENTERED', preview: 'as entered' }\n  ]);\n\n  /// Component Effect - set up listeners on mount */\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  useEffect(() => {\n    // 1. Copy state to local variables\n    const result = { ...hdate };\n    result.value = typeof value === 'object' ? value.value : value;\n    result.format = allowFormatSelection ? value.format || dateFormat : dateFormat;\n\n    // 2. Parse and format the date based on selected format\n    const ParsingResult = HDATE.Parse(result.value);\n    const knownValues =\n      ParsingResult.length > 0 ? ParsingResult[0].start.knownValues : {};\n    result.formattedDateString = HDATE.GetPreviewStr(\n      result.value,\n      knownValues,\n      result.format\n    );\n\n    // 3. Save derived values\n    const dateValidationResults = HDATE.ShowValidationResults(ParsingResult);\n    setValidationStr(dateValidationResults ? dateValidationResults.join(' ') : '');\n    setFormatMenuOptions(\n      HDATE.ShowMatchingFormats(ParsingResult, result.format, allowFormatSelection)\n    );\n\n    // 4. Save State\n    setHDate(result);\n\n    // 5. Force change so that the current format is changed when the field is opened\n    if (onChange && hdate.formattedDateString !== result.formattedDateString)\n      c_HandleChange(result);\n  }, [value, dateFormat]);\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// Retain cursor position across updates\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.selectionStart = cursorPos.current;\n      inputRef.current.selectionEnd = cursorPos.current;\n    }\n  }, [hdate.value]);\n\n  /// COMPONENT UI HANDLERS ///////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function c_HandleChange(result) {\n    // 2. Parse and format the date based on selected format\n    const ParsingResult = HDATE.Parse(result.value);\n    const knownValues =\n      ParsingResult.length > 0 ? ParsingResult[0].start.knownValues : {};\n    result.formattedDateString = HDATE.GetPreviewStr(\n      result.value,\n      knownValues,\n      result.format\n    );\n\n    // 3. Send input string, format, and formattedDateString to onChange handler\n    const eventWithFormat = { target: {} };\n    eventWithFormat.target.id = id;\n    eventWithFormat.target.value = result;\n    onChange(eventWithFormat);\n  }\n\n  /** Handle user text input updates, parse and format the date string based\n   *  on the input values, and trigger the onChange handler.\n   */\n  function evt_OnInputUpdate(event) {\n    // Copy state to local variables\n    const result = { ...hdate };\n    result.value = event.target.value;\n    cursorPos.current = event.target.selectionStart;\n    c_HandleChange(result);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Handle user selection of a date format.  Formats the current date field\n   *  with the selected format, and trigger the onChange handler.\n   */\n  function evt_OnFormatSelect(event) {\n    // Copy state to local variables\n    const result = { ...hdate };\n    result.format = event.target.value;\n    c_HandleChange(result);\n  }\n\n  /// RENDER /////////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  const READONLY = <div>{hdate.formattedDateString}</div>;\n\n  const FILTER = (\n    <div className=\"urdate\">\n      <div className=\"filter\">\n        <input\n          ref={inputRef}\n          id={id}\n          className={dateValidationStr === '' ? 'not-validated' : ''}\n          onChange={evt_OnInputUpdate}\n          value={hdate.value}\n          placeholder=\"...\"\n          disabled={disabled}\n        />\n        <div className=\"validator\">{dateValidationStr}</div>\n      </div>\n    </div>\n  );\n\n  const NORMAL = (\n    <div className=\"urdate\">\n      <div className=\"help\">{helpText}</div>\n      <div className=\"help\">Enter a date</div>\n      <input\n        ref={inputRef}\n        id={id}\n        className={dateValidationStr === '' ? 'not-validated' : ''}\n        onChange={evt_OnInputUpdate}\n        value={hdate.value}\n        disabled={disabled}\n      />\n      <div className=\"validator\">{dateValidationStr}</div>\n      <div className=\"help\">Display as</div>\n      {allowFormatSelection ? (\n        <select\n          onChange={evt_OnFormatSelect}\n          value={hdate.format}\n          disabled={!allowFormatSelection}\n        >\n          {formatMenuOptions.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.preview}\n            </option>\n          ))}\n        </select>\n      ) : (\n        <div>{hdate.formattedDateString}</div>\n      )}\n    </div>\n  );\n\n  if (readOnly) return READONLY;\n  if (isFilter) return FILTER;\n  return NORMAL;\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nexport default URDateField;\n","/*///////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\nUR Table\n\nImplements a table with resizable columns.\nEmulates the API of Handsontable.\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * /////////////////////////////////////*/\n\n/// LIBRARIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nimport React, { useState, useEffect, useRef } from 'react';\nimport HDATE from 'system/util/hdate';\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\n\n/// FUNCTIONAL COMPONENT DECLARATION //////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction URTable({ isOpen, data, columns }) {\n  const [tabledata, setTableData] = useState([]);\n  const [columndefs, setColumnDefs] = useState([]);\n  const [columnWidths, setColumnWidths] = useState([]);\n  const [sortColumnIdx, setSortColumnIdx] = useState(0);\n  const [sortOrder, setSortOrder] = useState(1);\n\n  const tableRef = useRef(null);\n  const resizeRef = useRef(null);\n\n  /// USE EFFECT //////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// Init table data\n  useEffect(() => {\n    setTableData(data);\n  }, []);\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// Calculate Initial Column Widths\n  useEffect(() => {\n    // ...AFTER the table is opened otherwise the table width is 0 at the first render\n    if (isOpen) {\n      // Only calculate widths if the table is open\n      u_CalculateColumnWidths();\n    }\n  }, [isOpen]);\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// Update column definitions\n  useEffect(() => {\n    // Set columns independently of the table data so that data can be updated\n    // without affecting columns\n    setColumnDefs(columns);\n    u_CalculateColumnWidths();\n  }, [columns]);\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// Update table data\n  useEffect(() => {\n    m_ExecuteSorter(data);\n  }, [data]);\n  // Handle column sort selection\n  useEffect(() => {\n    // Sort table data\n    m_ExecuteSorter(data);\n  }, [sortColumnIdx, sortOrder]);\n\n  /// UTILITIES ///////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  const u_CalculateColumnWidths = () => {\n\n    // if table is not drawn yet, skip\n    if (tableRef.current.clientWidth < 1) return;\n\n    // if it's already set, don't recalculate\n    if (columnWidths.length > 0 && tableRef.current.clientWidth > 0) {\n      return;\n    }\n\n    const definedColWidths = columns.filter(col => col.width).map(col => col.width);\n    const definedColWidthSum = definedColWidths.reduce((a, b) => a + b, 0);\n    const remainingWidth = tableRef.current.clientWidth - definedColWidthSum;\n    const colWidths = columns.map(\n      col => col.width || remainingWidth / (columns.length - definedColWidths.length)\n    );\n    setColumnWidths(colWidths);\n  };\n\n  /// RESIZE COLUMN HANDLERS //////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  const ui_MouseDown = (event, index) => {\n    event.preventDefault();\n    event.stopPropagation();\n    resizeRef.current = {\n      index,\n      startX: event.clientX,\n      startWidth: columnWidths[index],\n      nextStartWidth: columnWidths[index + 1],\n      maxCombinedWidth: columnWidths[index] + columnWidths[index + 1] - 50\n    };\n  };\n  const ui_MouseMove = event => {\n    if (resizeRef.current !== null) {\n      const { index, startX, startWidth, nextStartWidth, maxCombinedWidth } =\n        resizeRef.current;\n      const delta = event.clientX - startX;\n      const newWidths = [...columnWidths];\n      newWidths[index] = Math.min(Math.max(50, startWidth + delta), maxCombinedWidth); // Minimum width set to 50px\n      newWidths[index + 1] = Math.min(\n        Math.max(50, nextStartWidth - delta),\n        maxCombinedWidth\n      );\n      setColumnWidths(newWidths);\n    }\n  };\n  const ui_MouseUp = () => {\n    resizeRef.current = null; // Reset on mouse up\n  };\n\n  /// CLICK HANDLERS //////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function ui_ClickSorter(event, index) {\n    event.preventDefault();\n    event.stopPropagation();\n    setSortColumnIdx(index);\n    setSortOrder(sortOrder * -1);\n  }\n\n  /// BUILT-IN SORTERS ////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function m_SortByText(key, tdata, order) {\n    const sortedData = [...tdata].sort((a, b) => {\n      if (DBG) console.log('sort by text', a[key], b[key]);\n      if (!a[key] && !b[key]) return 0;\n      if (!a[key]) return 1; // Move undefined or '' to the bottom regardless of sort order\n      if (!b[key]) return -1; // Move undefined or '' the bottom regardless of sort order\n      if (a[key] < b[key]) return order;\n      if (a[key] > b[key]) return order * -1;\n      return 0;\n    });\n    return sortedData;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function m_SortByMarkdown(key, tdata, order) {\n    const sortedData = [...tdata].sort((a, b) => {\n      // NC's markdown format from NCNodeTable will pass:\n      // { html, raw}\n      // We will sort by the raw text\n      if (a[key].raw < b[key].raw) return order;\n      if (a[key].raw > b[key].raw) return order * -1;\n      return 0;\n    });\n    return sortedData;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function m_SortByNumber(key, tdata, order) {\n    const sortedData = [...tdata].sort((a, b) => {\n      const akey = Number(a[key]);\n      const bkey = Number(b[key]);\n      if (isNaN(akey) && isNaN(bkey)) return 0;\n      if (isNaN(akey)) return 1; // Move NaN to the bottom regardless of sort order\n      if (isNaN(bkey)) return -1; // Move NaN to the bottom regardless of sort order\n      if (akey < bkey) return order;\n      if (akey > bkey) return order * -1;\n      return 0;\n    });\n    return sortedData;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  function m_SortByHDate(key, tdata, order) {\n    const sortedData = [...tdata].sort((a, b) => {\n      const akey = HDATE.Parse(a[key]); // parseResult\n      const bkey = HDATE.Parse(b[key]);\n      // if ANY is defined, it's automatically greater than undefined\n      if (akey.length > 0 && bkey.length < 1) return order;\n      if (akey.length < 1 && bkey.length > 0) return order * -1;\n      if (akey.length < 1 && bkey.length < 1) return 0;\n      // two valid dates, compare them!\n      const da = akey[0].start.knownValues;\n      const db = bkey[0].start.knownValues;\n      let dateorder;\n      if (da.year !== db.year) {\n        dateorder = da.year - db.year;\n      } else if (da.month !== db.month) {\n        dateorder = da.month - db.month;\n      } else if (da.day !== db.day) {\n        dateorder = da.day - db.day;\n      } else if (da.hour !== db.hour) {\n        dateorder = da.hour - db.hour;\n      } else if (da.minute !== db.minute) {\n        dateorder = da.minute - db.minute;\n      } else if (da.second !== db.second) {\n        dateorder = da.second - db.second;\n      }\n      return dateorder * order;\n    });\n    return sortedData;\n  }\n  /// BUILT-IN TABLE METHODS //////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   *\n   * @param {*} value\n   * @param {*} col\n   * @param {*} idx\n   * @returns The final value to be rendered in the table cell\n   */\n  function m_ExecuteRenderer(value, col, idx) {\n    const customRenderer = col.renderer;\n    if (customRenderer) {\n      if (typeof customRenderer !== 'function')\n        throw new Error('Invalid renderer for', col);\n      return customRenderer(value);\n    } else {\n      // Run built-in renderers\n      switch (col.type) {\n        case 'markdown':\n          return value.html;\n        case 'hdate':\n        case 'number':\n        case 'text':\n        default:\n          return value;\n      }\n    }\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// Sorts then sets the table data\n  function m_ExecuteSorter(tdata) {\n    if (columndefs.length < 1) return [];\n\n    const customSorter = columndefs[sortColumnIdx].sorter;\n    const key = columndefs[sortColumnIdx].data;\n    let sortedData = [];\n    if (customSorter) {\n      if (typeof customSorter !== 'function') throw new Error('Invalid sorter');\n      sortedData = customSorter(key, tdata, sortOrder);\n    } else {\n      // Run built-in sorters\n      switch (columndefs[sortColumnIdx].type) {\n        case 'hdate':\n          sortedData = m_SortByHDate(key, tdata, sortOrder);\n          break;\n        case 'markdown':\n          sortedData = m_SortByMarkdown(key, tdata, sortOrder);\n          break;\n        case 'date':\n        case 'number':\n          sortedData = m_SortByNumber(key, tdata, sortOrder);\n          break;\n        case 'text':\n        default:\n          sortedData = m_SortByText(key, tdata, sortOrder);\n      }\n    }\n    setTableData(sortedData);\n  }\n  /// RENDER //////////////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  return (\n    <div\n      className=\"URTable\"\n      ref={tableRef}\n      onMouseMove={ui_MouseMove}\n      onMouseUp={ui_MouseUp}\n    >\n      <table>\n        <thead>\n          <tr>\n            {columndefs.map((col, idx) => (\n              <th\n                key={idx}\n                className={sortColumnIdx === idx ? 'selected' : ''}\n                width={`${columnWidths[idx]}`}\n              >\n                <div onClick={e => ui_ClickSorter(e, idx)}>{col.title}</div>\n                <div\n                  className=\"resize-handle\"\n                  onMouseDown={e => ui_MouseDown(e, idx)}\n                  hidden={idx === columndefs.length - 1} // hide last resize handle\n                ></div>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {tabledata.map((tdata, idx) => (\n            <tr key={idx} style={{ opacity: tdata.meta.filteredTransparency }}>\n              {columndefs.map((col, idx) => (\n                <td key={idx}>{m_ExecuteRenderer(tdata[col.data], col, idx)}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nexport default URTable;\n","/* eslint-disable react/no-unescaped-entities */\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## OVERVIEW\n\n    Vocabulary displays a list of common terms\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { Button, Table } = ReactStrap;\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar DBG = false;\n\n/// REACT COMPONENT ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// export a class object for consumption by brunch/require\nclass Vocabulary extends UNISYS.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isExpanded: true };\n  } // constructor\n\n  render() {\n    let { tableHeight } = this.props;\n\n    return (\n      <div\n        style={{\n          backgroundColor: 'rgba(240,240,240,0.95)',\n          padding: '10px 20px'\n        }}\n      >\n        <dl>\n          <dt>Network</dt>\n          <dd>This is a collection of nodes and the edges between them. </dd>\n\n          <dt>Graph</dt>\n          <dd>\n            a graphic representation of a network and its components.{' '}\n            <em>\n              <strong>Similar terms include:</strong> sociogram, visualization\n            </em>\n          </dd>\n\n          <dt>Node</dt>\n          <dd>\n            The thing or <em>entity</em> (shown as circles) that is connected through\n            relationships. This could be individual people, groups of people,\n            institutions (like churches, organizations, schools). One way of thinking\n            about this is that nodes are nouns and edges are verbs - nodes are things\n            that are connected through edges.{' '}\n            <em>\n              <strong>Similar terms include:</strong> actor, vertex\n            </em>\n          </dd>\n          <ul>\n            <dl>\n              <dt>Ego</dt>\n              <dd>\n                This refers to the node you are focused on at the moment and the\n                connections that they have.{' '}\n              </dd>\n            </dl>\n          </ul>\n\n          <dt>Edge</dt>\n          <dd>\n            The relationships between nodes you are considering (shown as lines).\n            Relationships can take on many forms: nodes could be connected through\n            somewhat intangible relationships, such as friendship or not liking one\n            another. Edges can be based on interactions, such as talking to one\n            another or being in conflict. They could also be defined by sharing\n            resources, such as money or information.{' '}\n            <em>\n              <strong>Similar terms include:</strong> line, tie, arc\n            </em>\n          </dd>\n\n          <ul>\n            <dl>\n              <dt>Edge weight</dt>\n              <dd>\n                Edges can have a value attached to them. So, for instance, an node\n                could sent $10,000 to another actor. Or, they could share three\n                interactions of the same type with one another. This value is referred\n                to as a weight.{' '}\n                <em>\n                  <strong>Similar terms include:</strong> value\n                </em>\n              </dd>\n\n              <dt>Directed or undirected edges</dt>\n              <dd>\n                Edges can either be directed or undirected. If a relationship is\n                directed, it is being sent from (originating from) one node to another\n                node. Node A may say they are friends with Node B, but Node B does not\n                say Node A does this. Or Node A gives Node B something, such as\n                resources, information, or an illness. However, in some cases, edges\n                are defined as undirected. Two people who share a meal together or are\n                married are both engaged share an undirected edge.{' '}\n                <em>\n                  Note: in some academic literatures, the term \"edge\" is reserved for\n                  an undirected relationship, while the term \"arc\" is used to refer to\n                  directed ties.\n                </em>\n              </dd>\n            </dl>\n          </ul>\n\n          <dt>Attributes</dt>\n          <dd>\n            Characteristics of the nodes or edges. A node could be designated by\n            gender, for instance or the amount of wealth they possess. They could also\n            be characteristics you find from the network itself - such as how many\n            ties an node has (degree centrality).{' '}\n          </dd>\n\n          <dt>Centrality</dt>\n          <dd>\n            This is a way of ranking the importance of individuals within a network.\n            There are many different ways to measure importance, such as degree\n            centrality, betweenness centrality, and eigenvector centrality.{' '}\n          </dd>\n          <ul>\n            {' '}\n            <dl>\n              <dt>Degree Centrality</dt>\n              <dd>\n                Degree centrality is a measure of how many connections a node has. An\n                node with many ties that are being sent to them has a high in-degree\n                centrality. In a friendship network, this can be easily recognized as\n                popularity. Nodes sending many outgoing ties (high out-degree\n                centrality) may be thought of as expansive in their relationship.\n              </dd>\n\n              <dt>Betweenness Centrality</dt>\n              <dd>\n                Nodes with high betweenness centrality serve as connectors between\n                other individuals who wouldn't otherwise be directly connected. They\n                may not be connected to a large number of people (that would be high\n                degree centrality), but they are unique in their connections. If an\n                actor with high betweenness centrality was removed from a network, the\n                network would be more fragmented and less connected. Often researchers\n                are interested in finding actors with high betweenness centrality\n                because they can control whatever flows in the networks. For instance,\n                military analysts often look for nodes with high betweenness in a\n                terrorist network.\n              </dd>\n\n              <dt>Eigenvector Centrality</dt>\n              <dd>\n                Eigenvector centrality ranks actors based on their connection to other\n                highly central nodes. So, a nodes importance as measured by\n                eigenvector centrality are dependent on the other nodes with whom they\n                share connections. Google's PageRank algorithm was a famous\n                application of a version of this type of centrality, and allowed them\n                to return highly relevant results in search for users.\n              </dd>\n            </dl>\n          </ul>\n\n          <dt>Communities</dt>\n          <dd>\n            A community in a network is a way of thinking about grouping, often by\n            finding densely connected sets of nodes. A community within a network that\n            is tightly connected to one another but not to an outside group might be\n            seen as a faction, such as rival political groups. In this case, nodes\n            with high betweenness centrality in a network with multiple factions might\n            be some of the only points of contact between rival groups - a potentially\n            powerful but also difficult position to be in.\n          </dd>\n        </dl>\n      </div>\n    );\n  }\n} // class Vocabulary\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = Vocabulary;\n","/* eslint-disable prefer-reflect */\n/* d3.call() is false-triggering the above rule */\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  DEPRECATED -- NCGraphRenderer replaces d3-simplenetgraph\n\n\n\n\n  D3 Simple NetGraph\n\n  This uses D3 Version 4.0.\n\n  This is designed to work with the NetGraph React component.\n\n  NetGraph calls SetData whenever it receives an updated data object.\n  This triggers D3NetGraph to redraw itself.\n\n  This simplified version derived from D3NetGraph.js was created to address\n  a problem with links not updating properly.\n\n  The first implementation of this removed the fancy force property settings\n  that were needed to handle the realtime UI widgets in 'D3 Force Demo' app.\n  Eventually these were brough back in once the link merging was debugged.\n  However, this hasn't been reconciled with the `D3 Force Demo` widgets.\n  It *might* work, but it *might* not.\n\n  Zooming/panning is handled via D3's zoom() function.  Basically it\n  involves creating a `g` element that wraps the node and link elements\n  and applying transforms on that wrapper.\n\n  This is based on:\n  *  rdpoor's commented version of mbostock's original code\n      https://gist.github.com/rdpoor/3a66b3e082ffeaeb5e6e79961192f7d8\n  *  danilo's v4 update\n      https://bl.ocks.org/tezzutezzu/cd04b3f1efee4186ff42aae66c87d1a7\n  *  mbostock's general update pattern\n      https://bl.ocks.org/mbostock/3808218\n  *  Coderwall's zoom and pan method\n      https://coderwall.com/p/psogia/simplest-way-to-add-zoom-pan-on-d3-js\n  *  Vladyslav Babenko's zoom buttons example\n      https://jsfiddle.net/vbabenko/jcsqqu6j/9/\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst d3 = require('d3');\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'd3-simplenetgraph';\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UDATA = null;\n\n/// PRIVATE VARS //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet m_width = 800;\nlet m_height = 800;\nlet mouseoverNodeId = -1; // id of the node the mouse is currently over\n//\nconst M_FORCEPROPERTIES = {\n  // values for all forces\n  center: {\n    x: 0.5,\n    y: 0.5\n  },\n  charge: {\n    // 'charge' provides a repelling force against other nodes\n    enabled: true,\n    // -50 works well for small networks with no links\n    strength: -200, // during _UpdateForces, 'strength' is multipled by the size of the node (degrees+1)\n    // -50 close < -1000 pushes nodes far apart\n    distanceMin: 1, // use 'collide' to keep nodes from intersecting, not distance\n    distanceMax: 750 // max keeps large clusters from pushing unattached nodes too far away\n    // 250 close < 500 med < 1000 spacious < 10000 far away\n  },\n  collide: {\n    // 'collide' keeps nodes from overlapping each other\n    // collide's `radius` value maintains a minimum distance between nodes\n    enabled: true,\n    strength: 0.75, // 1 keeps nodes from intersecting during drag so nodes feel more solid\n    // 0.75 softens the collisions so they don't feel so jarring\n    // 0.3 will allow nodes to intersect, then iterations will push them out\n    iterations: 5, // need at least 3 iterations to stabilize\n    // at 1 graph takes a long time to reach equilibrium\n    radius: 7 // `radius` is added to node.degrees + defaultSize during _UpdateForces with the node radius\n  },\n  forceX: {\n    // 'forceX' pushes nodes towards a normalized x position\n    // x is calculated relative to the m_width\n    // e.g. x=0.5 is the center\n    // higher strength will push harder towards the x point\n    // e.g. to create a narrow tall graph, use strength: 2\n    enabled: true,\n    strength: 0.25, // 1 clumped < 0.3 med  < 0.2 loose < 0.1 very loose\n    x: 0.5\n  },\n  forceY: {\n    // 'forceY' pushes nodes towards a normalized y position\n    // y is calculated relative to the m_height\n    // e.g. y=0.5 is the center\n    // higher strength will push harder towards the y point\n    // e.g. to create a wide short graph, use strength: 2\n    enabled: true,\n    strength: 0.25, // 1 clumped < 0.3 med  < 0.2 loose < 0.1 very loose\n    y: 0.5\n  },\n  link: {\n    enabled: true,\n    distance: 50, // sets the basic link distance between nodes\n    // 10 is a little too close\n    // 25 is cozy\n    // 50 is spacious\n    // 100 leaves everything too far apart\n    iterations: 5 // Orig val = 1.  More iterations will give graph time to settle\n  }\n}; // M_FORCEPROPERTIES\n\n/// D3NetGraph CLASS //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass D3NetGraph {\n  constructor(rootElement, nodeDefs) {\n    this.rootElement = rootElement;\n    this.d3svg = {};\n    this.zoom = {};\n    this.zoomWrapper = {};\n    this.simulation = {};\n    this.data = { nodes: [], edges: [] };\n\n    this.clickFn = {};\n\n    this.nodeSizeDefault = 5; // overriden by template\n    this.nodeSizeMax = 50; // overriden by template\n    this.edgeSizeDefault = 0.175; // overriden by template\n    this.edgeSizeMax = 50; // overriden by template\n\n    // To handled tooltips\n    this.nodeDefs = nodeDefs;\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n\n    /// D3 CODE ///////////////////////////////////////////////////////////////////\n    /// note: this is all inside the class constructor function!\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n    this._SetDefaultValues();\n\n    // Set up Zoom\n    this.zoom = d3.zoom().on('zoom', this._HandleZoom);\n\n    /** Create svg element which will contain our D3 DOM elements.\n      Add default click handler so when clicking empty space, deselect all.\n      NOTE: the svg element is actualy d3.selection object, not an svg obj.\n   */\n    this.d3svg = d3\n      .select(rootElement)\n      .append('svg')\n      .attr('id', 'netgraph')\n      .attr('width', '100%') // maximize width and height\n      .attr('height', '100%') // then set center dynamically below\n      .on('click', (e, event) => {\n        // Deselect\n        UDATA.LocalCall('SOURCE_SELECT', { nodeLabels: [] });\n      })\n      .on('mouseover', d => {\n        // Deselect edges\n        mouseoverNodeId = -1;\n        d3.selectAll('.edge')\n          .transition()\n          .duration(1500)\n          .style('stroke-width', this._UpdateLinkStrokeWidth);\n        d3.event.stopPropagation();\n      })\n      .call(this.zoom);\n\n    this.zoomWrapper = this.d3svg.append('g').attr('class', 'zoomer');\n\n    // Set SVG size and centering.\n    let svg = document.getElementById('netgraph');\n    m_width = svg.clientWidth;\n    m_height = svg.clientHeight;\n\n    this.simulation = d3.forceSimulation();\n\n    /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    /// END D3 CODE ///////////////////////////////////////////////////////////////\n\n    // bind 'this' to function objects so event handlers can access\n    // contents of this class+module instance\n    this._HandleD3DataUpdate = this._HandleD3DataUpdate.bind(this);\n    this._HandleTemplateUpdate = this._HandleTemplateUpdate.bind(this);\n    this._ClearSVG = this._ClearSVG.bind(this);\n    this._SetDefaultValues = this._SetDefaultValues.bind(this);\n    this._SetData = this._SetData.bind(this);\n    this._Initialize = this._Initialize.bind(this);\n    this._UpdateGraph = this._UpdateGraph.bind(this);\n    this.tooltipForNode = this.tooltipForNode.bind(this);\n    this.displayUpdated = this.displayUpdated.bind(this);\n    this._UpdateForces = this._UpdateForces.bind(this);\n    this._Tick = this._Tick.bind(this);\n    this._UpdateLinkStrokeWidth = this._UpdateLinkStrokeWidth.bind(this);\n    this._UpdateLinkStrokeColor = this._UpdateLinkStrokeColor.bind(this);\n    this._ColorMap = this._ColorMap.bind(this);\n    this._ZoomReset = this._ZoomReset.bind(this);\n    this._ZoomIn = this._ZoomIn.bind(this);\n    this._ZoomOut = this._ZoomOut.bind(this);\n    this._ZoomPanReset = this._ZoomPanReset.bind(this);\n    this._HandleZoom = this._HandleZoom.bind(this);\n    this._Transition = this._Transition.bind(this);\n    this._Dragstarted = this._Dragstarted.bind(this);\n    this._Dragged = this._Dragged.bind(this);\n    this._Dragended = this._Dragended.bind(this);\n\n    // V1.4 CHANGE\n    // Ignore D3DATA Updates!!!  Only listen to FILTEREDD3DATA Updates\n    //\n    // watch for updates to the D3DATA data object\n    // UDATA.OnAppStateChange('D3DATA',(data)=>{\n    //   // expect { nodes, edges } for this namespace\n    //   if (DBG) console.error(PR,'got state D3DATA',data);\n    //   this._SetData(data);\n    // });\n\n    // V2.0 CHANGE\n    // Ignore FILTEREDD3DATA updates!  Only listen for SYNTHESIZEDD3DATA\n    // which represents simplified edge data (duplicate edges removed) for rendering\n    // UDATA.OnAppStateChange('FILTEREDD3DATA', this._HandleFilteredD3DataUpdate);\n\n    UDATA.OnAppStateChange('SYNTHESIZEDD3DATA', this._HandleD3DataUpdate);\n    UDATA.OnAppStateChange('TEMPLATE', this._HandleTemplateUpdate);\n    UDATA.OnAppStateChange('COLORMAP', this._ColorMap);\n    UDATA.HandleMessage('ZOOM_RESET', this._ZoomReset);\n    UDATA.HandleMessage('ZOOM_IN', this._ZoomIn);\n    UDATA.HandleMessage('ZOOM_OUT', this._ZoomOut);\n    UDATA.HandleMessage('ZOOM_PAN_RESET', this._ZoomPanReset);\n    // UDATA.HandleMessage('GROUP_PROPS', (data) => {\n    //   console.log('GROUP_PROPS got ... ');\n    // });\n  }\n\n  /// CLASS PUBLIC METHODS //////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  Deregister() {\n    if (DBG) console.log(PR, 'd3-simplenetgraph.DESTRUCT!!!');\n    UDATA.AppStateChangeOff('SYNTHESIZEDD3DATA', this._HandleD3DataUpdate);\n    UDATA.AppStateChangeOff('COLORMAP', this._ColorMap);\n    UDATA.UnhandleMessage('ZOOM_RESET', this._ZoomReset);\n    UDATA.UnhandleMessage('ZOOM_IN', this._ZoomIn);\n    UDATA.UnhandleMessage('ZOOM_OUT', this._ZoomOut);\n    UDATA.UnhandleMessage('ZOOM_PAN_RESET', this._ZoomPanReset);\n  }\n\n  /// CLASS PRIVATE METHODS /////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   *\n   * @param {object} data\n   * @param {array} data.nodes\n   * @param {array} data.edges\n   */\n  _HandleD3DataUpdate(data) {\n    if (DBG) console.log(PR, 'got state D3DATA', data);\n    this._SetData(data);\n  }\n\n  /** Update default values when template has changed\n   */\n  _HandleTemplateUpdate(data) {\n    if (DBG) console.log(PR, 'got state TEMPLATE', data);\n    this._SetDefaultValues();\n  }\n\n  /** Clear the SVG data\n    Currently not used because we just deconstruct d3-simplenetgraph insead.\n    Was thought to be needed during imports otherwise _UpdateGraph reads data from existing\n    SVG elements rather than the new data.\n */\n  _ClearSVG() {\n    this.zoomWrapper.selectAll('.edge').remove();\n    this.zoomWrapper.selectAll('.node').remove();\n  }\n\n  /** Set default node and edge size values from TEMPLATE\n   */\n  _SetDefaultValues() {\n    const TEMPLATE = UDATA.AppState('TEMPLATE');\n    this.nodeSizeDefault = TEMPLATE.nodeSizeDefault;\n    this.nodeSizeMax = TEMPLATE.nodeSizeMax;\n    this.edgeSizeDefault = TEMPLATE.edgeSizeDefault;\n    this.edgeSizeMax = TEMPLATE.edgeSizeMax;\n  }\n\n  /** The parent container passes data to the d3 graph via this SetData call\n    which then triggers all the internal updates\n */\n  _SetData(newData) {\n    if (newData) {\n      // Make a shallow copy to protect against mutation, while\n      // recycling old nodes to preserve position and velocity.\n      // From https://observablehq.com/@d3/modifying-a-force-directed-graph?collection=@d3/d3-force\n      // grab the SVG nodes\n      const svgNodes = this.zoomWrapper.selectAll('.node');\n      const oldNodes = new Map(svgNodes.data().map(d => [d.id, d]));\n\n      this.data.nodes = newData.nodes.map(d =>\n        Object.assign(oldNodes.get(d.id) || {}, d)\n      );\n      this.data.edges = newData.edges.map(d => Object.assign({}, d));\n\n      this._Initialize();\n      this._UpdateForces();\n      this._UpdateGraph();\n\n      // updates ignored until this is run restarts the simulation\n      // (important if simulation has already slowed down)\n      this.simulation.alpha(0.3).restart(); // was 1 - JD\n    }\n  }\n\n  /** This sets up the force properties for the simulation and tick handler.\n   */ _Initialize() {\n    // Create the force layout.  After a call to force.start(), the tick\n    // method will be called repeatedly until the layout \"gels\" in a stable\n    // configuration.\n    this.simulation\n      .force('link', d3.forceLink())\n      .force('charge', d3.forceManyBody())\n      .force('collide', d3.forceCollide())\n      .force('center', d3.forceCenter())\n      .force('forceX', d3.forceX())\n      .force('forceY', d3.forceY())\n\n      .on('tick', this._Tick);\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Call _UpdateGraph() after new data has been loaded. This creates link and node\n    svg objects and sets their forceProperties.\n    The component `node` structure:\n        <g class=\"node\">  // node group object\n           <circle>\n           <text>         // label\n           <title>        // tooltip\n        </g>\n\n    This method implements the unified enter/exit/update pattern described\n    here: http://d3indepth.com/enterexit/#general-update-pattern\n\n    By convention, selection methods that return the current selection use\n    four spaces of indent, while methods that return a new selection use only two.\n    This helps reveal changes of context by making them stick out of the chain.\n\n    This method actually does more than just \"update\" an existing graph; in D3\n    you can write code that initializes AND updates data.\n\n */ _UpdateGraph() {\n    const COLORMAP = UDATA.AppState('COLORMAP');\n\n    // DATA JOIN\n    // select all elemnts with class .node in d3svg\n    // bind selected elements with elements in this.data.nodes,\n    // assigning each one an id using the key function.\n\n    // nodeElements is a d3.selection object\n    let nodeElements = this.zoomWrapper\n      .selectAll('.node')\n      .data(this.data.nodes, d => {\n        return d.id;\n      }); // fn returns the calculated key for the data object\n\n    // linkElements is a d3.selection object\n    let linkElements = this.zoomWrapper\n      .selectAll('.edge')\n      .data(this.data.edges, d => {\n        return d.id;\n      }); // fn returns the calculated key for the data object\n\n    // TELL D3 HOW TO HANDLE NEW NODE DATA\n    // the d3.selection.enter() method sets the operational scope for\n    // subsequent calls\n    let elementG = nodeElements.enter().append('g').classed('node', true);\n\n    // enter node: append 'g' (group) element and click behavior\n    elementG\n      .call(\n        d3\n          .drag()\n          .on('start', d => {\n            this._Dragstarted(d, this);\n          })\n          .on('drag', this._Dragged)\n          .on('end', d => {\n            this._Dragended(d, this);\n          })\n      )\n      .on('click', d => {\n        if (DBG) console.log('clicked on', d.label, d.id);\n        UDATA.LocalCall('SOURCE_SELECT', { nodeIDs: [d.id] });\n        d3.event.stopPropagation();\n      })\n      .on('mouseover', d => {\n        mouseoverNodeId = d.id;\n        d3.selectAll('.edge')\n          .transition()\n          .duration(500)\n          .style('stroke-width', this._UpdateLinkStrokeWidth);\n        d3.event.stopPropagation();\n      });\n\n    // enter node: also append 'circle' element of a calculated size\n    elementG\n      .append('circle')\n      // \"r\" has to be set here or circles don't draw.\n      .attr('r', d => {\n        return Math.min(this.nodeSizeDefault + d.degrees, this.nodeSizeMax);\n      })\n      //        .attr(\"r\", (d) => { return this.defaultSize }) // d.size ?  d.size/10 : this.defaultSize; })\n      .attr('fill', d => {\n        // REVIEW: Using label match.  Should we use id instead?\n        // The advantage of using the label is backward compatibility with\n        // Google Fusion table data as well as exportability.\n        // If we save the type as an id, the data format will be\n        // less human-readable.\n        // The problem with this approach though is that any changes\n        // to the label text will result in a failed color lookup!\n        return COLORMAP.nodeColorMap[d.type];\n      })\n      .style('opacity', d => {\n        return d.filteredTransparency;\n      });\n\n    // enter node: also append 'text' element\n    elementG\n      .append('text')\n      .classed('noselect', true)\n      .attr('font-size', 10)\n      .attr('dx', d => {\n        return this.nodeSizeDefault + 5;\n      }) // 8)\n      .attr('dy', '0.35em') // \".15em\")\n      .text(d => {\n        return d.label;\n      })\n      .style('opacity', d => {\n        return d.filteredTransparency;\n      });\n\n    // enter node: also append a 'title' tag\n    // we should move this to our tooltip functions, but it works for now\n    elementG\n      .append('title') // node tooltip\n      .text(d => {\n        return this.tooltipForNode(d);\n      });\n\n    /*/ TRICKY D3 CODE CONCEPTS AHEAD\n\n          CONTEXT: The author of this code has assumed that NCDATA may\n          completely changed, so his update code is written with this in mind.\n\n          At this point in the code, nodeElements is operating on the enter()\n          selection set (remember: nodeElements is a REFERENCE to the\n          original d3 selection object, which is being transmutted by every\n          operation).\n\n          Given the above, .merge() will combine the current active d3\n          selection (enter()) with all the nodes (nodeEntry in its entirety).\n\n          It may seem weird because:\n\n          (1) the d3.selection() context isn't always obvious unless you\n              know that d3.selections and key ops like .enter(), .update(),\n              and .exit() affect certain other ops.\n          (2) this code reads like it's executing immediately on nodeElements,\n              but it actually is a PROGRAM being defined for a d3.selection\n              event that runs later. The value of the parameter nodeElements\n              will have a different value in the future than it does at the\n              time of definition here.\n\n          In effect, the merge() operation is used to use the same\n          initialization code for both enter() and manual refresh.\n\n          ASIDE: There is an d3.selection.update() operation, but that  is\n          called when d3 detects that data node bound to an existing DOM\n          element has changed. This code doesn't use update(), and instead\n          relies on manual event detection to force a full data refresh and\n          update. D3 doesn't die because it is aware of the persistent SVG\n          elements  it created, and checks data binding through the id. This\n          is fast, and the SVG elements do not have to be recreated.\n\n      /*/\n\n    // UPDATE circles in each node for all nodes\n    nodeElements\n      .merge(nodeElements)\n      .selectAll('circle')\n      .attr('stroke', d => {\n        if (d.selected) return d.selected;\n        if (d.strokeColor) return d.strokeColor;\n        return undefined; // don't set stroke color\n      })\n      .attr('stroke-width', d => {\n        if (d.selected || d.strokeColor) return '5px';\n        return undefined; // don't set stroke width\n      })\n      .attr('fill', d => {\n        return COLORMAP.nodeColorMap[d.type];\n      })\n      .attr('r', d => {\n        // this \"r\" is necessary to resize after a link is added\n        return Math.min(this.nodeSizeDefault + d.degrees, this.nodeSizeMax);\n      })\n      .transition()\n      .duration(500)\n      .style('opacity', d => {\n        // console.log(d);\n        return d.filteredTransparency;\n      });\n\n    // UPDATE text in each node for all nodes\n    // (technically this could have proceeded from the previous operation,\n    // but this makes it a little easier to findthe text-specific code as\n    // a block\n    nodeElements\n      .merge(nodeElements)\n      .selectAll('text')\n      .attr('color', d => {\n        if (d.selected) return d.selected;\n        return undefined; // don't set color\n      })\n      .attr('font-weight', d => {\n        if (d.selected) return 'bold';\n        return undefined; // don't set font weight\n      })\n      .text(d => {\n        return d.label;\n      }) // in case text is updated\n      .transition()\n      .duration(500)\n      .style('opacity', d => {\n        return d.filteredTransparency;\n      });\n\n    nodeElements\n      .merge(nodeElements)\n      .selectAll('title') // node tooltip\n      .text(d => {\n        return this.tooltipForNode(d);\n      });\n    // TELL D3 what to do when a data node goes away\n    nodeElements.exit().remove();\n\n    // NOW TELL D3 HOW TO HANDLE NEW EDGE DATA\n    // .insert will add an svg `line` before the objects classed `.node`\n    // .enter() sets the initial state of links as they are created\n    linkElements\n      .enter()\n      .insert('line', '.node')\n      .classed('edge', true)\n      .style('stroke', this._UpdateLinkStrokeColor)\n      // .style('stroke', 'rgba(0,0,0,0.1)')  // don't use alpha unless we're prepared to handle layering -- reveals unmatching links\n      .style('stroke-width', this._UpdateLinkStrokeWidth)\n      // old stroke setting\n      // .style('stroke-width', (d) => { return d.size**2 } )    // Use **2 to make size differences more noticeable\n      // Edge selection disabled.\n      // .on(\"click\",   (d) => {\n      //   if (DBG) console.log('clicked on',d.label,d.id)\n      //   this.edgeClickFn( d )\n      // })\n      .style('opacity', d => {\n        return d.filteredTransparency;\n      });\n\n    // .merge() updates the visuals whenever the data is updated.\n    linkElements\n      .merge(linkElements)\n      .classed('selected', d => {\n        return d.selected;\n      })\n      .style('stroke', this._UpdateLinkStrokeColor)\n      .style('stroke-width', this._UpdateLinkStrokeWidth)\n      .transition()\n      .duration(500)\n      .style('opacity', d => {\n        return d.filteredTransparency;\n      });\n\n    linkElements.exit().remove();\n\n    // UPDATE ANIMATED SIMULATION\n    // this is a plugin\n    this.simulation.nodes(this.data.nodes);\n    if (this.data.edges) {\n      this.simulation.force('link').links(this.data.edges);\n    }\n  }\n\n  // added by Joshua to generate the text, based on the template, for the tooltip on the node\n  tooltipForNode(d) {\n    let titleText = '';\n    if (this.nodeDefs.label.includeInGraphTooltip !== undefined) {\n      // Add Label\n      if (this.nodeDefs.label.includeInGraphTooltip)\n        titleText += this.nodeDefs.label.displayLabel + ': ' + d.label + '\\n';\n      // Add type\n      if (this.nodeDefs.type.includeInGraphTooltip)\n        titleText += this.nodeDefs.type.displayLabel + ': ' + d.type + '\\n';\n      // Add degrees\n      if (this.nodeDefs.degrees.includeInGraphTooltip)\n        titleText += this.nodeDefs.degrees.displayLabel + ': ' + d.degrees + '\\n';\n      // Add notes\n      if (this.nodeDefs.notes.includeInGraphTooltip)\n        titleText += this.nodeDefs.notes.displayLabel + ': ' + d.notes + '\\n';\n      // Add info\n      if (this.nodeDefs.info.includeInGraphTooltip)\n        titleText += this.nodeDefs.info.displayLabel + ': ' + d.info + '\\n';\n      // Add updated info\n      if (this.nodeDefs.updated.includeInGraphTooltip)\n        titleText +=\n          this.nodeDefs.updated.displayLabel + ': ' + this.displayUpdated(d);\n    } else {\n      // For backwards compatability\n      titleText += this.nodeDefs.displayLabel.label + ': ' + d.label + '\\n';\n    }\n    return titleText;\n  }\n\n  displayUpdated(nodeEdge) {\n    const d = new Date(\n      nodeEdge.meta.revision > 0 ? nodeEdge.meta.updated : nodeEdge.meta.created\n    );\n    const year = String(d.getFullYear());\n    const date = d.getMonth() + 1 + '/' + d.getDate() + '/' + year.substr(2, 4);\n    const time = d.toTimeString().substr(0, 5);\n    const author = nodeEdge._nlog\n      ? nodeEdge._nlog[nodeEdge._nlog.length - 1]\n      : 'unknown';\n    const dateTime = date + ' at ' + time + ' by ' + author;\n    return dateTime;\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Apply new force properties\n    Call this on construct and if forceProperties have changed.\n */ _UpdateForces() {\n    this.simulation\n      .force(\n        'link',\n        d3\n          .forceLink()\n          .id(d => d.id) // note `d` is an edge, not a node\n          // all edges use the same link distance, charge is what pushes them apart\n          .distance(M_FORCEPROPERTIES.link.distance)\n          .iterations(M_FORCEPROPERTIES.link.iterations)\n      )\n      .force(\n        'charge',\n        d3\n          .forceManyBody()\n          // the larger the node, the harder it pushes\n          .strength(\n            d =>\n              (this.nodeSizeDefault + d.degrees) *\n              M_FORCEPROPERTIES.charge.strength *\n              M_FORCEPROPERTIES.charge.enabled\n          )\n          .distanceMin(M_FORCEPROPERTIES.charge.distanceMin)\n          .distanceMax(M_FORCEPROPERTIES.charge.distanceMax)\n      )\n      .force(\n        'collide',\n        d3\n          .forceCollide()\n          .strength(\n            M_FORCEPROPERTIES.collide.strength * M_FORCEPROPERTIES.collide.enabled\n          )\n          // node radius (defaultSize+degrees) + preset radius keeps nodes separated\n          // from each other like bouncing balls\n          .radius(\n            d => this.nodeSizeDefault + d.degrees + M_FORCEPROPERTIES.collide.radius\n          )\n          .iterations(M_FORCEPROPERTIES.collide.iterations)\n      )\n      .force(\n        'center',\n        d3\n          .forceCenter()\n          .x(m_width * M_FORCEPROPERTIES.center.x)\n          .y(m_height * M_FORCEPROPERTIES.center.y)\n      )\n      .force(\n        'forceX',\n        d3\n          .forceX()\n          .strength(\n            M_FORCEPROPERTIES.forceX.strength * M_FORCEPROPERTIES.forceX.enabled\n          )\n          .x(m_width * M_FORCEPROPERTIES.forceX.x)\n      )\n      .force(\n        'forceY',\n        d3\n          .forceY()\n          .strength(\n            M_FORCEPROPERTIES.forceY.strength * M_FORCEPROPERTIES.forceY.enabled\n          )\n          .y(m_height * M_FORCEPROPERTIES.forceY.y)\n      );\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Update the display positions after each simulation tick\n\n    This tick method is called repeatedly until the layout stabilizes.\n\n    NOTE: the order in which we update nodes and links does NOT determine which\n    gets drawn first -- the drawing order is determined by the ordering in the\n    DOM.  See the notes under link_update.enter() above for one technique for\n    setting the ordering in the DOM.\n */\n  _Tick() {\n    // Drawing the nodes: Update the location of each node group element\n    // from the x, y fields of the corresponding node object.\n    this.zoomWrapper.selectAll('.node').attr('transform', d => {\n      return 'translate(' + d.x + ',' + d.y + ')';\n    });\n\n    // Drawing the links: Update the start and end points of each line element\n    // from the x, y fields of the corresponding source and target node objects.\n    this.zoomWrapper\n      .selectAll('.edge')\n      .attr('x1', d => {\n        return d.source.x;\n      })\n      .attr('y1', d => {\n        return d.source.y;\n      })\n      .attr('x2', d => {\n        return d.target.x;\n      })\n      .attr('y2', d => {\n        return d.target.y;\n      });\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Sets the width of the links during update cycles\n    Used by linElements.enter() and linkElements.merge()\n    and mouseover events.\n */\n  _UpdateLinkStrokeWidth(edge) {\n    if (DBG) console.log(PR, '_UpdateLinkStrokeWidth', edge);\n    const sourceId = typeof edge.source === 'number' ? edge.source : edge.source.id;\n    const targetId = typeof edge.target === 'number' ? edge.target : edge.target.id;\n    if (\n      edge.selected ||\n      mouseoverNodeId === -1 ||\n      sourceId === mouseoverNodeId ||\n      targetId === mouseoverNodeId\n    ) {\n      // max size checking is in edge-logic\n      return edge.size;\n      // return edge.size ** 2;  // Use **2 to make size differences more noticeable\n      // return Math.min(edge.size ** 2, this.edgeSizeMax);  // Use **2 to make size differences more noticeable\n    } else {\n      return this.edgeSizeDefault; // Barely visible if not selected\n    }\n  }\n\n  /// Edge color is pre-set by edge-logic based on weights\n  _UpdateLinkStrokeColor(edge) {\n    return edge.color;\n  }\n\n  /// UI EVENT HANDLERS /////////////////////////////////////////////////////////\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  // The template may be loaded or changed after NCDATA is loaded.\n  // So we need to explicitly update the colors if the color\n  // definitions have changed.\n  _ColorMap(data) {\n    if (DBG) console.log(PR, 'got state COLORMAP', data);\n    this._UpdateGraph();\n  }\n\n  _ZoomReset(data) {\n    if (DBG) console.log(PR, 'ZOOM_RESET got state NCDATA', data);\n    // NOTE: The transition/duration call means _HandleZoom will be called multiple times\n    this.d3svg.transition().duration(200).call(this.zoom.scaleTo, 1);\n  }\n\n  _ZoomIn(data) {\n    if (DBG) console.log(PR, 'ZOOM_IN got state NCDATA', data);\n    this._Transition(1.2);\n  }\n\n  _ZoomOut(data) {\n    if (DBG) console.log(PR, 'ZOOM_OUT got state NCDATA', data);\n    this._Transition(0.8);\n  }\n\n  // Pan to 0,0 and zoom scale to 1\n  // (Currently not used)\n  _ZoomPanReset(data) {\n    if (DBG) console.log(PR, 'ZOOM_PAN_RESET got state NCDATA', data);\n    const transform = d3.zoomIdentity.translate(0, 0).scale(1);\n    this.d3svg.call(this.zoom.transform, transform);\n  }\n\n  /** This primarily handles mousewheel zooms\n   */\n  _HandleZoom() {\n    if (DBG) console.log(PR, '_HandleZoom');\n    d3.select('.zoomer').attr('transform', d3.event.transform);\n  }\n  /** This handles zoom button zooms.\n   */\n  _Transition(zoomLevel) {\n    if (DBG) console.log(PR, '_Transition');\n    this.d3svg\n      .transition()\n      //.delay(100)\n      .duration(200)\n      .call(this.zoom.scaleBy, zoomLevel);\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */ _Dragstarted(d, self) {\n    if (DBG) console.log(PR, '_Dragstarted', d.x, d.y);\n    if (!d3.event.active) self.simulation.alphaTarget(0.3).restart();\n    d.fx = d.x;\n    d.fy = d.y;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */ _Dragged(d) {\n    if (DBG) console.log(PR, '_Dragged');\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n  }\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /**\n   */ _Dragended(d, self) {\n    if (DBG) console.log(PR, '_Dragended');\n    if (!d3.event.active) self.simulation.alphaTarget(0.0001);\n    d.fx = null;\n    d.fy = null;\n  }\n  // update window size-related forces\n  // d3.select(window).on(\"resize\", (){ =>\n  //     width = +svg.node().getBoundingClientRect().width;\n  //     height = +svg.node().getBoundingClientRect().height;\n  //     updateForces();\n  // });\n} // class D3NetGraph\n\n/// EXPORT MODULE /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = D3NetGraph;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Filter UDATA Messages\n\n  Affects ALL Filters\n  ===================\n\n    FILTERDEFS      AppState\n                    Sets the FILTERDEFS data object\n                    Triggers AppStateChange\n\n    FILTER_CLEAR    Message / LocalCall\n                    Unhides all objects on the graph\n                    Resets filter form to blank state\n\n    FILTER_SUMMARY_UPDATE\n                    Message / LocalCall\n                    Summary of filters for InfoPanel display\n                    is updated.\n\n\n  Affects Individual Filters\n  ==========================\n\n    FILTER_DEFINE   Define a single new filter\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst FILTER = {};\n// Filter Panel Label\nFILTER.PANEL_LABEL = 'VIEWS';\n// Determines whether filter action is to highlight/fade or remove (filter) nodes and edges\n// These labels are used as default values if an older version template has not defined them\nFILTER.ACTION = {};\nFILTER.ACTION.FADE = 'FADE';\nFILTER.ACTION.FILTER = 'FILTERING'; // FIX: Remove this after we decide to remove FILTER/HIDE\nFILTER.ACTION.REDUCE = 'REMOVE';\nFILTER.ACTION.FOCUS = 'FOCUS';\n// Types of filters definable in template files.\nFILTER.TYPES = {};\nFILTER.TYPES.STRING = 'string';\nFILTER.TYPES.NUMBER = 'number';\nFILTER.TYPES.SELECT = 'select';\nFILTER.TYPES.NODE = 'node'; // edge source / target\nFILTER.TYPES.DATE = 'date';\nFILTER.TYPES.HDATE = 'hdate'; // custom historical date\nFILTER.TYPES.MARKDOWN = 'markdown';\nFILTER.TYPES.HIDDEN = 'hidden';\n// Special Edge Keys mapped to node objects\n// Used by m_IsEdgeMatchedByFilter to find node labels\nFILTER.KEY = {};\nFILTER.KEY.SOURCE = 'source';\nFILTER.KEY.TARGET = 'target';\n// key needs to match the OPERATOR name for lookup purposes\n// in filter-mgr.js\nFILTER.OPERATORS = {};\nFILTER.OPERATORS.NO_OP = { key: 'NO_OP', label: '--' };\nFILTER.OPERATORS.CONTAINS = { key: 'CONTAINS', label: 'contains' };\nFILTER.OPERATORS.NOT_CONTAINS = { key: 'NOT_CONTAINS', label: 'does not contain' };\nFILTER.OPERATORS.IS_EMPTY = { key: 'IS_EMPTY', label: 'is empty' };\nFILTER.OPERATORS.IS_NOT_EMPTY = { key: 'IS_NOT_EMPTY', label: 'is not empty' };\nFILTER.OPERATORS.EQ = { key: 'EQ', label: '=' };\nFILTER.OPERATORS.NOT_EQ = { key: 'NOT_EQ', label: `\\u2260` };\nFILTER.OPERATORS.GT = { key: 'GT', label: '>' };\nFILTER.OPERATORS.GT_EQ = { key: 'GT_EQ', label: '>=' };\nFILTER.OPERATORS.LT = { key: 'LT', label: '<' };\nFILTER.OPERATORS.LT_EQ = { key: 'LT_EQ', label: '<=' };\n\n/// MODULE EXPORTS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = FILTER;\n","/*///////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  description\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * /////////////////////////////////////*/\n\nconst FILTER = require('./FilterEnums');\nconst FilterGroupProperties = require('./FilterGroupProperties');\nconst NumberFilter = require('./NumberFilter');\nconst React = require('react');\nconst SelectFilter = require('./SelectFilter');\nconst StringFilter = require('./StringFilter');\nconst HDateFilter = require('./HDateFilter');\nconst ReactStrap = require('reactstrap');\nconst { Input, Label } = ReactStrap;\n\n/// METHODS ///////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction FilterGroup({ group, label, filters, filterAction, transparency }) {\n  return (\n    <div\n      className=\"filter-group\"\n      style={{\n        margin: '5px 5px 5px 0',\n        padding: '10px',\n        backgroundColor: 'rgba(0,0,0,0)'\n      }}\n    >\n      <div\n        className=\"small text-muted\"\n        style={{\n          fontWeight: 'bold',\n          textTransform: 'uppercase',\n          marginBottom: '0.4em'\n        }}\n      >\n        {label}\n      </div>\n      {filters.map(filter => {\n        switch (filter.type) {\n          case FILTER.TYPES.MARKDOWN:\n          case FILTER.TYPES.NODE:\n          case FILTER.TYPES.DATE: // generic dates (not hdate) are treated like strings\n          case FILTER.TYPES.STRING:\n            return (\n              <StringFilter\n                key={filter.id}\n                group={group}\n                filter={filter}\n                filterAction={filterAction}\n              />\n            );\n          case FILTER.TYPES.NUMBER:\n            return (\n              <NumberFilter\n                key={filter.id}\n                group={group}\n                filter={filter}\n                filterAction={filterAction}\n              />\n            );\n          case FILTER.TYPES.SELECT:\n            return (\n              <SelectFilter\n                key={filter.id}\n                group={group}\n                filter={filter}\n                filterAction={filterAction}\n              />\n            );\n          case FILTER.TYPES.HDATE:\n            return (\n              <HDateFilter\n                key={filter.id}\n                group={group}\n                filter={filter}\n                filterAction={filterAction}\n              />\n            );\n          default:\n            console.error(\n              `FilterGroup: Filter Type not found ${filter.type} for filter`,\n              filter\n            );\n            break;\n        }\n        return '';\n      })}\n      <FilterGroupProperties group={group} transparency={transparency} />\n      <hr />\n    </div>\n  );\n}\n\n/// EXPORTS ///////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = FilterGroup;\n","/*///////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Filter Group Properties\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * /////////////////////////////////////*/\n\nconst FILTER = require('./FilterEnums');\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { Form, FormGroup, Input, Label } = ReactStrap;\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UDATA = null;\n\n/// CLASS DECLARATIONS ////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass FilterGroupProperties extends React.Component {\n  // Currently inconsistent because not passing in a key, etc.\n  // if we expand on this notion of group-leve globals we'll need to update\n  // the format / approach\n\n  constructor({ group, transparency }) {\n    super();\n    this.OnChangeValue = this.OnChangeValue.bind(this);\n    this.TriggerChangeHandler = this.TriggerChangeHandler.bind(this);\n    this.OnSubmit = this.OnSubmit.bind(this);\n\n    this.state = {\n      group: group,\n      transparency: transparency\n    };\n\n    UDATA = UNISYS.NewDataLink(this);\n  }\n\n  OnChangeValue(e) {\n    this.setState(\n      {\n        transparency: e.target.value\n      },\n      this.TriggerChangeHandler\n    );\n  }\n\n  // this is overkill to have these be separate, but mirroring the other filter components and aiming\n  // to have future additional properties here, so this way the flow won't change (change functions call trigger change)\n  TriggerChangeHandler() {\n    // for debugging\n    // console.log(\n    //   'Filter group for ' +\n    //     this.state.group +\n    //     ' setting transparency to ' +\n    //     this.state.transparency\n    // );\n\n    // set the transparency globally for this group (nodes or edges)\n    UDATA.LocalCall('FILTER_DEFINE', {\n      group: this.state.group,\n      type: 'transparency',\n      transparency: this.state.transparency\n    }); // set a SINGLE filter\n\n    // trigger a refresh of the filters if its not already done?\n    //UDATA.SetAppState(\"FILTERDEFS\", fdata);\n  }\n\n  OnSubmit(e) {\n    // Prevent \"ENTER\" from triggering form submission!\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  render() {\n    const { group, transparency } = this.props;\n    return (\n      <div>\n        <br />\n        <Form inline className=\"filter-item\" key={group} onSubmit={this.OnSubmit}>\n          <FormGroup>\n            <Label size=\"sm\" className=\"small text-muted\">\n              Transparency&nbsp;\n            </Label>\n            <Input\n              type=\"text\"\n              value={transparency}\n              style={{ maxWidth: '9em', height: '1.5em' }}\n              onChange={this.OnChangeValue}\n              bsSize=\"sm\"\n            />\n          </FormGroup>\n        </Form>\n      </div>\n    );\n  }\n}\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = FilterGroupProperties;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  FILTERSPANEL\n\n  This is the base UI component that displays filters in the InfoPanel.\n\n  FiltersPanel\n  |-- FiltersGroup\n      |-- StringFilter\n      |-- NumberFilter\n      |-- SelectFilter\n\n  FiltersPanel reads data directly from FILTERDEFS.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst FILTER = require('./FilterEnums');\nconst FilterGroup = require('./FilterGroup');\nconst FocusFilter = require('./FocusFilter');\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { Button, ButtonGroup, Input, Label, FormGroup } = ReactStrap;\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UDATA = null;\n\n/// CLASS DECLARATIONS ////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass FiltersPanel extends UNISYS.Component {\n  constructor({ filterGroups, onFiltersChange, tableHeight }) {\n    super();\n\n    this.UpdateFilterDefs = this.UpdateFilterDefs.bind(this);\n    this.UpdateFilteredNCData = this.UpdateFilteredNCData.bind(this);\n    this.LookupFilterHelp = this.LookupFilterHelp.bind(this);\n    this.OnClearBtnClick = this.OnClearBtnClick.bind(this);\n    this.SelectFilterAction = this.SelectFilterAction.bind(this);\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n\n    // Load Templates\n    // The intial `OnAppStateChange(\"FILTERDEFS\")` event when the template is\n    // first loaded is called well before FiltersPanel is\n    // even constructed.  So we need to explicitly load it here.\n    const FILTERDEFS = UDATA.AppState('FILTERDEFS');\n    this.state = {\n      nodes: FILTERDEFS.nodes,\n      edges: FILTERDEFS.edges,\n      filterAction: FILTER.ACTION.FADE,\n      focusSourceLabel: undefined,\n      focusRange: undefined,\n      statsSummary: ''\n    };\n    UDATA.OnAppStateChange('FILTERDEFS', this.UpdateFilterDefs);\n    UDATA.OnAppStateChange('FILTEREDNCDATA', this.UpdateFilteredNCData);\n  } // constructor\n\n  componentDidMount() {\n    // update filter stats on load\n    const FILTEREDNCDATA = UDATA.AppState('FILTEREDNCDATA');\n    this.UpdateFilteredNCData(FILTEREDNCDATA);\n  }\n\n  componentWillUnmount() {\n    UDATA.AppStateChangeOff('FILTERDEFS', this.UpdateFilterDefs);\n    UDATA.AppStateChangeOff('FILTEREDNCDATA', this.UpdateFilteredNCData);\n  }\n\n  UpdateFilterDefs(data) {\n    this.setState(state => {\n      return {\n        nodes: data.nodes,\n        edges: data.edges,\n        filterAction: data.filterAction || state.filterAction,\n        filterActionHelp: data.filterActionHelp || state.filterActionHelp,\n        focusSourceLabel:\n          data.focus && data.focus.sourceLabel\n            ? `\"${data.focus.sourceLabel}\"`\n            : '<nothing selected>',\n        focusRange: data.focus && data.focus.range ? data.focus.range : undefined\n      };\n    });\n  }\n\n  UpdateFilteredNCData(data = { stats: {} }) {\n    this.setState({ statsSummary: data.stats.statsSummary });\n  }\n\n  LookupFilterHelp(filterAction) {\n    const TEMPLATE = UDATA.AppState('TEMPLATE');\n    if (filterAction === FILTER.ACTION.FADE) return TEMPLATE.filterFadeHelp;\n    //if (filterAction === FILTER.ACTION.FILTER) return FILTER.ACTION.HELP.FILTER; // FIX: Remove this once we decide we don't want to support Filter/hide\n    if (filterAction === FILTER.ACTION.REDUCE) return TEMPLATE.filterReduceHelp;\n    if (filterAction === FILTER.ACTION.FOCUS) return TEMPLATE.filterFocusHelp;\n    return 'Help not found';\n  }\n\n  OnClearBtnClick() {\n    UDATA.LocalCall('FILTER_CLEAR');\n  }\n\n  SelectFilterAction(filterAction) {\n    const TEMPLATE = UDATA.AppState('TEMPLATE');\n    this.setState({ filterAction });\n    UDATA.LocalCall('FILTERS_UPDATE', { filterAction });\n  }\n\n  render() {\n    const { hidden } = this.props;\n    const { filterAction, focusRange, focusSourceLabel, statsSummary, nodes, edges } =\n      this.state;\n    const defs = [nodes, edges];\n\n    // Can we assume TEMPLATE is already loaded by the time we render?\n    const TEMPLATE = UDATA.AppState('TEMPLATE');\n\n    const labelFade = TEMPLATE.filterFade;\n    const labelReduce = TEMPLATE.filterReduce;\n    const labelFocus = TEMPLATE.filterFocus;\n\n    const filterActionHelp = this.LookupFilterHelp(filterAction);\n\n    let FilterControlPanel;\n    if (filterAction === FILTER.ACTION.FOCUS) {\n      FilterControlPanel = (\n        <FocusFilter\n          filter={{ value: 0 }}\n          focusSourceLabel={focusSourceLabel}\n          focusRange={focusRange}\n        />\n      );\n    } else {\n      FilterControlPanel = defs.map(def => (\n        <FilterGroup\n          key={def.label}\n          group={def.group}\n          label={def.label}\n          filters={def.filters}\n          filterAction={filterAction}\n          transparency={def.transparency}\n          onFiltersChange={this.OnFilterChange}\n        />\n      ));\n    }\n\n    return (\n      <div\n        className=\"filterPanel\"\n        style={{\n          display: hidden ? 'none' : 'flex',\n          overflow: 'hidden',\n          margin: '6px 0',\n          padding: '5px',\n          flexDirection: 'column',\n          backgroundColor: '#EEE',\n          zIndex: '1500'\n        }}\n      >\n        <ButtonGroup>\n          <Button\n            onClick={() => this.SelectFilterAction(FILTER.ACTION.FADE)}\n            active={filterAction === FILTER.ACTION.FADE}\n            outline={filterAction === FILTER.ACTION.FADE}\n            disabled={filterAction === FILTER.ACTION.FADE}\n            style={{\n              color: filterAction === FILTER.ACTION.FADE ? '#333' : '#fff',\n              backgroundColor:\n                filterAction === FILTER.ACTION.FADE ? 'transparent' : '#6c757d88'\n            }}\n          >\n            {labelFade}\n          </Button>\n          {/* Hide \"Filter\" panel.  We will probably remove this functionality.\n          <Button\n            onClick={() => this.SelectFilterAction(FILTER.ACTION.FILTER)}\n            active={filterAction === FILTER.ACTION.FILTER}\n            outline={filterAction === FILTER.ACTION.FILTER}\n            disabled={filterAction === FILTER.ACTION.FILTER}\n            style={{\n              color: filterAction === FILTER.ACTION.FILTER ? '#333' : '#fff',\n              backgroundColor: filterAction === FILTER.ACTION.FILTER ? 'transparent' : '#6c757d88'\n            }}\n          >Filter</Button> */}\n          <Button\n            onClick={() => this.SelectFilterAction(FILTER.ACTION.REDUCE)}\n            active={filterAction === FILTER.ACTION.REDUCE}\n            outline={filterAction === FILTER.ACTION.REDUCE}\n            disabled={filterAction === FILTER.ACTION.REDUCE}\n            style={{\n              color: filterAction === FILTER.ACTION.REDUCE ? '#333' : '#fff',\n              backgroundColor:\n                filterAction === FILTER.ACTION.REDUCE ? 'transparent' : '#6c757d88'\n            }}\n          >\n            {labelReduce}\n          </Button>\n          <Button\n            onClick={() => this.SelectFilterAction(FILTER.ACTION.FOCUS)}\n            active={filterAction === FILTER.ACTION.FOCUS}\n            outline={filterAction === FILTER.ACTION.FOCUS}\n            disabled={filterAction === FILTER.ACTION.FOCUS}\n            style={{\n              color: filterAction === FILTER.ACTION.FOCUS ? '#333' : '#fff',\n              backgroundColor:\n                filterAction === FILTER.ACTION.FOCUS ? 'transparent' : '#6c757d88'\n            }}\n          >\n            {labelFocus}\n          </Button>\n        </ButtonGroup>\n        <Label\n          className=\"small text-muted\"\n          style={{ padding: '0.5em 0 0 0.5em', marginBottom: '0' }}\n        >\n          {filterActionHelp}\n        </Label>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            flexGrow: `1`,\n            overflowY: 'scroll'\n          }}\n        >\n          <div>{FilterControlPanel}</div>\n        </div>\n        <div\n          style={{ display: 'flex', justifyContent: 'space-evenly', padding: '5px' }}\n        >\n          <Button size=\"sm\" onClick={this.OnClearBtnClick}>\n            Clear Filters\n          </Button>\n        </div>\n        <Label\n          className=\"small text-muted\"\n          style={{\n            fontStyle: 'italic',\n            padding: '0.5em 0 0 0.5em',\n            marginBottom: '0'\n          }}\n        >\n          {statsSummary}\n        </Label>\n      </div>\n    );\n  }\n}\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = FiltersPanel;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  FOCUSFILTER\n\n  FocusFilter provides the UI for entering the numeric range value for\n  the focus filter.\n\n  Selection changes directly trigger a UDATA.LocalCall('FILTER_DEFINE',...).\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { Form, FormGroup, Input, Label } = ReactStrap;\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UDATA = null;\n\n/// CLASS /////////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass FocusFilter extends React.Component {\n  constructor({ focusRange }) {\n    super();\n    this.OnChangeValue = this.OnChangeValue.bind(this);\n    this.TriggerChangeHandler = this.TriggerChangeHandler.bind(this);\n    this.OnSubmit = this.OnSubmit.bind(this);\n\n    this.state = {\n      focusRange: focusRange // Used locally to define result\n    };\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n  }\n\n  OnChangeValue(e) {\n    // The built in <input min=\"0\"> will keep the step buttons from going below 0,\n    // but the user can still input \"0\".  We can't just use Math.min() because the\n    // user would not be allowed to use backspace to delete the value before\n    // entering a new number.  Replacing invalid numbers with a blank value\n    // feels like a  more natural way of editing.\n    const focusRange = e.target.value < 1 ? '' : e.target.value;\n    this.setState({ focusRange }, this.TriggerChangeHandler);\n  }\n\n  TriggerChangeHandler() {\n    // even though we allow \"\" in the field, we always define the range to be 1\n    // so that something will show\n    const focusRange = this.state.focusRange < 1 ? 1 : this.state.focusRange;\n    if (UDATA)\n      UDATA.LocalCall('FILTER_DEFINE', {\n        group: 'focus',\n        filter: {\n          value: focusRange\n        }\n      }); // set a SINGLE filter\n  }\n\n  OnSubmit(e) {\n    // Prevent \"ENTER\" from triggering form submission!\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  render() {\n    const { focusSourceLabel } = this.props;\n    const { focusRange } = this.state;\n    return (\n      <div\n        className=\"filter-group\"\n        style={{\n          margin: '5px 5px 5px 0',\n          padding: '10px',\n          backgroundColor: 'rgba(0,0,0,0)'\n        }}\n      >\n        <Form inline className=\"filter-item\" onSubmit={this.OnSubmit}>\n          {/* FormGroup needs to unset flexFlow or fields will overflow\n              https://getbootstrap.com/docs/4.5/utilities/flex/\n          */}\n          <FormGroup className=\"flex-nowrap\">\n            <Label size=\"sm\" className=\"small text-muted\">\n              Selected Node: {focusSourceLabel}\n            </Label>\n            <br />\n          </FormGroup>\n          <FormGroup className=\"flex-nowrap\">\n            <Label size=\"sm\" className=\"small text-muted\">\n              Range <i>(&gt;0)</i>:&nbsp;\n            </Label>\n            <Input\n              type=\"number\"\n              min=\"1\"\n              style={{ maxWidth: '12em', height: '1.5em', padding: '2px' }}\n              bsSize=\"sm\"\n              onChange={this.OnChangeValue}\n              value={focusRange}\n            />\n          </FormGroup>\n        </Form>\n      </div>\n    );\n  }\n}\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = FocusFilter;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  HDATEFILTER\n\n  HDateFilter provides the UI for entering search strings for hdate-based\n  node and edge properties.\n\n  Seven Numeric  operators are supported:\n  * >\n  * >=\n  * <\n  * <=\n  * =\n  * !=\n\n  Matches will SHOW the resulting node or edge.\n  Any nodes/edges not matching will be hidden.\n\n  The filter definition is passed in via props.\n\n    props\n      {\n        group       // \"nodes\" or \"edges\"\n        filter: {\n          id,       // numeric id used for unique React key\n          type,     // filter type, e.g \"string\" vs \"number\"\n          key,      // node field key from the template\n          keylabel, // human friendly display name for the key.\n                       This can be customized in the template.\n          operator, // the comparison function, e.g. 'contains' or '>'\n          value     // the search value to be used for matching\n        },\n        onChangeHandler // callback function for parent component\n      }\n\n  The `onChangeHandler` callback function is not currently used.  Instead,\n  selection changes directly trigger a UDATA.LocalCall('FILTER_DEFINE',...).\n\n  The `id` variable allows us to potentially support multiple search filters\n  using the same key, e.g. we could have two 'Label' filters.\n\n  In order to retain the input selection cursor between state updates, we use\n  a secondary state `inputval` that retains the cursor position.\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst FILTER = require('./FilterEnums');\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { Form, FormGroup, Input, Label } = ReactStrap;\nimport URDateField from '../URDateField';\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UDATA = null;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst OPERATORS = [\n  FILTER.OPERATORS.NO_OP,\n  FILTER.OPERATORS.EQ,\n  FILTER.OPERATORS.NOT_EQ,\n  FILTER.OPERATORS.LT,\n  FILTER.OPERATORS.LT_EQ,\n  FILTER.OPERATORS.GT,\n  FILTER.OPERATORS.GT_EQ\n];\n\n/// CLASS DECLARATION /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass HDateFilter extends React.Component {\n  constructor({\n    group,\n    filter: { id, type, key, keylabel, operator, value },\n    onChangeHandler\n  }) {\n    super();\n    this.m_ClearFilters = this.m_ClearFilters.bind(this);\n    this.OnChangeOperator = this.OnChangeOperator.bind(this);\n    this.OnChangeValue = this.OnChangeValue.bind(this);\n    this.TriggerChangeHandler = this.TriggerChangeHandler.bind(this);\n    this.OnSubmit = this.OnSubmit.bind(this);\n\n    this.state = {\n      operator: FILTER.OPERATORS.NO_OP.key, // Used locally to define result\n      inputval: '', // Used to maintain input caret position\n      value: '' // Used to define the final result\n    };\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n    UDATA.HandleMessage('FILTER_CLEAR', this.m_ClearFilters);\n  }\n\n  componentWillUnmount() {\n    UDATA.UnhandleMessage('FILTER_CLEAR', this.m_ClearFilters);\n  }\n\n  m_ClearFilters() {\n    this.setState({ inputval: '' });\n  }\n\n  OnChangeOperator(e) {\n    const newstate = { operator: e.target.value };\n    // clear value if NO_OP\n    if (e.target.value === FILTER.OPERATORS.NO_OP.key) {\n      newstate.inputval = '';\n      newstate.value = '';\n    }\n    this.setState(newstate, this.TriggerChangeHandler);\n  }\n\n  OnChangeValue(event) {\n    const value = event.target.value;\n    // deconstruct the URDate {value, format, formattedString } object\n    // save the raw input string\n    const inputString = value.value;\n    // First update the input field, retaining cursor position\n    this.setState({ inputval: inputString }, () => {\n      // Then send the result\n      this.setState({ value: inputString }, this.TriggerChangeHandler);\n    });\n  }\n\n  TriggerChangeHandler() {\n    const { filterAction } = this.props;\n    const { id, type, key, keylabel } = this.props.filter;\n    const filter = {\n      id,\n      type,\n      key,\n      keylabel,\n      operator: this.state.operator,\n      value: this.state.value\n    };\n    if (UDATA)\n      UDATA.LocalCall('FILTER_DEFINE', {\n        group: this.props.group,\n        filter,\n        filterAction\n      }); // set a SINGLE filter\n  }\n\n  OnSubmit(e) {\n    // Prevent \"ENTER\" from triggering form submission!\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  render() {\n    const { inputval } = this.state;\n    const { id, key, keylabel, operator, value } = this.props.filter;\n    return (\n      <Form inline className=\"filter-item\" key={id} onSubmit={this.OnSubmit}>\n        {/* FormGroup needs to unset flexFlow or fields will overflow\n            https://getbootstrap.com/docs/4.5/utilities/flex/\n        */}\n        <FormGroup className=\"flex-nowrap\">\n          <Label size=\"sm\" className=\"small text-muted\">\n            {keylabel}\n          </Label>\n          <Input\n            type=\"select\"\n            value={operator}\n            style={{ maxWidth: '12em', height: '1.5em', padding: '0' }}\n            onChange={this.OnChangeOperator}\n            bsSize=\"sm\"\n          >\n            {OPERATORS.map(op => (\n              <option value={op.key} key={`${id}${op.key}`} size=\"sm\">\n                {op.label}\n              </option>\n            ))}\n          </Input>\n          <URDateField\n            id={key}\n            key={`${key}value`}\n            value={inputval}\n            isFilter={true}\n            onChange={this.OnChangeValue}\n            disabled={operator === FILTER.OPERATORS.NO_OP.key}\n          />\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = HDateFilter;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  NUMBERFILTER\n\n  NumberFilter provides the UI for entering search strings for numeric-based\n  node and edge properties.\n\n  Seven Numeric  operators are supported:\n  * >\n  * >=\n  * <\n  * <=\n  * =\n  * !=\n\n  Matches will SHOW the resulting node or edge.\n  Any nodes/edges not matching will be hidden.\n\n  The filter definition is passed in via props.\n\n    props\n      {\n        group       // \"nodes\" or \"edges\"\n        filter: {\n          id,       // numeric id used for unique React key\n          type,     // filter type, e.g \"string\" vs \"number\"\n          key,      // node field key from the template\n          keylabel, // human friendly display name for the key.\n                       This can be customized in the template.\n          operator, // the comparison function, e.g. 'contains' or '>'\n          value     // the search value to be used for matching\n        },\n        onChangeHandler // callback function for parent component\n      }\n\n  The `onChangeHandler` callback function is not currently used.  Instead,\n  selection changes directly trigger a UDATA.LocalCall('FILTER_DEFINE',...).\n\n  The `id` variable allows us to potentially support multiple search filters\n  using the same key, e.g. we could have two 'Label' filters.\n\n  In order to retain the input selection cursor between state updates, we use\n  a secondary state `inputval` that retains the cursor position.\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst FILTER = require('./FilterEnums');\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { Form, FormGroup, Input, Label } = ReactStrap;\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UDATA = null;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst OPERATORS = [\n  FILTER.OPERATORS.NO_OP,\n  FILTER.OPERATORS.EQ,\n  FILTER.OPERATORS.NOT_EQ,\n  FILTER.OPERATORS.LT,\n  FILTER.OPERATORS.LT_EQ,\n  FILTER.OPERATORS.GT,\n  FILTER.OPERATORS.GT_EQ\n];\n\n/// CLASS DECLARATION /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass NumberFilter extends React.Component {\n  constructor({\n    group,\n    filter: { id, type, key, keylabel, operator, value },\n    onChangeHandler\n  }) {\n    super();\n    this.m_ClearFilters = this.m_ClearFilters.bind(this);\n    this.OnChangeOperator = this.OnChangeOperator.bind(this);\n    this.OnChangeValue = this.OnChangeValue.bind(this);\n    this.TriggerChangeHandler = this.TriggerChangeHandler.bind(this);\n    this.OnSubmit = this.OnSubmit.bind(this);\n\n    this.state = {\n      operator: FILTER.OPERATORS.NO_OP.key, // Used locally to define result\n      inputval: '', // Used to maintain input caret position\n      value: '' // Used to define the final result\n    };\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n    UDATA.HandleMessage('FILTER_CLEAR', this.m_ClearFilters);\n  }\n\n  componentWillUnmount() {\n    UDATA.UnhandleMessage('FILTER_CLEAR', this.m_ClearFilters);\n  }\n\n  m_ClearFilters() {\n    this.setState({ inputval: '' });\n  }\n\n  OnChangeOperator(e) {\n    const newstate = { operator: e.target.value };\n    // clear value if NO_OP\n    if (e.target.value === FILTER.OPERATORS.NO_OP.key) {\n      newstate.inputval = '';\n      newstate.value = '';\n    }\n    this.setState(newstate, this.TriggerChangeHandler);\n  }\n\n  OnChangeValue(event) {\n    const value = Number(event.target.value);\n    // First update the input field, retaining cursor position\n    this.setState({ inputval: value }, () => {\n      // Then send the result\n      this.setState({ value }, this.TriggerChangeHandler);\n    });\n\n  }\n\n  TriggerChangeHandler() {\n    const { filterAction } = this.props;\n    const { id, type, key, keylabel } = this.props.filter;\n    const filter = {\n      id,\n      type,\n      key,\n      keylabel,\n      operator: this.state.operator,\n      value: this.state.value\n    };\n    if (UDATA)\n      UDATA.LocalCall('FILTER_DEFINE', {\n        group: this.props.group,\n        filter,\n        filterAction\n      }); // set a SINGLE filter\n  }\n\n  OnSubmit(e) {\n    // Prevent \"ENTER\" from triggering form submission!\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  render() {\n    const { inputval } = this.state;\n    const { filterAction } = this.props;\n    const { id, key, keylabel, operator, value } = this.props.filter;\n    return (\n      <Form inline className=\"filter-item\" key={id} onSubmit={this.OnSubmit}>\n        {/* FormGroup needs to unset flexFlow or fields will overflow\n            https://getbootstrap.com/docs/4.5/utilities/flex/\n        */}\n        <FormGroup className=\"flex-nowrap\">\n          <Label\n            size=\"sm\"\n            className=\"small text-muted\"\n          >\n            {keylabel}\n          </Label>\n          <Input\n            type=\"select\"\n            value={operator}\n            style={{ maxWidth: '12em', height: '1.5em', padding: '0' }}\n            onChange={this.OnChangeOperator}\n            bsSize=\"sm\"\n          >\n            {OPERATORS.map(op => (\n              <option value={op.key} key={`${id}${op.key}`} size=\"sm\">\n                {op.label}\n              </option>\n            ))}\n          </Input>\n          <Input\n            type=\"number\"\n            value={inputval}\n            placeholder=\"...\"\n            style={{ maxWidth: '12em', height: '1.5em' }}\n            onChange={this.OnChangeValue}\n            bsSize=\"sm\"\n            disabled={operator === FILTER.OPERATORS.NO_OP.key}\n          />\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = NumberFilter;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  SELECTFILTER\n\n  SelectFilter provides the UI for setting drop-down menu selection\n  style filters typically used for \"type\" node and edge properties.\n\n  The menu options are defined with the extra `options` property\n  of the filter.\n\n  Two Select operators are supported (These just use the string operators on\n  the values set via the menu selectios):\n  * contains\n  * not contains\n\n  Matches will SHOW the resulting node or edge.\n  Any nodes/edges not matching will be hidden.\n\n  The filter definition is passed in via props.\n\n    props\n      {\n        group       // \"nodes\" or \"edges\"\n        filter: {\n          id,       // numeric id used for unique React key\n          type,     // filter type, e.g \"string\" vs \"number\"\n          key,      // node field key from the template\n          keylabel, // human friendly display name for the key.  This can be customized in the template.\n          operator, // the comparison function, e.g. 'contains' or '>'\n          value     // the search value to be used for matching\n          options   // array of select option strings, e.g. ['abc','def',..]\n        },\n        onChangeHandler // callback function for parent component\n      }\n\n  The `onChangeHandler` callback function is not currently used.  Instead,\n  selection changes directly trigger a UDATA.LocalCall('FILTER_DEFINE',...).\n\n  The `id` variable allows us to potentially support multiple search filters\n  using the same key, e.g. we could have two 'Label' filters.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst FILTER = require('./FilterEnums');\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { Form, FormGroup, Input, Label } = ReactStrap;\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UDATA = null;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst OPERATORS = [\n  FILTER.OPERATORS.NO_OP,\n  FILTER.OPERATORS.CONTAINS,\n  FILTER.OPERATORS.NOT_CONTAINS\n];\n\n/// CLASS /////////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass SelectFilter extends React.Component {\n  constructor({\n    group,\n    filter: { id, type, key, keylabel, operator, value, options },\n    onChangeHandler\n  }) {\n    super();\n    this.OnChangeOperator = this.OnChangeOperator.bind(this);\n    this.OnChangeValue = this.OnChangeValue.bind(this);\n    this.TriggerChangeHandler = this.TriggerChangeHandler.bind(this);\n    this.OnSubmit = this.OnSubmit.bind(this);\n\n    this.state = {\n      operator: FILTER.OPERATORS.NO_OP.key, // Used locally to define result\n      value: '' // Used locally to define result\n    };\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n  }\n\n  OnChangeOperator(e) {\n    this.setState(\n      {\n        operator: e.target.value\n      },\n      this.TriggerChangeHandler\n    );\n  }\n\n  OnChangeValue(e) {\n    this.setState(\n      {\n        value: e.target.value\n      },\n      this.TriggerChangeHandler\n    );\n  }\n\n  TriggerChangeHandler() {\n    const { filterAction } = this.props;\n    const { id, type, key, keylabel, options } = this.props.filter;\n    const filter = {\n      id,\n      type,\n      key,\n      keylabel,\n      operator: this.state.operator,\n      value: this.state.operator === FILTER.OPERATORS.NO_OP.key ? '' : this.state.value,\n      options\n    };\n    if (UDATA)\n      UDATA.LocalCall('FILTER_DEFINE', {\n        group: this.props.group,\n        filter,\n        filterAction\n      }); // set a SINGLE filter\n  }\n\n  OnSubmit(e) {\n    // Prevent \"ENTER\" from triggering form submission!\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  componentDidMount() {\n    // Autoselect the first item\n    this.setState({\n      value: this.props.filter.options[0]\n    });\n  }\n\n  render() {\n    const { filterAction } = this.props;\n    const { id, key, keylabel, operator, value, options } = this.props.filter;\n    return (\n      <Form inline className=\"filter-item\" key={id} onSubmit={this.OnSubmit}>\n        {/* FormGroup needs to unset flexFlow or fields will overflow\n            https://getbootstrap.com/docs/4.5/utilities/flex/\n         */}\n        <FormGroup className=\"flex-nowrap\">\n          <Label\n            size=\"sm\"\n            className=\"small text-muted\"\n          >\n            {keylabel}\n          </Label>\n          <Input\n            type=\"select\"\n            value={operator}\n            style={{ height: '1.5em', padding: '0' }}\n            onChange={this.OnChangeOperator}\n            bsSize=\"sm\"\n          >\n            {OPERATORS.map(op => (\n              <option value={op.key} key={`${id}${op.key}`} size=\"sm\">\n                {op.label}\n              </option>\n            ))}\n          </Input>\n          <Input\n            type=\"select\"\n            value={value}\n            style={{ maxWidth: '12em', height: '1.5em', padding: '0' }}\n            onChange={this.OnChangeValue}\n            bsSize=\"sm\"\n            disabled={operator === FILTER.OPERATORS.NO_OP.key}\n          >\n            {operator !== FILTER.OPERATORS.NO_OP.key\n              ? options.map(op => (\n                <option value={op} key={`${id}${op}`} size=\"sm\">\n                  {op}\n                </option>\n              ))\n              : ''}\n          </Input>\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = SelectFilter;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  STRINGFILTER\n\n  StringFilter provides the UI for entering search strings for string-based\n  node and edge properties.\n\n  Two String operators are supported:\n  * contains\n  * not contains\n\n  Matches will SHOW the resulting node or edge.\n  Any nodes/edges not matching will be hidden.\n\n  The filter definition is passed in via props.\n\n    props\n      {\n        group       // \"nodes\" or \"edges\"\n        filter: {\n          id,       // numeric id used for unique React key\n          type,     // filter type, e.g \"string\" vs \"number\"\n          key,      // node field key from the template\n          keylabel, // human friendly display name for the key.  This can be customized in the template.\n          operator, // the comparison function, e.g. 'contains' or '>'\n          value     // the search value to be used for matching\n        },\n        onChangeHandler // callback function for parent component\n      }\n\n  The `onChangeHandler` callback function is not currently used.  Instead,\n  selection changes directly trigger a UDATA.LocalCall('FILTER_DEFINE',...).\n\n  The `id` variable allows us to potentially support multiple search filters\n  using the same key, e.g. we could have two 'Label' filters.\n\n  In order to retain the input selection cursor between state updates, we use\n  a secondary state `inputval` that retains the cursor position.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst FILTER = require('./FilterEnums');\nconst React = require('react');\nconst ReactStrap = require('reactstrap');\nconst { Form, FormGroup, Input, Label } = ReactStrap;\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar UDATA = null;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst OPERATORS = [\n  FILTER.OPERATORS.NO_OP,\n  FILTER.OPERATORS.CONTAINS,\n  FILTER.OPERATORS.NOT_CONTAINS,\n  FILTER.OPERATORS.IS_EMPTY,\n  FILTER.OPERATORS.IS_NOT_EMPTY\n];\n\n/// CLASS DECLARATION /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nclass StringFilter extends React.Component {\n  constructor({\n    group,\n    filter: { id, type, ey, keylabel, operator, value },\n    onChangeHandler\n  }) {\n    super();\n    this.m_ClearFilters = this.m_ClearFilters.bind(this);\n    this.OnChangeOperator = this.OnChangeOperator.bind(this);\n    this.OnChangeValue = this.OnChangeValue.bind(this);\n    this.TriggerChangeHandler = this.TriggerChangeHandler.bind(this);\n    this.OnSubmit = this.OnSubmit.bind(this);\n\n    this.state = {\n      operator: FILTER.OPERATORS.NO_OP.key, // Used locally to define result\n      inputval: '', // Used to maintain input caret position\n      value: '' // Used to define the final result\n    };\n\n    /// Initialize UNISYS DATA LINK for REACT\n    UDATA = UNISYS.NewDataLink(this);\n    UDATA.HandleMessage('FILTER_CLEAR', this.m_ClearFilters);\n  }\n\n  componentWillUnmount() {\n    UDATA.UnhandleMessage('FILTER_CLEAR', this.m_ClearFilters);\n  }\n\n  m_ClearFilters() {\n    this.setState({ inputval: '' });\n  }\n\n  OnChangeOperator(e) {\n    const newstate = { operator: e.target.value };\n    // clear value if NO_OP\n    if (e.target.value === FILTER.OPERATORS.NO_OP.key) {\n      newstate.inputval = '';\n      newstate.value = '';\n    }\n    this.setState(newstate, this.TriggerChangeHandler);\n  }\n\n  OnChangeValue(event) {\n    const value = event.target.value;\n    // First update the input field, retaining cursor position\n    this.setState({ inputval: value }, () => {\n      // Then send the result\n      this.setState({ value }, this.TriggerChangeHandler);\n    });\n  }\n\n  TriggerChangeHandler() {\n    const { filterAction } = this.props;\n    const { id, type, key, keylabel } = this.props.filter;\n    const filter = {\n      id,\n      type,\n      key,\n      keylabel,\n      operator: this.state.operator,\n      value: this.state.value\n    };\n    if (UDATA)\n      UDATA.LocalCall('FILTER_DEFINE', {\n        group: this.props.group,\n        filter,\n        filterAction\n      }); // set a SINGLE filter\n  }\n\n  OnSubmit(e) {\n    // Prevent \"ENTER\" from triggering form submission!\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  render() {\n    const { inputval } = this.state;\n    const { filterAction } = this.props;\n    const { id, key, keylabel, operator, value } = this.props.filter;\n\n    return (\n      <Form inline className=\"filter-item\" key={id} onSubmit={this.OnSubmit}>\n        {/* FormGroup needs to unset flexFlow or fields will overflow\n            https://getbootstrap.com/docs/4.5/utilities/flex/\n         */}\n        <FormGroup className=\"flex-nowrap\">\n          <Label size=\"sm\" className=\"small text-muted\">\n            {keylabel}\n          </Label>\n          <Input\n            type=\"select\"\n            value={operator}\n            style={{ maxWidth: '12em', height: '1.5em', padding: '0' }}\n            onChange={this.OnChangeOperator}\n            bsSize=\"sm\"\n          >\n            {OPERATORS.map(op => (\n              <option value={op.key} key={`${id}${op.key}`} size=\"sm\">\n                {op.label}\n              </option>\n            ))}\n          </Input>\n          <Input\n            type=\"text\"\n            value={inputval}\n            placeholder=\"...\"\n            style={{ maxWidth: '12em', height: '1.5em' }}\n            onChange={this.OnChangeValue}\n            bsSize=\"sm\"\n            disabled={operator === FILTER.OPERATORS.NO_OP.key}\n            hidden={\n              operator === FILTER.OPERATORS.IS_EMPTY.key ||\n              operator === FILTER.OPERATORS.IS_NOT_EMPTY.key\n            }\n          />\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = StringFilter;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  EDGE MANAGER\n\n  edge-mgr takes the incoming FILTEREDNCDATA and simplifies the\n  edges, doing the following:\n    1. Removes any duplicate edges between a source and target\n    2. Caclulates the edge size using the edge.weight parameter\n    3. Updates the VDATA app state\n\n  When VDATA is updated, NCGraphRenderer will redraw.\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst UNISYS = require('unisys/client');\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar MOD = UNISYS.NewModule(module.id);\nvar UDATA = UNISYS.NewDataLink(MOD);\n\n/// UNISYS HANDLERS ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// lifecycle INITIALIZE handler\nMOD.Hook('INITIALIZE', () => {\n  // FILTEREDNCDATA is updated by filter-mgr after NCDATA is changed.\n  UDATA.OnAppStateChange('FILTEREDNCDATA', data => {\n    m_RenderEdges(data);\n  });\n}); // end UNISYS_INIT\n\n/// PUBLIC METHODS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Looks up the edge color defined in the passed TEMPLATE\n *  Fall back to default if type is not defined\n *  @param {Object} edge\n *  @param {Object} TEMPLATE\n *  @returns {string} e.g. '#FF00FF' as defined by TEMPLATE type.option\n *                   or `undefined` if no color type is defined\n */\nMOD.LookupEdgeColor = (edge, TEMPLATE) => {\n  const type = edge.type;\n  const typeOption = TEMPLATE.edgeDefs.type.options.find(o => o.label === type);\n  return typeOption ? typeOption.color : TEMPLATE.edgeDefs.type.options[0].color;\n};\n\n/// MODULE METHODS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** m_RenderEdges uses a Map to reduce duplicate edges into a single\n *  edge, calculating edge size based on edge.weight parameter along the way.\n *  @param {Object} data FILTEREDNCDATA e.g. { nodes, edges }\n *  @return Updates VDATA AppState\n */\nfunction m_RenderEdges(data) {\n  const DEFAULT_SIZE = 1;\n  const VDATA = data;\n\n  const TEMPLATE = UDATA.AppState('TEMPLATE');\n  const edgeSizeMax = TEMPLATE.edgeSizeMax;\n\n  /*/ ISSUES\n      * How do we handle direction?\n        => Can be handled with a single edge, we just need to determin directionlaity\n      * How do we handle bidrectionality?  Is it a single edge?\n        => Yes.  Just with two arrowheads.\n  /*/\n\n  // Prepare to check for color\n  const colorsAreDefined =\n    TEMPLATE.edgeDefs.type &&\n    TEMPLATE.edgeDefs.type.options &&\n    Array.isArray(TEMPLATE.edgeDefs.type.options) &&\n    TEMPLATE.edgeDefs.type.options.length > 0;\n\n  // Synthesize duplicate edges into a single edge.\n  const edgeMap = new Map(); // key = {source}{target}\n  const edgeColorWeightMap = new Map(); // key = {source}{target}, value = colorMap[[color, weightTotal]]\n  VDATA.edges.forEach(e => {\n    const edgeKey = m_GetEdgeKey(e); // single key for both directions\n    const currEdge = edgeMap.get(edgeKey);\n    const eWeight = Number(e.weight) || DEFAULT_SIZE; // weight defaults to 1, force Number\n\n    // 1. Set Size\n    e.size = eWeight + (currEdge ? currEdge.size : 0); // cumulative size\n\n    // 2. Update Color Weight Map\n    if (colorsAreDefined) {\n      const colorWeightMap = edgeColorWeightMap.get(edgeKey) || new Map(); // key = color, value = weight\n      const color = MOD.LookupEdgeColor(e, TEMPLATE);\n      const colorWeight = colorWeightMap.get(color) || 0; // default to weight 0 if color was not previously defined\n      colorWeightMap.set(color, colorWeight + eWeight);\n      edgeColorWeightMap.set(edgeKey, colorWeightMap);\n    }\n\n    // 3. Limit to Max Edge Size\n    if (edgeSizeMax > 0) e.size = Math.min(edgeSizeMax, e.size);\n\n    // 4. Save value\n    edgeMap.set(edgeKey, e);\n  });\n\n  // 5. Set Color\n  VDATA.edges.forEach(e => {\n    e.color = m_GetWeightiestColor(e, edgeColorWeightMap);\n  });\n\n  VDATA.edges = [...edgeMap.values()];\n  UDATA.SetAppState('VDATA', VDATA);\n}\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/**\n * Returns a unique key in the form \"<lowestID>,<highestID>\"\n * Used to generate a key for all edges that share the same source and target\n * regardless of direction\n * @param {Object} edge\n * @returns {string}\n */\nfunction m_GetEdgeKey(edge) {\n  let skey = edge.source;\n  let tkey = edge.target;\n  return [skey, tkey].sort().toString();\n}\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/**\n * Finds the color with the most weight for each edge in edgeColorWeightMap\n * @param {Object} edge\n * @param {Map} edgeColorWeightMap\n * @returns\n */\nfunction m_GetWeightiestColor(edge, edgeColorWeightMap) {\n  const edgeKey = m_GetEdgeKey(edge);\n  const colorWeightMap = edgeColorWeightMap.get(edgeKey); // Map[[ color, weight ]]\n  const colors = [...colorWeightMap.keys()];\n  colors.sort((a, b) => colorWeightMap.get(b) - colorWeightMap.get(a)); // descending\n  return colors[0];\n}\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  FILTER MANAGER\n\n  Filter Definitions\n\n  The initial filter definitions are loaded from the current database template.\n\n    FILTERDEFS = {\n        nodes: {                    // group\n            label: \"Node Filters\",  // group label\n            filters: [              // array of filter objects\n                {\n                  id: '4',\n                  type: 'string',\n                  key: 'label',\n                  keylabel: 'Label',\n                  operator: 'no-op',\n                  value: ''\n                },\n                {\n                  id: '2',\n                  type: 'select',\n                  key: 'type',\n                  keylabel: 'Type',\n                  operator: 'no-op',\n                  value: ''\n                },\n                ...\n            ]\n        },\n        edges: {\n            label: \"Edge Filters\",\n            filters: [...]\n        }\n        focus: {\n          source: undefined,\n          sourceLabel: '',\n          range: 1\n        }\n    }\n\n  FEATURES\n\n  * See Whimiscal [diagram](https://whimsical.com/d3-data-flow-B2tTGnQYPSNviUhsPL64Dz)\n\n  * filterAction: \"Highlight\" vs \"Filter\"\n    --  Version 1.4 introduces two different types of filtering:\n        \"Highlight\" highlights the matching nodes/edges and fades the others\n        \"Filter\" shows matching nodes/edges and removes the non-matching\n        nodes/edges from the display without affecting the underlying data.\n\n  * With Version 1.4, the only data that is graphed is FILTEREDNCDATA.\n    --  d3-simplenetgraph no longer plots on NCDATA changes.\n    --  Instead, it plots the new FILTEREDNCDATA state.  Whenever NCDATA changes,\n        FILTERDD3DATA is udpated.\n    --  This way there is only one source of truth: all draw updates\n        are routed through filter-mgr.\n    --  If filters have not been defined, we just pass the raw NCDATA\n\n  * Filters can be stacked.\n        You can define two \"Label\" filters, for example.\n        The only reason you can't do it right now is because the filter template\n        is reading directly from the _default.template file.  You can easily\n        insert another filter into the mix programmatically.\n\n  JD added some global settins for filters\n    Settings\n      Transparency\n        Nodes\n        Edges\n\n  NOTE: Default is hand-set to 0 for now, but this should be in a / the template\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst FILTER = require('./components/filter/FilterEnums');\nconst UNISYS = require('unisys/client');\nconst clone = require('rfdc')();\nconst UTILS = require('./nc-utils');\nconst PROMPTS = require('system/util/prompts');\nconst NCLOGIC = require('./nc-logic');\nimport HDATE from 'system/util/hdate';\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar MOD = UNISYS.NewModule(module.id);\nvar UDATA = UNISYS.NewDataLink(MOD);\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'filter-mgr: ';\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar TEMPLATE = null; // template definition for prompts\nvar FILTERDEFS_RESTORE; // pristine FILTERDEFS for clearing\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet NODE_DEFAULT_TRANSPARENCY;\nlet EDGE_DEFAULT_TRANSPARENCY;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet RemovedNodes = []; // nodes removed via COLLAPSE filter action\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DATASET = window.NC_CONFIG.dataset || 'netcreate';\nconst TEMPLATE_URL = `templates/${DATASET}.json`;\n\n/// UNISYS HANDLERS ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** lifecycle INITIALIZE handler\n */\nMOD.Hook('INITIALIZE', () => {\n  UDATA.OnAppStateChange('FILTERDEFS', data => {\n    if (DBG) console.log(PR + 'OnAppStateChange: FILTERDEFS', data);\n    // The filter defs have been updated, so apply the filters.\n    m_UpdateFilters();\n  });\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** FILTER_DEFINE is called by StringFilter when user has updated filter.\n   */\n  UDATA.HandleMessage('FILTER_DEFINE', data => {\n    m_FilterDefine(data);\n    UNISYS.Log('define filter', JSON.stringify(data));\n  });\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** FILTER_CLEAR is called by FiltersPanel when user clicks \"Clear Filters\" button\n   */\n  UDATA.HandleMessage('FILTER_CLEAR', () => {\n    m_ClearFilters();\n    UNISYS.Log('clear filters')\n  });\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** FILTERS_UPDATE is called by FiltersPanel switches between filters and highlights\n   */\n  UDATA.HandleMessage('FILTERS_UPDATE', data => {\n    const FILTERDEFS = UDATA.AppState('FILTERDEFS');\n    FILTERDEFS.filterAction = data.filterAction;\n    // if the Focus panel is being selected, grab update the selection so that\n    // the selected node is immediately focused on (otherwise the system ignores\n    // the currently selecte dnode and you have to click on it again)\n    if (data.filterAction === FILTER.ACTION.FOCUS) {\n      const SELECT = UDATA.AppState('SELECTION');\n      const selectedNode = SELECT.nodes ? SELECT.nodes[0] : undefined;\n      if (selectedNode) {\n        FILTERDEFS.focus = {\n          source: selectedNode.id,\n          sourceLabel: selectedNode.label,\n          range: FILTERDEFS.focus.range\n        };\n      }\n    }\n    UDATA.SetAppState('FILTERDEFS', FILTERDEFS);\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Listen for NCDATA updates so we know to trigger change?\n   */\n  UDATA.OnAppStateChange('NCDATA', data => {\n    m_UpdateFilters();\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** Listen for TEMPLATE updates so we know to trigger change?\n   */\n  UDATA.OnAppStateChange('TEMPLATE', data => {\n    // this is critical -- graph will not draw if this is\n    // not called from nc-logic.LOADASSETS\n    m_ImportFilters();\n  });\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /** 2023-06 Interim Approach -- eventually should convert to new selection mgr\n      Listen for SELECTION changes for setting Focus\n   */\n  UDATA.OnAppStateChange('SELECTION', data => {\n    // Only if Focus is active\n    const FILTERDEFS = UDATA.AppState('FILTERDEFS');\n    if (FILTERDEFS.filterAction === FILTER.ACTION.FOCUS) {\n      m_SetFocus(data);\n    }\n  });\n}); // end UNISYS_INIT\n\n/// IMPORT FILTER DEFINITIONS /////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Loads filters from template file\n */\nfunction m_ImportFilters() {\n  TEMPLATE = UDATA.AppState('TEMPLATE');\n  const nodeDefs = TEMPLATE.nodeDefs;\n  const edgeDefs = TEMPLATE.edgeDefs;\n  NODE_DEFAULT_TRANSPARENCY = TEMPLATE.nodeDefaultTransparency;\n  EDGE_DEFAULT_TRANSPARENCY = TEMPLATE.edgeDefaultTransparency;\n\n  /** HACK Source / Target Filter Definitions\n      Source and Target are normally built-in numeric id fields.\n      But for filtering we want to use the corresponding source/target labels as strings.\n      In m_FiltersDefine we are already injecting `sourceLabel` and `targetLabel` into the edge objects\n      to facilitate filtering (saves an extra lookup).  So we can just repurpose the filter definitions\n      to use sourceLabel and targetLabel.  The tricky part is hiding and re-ordering the numeric id filters.\n  */\n  edgeDefs.sourceLabel = {\n    displayLabel: 'Source',\n    exportLabel: 'Source Label',\n    help: 'Source label',\n    hidden: false,\n    type: 'string'\n  };\n  edgeDefs.targetLabel = {\n    displayLabel: 'Target',\n    exportLabel: 'Target Label',\n    help: 'Target label',\n    hidden: false,\n    type: 'string'\n  };\n  /* END HACK */\n\n  let fdefs = {\n    nodes: {\n      group: 'nodes', // this needs to be passed to StringFilter\n      label: 'Node Filters',\n      filters: m_ImportPrompts(nodeDefs),\n      transparency: 0.2 // Default transparency form for Highlight should be 0.2, not template default which is usu 1.0\n    },\n    edges: {\n      group: 'edges', // this needs to be passed to StringFilter\n      label: 'Edge Filters',\n      filters: m_ReplaceSourceTargetIdsWithStrings(m_ImportPrompts(edgeDefs)),\n      transparency: 0.2 // Default transparency form for Highlight should be 0.2, not template default which is usu 0.7\n    },\n    focus: {\n      source: undefined, // nothing focused by default\n      sourceLabel: '',\n      range: 1\n    }\n  };\n\n  UDATA.SetAppState('FILTERDEFS', fdefs);\n\n  // Save off a copy for clearing the form.\n  FILTERDEFS_RESTORE = clone(fdefs);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_ImportPrompts(prompts) {\n  let filters = [];\n  let counter = 0;\n\n  for (const [key, prompt] of Object.entries(prompts)) {\n    let operator;\n    switch (prompt.type) {\n      case FILTER.TYPES.MARKDOWN:\n      case FILTER.TYPES.STRING:\n        operator = FILTER.OPERATORS.NO_OP.key; // default to no_op\n        break;\n      case FILTER.TYPES.NUMBER:\n        operator = FILTER.OPERATORS.NO_OP.key; // default to no_op\n        break;\n      case FILTER.TYPES.SELECT:\n        operator = FILTER.OPERATORS.NO_OP.key; // default to no_op\n        break;\n      case FILTER.TYPES.NODE:\n        operator = FILTER.OPERATORS.NO_OP.key; // default to no_op\n        break;\n      case FILTER.TYPES.DATE:\n        operator = FILTER.OPERATORS.NO_OP.key; // default to no_op\n        break;\n      case FILTER.TYPES.HDATE:\n        operator = FILTER.OPERATORS.NO_OP.key; // default to no_op\n        break;\n      case FILTER.TYPES.HIDDEN:\n        break;\n      default:\n        // edge template item \"edgeIsLockedMessage\" will trigger this message\n        // filters will not be created for entries with no `type` defined.\n        if (DBG)\n          console.warn(PR + `Unknown node prompt type ${prompt.type} for ${prompt}`);\n        break;\n    }\n    if (operator === undefined) continue; // don't add filter if operator is hidden\n    if (prompt.hidden) continue; // don't add filter if \"hidden\": true\n    let filter = {\n      id: counter++,\n      key: key,\n      type: prompt.type,\n      keylabel: prompt.displayLabel,\n      operator: operator,\n      value: ''\n    };\n    // Add \"Options\" for \"select\" filter types\n    if (prompt.type === FILTER.TYPES.SELECT) {\n      let options = [];\n      prompt.options.forEach(opt => {\n        if (opt.label === '') return;\n        options.push(opt.label);\n      });\n      filter.options = options;\n    }\n\n    filters.push(filter);\n  }\n  return filters;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Used to replace the `source` and `target` numeric id filter definitions\n *  with `sourceLabel` and `targetLabel` string defintions.\n *  m_ImportPrompts converts the edgeDefs object to an array\n *  We then insert sourceLabel and targetLabel in place of source and target\n *  and then remove the now extraneous sourceLabel and targetLabel definitions.\n *  This is a hacky brute force solution but it gives us better control over\n *  the field order.\n */\nfunction m_ReplaceSourceTargetIdsWithStrings(filters) {\n  const reorderedFilters = [...filters];\n  // Replace `source` with 'sourceLabel'\n  const sourceIndex = 1; // force seccond item // reorderedFilters.findIndex(f => f.key === 'source');\n  const sourceLabelIndex = reorderedFilters.findIndex(f => f.key === 'sourceLabel');\n  reorderedFilters.splice(sourceIndex, 1, reorderedFilters[sourceLabelIndex]);\n  reorderedFilters.splice(sourceLabelIndex, 1);\n  // and 'target' with 'targetLabel'\n  const targetIndex = 2; // force third item // reorderedFilters.findIndex(f => f.key === 'target');\n  const targetLabelIndex = reorderedFilters.findIndex(f => f.key === 'targetLabel');\n  reorderedFilters.splice(targetIndex, 1, reorderedFilters[targetLabelIndex]);\n  reorderedFilters.splice(targetLabelIndex, 1);\n  return reorderedFilters;\n}\n\n/// UDATA HANDLERS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Define an individual filter\n *  @param {Object} data {group, filter}\n */\nfunction m_FilterDefine(data) {\n  const FILTERDEFS = UDATA.AppState('FILTERDEFS');\n  FILTERDEFS.filterAction = data.filterAction || FILTERDEFS.filterAction; // if 'transparency' then filterAction is not passed, so default to existing\n  if (data.group === 'nodes') {\n    if (data.type === 'transparency') {\n      FILTERDEFS.nodes.transparency = data.transparency;\n    } else {\n      let nodeFilters = FILTERDEFS.nodes.filters;\n      const index = nodeFilters.findIndex(f => f.id === data.filter.id);\n      nodeFilters.splice(index, 1, data.filter);\n      FILTERDEFS.nodes.filters = nodeFilters;\n    }\n  } else if (data.group === 'edges') {\n    if (data.type === 'transparency') {\n      FILTERDEFS.edges.transparency = data.transparency;\n    } else {\n      let edgeFilters = FILTERDEFS.edges.filters;\n      const index = edgeFilters.findIndex(f => f.id === data.filter.id);\n      edgeFilters.splice(index, 1, data.filter);\n      FILTERDEFS.edges.filters = edgeFilters;\n    }\n  } else if (data.group === 'focus') {\n    FILTERDEFS.focus.range = data.filter.value;\n  } else {\n    throw `FILTER_DEFINE called with unknown group: ${data.group}`;\n  }\n  UDATA.SetAppState('FILTERDEFS', FILTERDEFS);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Walk down the list of filters and apply them all\n *  @param {Object} data A UDATA pkt {defs}\n *  @returns {string} Summary of the filter statistics\n */\nfunction m_FiltersApply() {\n  const NCDATA = UDATA.AppState('NCDATA');\n  const FILTERDEFS = UDATA.AppState('FILTERDEFS');\n  const FILTEREDNCDATA = { nodes: [...NCDATA.nodes] };\n\n  // skip if FILTERDEFS has not been defined yet\n  if (Object.keys(FILTERDEFS).length < 1) return;\n\n  // sourceLabel, targetLabel are available\n  // stuff 'sourceLabel' and 'targetLabel' into edges for quicker filtering\n  // otherwise we have to constantly look up the node label\n  FILTEREDNCDATA.edges = NCDATA.edges.map(e => {\n    const source = NCDATA.nodes.find(n => n.id === e.source);\n    const target = NCDATA.nodes.find(n => n.id === e.target);\n    e.sourceLabel = source ? source.label : 'deleted';\n    e.targetLabel = target ? target.label : 'deleted';\n    return e;\n  });\n\n  m_FiltersApplyToNodes(FILTERDEFS, FILTEREDNCDATA);\n  m_FiltersApplyToEdges(FILTERDEFS, FILTEREDNCDATA);\n\n  // REVIEW 2023-0530\n  // -- If \"Filter/Hide\" functionality is going to be kept, this needs to be reworked!\n  //    We SHOULD NOT recalculate sizes in \"Filter/Hide\" mode, otherwise, the size will change.\n  //\n  // Recalculate sizes\n  // ALWAYS recalculate, e.g. if switching from Collapse to Highlight or clearing data\n  UTILS.RecalculateAllEdgeSizes(FILTEREDNCDATA);\n  UTILS.RecalculateAllNodeDegrees(FILTEREDNCDATA);\n\n  // Calculate Stats and Send with FILTEREDNCDATA\n  FILTEREDNCDATA.stats = m_UpdateFilterStats(NCDATA, FILTEREDNCDATA, FILTERDEFS.filterAction);\n\n  // Update FILTEREDNCDATA\n  UDATA.SetAppState('FILTEREDNCDATA', FILTEREDNCDATA);\n  // edge-mgr handles this call and updates VDATA, which is rendered by d3-simplenetgraph\n\n  return FILTEREDNCDATA.stats.statsSummary;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_ClearFilters() {\n  // Reload fdata\n  const FILTERDEFS = clone(FILTERDEFS_RESTORE);\n  UDATA.SetAppState('FILTERDEFS', FILTERDEFS);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_UpdateFilterStats(NCDATA, FILTEREDNCDATA, filterAction) {\n  const FILTERDEFS = UDATA.AppState('FILTERDEFS');\n  const { transparency: transparencyNode } = FILTERDEFS.nodes;\n  const { transparency: transparencyEdge } = FILTERDEFS.edges;\n\n  const nodeCount = NCDATA.nodes.length;\n  const edgeCount = NCDATA.edges.length;\n  let filteredNodeCount, filteredEdgeCount;\n  if (filterAction === FILTER.ACTION.FADE) {\n    filteredNodeCount = nodeCount - FILTEREDNCDATA.nodes.filter(n => n.filteredTransparency <= transparencyNode).length\n    filteredEdgeCount = edgeCount - FILTEREDNCDATA.edges.filter(e => e.filteredTransparency <= transparencyEdge).length\n  } else {\n    filteredNodeCount = FILTEREDNCDATA.nodes.length;\n    filteredEdgeCount = FILTEREDNCDATA.edges.length;\n  }\n  const statsSummary = `Showing ${filteredNodeCount}/${nodeCount} nodes, ${filteredEdgeCount}/${edgeCount} edges`\n\n  return { nodeCount, edgeCount, filteredNodeCount, filteredEdgeCount, statsSummary }\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_UpdateFilterSummary(statsSummary) {\n  const FILTERDEFS = UDATA.AppState('FILTERDEFS');\n\n  // skip if FILTERDEFS has not been defined yet\n  if (Object.keys(FILTERDEFS).length < 1) return;\n\n  const nodeFilters = FILTERDEFS.nodes.filters;\n  const edgeFilters = FILTERDEFS.edges.filters;\n\n  const typeSummary = FILTERDEFS.filterAction; // text for filter action is the label, e.g. 'HIGHLIGHT'\n  const nodeSummary = m_FiltersToString(FILTERDEFS.nodes.filters);\n  const edgeSummary = m_FiltersToString(FILTERDEFS.edges.filters);\n  let summary = '';\n  if (nodeSummary || edgeSummary)\n    summary = `${typeSummary} ${nodeSummary ? 'NODES: ' : ''}${nodeSummary} ${edgeSummary ? 'EDGES: ' : ''\n      }${edgeSummary}`;\n  if (summary) summary += ' ' + statsSummary;\n\n  UDATA.LocalCall('FILTER_SUMMARY_UPDATE', { filtersSummary: summary });\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_UpdateFilters() {\n  const statsSummary = m_FiltersApply();\n  m_UpdateFilterSummary(statsSummary);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_FiltersToString(filters) {\n  let summary = '';\n  filters.forEach(filter => {\n    if (\n      filter.operator === undefined ||\n      filter.value === undefined ||\n      filter.value === ''\n    )\n      return;\n    summary += filter.keylabel + ' ';\n    summary += m_OperatorToString(filter.operator) + ' ';\n    summary += '\"' + filter.value + '\"; ';\n  });\n  return summary;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_OperatorToString(operator) {\n  return FILTER.OPERATORS[operator].label;\n}\n\n/// UTILITY FUNCTIONS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction clean(str) { return NCLOGIC.EscapeRegexChars(String(str).trim()); };\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/**\n *  Match strings, allowing use of `&&` and `||`\n *  * Matches strings in a flat list of pairs, starting with ORs\n *  * Does not support grouping\n *  * Operator precedence: ORs are evaluated first, follwed by ANDs.\n *  * Extra spaces will be trimmed.\n *  @param {string} needle aka \"needle\" in the haystack\n *  @param {*} haystack\n *  @param {*} contains\n *  @returns booleean\n */\nfunction m_MatchString(needle, haystack, contains = true) {\n  const ANDNeedles = String(needle).split('&&');\n  const ORNeedleArrs = ANDNeedles.map(ands => String(ands).split(/\\|\\|/).map(str => String(str).trim()));\n  // For each set of OR Array matches, evaluate the pair\n  const ResultsOR = ORNeedleArrs.map(pair => pair.reduce((a, b) => a || m_MatchStringSnippet(clean(b), haystack, true), false));\n  const ResultsAND = ResultsOR.reduce((a, b) => a && b, true);\n  return contains ? ResultsAND : !ResultsAND;\n}\nfunction m_MatchStringSnippet(needle, haystack, contains = true) {\n  const regex = new RegExp(/*'^'+*/ needle, 'i');\n  let matches;\n  if (needle === '') {\n    // empty string matches everything\n    matches = true;\n  } else if (contains) {\n    matches = regex.test(haystack);\n  } else {\n    matches = !regex.test(haystack);\n  }\n  return matches;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_MatchNumber(operator, filterVal, objVal) {\n  let matches;\n  if (filterVal === '') {\n    matches = true;\n  } else {\n    switch (operator) {\n      case FILTER.OPERATORS.GT.key:\n        matches = objVal > filterVal;\n        break;\n      case FILTER.OPERATORS.GT_EQ.key:\n        matches = objVal >= filterVal;\n        break;\n      case FILTER.OPERATORS.LT.key:\n        matches = objVal < filterVal;\n        break;\n      case FILTER.OPERATORS.LT_EQ.key:\n        matches = objVal <= filterVal;\n        break;\n      case FILTER.OPERATORS.EQ.key:\n        matches = objVal === filterVal;\n        break;\n      case FILTER.OPERATORS.NOT_EQ.key:\n        matches = objVal !== filterVal;\n        break;\n      default:\n        console.error(`filter-mgr.js: Unknown operator ${operator}`);\n        break;\n    }\n  }\n  return matches;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_MatchHDate(operator, filterVal, objVal) {\n  // deconstruct the hdate\n  const { value, format, formattedString } = objVal;\n  const akey = HDATE.Parse(value); // parseResult\n  const bkey = HDATE.Parse(filterVal);\n  if (akey.length < 1 || bkey.length < 1) return false;\n  const da = akey[0].start.knownValues;\n  const db = bkey[0].start.knownValues;\n\n  // first make sure that the dates share common values\n  // if they do not share common values, then there's no match\n  const dakeys = Object.keys(da);\n  const dbkeys = Object.keys(db);\n  const commonKeys = dbkeys.filter(k => dakeys.includes(k));\n  if (commonKeys.length < 1) {\n    // no common keys, so there's nothing to match\n    return false;\n  }\n\n  let order;\n  if (commonKeys.includes('year') && da.year !== db.year) {\n    order = da.year - db.year;\n  } else if (commonKeys.includes('month') && da.month !== db.month) {\n    order = da.month - db.month;\n  } else if (commonKeys.includes('day') && da.day !== db.day) {\n    order = da.day - db.day;\n  } else if (commonKeys.includes('hour') && da.hour !== db.hour) {\n    order = da.hour - db.hour;\n  } else if (commonKeys.includes('minute') && da.minute !== db.minute) {\n    order = da.minute - db.minute;\n  } else if (commonKeys.includes('second') && da.second !== db.second) {\n    order = da.second - db.second;\n  } else {\n    // matched!\n    order = 0;\n  }\n\n  let matches;\n  if (filterVal === '') {\n    matches = true;\n  } else {\n    switch (operator) {\n      case FILTER.OPERATORS.GT.key:\n        matches = order > 0;\n        break;\n      case FILTER.OPERATORS.GT_EQ.key:\n        matches = order >= 0;\n        break;\n      case FILTER.OPERATORS.LT.key:\n        matches = order < 0;\n        break;\n      case FILTER.OPERATORS.LT_EQ.key:\n        matches = order <= 0;\n        break;\n      case FILTER.OPERATORS.EQ.key:\n        matches = order === 0;\n        break;\n      case FILTER.OPERATORS.NOT_EQ.key:\n        matches = order !== 0;\n        break;\n      default:\n        console.error(`filter-mgr.js: Unknown operator ${operator} for HDATE filter`);\n        break;\n    }\n  }\n  return matches;\n}\n\n/// NODE FILTERS //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Side effect: FILTEREDNCDATA.nodes are updated with a new `filterTransparency`. */\nfunction m_FiltersApplyToNodes(FILTERDEFS, FILTEREDNCDATA) {\n  RemovedNodes = [];\n\n  // if current filter is focus, calculate bacon_values\n  if (FILTERDEFS.filterAction === FILTER.ACTION.FOCUS)\n    m_FocusPrep(FILTERDEFS, FILTEREDNCDATA);\n\n  FILTEREDNCDATA.nodes = FILTEREDNCDATA.nodes.filter(node => {\n    return m_NodeIsFiltered(node, FILTERDEFS);\n  });\n}\n\nfunction m_NodeIsFiltered(node, FILTERDEFS) {\n  const { filterAction } = FILTERDEFS;\n  const { filters, transparency } = FILTERDEFS.nodes;\n  const { source, range } = FILTERDEFS.focus;\n\n  // let all_no_op = true;\n  let keepNode = true;\n\n  // 1. Look for matches\n  // implicit AND.  ALL filters must return true.\n  filters.forEach(filter => {\n    if (filter.operator === FILTER.OPERATORS.NO_OP.key) return; // skip no_op\n    // all_no_op = false;\n    if (!m_IsNodeMatchedByFilter(node, filter)) {\n      keepNode = false;\n    }\n  });\n\n  // 2. Decide based on filterAction\n  node.filteredTransparency = NODE_DEFAULT_TRANSPARENCY; // always reset if not HIGHLIGHT\n  if (filterAction === FILTER.ACTION.FILTER) {\n    // not using highlight, so restore transparency\n    if (keepNode) return true;\n    return false; // remove from array\n  } else if (filterAction === FILTER.ACTION.FADE) {\n    if (!keepNode) {\n      node.filteredTransparency = transparency; // set the transparency value ... right now it is inefficient to set this at the node / edge level, but that's more flexible\n    }\n    return true; // don't filter out\n  } else if (filterAction === FILTER.ACTION.REDUCE) {\n    if (keepNode) return true; // matched, so keep\n    // filter out (remove) and add to `RemovedNodes` for later removal of linked edge\n    RemovedNodes.push(node.id);\n    return false;\n  } else if (filterAction === FILTER.ACTION.FOCUS) {\n    // Remove nodes outside of range\n    if (\n      source !== undefined &&\n      (node.bacon_value === undefined || node.bacon_value > range)\n    ) {\n      RemovedNodes.push(node.id);\n      return false;\n    }\n    return true;\n  } else {\n    // no filter, keep the node!\n    return true;\n  }\n\n  // all_no_op\n  // This is currently redundant because matchesFilter will always\n  // be true if there are no filters.  If matchesFilter is true,\n  // then the node will not be removed/faded.\n  //\n  // if (all_no_op) {\n  //   // all filters are \"no_op\", so no filters defined, don't filter anything\n  //   node.filteredTransparency = 1.0; // opaque, not tranparent\n  // }\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_IsNodeMatchedByFilter(node, filter) {\n  if (\n    filter.key === undefined ||\n    filter.operator === undefined ||\n    filter.value === undefined\n  ) {\n    return false; // nothing to filter\n  }\n\n  const nodeValue = node[filter.key];\n\n  switch (filter.operator) {\n    case FILTER.OPERATORS.CONTAINS.key:\n      return m_MatchString(filter.value, nodeValue, true);\n    case FILTER.OPERATORS.NOT_CONTAINS.key:\n      return m_MatchString(filter.value, nodeValue, false);\n    case FILTER.OPERATORS.IS_EMPTY.key:\n      return nodeValue === undefined || nodeValue === '';\n    case FILTER.OPERATORS.IS_NOT_EMPTY.key:\n      return nodeValue !== undefined && nodeValue !== '';\n    default:\n      if (nodeValue === undefined) return false; // no value to match\n      if (filter.type === FILTER.TYPES.HDATE)\n        return m_MatchHDate(filter.operator, filter.value, nodeValue);\n      // else assume it's a number\n      return m_MatchNumber(filter.operator, filter.value, nodeValue);\n  }\n}\n\n/// EDGE FILTERS //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_FiltersApplyToEdges(FILTERDEFS, FILTEREDNCDATA) {\n  const { filterAction } = FILTERDEFS;\n  const { filters, transparency } = FILTERDEFS.edges;\n  if (!FILTEREDNCDATA.edges) return; // no data\n  FILTEREDNCDATA.edges = FILTEREDNCDATA.edges.filter(edge => {\n    return m_EdgeIsFiltered(\n      edge,\n      filters,\n      transparency,\n      filterAction,\n      FILTEREDNCDATA\n    );\n  });\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/**\n *  Side effect: FILTEREDNCDATA.edges are updated with a new `filterTransparency`.\n */\nfunction m_EdgeIsFiltered(edge, filters, transparency, filterAction, FILTEREDNCDATA) {\n  // let all_no_op = true; // all filters are no_op\n  let keepEdge = true;\n  const source = FILTEREDNCDATA.nodes.find(e => {\n    if (edge.source === undefined) return false;\n    // on init, edge.source is just an id.  only with d3 processing does it\n    // get transformed into a node object.  so we have to check the type.\n    const sourceId = typeof edge.source === 'number' ? edge.source : edge.source.id;\n    return e.id === sourceId;\n  });\n  const target = FILTEREDNCDATA.nodes.find(e => {\n    if (edge.target === undefined) return false;\n    // on init, edge.target is just an id.  only with d3 processing does it\n    // get transformed into a node object.  so we have to check the type.\n    const targetId = typeof edge.target === 'number' ? edge.target : edge.target.id;\n    return e.id === targetId;\n  });\n\n  // 0. First set default transparency\n  // restore default transparency, otherwise it could remain faded out\n  edge.filteredTransparency = EDGE_DEFAULT_TRANSPARENCY; // opaque\n\n  // 1. If source or target are missing, then remove the edge\n  if (source === undefined || target === undefined) return false;\n\n  // 2. If source or target have been removed via collapse or focus, remove the edge\n  if (RemovedNodes.includes(source.id) || RemovedNodes.includes(target.id))\n    return false;\n  // 3. if source or target is transparent, then we are transparent too\n  if (source.filteredTransparency < 1.0 || target.filteredTransparency < 1.0) {\n    // regardless of filter definition...\n    // ...if filterAction is FILTER\n    // always hide edge if it's attached to a filtered node\n    if (filterAction === FILTER.ACTION.FILTER) return false;\n    // ...else if filterAction is HIGHLIGHT\n    // don't filter, just fade\n    edge.filteredTransparency = transparency; // set the transparency value ... right now it is inefficient to set this at the node / edge level, but that's more flexible\n    return true;\n  }\n\n  // 4. otherwise, look for matches\n  // implicit AND.  ALL filters must return true.\n  // edge is filtered out if it fails ANY filter tests\n  filters.forEach(filter => {\n    if (filter.operator === FILTER.OPERATORS.NO_OP.key) return; // skip no_op\n    // Found a filter!  Apply it!\n    // all_no_op = false;\n    if (!m_IsEdgeMatchedByFilter(edge, filter)) {\n      keepEdge = false;\n    }\n  });\n\n  // 3. Decide how to filter based on filterAction\n  if (filterAction === FILTER.ACTION.FILTER) {\n    // FILTER!\n    // not using highlight, so restore transparency\n    edge.filteredTransparency = EDGE_DEFAULT_TRANSPARENCY; // opaque\n    if (keepEdge) return true; // keep in array\n    return false; // remove from array\n  } else if (filterAction === FILTER.ACTION.FADE) {\n    if (!keepEdge) {\n      edge.filteredTransparency = transparency; // set the transparency value ... right now it is inefficient to set this at the node / edge level, but that's more flexible\n    }\n    return true; // always keep in array\n  } else if (filterAction === FILTER.ACTION.REDUCE) {\n    if (keepEdge) return true; // matched, so keep\n    // else filter out (remove)\n    return false;\n  } else {\n    // keep by default if no filter\n    return true;\n  }\n\n  // all_no_op\n  // This is currently redundant because matchesFilter will always\n  // be true if there are no filters.  If matchesFilter is true,\n  // then the node will not be removed/faded.\n  //\n  // if (all_no_op) {\n  //   // no filters defined, undo isFilteredOut\n  //   edge.filteredTransparency = 1.0;\n  // } else {\n  // }\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_IsEdgeMatchedByFilter(edge, filter) {\n  if (\n    filter.key === undefined ||\n    filter.operator === undefined ||\n    filter.value === undefined\n  ) {\n    return false; // nothing to filter\n  }\n\n  let edgeValue;\n  if (filter.type === FILTER.TYPES.NODE) {\n    // edges fields that poitn to nodes require special handling because `source` and `target`\n    // point to node objects, not simple strings.\n    if (filter.key === 'source') edgeValue = edge.sourceLabel;\n    if (filter.key === 'target') edgeValue = edge.targetLabel;\n  } else {\n    edgeValue = edge[filter.key];\n  }\n\n  switch (filter.operator) {\n    case FILTER.OPERATORS.CONTAINS.key:\n      return m_MatchString(filter.value, edgeValue, true);\n    case FILTER.OPERATORS.NOT_CONTAINS.key:\n      return m_MatchString(filter.value, edgeValue, false);\n    case FILTER.OPERATORS.IS_EMPTY.key:\n      return edgeValue === undefined || edgeValue === '';\n    case FILTER.OPERATORS.IS_NOT_EMPTY.key:\n      return edgeValue !== undefined && edgeValue !== '';\n    default:\n      if (edgeValue === undefined) return false; // no value to match\n      if (filter.type === FILTER.TYPES.HDATE)\n        return m_MatchHDate(filter.operator, filter.value, edgeValue);\n      // else assume it's a number\n      return m_MatchNumber(filter.operator, filter.value, edgeValue);\n  }\n}\n\n/// FOCUS FILTERS /////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Returns an Map of node ids that are directly connected to the passed `nodeId`\n *  Uses a Map so there are no redundancies.\n *  A more efficient search targeted on looking up nodes\n *  @param {object} puredata Raw/pure data from NCData\n *  @param {array} puredata.nodes\n *  @param {array} puredata.edges where edge.source and edge.target are numeric ids\n *  @param {string} nodeId The source nodeId to start the search from\n *  @returns {map} Map of matching nodeIds {number}\n */\nfunction m_FindConnectedNodeIds(puredata, nodeId) {\n  let returnMatches = new Map();\n  puredata.edges.forEach(edge => {\n    if (edge.source === nodeId) returnMatches.set(edge.target, nodeId); // nodeId in returnMatches is not necessary\n    if (edge.target === nodeId) returnMatches.set(edge.source, nodeId);\n  });\n  return returnMatches;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Recursively walks down the network starting from the sourceNodes\n *  There can be more than one sourceNodes, e.g. this can set values starting with any number of nodes\n *  Modifies puredata by reference\n *  @param {object} puredata {nodes, edges}\n *  @param {array} sourceNodes {string}\n *  @param {number} range\n */\nfunction m_SetBaconValue(bacon_value, max_bacon_value, puredata, sourceNodes) {\n  if (bacon_value > max_bacon_value) return;\n  sourceNodes.forEach(source => {\n    const newNodes = []; // collect new nodes that we need to walk down\n    const connectedNodeIds = m_FindConnectedNodeIds(puredata, source); // map\n    puredata.nodes = puredata.nodes.map(node => {\n      if (node.bacon_value !== undefined) return node; // skip bacon_value if ready set\n\n      if (node.id === source) {\n        node.bacon_value = 0; // the focused node has a value of 0\n      } else if (connectedNodeIds.has(node.id)) {\n        node.bacon_value = bacon_value;\n        newNodes.push(node.id);\n      }\n      return node; // returns node with updated bacon_value\n    });\n\n    // recursive call\n    if (newNodes.length > 0 && bacon_value + 1 <= max_bacon_value)\n      m_SetBaconValue(bacon_value + 1, max_bacon_value, puredata, newNodes);\n  });\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Prepares `puredata` (aka FILTEREDNCDATA) for filtering by\n *  seeding node data with \"degrees of separation\" (aka \"bacon_value\") from the selected node\n *  Uses FILTERDEFS specifications for the focus selection and range\n *  Modifies puredata by reference\n *  This should generally be called right before filtering is applied\n *  @param {*} FILTERDEFS\n *  @param {*} puredata\n */\nfunction m_FocusPrep(FILTERDEFS, puredata) {\n  const { source, range } = FILTERDEFS.focus;\n  // first clear bacon_value\n  puredata.nodes = puredata.nodes.map(node => {\n    node.bacon_value = undefined;\n    return node;\n  });\n  if (range < 1) {\n    return; // show all if range=0\n  }\n  // Then set bacon_value\n  // Initiate the crawl starting at 1 with the source node\n  m_SetBaconValue(1, range, puredata, [source]);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Called when SELECTION appState changes, e.g. user has clicked on a node\n *  while in FOCUS View.\n *  @param {object} data\n *  @param {array} data.nodes array of node objects\n */\nfunction m_SetFocus(data) {\n  const selectedNode = data.nodes[0];\n  const selectedNodeId = selectedNode ? selectedNode.id : undefined;\n  const selectedNodeLabel = selectedNode ? selectedNode.label : '';\n\n  // Set FILTERDEFS\n  const FILTERDEFS = UDATA.AppState('FILTERDEFS');\n  FILTERDEFS.focus = {\n    source: selectedNodeId,\n    sourceLabel: selectedNodeLabel,\n    range: FILTERDEFS.focus.range\n  };\n  UDATA.SetAppState('FILTERDEFS', FILTERDEFS);\n  // Actual filtering is done by m_FiltersApply call after FILTERDEFS change\n}\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  HILITE MANAGER\n\n  hilite-mgr handles UI highlighting events like:\n  * mouse over graph node\n  * mouse over Node Table row\n  * highlighting found nodes via search\n  * Others TBD\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst UNISYS = require('unisys/client');\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar MOD = UNISYS.NewModule(module.id);\nvar UDATA = UNISYS.NewDataLink(MOD);\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'hilite-mgr: ';\n\n/// UNISYS HANDLERS ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nMOD.Hook('INITIALIZE', () => {\n  UDATA.HandleMessage('USER_HILITE_NODE', m_UserHighlightNode);\n  UDATA.HandleMessage('AUTOSUGGEST_HILITE_NODE', m_AutoSuggestHiliteNode);\n  UDATA.HandleMessage('TABLE_HILITE_NODE', m_TableHiliteNode);\n}); // end UNISYS_INIT\n\n/// MODULE METHODS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_UserHighlightNode(data) {\n  // console.log('mouseover', data.nodeId)\n  const HILITE = UDATA.AppState('HILITE');\n  HILITE.userHighlightNodeId = data.nodeId;\n  UDATA.SetAppState('HILITE', HILITE);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** AUTOSUGGEST_HILITE_NODE shows the current mouse-over node name in a list of\n *  autosuggested/autocompleted node names from AutoComplete.\n */\nfunction m_AutoSuggestHiliteNode(data) {\n  const HILITE = UDATA.AppState('HILITE');\n  HILITE.autosuggestHiliteNodeId = data.nodeId;\n  UDATA.SetAppState('HILITE', HILITE);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** User is hovering over a row in the NodeTable.\n *  The corresponding node in the graph will also highlighted.\n */\nfunction m_TableHiliteNode(data) {\n  const HILITE = UDATA.AppState('HILITE');\n  HILITE.tableHiliteNodeId = data.nodeId;\n  UDATA.SetAppState('HILITE', HILITE);\n}\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  ## Import / Export Manager\n\n  See ImportExport.jsx for the UI.\n\n  #### Data Format\n\n  The import/export data format is '.csv'.\n\n  The first row should define the headers.\n  Each data row should be comma-delimited and ended with a CR/LF.\n\n  We support:\n  * CR/LF inside of double quotes\n  * Double quotes need to be escaped by repeating the quote, e.g. `\"\"quoted text\"\"\"\n  * Dates can be exported and imported as UTCStrings\n\n  In general, any valid '.csv' file exported by Excel ought to work.\n\n  #### Permissions\n\n  Everyone is allowed to EXPORT data.\n  * The data fields that are exported are defined in the project's template.\n    Any field that is NOT marked \"hidden\" is exported.\n\n  In general, only admins are allowed IMPORT data.\n  * If the `allowLoggedInUserToImport` flag is set in the template, then\n    logged-in users are also allowed to import data.\n  * When anyone on the net is importing data, \"Edit Lock\" is set and no\n    one else is allowed to import, edit a node or edge, or edit a template.\n    This is because each of those activities can potentially conflict with\n    each other.\n\n\n  #### How it works\n\n  Coordinating the selection of node and edge files for imports is a complex\n  dance of selection, validation, and reporting.  When an import file is\n  selected, we:\n\n  1. Make sure any headers required by the Template are present\n  2. Attempt to load the field data into memory\n  3. Validate the data, either adding new objects or replacing existing objects\n     For edges, we also check that the sources and targets point to valid nodes\n  4. Display the expected import -- kind of like a dry run output.\n  5. Wait fo the user to confirm and click Import.\n  6. After the user clicks import, erge the data into the database and\n  refresh global NCDATA.\n\n  If there is a failure at any point, we abort immediately and display an error\n  and clear the UI for the user to fix the import file and select a\n  replacement file.  Importing can be a complex process, so we want to provide\n  as much feedback as we can along the way so users know how to fix problems.\n\n  Node and edge import files can be selected separately and in any order.\n  The import data is temporarily stored in `IMPORT_NCDATA` for validation.\n\n  The DB is NOT updated until the user clicks \"Import\".\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst UNISYS = require('unisys/client');\nconst DATASTORE = require('system/datastore');\nconst TOML = require('@iarna/toml');\nconst clone = require('rfdc')();\nconst UTILS = require('./nc-utils');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = true;\nconst PR = 'importexport-mgr: ';\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar MOD = UNISYS.NewModule(module.id);\nvar UDATA = UNISYS.NewDataLink(MOD);\n\n/// CONSTANTS /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// For CSV Importing\n/// * new id keyword\nconst NEW_ID_KEYWORD = 'new'; // use id \"new\" to add a new record during import\n/// We need to match:\n/// * To split lines, we need to split on LF that is NOT wrapped in quotes\nconst REGEXMatchLFNotInQuotes = /\\n(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;\n/// * To read fields, we need to ignore commas that are between two double quotes\nconst REGEXMatchCommasNotInQuotes = /,(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;\n\n/// UTILITIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_formatDate(date) {\n  // wrap in quotes because time includes a comma\n  if (date) return `\"${new Date(date).toUTCString()}\"`;\n  return '';\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_encode(data) {\n  let res;\n  // double quotes need to be escaped\n  res = String(data).replace(/\"/g, '\"\"');\n  // Don't encode carriage returns, csv should support LF inside of quotes\n  // `REGEXMatchLFNotInQuotes` should work.\n  // // encode carriage returns\n  // res = String(res).replace(/\\n/g, 'nnn');\n  return res;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_decode(data) {\n  let res;\n  // double quotes need to be escaped\n  res = String(data).replace(/\"\"/g, '\"');\n  return res;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// DEPRECATED -- Used to flatten 'attributes'\n//    'attributes' have been removed, so this should not be needed anymore\n// Converts nested key definitions into a flat array, e.g.\n//     from ['id', { attributes: ['type', 'info'] } ]\n//     into ['id', 'attributes:type', 'attributes:info']\nfunction m_flattenKeys(keys, prefix) {\n  if (!Array.isArray(keys)) {\n    // Recurse\n    const pre = Object.keys(keys)[0];\n    return m_flattenKeys(keys[pre], pre);\n  } else {\n    const flattenedKeys = keys.map(k => {\n      if (typeof k !== 'string') return m_flattenKeys(k);\n      if (prefix) return `${prefix}:${k}`;\n      else return k;\n    });\n    return flattenedKeys.flat();\n  }\n}\n\n/// IMPORT/EXPORT HELPERS ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Returns an array of export values for a given node record\n *  Used during export.\n *  @param {array} nodes - array of source nodes to export\n *  @param {array} keys - node def keys, e.g. 'id' and 'label'\n *                        NOTE this is usually a subset of nodeDef keys\n *                        with `hidden` keys removed so they won't export\n *  @returns - array of node values, e.g. [1,'Tacitus','Person',...]\n */\nfunction m_renderNodeValues(node, keys) {\n  const RESULT = [];\n  keys.forEach(key => {\n    // If the key is an object, recurse\n    // eslint-disable-next-line prefer-reflect\n    if (Object.prototype.toString.call(key) === '[object Object]') {\n      // DEPRECATED -- 'attribute' handler.\n      const subKeys = Object.keys(key); // can have multiple subKeys\n      subKeys.forEach(k => {\n        RESULT.push(m_renderNodeValues(node[k], key[k]));\n      });\n    }\n    // Special Data Handling\n    // -- Number\n    if (['id'].includes(key)) {\n      // Export as a number\n      RESULT.push(node[key]);\n      return;\n    }\n    // -- Revision\n    if (['revision'].includes(key)) {\n      // Export as a number from meta\n      RESULT.push(node.meta[key]);\n      return;\n    }\n    // -- DATE\n    if (['created', 'updated'].includes(key)) {\n      RESULT.push(m_formatDate(node.meta[key]));\n      return;\n    }\n    // -- Normal processing -- wrap in quotes\n    if (Object.prototype.hasOwnProperty.call(node, key)) {\n      RESULT.push(`\"${m_encode(node[key])}\"`); // enclose in quotes to support commas\n      return;\n    }\n    // -- Else, data missing/not defined, add empty string\n    RESULT.push('');\n  });\n  return RESULT;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Returns an array of node records\n *  Used during export.\n *  @param {array} nodes - array of source nodes to export\n *  @param {array} nodekeys - node def keys, e.g. 'id' and 'label'\n *                            NOTE this is usually a subset of nodeDef keys\n *                            with `hidden` keys removed so they won't export\n *  @returns - array of nodes, e.g. [[<tacitus>], [<marc antony>], ...]\n */\nfunction m_GenerateNodesArray(nodes, nodekeys) {\n  /// Define Node KEYS\n  const nodesArr = [];\n  nodes.forEach(n => nodesArr.push(m_renderNodeValues(n, nodekeys)));\n  return nodesArr;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Returns an array of export values for a given edge record\n *  Used during export.\n *  @param {array} edge - array of source nodes to export\n *  @param {array} keys - edge def keys, e.g. 'id' and 'label'\n *                       NOTE this is usually a subset of edgeDef keys\n *                       with `hidden` keys removed so they won't export\n *  @returns - array of edge values, e.g. [1,'is enemy of',2,...]\n */\nfunction m_renderEdgeValues(edge, keys) {\n  const RESULT = [];\n  keys.forEach(key => {\n    // If the key is an object, recurse\n    // eslint-disable-next-line prefer-reflect\n    if (Object.prototype.toString.call(key) === '[object Object]') {\n      // DEPRECATED -- 'attribute' handler.\n      const subKeys = Object.keys(key); // can have multiple subKeys\n      subKeys.forEach(k => {\n        RESULT.push(m_renderNodeValues(edge[k], key[k]));\n      });\n    }\n    // Special Data Handling\n    // -- Number\n    if (['id'].includes(key)) {\n      // Export as a number\n      RESULT.push(edge[key]);\n      return;\n    }\n    // -- SOURCE / TARGET\n    if (['source', 'target'].includes(key)) {\n      // source/target is an id not an object\n      RESULT.push(edge[key]);\n      return;\n    }\n    // -- Revision\n    if (['revision'].includes(key)) {\n      // Export as a number from meta\n      RESULT.push(edge.meta[key]);\n      return;\n    }\n    // -- DATE\n    if (['created', 'updated'].includes(key)) {\n      RESULT.push(m_formatDate(edge.meta[key]));\n      return;\n    }\n    // -- normal processing -- wrap in quotes\n    if (Object.prototype.hasOwnProperty.call(edge, key)) {\n      RESULT.push(`\"${m_encode(edge[key])}\"`); // enclose in quotes to support commas\n      return;\n    }\n    // -- Else, data missing/not defined, add empty string\n    RESULT.push('');\n  });\n  return RESULT;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Returns an array of edge records\n *  Used during export.\n *  @param {array} edges - array of source edges to export\n *  @param {array} edgekeys - edge def keys, e.g. 'id' and 'label'\n *                           NOTE this is usually a subset of edgeDef keys\n *                           with `hidden` keys removed so they won't export\n *  @returns - array of edges, e.g. [[<1:2>], [<1:4>], ...]\n */\nfunction m_GenerateEdgesArray(edges, edgekeys) {\n  /// Define Edge KEYS\n  const edgeArr = [];\n  edges.forEach(e => edgeArr.push(m_renderEdgeValues(e, edgekeys)));\n  return edgeArr;\n}\n\n/// EXPORT NODES //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API METHOD\n *  Exports FILTERED data, not the full data set.\n */\nMOD.ExportNodes = () => {\n  const DATA = UDATA.AppState('FILTEREDNCDATA');\n  const TEMPLATE = UDATA.AppState('TEMPLATE');\n  const { nodes } = DATA;\n  let EXPORT = '';\n\n  /// 1. Export Nodes\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// Define Node KEYS to export\n  /// Use nodekeys from TEMPLATE, but skip hidden fields\n  const nodekeys = Object.keys(TEMPLATE.nodeDefs).filter(k => {\n    return TEMPLATE.nodeDefs[k].hidden ? false : k;\n  });\n\n  /// 2. Expand to CSV\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  ///    2.1. NODES\n  ///    2.1.1. Create headers\n  const nodeHeadersArr = [];\n  nodekeys.forEach(key => {\n    // eslint-disable-next-line prefer-reflect\n    if (Object.prototype.toString.call(key) === '[object Object]') {\n      // DEPRECATED -- 'attribute' handler.\n      throw new Error(`Unexpected node type for ${JSON.stringify(key)}`);\n      // This shouldn't be called anymore as of 2/2022 because the data fields\n      // have been flattened. See #198.\n      // const subKeys = Object.keys(key); // can have multiple subKeys\n      // const internalkeys = subKeys.map(sk => key[sk].map(k => `${sk}:${k}`)).flat();\n      // return internalkeys.map(k => NODEKEY_LABELS[k]);\n    } else {\n      nodeHeadersArr.push(TEMPLATE.nodeDefs[key].exportLabel);\n    }\n  });\n  const nodeHeaders = nodeHeadersArr.flat();\n  ///    2.1.2 Export Nodes with filtered headers\n  const nodesArr = m_GenerateNodesArray(nodes, nodekeys);\n  ///    2.1.3 Attach headers to front of file\n  nodesArr.unshift(nodeHeaders); // add headers\n  ///    2.1.4 Expand Nodes to CSV\n  const commaDelimitedNodes = nodesArr.map(n => n.join(','));\n  EXPORT += commaDelimitedNodes.join('\\n');\n\n  /// 3. Save to File\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  // const encodedURI = encodeURI(EXPORT);\n  const link = document.createElement('a');\n  const blob = new Blob(['\\ufeff', EXPORT]);\n  const url = URL.createObjectURL(blob);\n  link.href = url;\n  const DATASET = window.NC_CONFIG.dataset || 'netcreate';\n  link.download = `${DATASET}_nodes.csv`;\n  // link.setAttribute('href', encodedURI);\n  // link.setAttribute('download', 'netcreate_export.csv');\n  document.body.appendChild(link); // Required for FF\n  link.click();\n  document.body.removeChild(link);\n};\n\n/// EXPORT EDGES //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API METHOD\n *  Exports FILTERED data, not the full data set.\n */\nMOD.ExportEdges = () => {\n  const DATA = UDATA.AppState('FILTEREDNCDATA');\n  const TEMPLATE = UDATA.AppState('TEMPLATE');\n  const { edges } = DATA;\n  let EXPORT = '';\n\n  /// 1. Export Edges\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  /// Define Edge KEYS\n\n  // Old attributes method\n  // const edgesArr = m_GenerateEdgesArray(edges, EDGEKEYS);\n\n  // New Template method\n  // Use edgekeys from TEMPLATE, but skip hidden fields\n  // const edgekeys = Object.keys(TEMPLATE.edgeDefs);\n  const edgekeys = Object.keys(TEMPLATE.edgeDefs).filter(k => {\n    return TEMPLATE.edgeDefs[k].hidden ? false : k;\n  });\n\n  // const edgesArr = m_GenerateEdgesArray(edges, edgekeys);\n\n  /// 3. Expand to CSV\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  ///   3.1. EDGES\n  ///   3.1.1. Create headers\n  const edgeHeadersArr = [];\n  edgekeys.forEach(key => {\n    // eslint-disable-next-line prefer-reflect\n    if (Object.prototype.toString.call(key) === '[object Object]') {\n      // DEPRECATED -- 'attribute' handler.\n      throw new Error(`Unexpected edge type for ${JSON.stringify(key)}`);\n      // const subKeys = Object.keys(key); // can have multiple subKeys\n      // return subKeys.map(sk => key[sk].map(k => `${sk}:${k}`)).flat();\n    } else {\n      edgeHeadersArr.push(TEMPLATE.edgeDefs[key].exportLabel);\n    }\n  });\n  const edgeHeaders = edgeHeadersArr.flat();\n  ///    3.1.2 Export Nodes with filtered headers\n  const edgesArr = m_GenerateEdgesArray(edges, edgekeys);\n  ///    3.1.3 Attach headers to front of file\n  edgesArr.unshift(edgeHeaders);\n  ///    3.1.4 Expand Edges to CSV\n  const commaDelimitedEdges = edgesArr.map(e => e.join(','));\n  EXPORT += commaDelimitedEdges.join('\\n');\n\n  /// 4. Save to File\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  // const encodedURI = encodeURI(EXPORT);\n  const link = document.createElement('a');\n  const blob = new Blob(['\\ufeff', EXPORT]);\n  const url = URL.createObjectURL(blob);\n  link.href = url;\n  const DATASET = window.NC_CONFIG.dataset || 'netcreate';\n  link.download = `${DATASET}_edges.csv`;\n  // link.setAttribute('href', encodedURI);\n  // link.setAttribute('download', 'netcreate_export.csv');\n  document.body.appendChild(link); // Required for FF\n  link.click();\n  document.body.removeChild(link);\n};\n\n/// IMPORT METHODS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet nodeFile;\nlet edgeFile;\nlet nodesToImport = [];\nlet edgesToImport = [];\nlet IMPORT_NCDATA;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API METHOD\n *  Called by ImportExport when user clicks \"Clear File Selections\".\n *  Resets the loaded/validated data for a new set of data\n */\nMOD.ResetImportData = () => {\n  nodeFile = undefined;\n  edgeFile = undefined;\n  nodesToImport = [];\n  edgesToImport = [];\n  IMPORT_NCDATA = clone(UDATA.AppState('NCDATA'));\n};\n\n/// IMPORT HELPERS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// Make sure source and target have valid ids\n/// If not, add message to edgeImportErrors\n/// `row` is the line number in the import csv file\nfunction m_hasValidSourceTarget(edge, NCDATA, edgeImportErrors, row) {\n  const source = NCDATA.nodes.find(n => n.id === Number(edge.source));\n  const target = NCDATA.nodes.find(n => n.id === Number(edge.target));\n  if (source === undefined)\n    edgeImportErrors.push(\n      `Edge id ${edge.id}, row ${row} references unknown source node id ${edge.source}`\n    );\n  if (target === undefined)\n    edgeImportErrors.push(\n      `Edge id ${edge.id}, row ${row} references unknown target node id ${edge.target}`\n    );\n  return source && target;\n}\n\n/// IMPORT MODULE METHODS /////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API METHOD\n *  Called by ImportExport if the user Cancels selecting a node file\n */\nMOD.ResetNodeImportData = () => {\n  nodeFile = undefined;\n  nodesToImport = [];\n  if (IMPORT_NCDATA) IMPORT_NCDATA.nodes = clone(UDATA.AppState('NCDATA').nodes);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API METHOD\n *  Called by IMportExport if the user Cancels selecting a node file\n */\nMOD.ResetEdgeImportData = () => {\n  edgeFile = undefined;\n  edgesToImport = [];\n  if (IMPORT_NCDATA) IMPORT_NCDATA.edges = clone(UDATA.AppState('NCDATA').edges);\n};\n\n/// NODE IMPORT ///////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Loads the file and checks the first row headers to make sure all the required\n *  headers have been defined.\n *  @param {Object} data\n *  @param {File} data.nodefile - https://developer.mozilla.org/en-US/docs/Web/API/File\n *  @returns {isValid:boolean, messageJsx:jsx, headers:[], lines:[]}\n */\nasync function m_NodefileCheckHeaders(data) {\n  let isValid = true;\n  let missingKeys = [];\n  let messageJsx = '';\n\n  // Retrieve import file node keys defined in template\n  const TEMPLATE = UDATA.AppState('TEMPLATE');\n  const NODEKEYS = Object.values(TEMPLATE.nodeDefs)\n    .filter(k => !k.hidden) // Ignore hidden keys\n    .map(k => k.exportLabel);\n\n  const { nodefile } = data;\n  if (nodefile === undefined) return { isValid: false, missingKeys, fileKeys: [] }; // User cancelled\n  let result = await nodefile.text();\n  // Validate Data\n  const lines = result.split(REGEXMatchLFNotInQuotes);\n  // First line should list the headers\n  // Remove headers, so 'lines' is just data\n  const headers = lines.shift().trim().split(',');\n  // get keys\n  const nodeKeys = m_flattenKeys(NODEKEYS);\n  const fileKeys = m_flattenKeys(headers);\n  // check that ALL nodeKeys are in the fileKeys\n  nodeKeys.forEach(k => {\n    if (!fileKeys.includes(k)) {\n      isValid = false;\n      missingKeys.push(`\"${k}\"`);\n    }\n  });\n  if (!isValid) {\n    // construct missing keys jsx\n    messageJsx = (\n      <div style={{ color: 'red' }}>\n        <div>Error trying to import {data.nodefile.name}!</div>\n        <div>Missing keys: {missingKeys.join(', ')}</div>\n        <div>Keys found in file: {fileKeys.join(', ')}</div>\n      </div>\n    );\n  }\n  return { isValid, messageJsx, headers, lines };\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Reads each line, mapping data fields to internal representation fields\n *  @param {array} headers\n *  @param {array} lines\n *  @returns { isValid:boolean, messageJsx:jsx, nodes:[] }\n */\nfunction m_NodefileLoadNodes(headers, lines) {\n  // Map import fields (exportLabel) to internal representation fields, e.g. ID => id,\n  // essentially a reverse look up map\n  const TEMPLATE = UDATA.AppState('TEMPLATE');\n  const INTERNAL_FIELDS_MAP = new Map();\n  Object.entries(TEMPLATE.nodeDefs).map(e =>\n    INTERNAL_FIELDS_MAP.set(e[1].exportLabel, e[0])\n  );\n  // convert nodefileData to JSON\n  // Load JSON\n  let isValid = true;\n  let messageJsx = '';\n  const nodes = lines.map(l => {\n    if (l === \"\") return undefined; // skip blank lines\n    const node = { meta: {} };\n    const subcategories = new Map();\n    const importFields = l.split(REGEXMatchCommasNotInQuotes); // ?=\" needed to match commas in strings\n    importFields.forEach((f, index) => {\n      const field = f.replace(/^\"/, '').replace(/\"$/, ''); // strip start and end quotes from strings\n      const key = headers[index];\n      const keysplit = String(key).split(':');\n      // Subcategory and subkey are DEPRECATED\n      const subcategory = keysplit[0]; // e.g. 'attributes' of 'attributes:Node_type'\n      const subkey = keysplit[1]; // e.g. 'Node_type'\n      if (subkey) {\n        isValid = false;\n        messageJsx = <div color=\"red\">`subkey ${subkey} is deprecated!`</div>;\n        console.error(PR, `subkey ${subkey} is deprecated!`);\n        // DEPRECATED: Review if we decide to use this again.\n        // // Using a sub category?  e.g. 'attributes:Node_type'\n        // const currSubfields = subcategories.get(subcategory) || {};\n        // console.log('...currSubfields', currSubfields, field)\n        // currSubfields[subkey] = field;\n        // subcategories.set(subcategory, currSubfields);\n        // console.log('adding subfields', key, currSubfields, subcategories)\n      } else {\n        // not using a subcategory, just a regular field\n        const exportLabel = headers[index];\n        if (exportLabel === undefined)\n          console.error(\n            PR,\n            'could not find exportLabel for index',\n            index,\n            'in',\n            headers\n          );\n        const internalLabel = INTERNAL_FIELDS_MAP.get(exportLabel);\n        // special handling for internal fields\n        if (['id'].includes(internalLabel)) {\n          // Note that Number(\"\") => 0\n          // We don't want empty ids to be converted to id 0\n          // so we explicitly replace it with NaN\n          node[internalLabel] = field === '' ? NaN : field; // ids are numbers\n        } else if (['created', 'updated'].includes(internalLabel)) {\n          // meta fields: date\n          node.meta[internalLabel] = new Date(field).getTime();\n        } else if (['revision'].includes(internalLabel)) {\n          // meta fields: revision\n          node.meta[internalLabel] = field;\n        } else {\n          node[internalLabel] = m_decode(field); // convert double quotes\n        }\n      }\n    });\n\n    // DEPRECATED\n    // collapse 'attributes' and 'meta' into objects\n    // subcategories.forEach((val, key) => {\n    //   node[key] = val\n    // });\n\n\n    // Add meta data if missing\n    if (isNaN(node.meta.created)) node.meta.created = new Date().getTime();\n    if (isNaN(node.meta.revision)) node.meta.revision = 0;\n\n    return node;\n  }).filter(n => n !== undefined);\n  return { isValid, messageJsx, nodes };\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Checks to make sure all nodes to import have a valid id or specify \"new\"\n *  At the end of this method, IMPORT_NCDATA will have imported nodes added\n *  EXCEPT for \"new\" id nodes\n *  @param {array} nodes\n *  @returns { isValid:boolean, messageJsx:jsx, nodes, IMPORT_NCDATA }\n */\nfunction m_NodefileValidateNodes(nodes) {\n  let isValid = true;\n  let messageJsx = '';\n  let nodesAdded = 0; // counter\n  let nodesReplaced = 0; // counter\n  const importMsgs = [];\n  const nodeImportErrors = [];\n  nodes.forEach((n, i) => {\n    const row = i + 2; // to account for header row\n    if (String(n.id).toLowerCase() === NEW_ID_KEYWORD) {\n      //  A1.1 \"new\" node\n      importMsgs.push(`New node \"${n.label}\" with auto-generated id will be added.`);\n      //  NOTE: \"new\" nodes are not added until after DB_MERGE since they do not have an id\n      //        Edge imports should not be referencing these new nodes.\n      nodesAdded++;\n    } else {\n      n.id = Number(n.id); // csv imports as string, so convert to Number\n      if (isNaN(n.id)) {\n        // A1.2 Invalid node id, usually a string\n        isValid = false;\n        nodeImportErrors.push(\n          `Node in row ${row} does not have a valid id.  Found: \"${n.id}\".`\n        );\n      } else {\n        const existingNodeIdx = IMPORT_NCDATA.nodes.findIndex(\n          node => node.id === n.id\n        );\n        if (existingNodeIdx > -1) {\n          // A1.3 Replace existing node\n          importMsgs.push(\n            `Existing node id ${n.id} \"${IMPORT_NCDATA.nodes[existingNodeIdx].label}\" will be replaced by node \"${n.label}\" in row ${row} with matching id.`\n          );\n          IMPORT_NCDATA.nodes.splice(existingNodeIdx, 1, n);\n          nodesReplaced++;\n        } else {\n          // A1.4 Referenced unknown id, add if valid\n          importMsgs.push(`New node id ${n.id} \"${n.label}\" will be added.`);\n          IMPORT_NCDATA.nodes.push(n);\n          nodesAdded++;\n        }\n      }\n    }\n  });\n  if (isValid) {\n    messageJsx = (\n      <ul>\n        {importMsgs.map((e, i) => (\n          <li key={i}>{e}</li>\n        ))}\n      </ul>\n    );\n  } else {\n    messageJsx = (\n      <ul style={{ color: 'red' }}>\n        {nodeImportErrors.map((e, i) => (\n          <li key={i}>{e}</li>\n        ))}\n      </ul>\n    );\n  }\n  return { isValid, messageJsx, nodes, IMPORT_NCDATA };\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API METHOD\n *  Walks down the checkers/validators one by one and aborts/returns an error message if an\n *  an error is encountered.  Data is stored temporarily in `IMPORT_NCDATA` so that we can\n *  process edges -- e.g. an edge might refer to a node that is currently being imported.\n *\n *  Data is not actually imported in the DB until the user clicks \"Import\"\n *\n *  Side effect: Updates `nodesToImport` with validated nodes\n *  @param {object} data\n *  @param {File} data.nodefile - https://developer.mozilla.org/en-US/docs/Web/API/File\n *  @return { isValid:boolean, messages:[], errors:[] }\n */\nMOD.NodefileValidate = async data => {\n  // No nodefile passed, user probably clicked cancel\n  if (!data.nodefile) return { isValid: false };\n\n  if (!IMPORT_NCDATA) IMPORT_NCDATA = clone(UDATA.AppState('NCDATA'));\n  const nodeFileName = data.nodefile.name;\n\n  const headerResults = await m_NodefileCheckHeaders(data);\n  if (!headerResults.isValid)\n    return Object.assign(headerResults, {\n      messageTitle: `Nodes import file \"${nodeFileName}\" will not be imported: Header Validation Failed!`\n    });\n\n  const importResults = m_NodefileLoadNodes(\n    headerResults.headers,\n    headerResults.lines\n  );\n  if (!importResults.isValid)\n    return Object.assign(importResults, {\n      messageTitle: `Nodes import file \"${nodeFileName}\" will not be imported: Load File Failed!`\n    });\n\n  const nodeResults = m_NodefileValidateNodes(importResults.nodes, IMPORT_NCDATA);\n  if (!nodeResults.isValid)\n    return Object.assign(nodeResults, {\n      messageTitle: `Nodes import file \"${nodeFileName}\" will not be imported: Data Validation Failed!`\n    });\n\n  // set module-wide vars\n  nodesToImport = nodeResults.nodes;\n  nodeFile = data.nodefile;\n  IMPORT_NCDATA.nodes = Object.assign(IMPORT_NCDATA.nodes, nodeResults.nodes);\n  return Object.assign(nodeResults, {\n    messageTitle: `Nodes import file \"${nodeFileName}\": Validated!`\n  });\n};\n\n/// EDGE IMPORT ///////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Loads the file and checks the first row headers to make sure all the\n *  required headers have been defined.\n *  See https://developer.mozilla.org/en-US/docs/Web/API/File for File\n *  @param {Object} data\n *  @param {File} data.edgefile\n *  @returns {isValid:boolean, messageJsx:jsx, headers:[], lines:[]}\n */\nasync function m_EdgefileCheckHeaders(data) {\n  let isValid = true;\n  let missingKeys = [];\n  let messageJsx = '';\n\n  // Retrieve import file node keys defined in template\n  const TEMPLATE = UDATA.AppState('TEMPLATE');\n  const EDGEKEYS = Object.values(TEMPLATE.edgeDefs)\n    .filter(k => !k.hidden) // Ignore hidden keys\n    .map(k => k.exportLabel);\n\n  const { edgefile } = data;\n  if (edgefile === undefined) return { isValid: false, missingKeys, fileKeys: [] }; // User cancelled\n  let result = await edgefile.text();\n  // Validate Data\n  const lines = result.split(REGEXMatchLFNotInQuotes);\n  // First line should list the headers\n  // Remove headers, so 'lines' is just data\n  const headers = lines.shift().trim().split(',');\n  // get keys\n  const edgeKeys = m_flattenKeys(EDGEKEYS);\n  const fileKeys = m_flattenKeys(headers);\n  // check that ALL edgeKeys are in the fileKeys\n  edgeKeys.forEach(k => {\n    if (!fileKeys.includes(k)) {\n      isValid = false;\n      missingKeys.push(`\"${k}\"`);\n    }\n  });\n  if (!isValid) {\n    // construct missing keys jsx\n    messageJsx = (\n      <div style={{ color: 'red' }}>\n        <div>Error trying to import {data.edgefile.name}!</div>\n        <div>Missing keys: {missingKeys.join(', ')}</div>\n        <div>Keys found in file: {fileKeys.join(', ')}</div>\n      </div>\n    );\n  }\n  return { isValid, messageJsx, headers, lines };\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Reads each line, mapping data fields to internal representation fields\n *  @param {array} headers\n *  @param {array} lines\n *  @returns { isValid:boolean, messageJsx:jsx, nodes:[] }\n */\nfunction m_EdgefileLoadEdges(headers, lines) {\n  // Map import fields (exportLabel) to internal representation fields, e.g. ID => id,\n  // essentially a reverse look up map\n  const TEMPLATE = UDATA.AppState('TEMPLATE');\n  const INTERNAL_FIELDS_MAP = new Map();\n  Object.entries(TEMPLATE.edgeDefs).map(e =>\n    INTERNAL_FIELDS_MAP.set(e[1].exportLabel, e[0])\n  );\n\n  // convert nodefileData to JSON\n  // Load JSON\n  let isValid = true;\n  let messageJsx = '';\n  const edges = lines.map(l => {\n    if (l === \"\") return undefined; // skip blank lines\n    const edge = { meta: {} };\n    const subcategories = new Map();\n    const importFields = l.split(REGEXMatchCommasNotInQuotes); // ?=\" needed to match commas in strings\n    importFields.forEach((f, index) => {\n      const field = f.replace(/^\"/, '').replace(/\"$/, ''); // strip start and end quotes from strings\n      const key = headers[index];\n      const keysplit = String(key).split(':');\n      // Subcategory and subkey are DEPRECATED\n      const subcategory = keysplit[0]; // e.g. 'attributes' of 'attributes:Node_type'\n      const subkey = keysplit[1]; // e.g. 'Node_type'\n      if (subkey) {\n        isValid = false;\n        messageJsx = <div color=\"red\">`subkey ${subkey} is deprecated!`</div>;\n        console.error(PR, `subkey ${subkey} is deprecated!`);\n        // DEPRECATED: Review if we decide to use this again.\n        // // Using a sub category?  e.g. 'attributes:Node_type'\n        // const currSubfields = subcategories.get(subcategory) || {};\n        // console.log('...currSubfields', currSubfields, field)\n        // currSubfields[subkey] = field;\n        // subcategories.set(subcategory, currSubfields);\n        // console.log('adding subfields', key, currSubfields, subcategories)\n      } else {\n        // not using a subcategory, just a regular field\n        // meta field?\n        const exportLabel = headers[index];\n        if (exportLabel === undefined)\n          console.error(\n            PR,\n            'could not find exportLabel for index',\n            index,\n            'in',\n            headers\n          );\n        const internalLabel = INTERNAL_FIELDS_MAP.get(exportLabel);\n        // special handling for internal fields\n        if (['id', 'source', 'target'].includes(internalLabel)) {\n          // Note that Number(\"\") => 0\n          // We don't want empty ids to be converted to id 0\n          // so we explicitly replace it with NaN\n          edge[internalLabel] = field === '' ? NaN : field; // ids are numbers\n        } else if (['created', 'updated'].includes(internalLabel)) {\n          // meta fields: date\n          edge.meta[internalLabel] = new Date(field).getTime();\n        } else if (['revision'].includes(internalLabel)) {\n          // meta fields: revision\n          edge.meta[internalLabel] = field;\n        } else {\n          edge[internalLabel] = m_decode(field); // convert double quotes\n        }\n      }\n    });\n\n    // DEPRECATED\n    // collapse 'attributes' and 'meta' into objects\n    // subcategories.forEach((val, key) => {\n    //   node[key] = val\n    // });\n\n    // Add meta data if missing\n    if (isNaN(edge.meta.created)) edge.meta.created = new Date().getTime();\n    if (isNaN(edge.meta.revision)) edge.meta.revision = 0;\n\n    return edge;\n  }).filter(e => e !== undefined);;\n  return { isValid, messageJsx, edges };\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Checks to make sure all edges to import have a valid id or specify \"new\"\n *  @param {array} edges\n *  @returns { isValid:boolean, messageJsx:jsx, nodes, IMPORT_NCDATA }\n *          At the end of this method, IMPORT_NCDATA will have imported edges added EXCEPT for \"new\" id edges\n */\nfunction m_EdgefileValidateEdges(edges) {\n  let isValid = true;\n  let messageJsx = '';\n  let edgesAdded = 0; // counter\n  let edgesReplaced = 0; // counter\n  const importMsgs = [];\n  const edgeImportErrors = [];\n  edges.forEach((e, i) => {\n    const row = i + 2; // to account for header row\n    e.size = 1; // Set default edge size\n\n    // Make sure each edge has a valid source and target\n    if (!m_hasValidSourceTarget(e, IMPORT_NCDATA, edgeImportErrors, row))\n      isValid = false;\n\n    if (String(e.id).toLowerCase() === NEW_ID_KEYWORD) {\n      //  A1.1 \"new\" edge\n      importMsgs.push(`New edge with auto-generated id will be added.`);\n      //  NOTE: \"new\" edges are not added until after DB_MERGE since they do not have an id\n      edgesAdded++;\n    } else {\n      e.id = Number(e.id); // csv imports as string, so convert to Number\n      if (isNaN(e.id)) {\n        // A1.2 Invalid edge id, usually a string\n        isValid = false;\n        edgeImportErrors.push(\n          `Edge in row ${row} does not have a valid id.  Found: \"${e.id}\".`\n        );\n      } else {\n        const existingEdgeIdx = IMPORT_NCDATA.edges.findIndex(\n          edge => edge.id === e.id\n        );\n        if (existingEdgeIdx > -1) {\n          // A1.3 Replace existing node\n          importMsgs.push(\n            `Existing edge id ${e.id} will be replaced by edge in row ${row} with matching id.`\n          );\n          IMPORT_NCDATA.edges.splice(existingEdgeIdx, 1, e);\n          edgesReplaced++;\n        } else {\n          // A1.4 Referenced unknown id, add if valid\n          importMsgs.push(`New edge id ${e.id} will be added.`);\n          IMPORT_NCDATA.edges.push(e);\n          edgesAdded++;\n        }\n      }\n    }\n  });\n  if (isValid) {\n    messageJsx = (\n      <ul>\n        {importMsgs.map((e, i) => (\n          <li key={i}>{e}</li>\n        ))}\n      </ul>\n    );\n  } else {\n    messageJsx = (\n      <ul style={{ color: 'red' }}>\n        {edgeImportErrors.map((e, i) => (\n          <li key={i}>{e}</li>\n        ))}\n      </ul>\n    );\n  }\n  return { isValid, messageJsx, edges, IMPORT_NCDATA };\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API METHOD\n *  Walks down the checkers/validators one by one and aborts/returns an error\n *  message if an an error is encountered.  Data is stored temporarily in\n *  `IMPORT_NCDATA` so that we can process edges -- e.g. an edge might refer to\n *  a node that is currently being imported.\n *\n *  Data is not actually imported in the DB until the user clicks \"Import\"\n *\n *  Side effect: Updates `edgesToImport` with validated edges\n *  @param {object} data\n *  @param {File} data.edgefile - developer.mozilla.org/en-US/docs/Web/API/File\n *  @return { isValid:boolean, messages:[], errors:[] }\n */\nMOD.EdgefileValidate = async data => {\n  // No edgefile passed, user probably clicked cancel\n  if (!data.edgefile) return { isValid: false };\n\n  if (!IMPORT_NCDATA) IMPORT_NCDATA = clone(UDATA.AppState('NCDATA'));\n  const edgeFileName = data.edgefile.name;\n\n  const headerResults = await m_EdgefileCheckHeaders(data);\n  if (!headerResults.isValid)\n    return Object.assign(headerResults, {\n      messageTitle: `Edges import file \"${edgeFileName}\" will not be imported: Header Validation Failed!`\n    });\n\n  const importResults = m_EdgefileLoadEdges(\n    headerResults.headers,\n    headerResults.lines\n  );\n  if (!importResults.isValid)\n    return Object.assign(importResults, {\n      messageTitle: `Edges mport file \"${edgeFileName}\" will not be imported: Load File Failed!`\n    });\n\n  const edgeResults = m_EdgefileValidateEdges(importResults.edges, IMPORT_NCDATA);\n  if (!edgeResults.isValid)\n    return Object.assign(edgeResults, {\n      messageTitle: `Edges import file \"${edgeFileName}\" will not be imported: Data Validation Failed!`\n    });\n\n  // set module-wide vars\n  edgesToImport = edgeResults.edges; // set module-wide var\n  edgeFile = data.edgefile; // set module-wide var\n  return Object.assign(edgeResults, {\n    messageTitle: `Edges import file \"${edgeFileName}\": Validated!`\n  });\n};\n\n/// MAIN IMPORT ///////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API METHOD\n *  This is triggered when the user clicks the \"Import\" button.\n *  Forces a RELOAD_DB after the import data is merged into the database.\n *  @returns {messageJsx} -- summary of file imported\n */\nMOD.Import = async () => {\n  // Write to database!\n  const mergeData = { nodes: nodesToImport, edges: edgesToImport };\n  await UDATA.LocalCall('DB_MERGE', mergeData).then(res => {\n    // Reload NCDATA from the DB to get new Node and Edge Ids created during the merge\n    UDATA.LocalCall('RELOAD_DB');\n  });\n  const importedFiles = [];\n  if (nodeFile) importedFiles.push(nodeFile.name);\n  if (edgeFile) importedFiles.push(edgeFile.name);\n  const importedFileNames = importedFiles.join(', ');\n  return {\n    messageJsx: <div>{importedFileNames} Import Completed!</div>\n  };\n};\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","/* eslint-disable no-alert */\n/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  nc-logic\n\n  Net.Create application logic\n\n  * EVENTS: D3 Graph Updates\n\n    Mark Node/Edge          Nodes in the graph are marked via a stroke around\n                            the circle.  There are two types of marks:\n\n                            1. SEARCH -- when a node matches a search, its\n                            strokeColor is set to green.\n\n                            2. SELECTION -- when a node is selected by the\n                            user and shown in the NodeSelector either by\n                            directly clicking on it or by clicking on a\n                            item in the search suggestion list, the node\n                            data is marked `selected` and a blue strokeColor\n                            is applied.\n\n                            The two marks are orthogonal to each other: a\n                            node can be both searched and selected, though\n                            the selection mark will override the search\n                            mark.\n\n                            The rendering is handled by modifying the\n                            node data in NCDATA.  d3-simplenetgraph will\n                            then read any NCDATA updates and redraw\n                            the graph based on the updated data.\n\n    Add New Node/Edge       When the user adds a new edge or node, handlers in\n                            NetCreate will update its `this.state.data`\n                            with the new nodes/edges.  This is passed on to\n                            `NetGraph.jsx` and in turn to `D3SimpleNetGraph.js`\n                            which will display the new data during its update\n                            cycle.\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst SETTINGS = require('settings');\nconst UNISYS = require('unisys/client');\nconst JSCLI = require('system/util/jscli');\nconst D3 = require('d3');\nconst UTILS = require('./nc-utils');\n\nconst NETWORK = require('unisys/client-network');\nconst DATASTORE = require('system/datastore');\nconst SESSION = require('unisys/common-session');\nconst PROMPTS = require('system/util/prompts');\nconst CMTMGR = require('./comment-mgr');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = PROMPTS.Pad('NCLOGIC');\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DESELECTED_COLOR = '';\n// For backwards compatability, if the template is not setting these\n// Ideally we want to centralize the backwards compatability at some point into one spot\n// OR just remove it, but this was easier to test and shouldn't impact performance substantively\nconst DEFAULT_SEARCH_COLOR = '#008800';\nconst DEFAULT_SOURCE_COLOR = '#FFa500';\nconst TARGET_COLOR = '#FF0000';\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DATASET = window.NC_CONFIG.dataset || 'netcreate';\nconst TEMPLATE_URL = `templates/${DATASET}.toml`;\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar MOD = UNISYS.NewModule(module.id);\nvar UDATA = UNISYS.NewDataLink(MOD);\n\n/// APP STATE/DATA STRUCTURES /////////////////////////////////////////////////\n/*/ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \\*\\\n\n  SELECTION\n\n  The SELECTION state maintains the list of nodes and edges that are\n  currently selected and loaded in the forms.\n\n  Set by      AutoComplete's call to SOURCE_SELECT\n              D3SimpleNetGraph's call to SOURCE_SELECT\n              EdgeEditor's call to EDGE_UPDATE\n  Handled by  NodeSelector to load the currently selected node\n              NodeSelector also sets the edges in EdgeEditor\n              EdgeEditor to select the target node when creating new edge\n\n  * nodes     An array of current selected nodes for editing.\n              This is the node the user clicked on in the graph or selected from\n              the suggestions list\n  * edges     An array of edge objects for editing\n              *REVIEW*: Should this be renamed \"selectedEdges\" to distinguish from\n              *NCDATA.edge\n\n\n\n  SEARCH\n\n  The SEARCH state keeps track of the text being searched for in the\n  main AutoComplete field.  It also provides a list of the nodes that match\n  the search string so that AutoComplete and D3 can display them.  (D3\n  doesn't actually process the SEARCH state change.  Instead it's processed\n  by nc-logic in response to SOURCE_SEARCH calls -- nc-logic\n  will set the node's `selected` or `stroke-color` state if a node\n  is currently selected or matches a search parameter, respectively.)\n\n  Set by      AutoComplete's call to SOURCE_SEARCH when its input changes.\n  Handled by  AutoComplete for its controlled input field\n              NodeSelector for validating when editing the form.\n\n  * searchLabel     A string that the user has typed into AutoComplete\n  * suggestedNodes  An array of nodes that match the searchLabel\n\n\n\n  ACTIVEAUTOCOMPLETE\n\n  The ACTIVEAUTOCOMPLETE state points to the id of the AutoComplete\n  field (either search, or NodeSElector, or EdgeEditor) that has the\n  current focus.  Search results and d3 clicks are routed to the\n  active AutComplete component.\n\n  Set by      Search's call to AUTOCOMPLETE_SELECT on startup\n              NodeSelector's call to AUTOCOMPLETE_SELECT when Edit Node is clicked\n              \" when changes are submitted\n              EdgeEditor's call to AUTOCOMPLETE_SELECT when a new Edge is created\n              \" an edge is selected externally for editing\n              \" an edge being editted is closed (hand back to search)\n              \" changes are submitted\n\n  Handled by  AutoComplete to enable/disable its mode active state,\n              know when and when not to handle SEARCH and SELECTION state updates.\n\n  Looked up   NodeSelector to check if it's the current activeAutoCompleteId\n\n  * activeAutoCompleteId\n              id of active <AutoComplete> field\n              of form: 'node-xx' or 'edge-source-xx' or 'edge-target-xx'\n              where xx = the id of the <AutoComplete> field that has input focus.\n              This is used to keep track of the currently active\n              AutoComplete field. Inactive fields and updates are determined by\n              the value of this property.\n\n\n  NCDATA\n\n  NCDATA is the core pristine network data of nodes and edges. It is read\n  directly from the database, or, when importing data, data is imported\n  into NCDATA.  It is an object consisting of two arrays:\n    `NCDATA = { nodes: [], edges: [] }`\n  See https://whimsical.com/network-data-flow-63qtRETqrfDVfp7EchUdzp\n  NCDATA is maintained as a application-wide AppState, though some modules\n  may keep a local copy.  (This needs to be reviewed and revised).\n  It includes:\n  * nodes: all nodes (not all may be actually changed)\n  * edges: all edges (not all may be actually changed)\n\n\n  FILTEREDNCDATA\n\n  FILTEREDNCDATA is the processed network data. It is derived from NCDATA.\n  It represents a subset of NCDATA with filtered items tagged (for highlight)\n  or removed. d3 will alter FILTEREDNCDATA, replacing edge source/targets\n  ids with node objects.\n  FILTEREDNCDATA is updated whenever NCDATA is updated.\n\n  There are three key differences between NCDATA and FILTEREDNCDATA:\n  1. edge.source and edge.target in NCDATA refer to node ids\n      whereas in FILTEREDNCDATA, edge.source and edge.target are node objects\n  2. Only FILTEREDNCDATA is passed to d3.  d3 never directly touches NCDATA.\n  3. FILTEREDNCDATA is directly derived from NCDATA, and can contain a subset\n      of the nodes or edges of NCDATA. In contrast, NCDATA contains ALL nodes\n      and edges.  When a filter is set, FILTEREDNCDATA is updated from\n      NCDATA, with nodes and edges removed or marked according to the filter.\n\n\\*\\ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -/*/\nvar NCDATA = null; // see above for description\nvar TEMPLATE = null; // template definition for prompts\n\n/// DB LOADER HELPERS /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Used by LOADASSETS and RELOAD_DB to reload NCDATA from the database.\n */\nfunction m_PromiseLoadDB() {\n  return DATASTORE.PromiseD3Data().then(data => {\n    if (DBG) console.log(PR, 'DATASTORE returned data', data);\n    m_MigrateData(data.d3data);\n    UTILS.RecalculateAllEdgeSizes(data.d3data);\n    UTILS.RecalculateAllNodeDegrees(data.d3data);\n    UDATA.SetAppState('NCDATA', data.d3data);\n    UDATA.SetAppState('TEMPLATE', data.template);\n    UDATA.LocalCall('LOAD_COMMENT_DATACORE', data);\n    // Save off local reference because we don't have NCDATA AppStateChange handler\n    NCDATA = data.d3data;\n    TEMPLATE = data.template;\n  });\n}\n\n/// UNISYS LIFECYCLE HOOKS ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** LOADASSETS fires before react components are loaded\n    see client-lifecycle.js for description\n */\nMOD.Hook('LOADASSETS', () => {\n  if (UNISYS.IsStandaloneMode()) {\n    // STANDALONE MODE\n    // Load read-only database from exported db file.\n\n    const USE_CACHE = false;\n    if (USE_CACHE) {\n      console.warn(PR, \"STANDALONE MODE: 'LOADASSETS' using browser cache\");\n      return new Promise((resolve, reject) => {\n        const lstore = window.localStorage;\n        let ld3 = lstore.getItem('NCDATA');\n        NCDATA = JSON.parse(ld3);\n        if (!NCDATA) reject(Error(\"couldn't get NCDATA from Local Store\"));\n        UDATA.SetAppState('NCDATA', NCDATA);\n        let tem = lstore.getItem('TEMPLATE');\n        TEMPLATE = JSON.parse(tem);\n        console.log(NCDATA, TEMPLATE);\n        if (!TEMPLATE) reject(Error(\"couldn't get TEMPLATE from Local Store\"));\n        UDATA.SetAppState('TEMPLATE', TEMPLATE);\n        console.warn('USE_CACHE does not support Comments!'); // See non cached version with LOAD_COMMENT_DATACORE\n        resolve();\n      });\n    }\n    // don't use cache, but instead try loading standalone files\n    console.warn(\n      PR,\n      \"STANDALONE MODE: 'LOADASSETS' is using files (USE_CACHE=false)\"\n    );\n    // added by Joshua to check for alternative datasets in the folder\n    let urlParams = new URLSearchParams(window.location.search);\n    let dataset = urlParams.get('dataset');\n    if (dataset === null) dataset = 'standalone';\n    return new Promise(resolve => {\n      (async () => {\n        let p1 = await DATASTORE.PromiseJSONFile('data/' + dataset + '-db.json').then(\n          d3data => {\n            m_MigrateData(d3data);\n            UTILS.RecalculateAllEdgeSizes(d3data);\n            UTILS.RecalculateAllNodeDegrees(d3data);\n            UDATA.SetAppState('NCDATA', d3data);\n            // Save off local reference because we don't have NCDATA AppStateChange handler\n            NCDATA = d3data;\n            // Load Comment Data\n            UDATA.LocalCall('LOAD_COMMENT_DATACORE', d3data);\n          }\n        );\n        // load template\n        let p2 = await DATASTORE.PromiseTOMLFile(\n          'data/' + dataset + '.template.toml'\n        ).then(data => {\n          TEMPLATE = data;\n          UDATA.SetAppState('TEMPLATE', TEMPLATE);\n        });\n        resolve();\n      })();\n    });\n  }\n  return Promise.all([m_PromiseLoadDB()]);\n}); // loadassets\n\n/// UNISYS LIFECYCLE HOOKS ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** CONFIGURE fires after LOADASSETS, so this is a good place to put TEMPLATE\n *  validation.\n */\nMOD.Hook('CONFIGURE', () => {\n  // Process Node, NodeColorMap and Edge options\n  m_UpdateColorMap();\n}); // end CONFIGURE HOOK\n\n/// UNISYS LIFECYCLE HOOKS ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** DISCONNECT fires when NetMessage.GlobalOfflineMode()\n */\nMOD.Hook('DISCONNECT', () => {\n  console.log('DISCONNECT HOOK');\n  const lstore = window.localStorage;\n  lstore.setItem('NCDATA', JSON.stringify(NCDATA));\n  lstore.setItem('TEMPLATE', JSON.stringify(TEMPLATE));\n  console.log('saving d3data, template to localstore');\n});\n\n/// UNISYS HANDLERS ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** lifecycle INITIALIZE handler\n */\nMOD.Hook('INITIALIZE', () => {\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  UDATA.OnAppStateChange('SESSION', session => {\n    const { userId } = session;\n    // Push updates to sub modules\n    CMTMGR.SetCurrentUserId(userId);\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /** RELOAD_DB\n   *  Called by importexport-mgr.js.MOD.Import:818\n   *  During import, DB_MERGE will be called to merge the import data\n   *  into the DB.  Then it will call RELOAD_DB to re-read the updated\n   *  NCDATA from the database.  This is necessary because new ids will\n   *  have been generated during the merge.\n   */\n  UDATA.HandleMessage('RELOAD_DB', () => {\n    return Promise.all([m_PromiseLoadDB()]);\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /// NCDATA\n  UDATA.OnAppStateChange('NCDATA', stateChange => {\n    if (DBG) console.log('nc-logic: Got NCDATA', stateChange);\n    NCDATA = stateChange;\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /** Handle D3-related updates based on state changes. Subcomponents are\n   *  responsible for updating themselves.\n   */\n  UDATA.OnAppStateChange('SELECTION', stateChange => {\n    if (DBG) console.log('nc-logic: Got SELECTION', stateChange);\n    let { nodes, edges } = stateChange;\n    // NODE LIST UPDATE\n    if (nodes !== undefined) {\n      if (nodes.length > 0) {\n        let color = '#0000DD';\n        nodes.forEach(node => {\n          UNISYS.Log('select node', node.id, node.label);\n          let googlea = NC_CONFIG.googlea;\n\n          if (googlea != '0') {\n            ga('send', {\n              hitType: 'event',\n              eventCategory: 'Node',\n              eventAction: '' + node.label,\n              eventLabel: '' + window.location\n            });\n          }\n        });\n      }\n    }\n  }); // StateChange SELECTION\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /// Search field has been updated\n  UDATA.OnAppStateChange('SEARCH', stateChange => {\n    if (DBG) console.log('nc-logic: Got SEARCH', stateChange);\n    let { nodes, edges } = stateChange;\n    let { searchLabel } = stateChange;\n    let { activeAutoCompleteId } = stateChange;\n    // SEARCH LABEL UPDATE\n    if (NCDATA.nodes.length < 150) {\n      // JD to speedup processing for large sets\n      if (searchLabel === '') {\n        m_UnStrokeAllNodes();\n      } else if (searchLabel !== undefined) {\n        m_SetStrokeColorThatMatch(\n          searchLabel,\n          TEMPLATE.searchColor || DEFAULT_SEARCH_COLOR\n        );\n      }\n    }\n  }); // StateChange SELECTION\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /** User has clicked on a suggestion from the AutoComplete suggestion list.\n   *  The source node should be loaded in NodeSelector.\n   *\n   *  OR, user has clicked on a node in the D3 graph.\n   *  SOURCE_SELECT select node by LABEL. There is only one selected node\n   *  in the app at any one time, though nodeLabels is passed as an array.\n   *  SEE ALSO: AutoComplete.onSuggestionSelected() and\n   *  D3SimpleNetGraph._UpdateGraph click handler\n   */\n  UDATA.HandleMessage('SOURCE_SELECT', m_sourceSelect);\n  function m_sourceSelect(data) {\n    if (DBG) console.log(PR, 'SOURCE_SELECT got data', data);\n\n    let { nodeLabels = [], nodeIDs = [] } = data;\n    let nodeLabel = nodeLabels.shift();\n    let nodeID = nodeIDs.shift();\n    let node, newSelection, newHilite;\n\n    if (nodeID) {\n      node = m_FindNodeById(nodeID); // Node IDs should be integers, not strings\n      if (DBG)\n        console.log(PR, 'SOURCE_SELECT found by nodeID', nodeID, 'node:', node);\n    } else if (nodeLabel) {\n      node = m_FindMatchingNodesByLabel(nodeLabel).shift();\n      if (DBG)\n        console.log(PR, 'SOURCE_SELECT found by nodeLabel', nodeLabel, 'node:', node);\n    } else {\n      // No node selected, so deselect\n      if (DBG) console.log(PR, 'SOURCE_SELECT found no node', node);\n    }\n\n    if (DBG) console.log(PR, 'SOURCE_SELECT found', node);\n\n    if (node === undefined) {\n      // Node not found, create a new state\n      newSelection = {\n        nodes: [],\n        edges: []\n      };\n      newHilite = {\n        autosuggestHiliteNodeId: undefined\n      };\n    } else {\n      // Load existing node and edges\n      let edges = [];\n      if (NCDATA.edges) {\n        // if no edges are defined, skip, otherwise chokes on NCDATA.edges.filter\n        if (nodeID) {\n          edges = edges.concat(\n            NCDATA.edges.filter(\n              edge => edge.source === nodeID || edge.target === nodeID\n            )\n          );\n        } else {\n          console.error(\n            PR,\n            `SOURCE_SELECT trying to match edge using \"label\" ${nodeLabel}.  This is deprecated!`\n          );\n          // REVIEW: are we actually matching label anymore?\n          // This should fail because source/target is no longer an object, just an id\n          // edges = edges.concat(\n          //   NCDATA.edges.filter(\n          //     edge => edge.source.label === nodeLabel || edge.target.label === nodeLabel\n          //   )\n          // );\n        }\n      }\n      // create state change object\n      newSelection = {\n        nodes: [node],\n        edges: edges\n      };\n      newHilite = {\n        autosuggestHiliteNodeId: undefined\n      };\n    }\n\n    // Set the SELECTION state so that listeners such as NodeSelectors update themselves\n    UDATA.SetAppState('SELECTION', newSelection);\n    UDATA.SetAppState('HILITE', newHilite);\n  }\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /** SOURCE_SEARCH sets the current matching term as entered in an\n   *  AutoComplete field.\n   */\n  UDATA.HandleMessage('SOURCE_SEARCH', function (data) {\n    let { searchString } = data;\n    let matches = m_FindMatchingNodesByLabel(searchString);\n    let newState = {\n      suggestedNodes: matches.map(n => {\n        return { id: n.id, label: n.label };\n      }),\n      searchLabel: searchString\n    };\n    // let SELECTION state listeners handle display updates\n    UDATA.SetAppState('SEARCH', newState);\n  });\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /** SOURCE_SEARCH_AND_SELECT first searches for an exact matching node\n   *  and if found, selects it.\n   *  This is called by AutoComplete onBlur in case we need to make an\n   *  implicit selection.\n   */\n  UDATA.HandleMessage('SOURCE_SEARCH_AND_SELECT', function (data) {\n    let { searchString } = data;\n    let node = m_FindMatchingNodesByLabel(searchString).shift();\n    if (node && node.label === searchString) {\n      console.log(\n        PR,\n        'SOURCE_SEARCH_AND_SELECT about to trigger SOURCE_SELECT data was',\n        data\n      );\n      m_sourceSelect({ nodeIDs: [node.id] });\n    }\n  });\n\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /** SOURCE_UPDATE is called when the properties of a node has changed\n   *  Globally updates DATASTORE and working NCDATA objects with the new node data.\n   *  NOTE: SOURCE_UPDATE can be invoked remotely by the server on a DATABASE\n   *  update.\n   */\n  UDATA.HandleMessage('SOURCE_UPDATE', function (data) {\n    let { node } = data;\n    // REVIEW: NodeSelector should probably not be submitting data\n    //         directly to the database.  Instead, it should be notifying\n    //         nc-logic and we handle the degree insertion and db call.\n    // if degrees has not already been set (e.g. this is a new node), default to 0\n    node.degrees = node.degrees || 0;\n    // try updating existing nodes with this id?\n    let updatedNodes = m_SetMatchingNodesByProp({ id: node.id }, node);\n    if (DBG) console.log('SOURCE_UPDATE: updated', updatedNodes);\n    if (updatedNodes.length > 1) {\n      // if more than one matched, then there are duplicate ids\n      throw Error('SOURCE_UPDATE: found duplicate IDs');\n    } else if (updatedNodes.length === 1) {\n      // if one matched, update NCDATA with the refreshed node from the db\n      const index = NCDATA.nodes.findIndex(n => n.id === node.id);\n      NCDATA.nodes.splice(index, 1, node);\n    } else if (updatedNodes.length === 0) {\n      // if no nodes had matched, then add a new node!\n      NCDATA.nodes.push(node);\n    }\n    UDATA.SetAppState('NCDATA', NCDATA);\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  UDATA.HandleMessage('NODE_CREATE', data => {\n    // provenance\n    const session = UDATA.AppState('SESSION');\n    const timestamp = new Date().toLocaleString('en-US');\n    const provenance = [];\n    const createdBy = MOD.GetCurrentUserId();\n    const updatedBy = createdBy;\n\n    return DATASTORE.PromiseNewNodeID().then(newNodeID => {\n      const node = {\n        id: newNodeID, label: data.label, provenance, createdBy, updatedBy\n      };\n      return UDATA.LocalCall('DB_UPDATE', { node }).then(() => {\n        NCDATA.nodes.push(node);\n        UDATA.SetAppState('NCDATA', NCDATA);\n        return node;\n      });\n    });\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /** NODE_DELETE is called by NodeSelector via datastore.js and\n   *  Server.js when an node should be removed\n   */\n  UDATA.HandleMessage('NODE_DELETE', function (data) {\n    let { nodeID, replacementNodeID } = data;\n\n    // Remove or replace edges\n    let edgesToProcess;\n    if (replacementNodeID !== -1) {\n      // replace source/target with replacement node ID\n      let replacementNode = m_FindNodeById(replacementNodeID);\n      edgesToProcess = NCDATA.edges.map(edge => {\n        if (edge.source === nodeID) edge.source = replacementNodeID;\n        if (edge.target === nodeID) edge.target = replacementNodeID;\n        return edge;\n      });\n    } else {\n      // delete edges\n      edgesToProcess = NCDATA.edges.filter(edge => {\n        let pass = false;\n        if (edge.source !== nodeID && edge.target !== nodeID) {\n          pass = true;\n        } else {\n          // filter out AND also remove comments\n          const cref = CMTMGR.GetEdgeCREF(edge.id);\n          CMTMGR.RemoveAllCommentsForCref(cref);\n        }\n        return pass;\n      });\n    }\n    NCDATA.edges = edgesToProcess;\n\n    // Remove Comments\n    const cref = CMTMGR.GetNodeCREF(nodeID);\n    CMTMGR.RemoveAllCommentsForCref(cref);\n\n    // Remove node\n    let updatedNodes = m_DeleteMatchingNodesByProp({ id: nodeID });\n    NCDATA.nodes = updatedNodes;\n    UDATA.SetAppState('NCDATA', NCDATA);\n\n    // Also update selection so nodes in EdgeEditor will update\n    UDATA.SetAppState('SELECTION', {\n      nodes: undefined,\n      edges: undefined\n    });\n    // FIXME: need to also update AutoUpdate!!!\n    // FIXME: Need to also trigger resize!\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /** NODE_TYPES_UPDATE is called by templateEditor-mgr after user has changed the\n   *  node type options.  This maps changed options to a new name,\n   *  and deleted type options to existing options.\n   *  This updates:\n   *  - The template file with new new node types\n   *  - NCDATA and the databse file with node type changes\n   *\n   *  @param {object} data\n   *  @param {object} data.nodeTypesChanges - { label, color, replacement, delete }\n   *  @param {string} data.nodeTypesChanges.label - orig label, used for matching to current node setting\n   *  @param {string} data.nodeTypesChanges.color\n   *  @param {string} data.nodeTypesChanges.replacement - text to replace label\n   *  @param {boolean} data.nodeTypesChanges.delete - option should be removed after mapping\n   */\n  UDATA.HandleMessage('NODE_TYPES_UPDATE', data => {\n    const { nodeTypesChanges } = data;\n    const changeMap = new Map();\n    nodeTypesChanges.forEach(c => {\n      changeMap.set(c.label, c);\n    });\n    NCDATA.nodes = NCDATA.nodes.map(n => {\n      const type = n.type;\n      const change = changeMap.get(n.type);\n      if (change && change.replacement) {\n        n.type = change.replacement;\n      }\n      return n;\n    });\n    // DEPRECATED\n    // As of 3/2022 edge source and target use ids, so there's no longer\n    // a need to convert them.\n    // // Convert D3 source/target nodes objects into ids\n    // NCDATA.edges = m_ConvertSourceTarget2ID(NCDATA.edges);\n\n    // Write to database!\n    // IMPORTANT: We have to update the db BEFORE calling SetAppState\n    // because SetAppseState will cause d3 to convert edge source/targets\n    // from ids back to node objects.\n    UDATA.LocalCall('DBUPDATE_ALL', NCDATA);\n    UDATA.SetAppState('NCDATA', NCDATA);\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  UDATA.HandleMessage('FIND_NODE_BY_PROP', data => {\n    const searchParameters = {};\n    searchParameters[data.key] = data.searchString;\n    return { nodes: m_FindMatchingNodeByProp(searchParameters) };\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  UDATA.HandleMessage('FIND_MATCHING_NODES', data => {\n    return { nodes: m_FindMatchingNodesByLabel(data.searchString) };\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /** When creating a new edge, we first\n   *  1. Add a bare bones edge object with a new ID to the local state.edges\n   *  2. Pass it to render, so that a new EdgeEditor will be created.\n   *  3. In EdgeEditor, we create a dummy edge object\n   *  @param {Object} data\n   *  @param {string} data.nodeId\n   */\n  UDATA.HandleMessage('EDGE_CREATE', data => {\n    // provenance\n    const session = UDATA.AppState('SESSION');\n    const timestamp = new Date().toLocaleString('en-US');\n    const provenance = [];\n    const createdBy = MOD.GetCurrentUserId();\n    const updatedBy = createdBy;\n\n    // call server to retrieve an unused edge ID\n    return DATASTORE.PromiseNewEdgeID().then(newEdgeID => {\n      // Add it to local state for now\n      const edge = {\n        id: newEdgeID,\n        source: data.nodeId,\n        target: undefined,\n        attributes: {},\n        provenance,\n        createdBy,\n        updatedBy\n      };\n      return UDATA.LocalCall('DB_UPDATE', { edge }).then(() => {\n        console.log('...DB_UPDATE node is now', edge);\n        NCDATA.edges.push(edge);\n        UDATA.SetAppState('NCDATA', NCDATA);\n        return edge;\n      });\n    });\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /** EDGE_TYPES_UPDATE is called by templateEditor-mgr after user has changed the\n   *  edge type options.  This maps changed options to a new name,\n   *  and deleted type options to existing options.\n   *  This updates:\n   *  - The template file with new new edge types\n   *  - NCDATA and the databse file with edge type changes\n   *\n   *  @param {object} data\n   *  @param {object} data.nodeTypesChanges - { label, color, replacement, delete }\n   *  @param {string} data.nodeTypesChanges.label - orig label, used for matching to current edge setting\n   *  @param {string} data.nodeTypesChanges.color\n   *  @param {string} data.nodeTypesChanges.replacement - text to replace label\n   *  @param {boolean} data.nodeTypesChanges.delete - option should be removed after mapping\n   */\n  UDATA.HandleMessage('EDGE_TYPES_UPDATE', data => {\n    const { edgeTypesChanges } = data;\n    const changeMap = new Map();\n    edgeTypesChanges.forEach(c => {\n      changeMap.set(c.label, c);\n    });\n    NCDATA.edges = NCDATA.edges.map(e => {\n      const type = e.type;\n      const change = changeMap.get(e.type);\n      if (change && change.replacement) {\n        console.log('replacing', e.type, 'with', change.replacement);\n        e.type = change.replacement;\n      }\n      return e;\n    });\n    // Write to database!\n    // IMPORTANT: We have to update the db BEFORE calling SetAppState\n    // because SetAppState will cause d3 to convert edge source/targets\n    // from ids back to node objects.\n    UDATA.LocalCall('DBUPDATE_ALL', NCDATA);\n    UDATA.SetAppState('NCDATA', NCDATA);\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /** EDGE_UPDATE is called when the properties of an edge has changed\n   *  NOTE: SOURCE_UPDATE can be invoked remotely by the server on a DATABASE\n   *  update.\n   */\n  UDATA.HandleMessage('EDGE_UPDATE', function (data) {\n    let { edge } = data;\n    if (DBG) console.log('nc-logic.EDGE_UPDATE: received edge', edge);\n    // set matching edges\n    let updatedEdges = m_SetMatchingEdgesByProp({ id: edge.id }, edge);\n    if (DBG) console.log('nc-logic.EDGE_UPDATE: updated', updatedEdges);\n\n    if (updatedEdges.length === 0) {\n      // if no edges had matched, then add a new edge!\n      if (DBG) console.log('nc-logic.EDGE_UPDATE: adding new edge', edge);\n      // created edges should have a default size\n      edge.size = 1;\n      NCDATA.edges.push(edge);\n    } else if (updatedEdges.length === 1) {\n      // if there was one edge, update it\n      const index = NCDATA.edges.findIndex(e => e.id === edge.id);\n      NCDATA.edges.splice(index, 1, edge);\n      if (DBG)\n        console.log('nc-logic.EDGE_UPDATE: updating existing edge', updatedEdges);\n    } else if (updatedEdges.length > 1) {\n      // if there were more edges than expected\n      throw Error('EdgeUpdate found duplicate IDs');\n    }\n\n    UTILS.RecalculateAllEdgeSizes(NCDATA);\n    UTILS.RecalculateAllNodeDegrees(NCDATA);\n    UDATA.SetAppState('NCDATA', NCDATA);\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /** EDGE_DELETE is called when an edge should be removed from...something?\n   */\n  UDATA.HandleMessage('EDGE_DELETE', function (data) {\n    let { edgeID } = data;\n    let edges = [];\n    // remove specified edge from edge list\n    NCDATA.edges = m_DeleteMatchingEdgeByProp({ id: edgeID });\n    UTILS.RecalculateAllEdgeSizes(NCDATA);\n    UTILS.RecalculateAllNodeDegrees(NCDATA);\n    UDATA.SetAppState('NCDATA', NCDATA);\n    // Also update selection so edges in EdgeEditor will update\n    let selection = UDATA.AppState('SELECTION');\n    if (\n      selection.nodes === undefined ||\n      selection.nodes.length < 1 ||\n      selection.nodes[0].id === undefined\n    ) {\n      if (DBG) console.log(PR, 'no selection:', selection);\n    } else {\n      if (DBG) console.log(PR, 'updating selection:', selection);\n      let nodeID = selection.nodes[0].id;\n      // Remove the deleted edge from the selection\n      if (selection.edges !== undefined && selection.edges.length > 0) {\n        edges = edges.concat(selection.edges.filter(edge => edge.id !== edgeID));\n      }\n    }\n    UDATA.SetAppState('SELECTION', {\n      nodes: selection.nodes,\n      edges: edges\n    });\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /** AUTOCOMPLETE_SELECT is called by <AutoComplete> components to tell the\n   *  module which one has the current focus.\n   */\n  UDATA.HandleMessage('AUTOCOMPLETE_SELECT', function (data) {\n    m_HandleAutoCompleteSelect(data);\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - inside hook\n  /** TEMPLATE has been edited\n   *  This message is sent from server.js over the net.\n   *  This is the main handler for the local app.  It updates the appState.\n   */\n  UDATA.HandleMessage('NET_TEMPLATE_UPDATE', stateChange => {\n    if (DBG) console.log(PR, 'NET_TEMPLATE_UPDATE state change', stateChange);\n    TEMPLATE = stateChange;\n    UDATA.SetAppState('TEMPLATE', TEMPLATE);\n    m_UpdateColorMap();\n  });\n  /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n  UDATA.HandleMessage('EDIT_CURRENT_TEMPLATE', () => {\n    return { template: TEMPLATE };\n  });\n}); // end UNISYS_INIT\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** INIT HANDLERS\n */\nfunction m_HandleAutoCompleteSelect(data) {\n  if (DBG) console.log('ACL: Setting activeAutoCompleteId to', data.id);\n  UDATA.SetAppState('ACTIVEAUTOCOMPLETE', {\n    activeAutoCompleteId: data.id\n  });\n}\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** lifecycle RESET handler\n */\nMOD.Hook('RESET', () => {\n  // Force an AppState update here so that the react components will load\n  // the data after they've been initialized.  The SetAppState call in\n  // LOADASSETS is broadcast before react components have been loaded.\n  UDATA.SetAppState('NCDATA', NCDATA);\n}); // end UNISYS_RESET\n\n/// APP_READY MESSAGE REGISTRATION ////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** The APP_READY hook is fired after all initialization phases have finished\n *  and may also fire at other times with a valid info packet\n */\nMOD.Hook('APP_READY', function (info) {\n  /// RETURN PROMISE to prevent phase from continuing until after registration\n  /// of messages is successful\n  return new Promise((resolve, reject) => {\n    if (DBG) console.log(`${PR}HOOK 'UNISYS_INIT' Registering Message Handlers...`);\n    // timeout for broken network registration\n    let timeout = setTimeout(() => {\n      reject(new Error('UNISYS REGISTER TIMEOUT'));\n    }, 5000);\n\n    // register ONLY messages we want to make public\n    UNISYS.RegisterMessagesPromise([\n      'SOURCE_UPDATE',\n      `NODE_DELETE`,\n      'EDGE_UPDATE',\n      'EDGE_DELETE',\n      'COMMENT_UPDATE',\n      'COMMENTS_UPDATE',\n      'READBY_UPDATE',\n      'EDIT_PERMISSIONS_UPDATE',\n      'NET_TEMPLATE_UPDATE'\n    ]).then(d => {\n      clearTimeout(timeout);\n      if (DBG)\n        console.log(\n          `${PR}HOOK 'UNISYS_INIT' Registered Message Handlers ${JSON.stringify(\n            d.registered\n          )}`\n        );\n      if (DBG)\n        console.log(\n          `INFO: %cMy socket address is ${UNISYS.SocketUADDR()}`,\n          'color:blue;font-weight:bold'\n        );\n      resolve();\n    });\n  });\n}); // end UNISYS_READY\n\n/// GLOBAL HELPERS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nMOD.GetCurrentUserId = () => {\n  // always get the current session value because it might change at any time\n  const session = UDATA.AppState('SESSION');\n  const { userId } = session;\n  return userId;\n};\n\n/// OBJECT HELPERS ////////////////////////////////////////////////////////////\n/// these probably should go into a utility class\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Return array of objects that match the match_me object keys/values\n *  NOTE: make sure that strings are compared with strings, etc\n */\nfunction m_FindMatchingObjsByProp(obj_list, match_me = {}) {\n  // operate on arrays only\n  if (!Array.isArray(obj_list))\n    throw Error('FindMatchingObjectsByProp arg1 must be array');\n  let matches = obj_list.filter(obj => {\n    let pass = true;\n    for (let key in match_me) {\n      if (match_me[key] !== obj[key]) pass = false;\n      break;\n    }\n    return pass;\n  });\n  // return array of matches (can be empty array)\n  return matches;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Set array of objects that match to key/values of yes/no respectively\n *  Returns array of matched objects\n */\nfunction m_SetMatchingObjsByProp(obj_list, match_me = {}, yes = {}, no = {}) {\n  // operate on arrays only\n  if (!Array.isArray(obj_list))\n    throw Error('SetMatchingObjsByPropp arg1 must be array');\n\n  let returnMatches = [];\n  obj_list.forEach(node => {\n    let matched = true;\n    for (let key in match_me) {\n      if (match_me[key] !== node[key]) matched = false;\n      break;\n    }\n    if (matched) {\n      for (let key in yes) node[key] = yes[key];\n      returnMatches.push(node);\n    } else {\n      for (let key in no) node[key] = no[key];\n    }\n  });\n  return returnMatches;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Update props of everything in obj_list\n */\nfunction m_SetAllObjs(obj_list, all = {}) {\n  // operate on arrays only\n  if (!Array.isArray(obj_list)) throw Error('SetAllNodes arg1 must be array');\n  obj_list.forEach(obj => {\n    for (let key in all) obj[key] = all[key];\n  });\n}\nMOD.SetAllObjs = m_SetAllObjs; // Expose for filter-mgr.js\n\n/// NODE HELPERS //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Update ColorMap\n */\nfunction m_UpdateColorMap() {\n  // REVIEW: Load ColorMap in d3?  or elsewhere?  does it need its own state?\n  // Joshua added Edges in here ... it should either be renamed or kept separate\n  // but this was a proof of concept. Probably they should be kept separate in case\n  // someone ever chooses to use the same label twice, but ...\n  try {\n    const nodeColorMap = {};\n    TEMPLATE.nodeDefs.type.options.forEach(o => {\n      nodeColorMap[o.label] = o.color;\n    });\n\n    const edgeColorMap = {};\n    let defaultEdgeColor = TEMPLATE.edgeDefs.color || '#999'; //for backwards compatability\n    TEMPLATE.edgeDefs.type.options.forEach(o => {\n      edgeColorMap[o.label] = o.color || defaultEdgeColor;\n    });\n\n    UDATA.SetAppState('COLORMAP', { nodeColorMap, edgeColorMap });\n  } catch (error) {\n    console.error(\n      PR,\n      'received bad TEMPLATE node options.  ERROR:',\n      error,\n      '. DATA:',\n      TEMPLATE\n    );\n  }\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Return array of nodes that DON'T match del_me object keys/values\n */\nfunction m_DeleteMatchingNodesByProp(del_me = {}) {\n  let matches = NCDATA.nodes.filter(node => {\n    let pass = false;\n    for (let key in del_me) {\n      if (del_me[key] !== node[key]) {\n        pass = true;\n        break;\n      }\n    }\n    return pass;\n  });\n  // return array of matches (can be empty array)\n  return matches;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Return array of nodes that match the match_me object keys/values\n *  NOTE: make sure that strings are compared with strings, etc\n */\nfunction m_FindMatchingNodeByProp(match_me = {}) {\n  return m_FindMatchingObjsByProp(NCDATA.nodes, match_me);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Convenience function to retrieve node by ID\n */ function m_FindNodeById(id) {\n  return m_FindMatchingNodeByProp({ id })[0];\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Return array of nodes with labels that partially match str\n */\nfunction m_FindMatchingNodesByLabel(str = '') {\n  if (!str) return [];\n  str = u_EscapeRegexChars(str.trim());\n  if (str === '') return [];\n  const regex = new RegExp(/*'^'+*/ str, 'i');\n  return NCDATA.nodes.filter(node => regex.test(node.label));\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Set nodes that PARTIALLY match 'str' to 'yes' props.\n *  All others nodes are set to 'no' props. Return matches\n *  Optionally resets all the NON matching nodes as well\n */\nfunction m_SetMatchingNodesByLabel(str = '', yes = {}, no = {}) {\n  let returnMatches = [];\n  str = u_EscapeRegexChars(str.trim());\n  if (str === '') return undefined;\n  const regex = new RegExp(/*'^'+*/ str, 'i');\n  NCDATA.nodes.forEach(node => {\n    if (regex.test(node.label)) {\n      for (let key in yes) node[key] = yes[key];\n      returnMatches.push(node);\n    } else {\n      for (let key in no) node[key] = no[key];\n    }\n  });\n  return returnMatches;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Update props of exact matching nodes, returns matches\n *  Optionally resets all the NON matching nodes as well\n */\nfunction m_SetMatchingNodesByProp(match_me = {}, yes = {}, no = {}) {\n  return m_SetMatchingObjsByProp(NCDATA.nodes, match_me, yes, no);\n}\n\n/// EDGE HELPERS //////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Return array of edges that DON'T match del_me object keys/values\n */\nfunction m_DeleteMatchingEdgeByProp(del_me = {}) {\n  let matches = NCDATA.edges.filter(edge => {\n    let pass = false;\n    for (let key in del_me) {\n      if (del_me[key] !== edge[key]) {\n        pass = true;\n        break;\n      }\n    }\n    if (!pass) {\n      // filter out AND also remove comments\n      const cref = CMTMGR.GetEdgeCREF(edge.id);\n      CMTMGR.RemoveAllCommentsForCref(cref);\n    }\n    return pass;\n  });\n  // return array of matches (can be empty array)\n  return matches;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Update props of exact matching edges, returns matches\n */\nfunction m_SetMatchingEdgesByProp(match_me = {}, yes = {}, no = {}) {\n  return m_SetMatchingObjsByProp(NCDATA.edges, match_me, yes, no);\n}\n\n/// UTILITIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** REGEX: the chars in brackets are part of matching character set.\n *  Declaring this as a constant makes the RegEx run faster (I think).\n */\nconst REGEX_REGEXCHARS = /[.*+?^${}()|[\\]\\\\]/g;\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Adds a \\ in front of characters that have special RegEx meaning\n *  From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expression\n */\nfunction u_EscapeRegexChars(string) {\n  return string.replace(REGEX_REGEXCHARS, '\\\\$&'); // $& means the whole matched string\n}\nMOD.EscapeRegexChars = u_EscapeRegexChars; // Expose for filter-mgr.js\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Migrate Data from older formats\n *\n *  1. Convert all IDs to integers\n *      Node and Edge IDs should be integers.\n *      This isn't a problem with newly created datasets as the network-generated IDs\n *      are integers.  However, with older data sets, the IDs may have been strings.\n *      e.g. exports from Gephi will have string IDs.\n *      This mismatch is a problem when looking up nodes by ID.\n *        `data` is passed by reference\n *        This modifies `data`\n *        data = { nodes: [], edges: [] }\n *  2. Convert 'attributes' from pre v1.4 datasets\n *      NODES\n *        attributes.Node_type => type\n *        attributes[Extra Info] => info\n *        attributes.Notes => notes\n *      EDGES\n *        attributes.Relationship => type\n *        attributes.Info => info\n *        attributes.Citations = citation\n *        attributes.Notes => notes\n *  3. Remove the old `attributes` key\n */\nfunction m_MigrateData(data) {\n  data.nodes.forEach(node => {\n    node.id = parseInt(node.id);\n    if (node.attributes) {\n      // don't clobber if value is already set\n      node.type = node.type || node.attributes.Node_Type;\n      node.info = node.info || node.attributes['Extra Info'];\n      node.notes = node.notes || node.attributes.Notes;\n      // clear it\n      Reflect.deleteProperty(node, 'attributes');\n    }\n  });\n  data.edges.forEach(edge => {\n    edge.id = parseInt(edge.id);\n    // before D3 processing, edge.source and edge.target are ids\n    edge.source = parseInt(edge.source);\n    edge.target = parseInt(edge.target);\n    if (edge.attributes) {\n      // don't clobber if value is already set\n      edge.type = edge.type || edge.attributes.Relationship;\n      edge.info = edge.info || edge.attributes.Info;\n      edge.citation = edge.citation || edge.attributes.Citations;\n      edge.notes = edge.notes || edge.attributes.Notes;\n      edge.category = edge.category || edge.attributes.Category;\n      // clear it\n      Reflect.deleteProperty(edge, 'attributes');\n    }\n  });\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// DEPRECATED\n// As of 3/2022 edge source and target use ids, so there's no longer\n// a need to convert them.\n//\n// /** Converts edge.source and edge.target from objects to ids\n//     d3 converts edge.source and edget.target from ids to node objects\n//     when it renders NCDATA.  When getting ready to save edges to the database\n//     we need to convert them back to ids.\n//  */\n// function m_ConvertSourceTarget2ID(edges) {\n//   return edges.map(e => {\n//     e.source = e.source && e.source.id;\n//     e.target = e.target && e.target.id;\n//     return e;\n//   });\n// }\n\n/// NODE MARKING METHODS //////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Visually change all nodes to the deselected color\n */\nfunction m_UnMarkAllNodes() {\n  let props = { selected: DESELECTED_COLOR };\n  m_SetAllObjs(NCDATA.nodes, props);\n  UDATA.SetAppState('NCDATA', NCDATA);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Remove the stroke color.  Used to unmark search matches.\n */\nfunction m_UnStrokeAllNodes() {\n  let props = { strokeColor: undefined };\n  m_SetAllObjs(NCDATA.nodes, props);\n  UDATA.SetAppState('NCDATA', NCDATA);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Sets matching node labels to the passed selection color\n */\nfunction m_MarkNodesThatMatch(searchString, color) {\n  if (searchString === '') {\n    m_UnMarkAllNodes();\n    return;\n  }\n  let select = { selected: color };\n  let deselect = { selected: DESELECTED_COLOR };\n  m_SetMatchingNodesByLabel(searchString, select, deselect);\n  UDATA.SetAppState('NCDATA', NCDATA);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Sets matching node labels to the passed selection color\n *  This sets the stroke color, which is used to display\n *  the matching nodes during a search.  If the node is\n *  also selected, the selected color will override this color.\n */\nfunction m_SetStrokeColorThatMatch(searchString, color) {\n  let matched = { strokeColor: color };\n  let notmatched = { strokeColor: undefined };\n  m_SetMatchingNodesByLabel(searchString, matched, notmatched);\n  UDATA.SetAppState('NCDATA', NCDATA);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/* Sets the 'selected' state of edges that are attached to the node\n */\nfunction m_MarkSelectedEdges(edges, node) {\n  // Delesect all edges first\n  edges.forEach(edge => {\n    edge.selected = false;\n  });\n  // Find connected edges\n  let id = node.id;\n  NCDATA.edges.forEach(edge => {\n    if (edge.source === id || edge.target === id) {\n      edge.selected = true;\n    } else {\n      edge.selected = false;\n    }\n  });\n  UDATA.SetAppState('NCDATA', NCDATA);\n}\n\n/// COMMAND LINE UTILITIES ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Command: REGENERATE DEFAULT TEMPLATE\n *  This will regenerate the `_default.template.toml` file from\n *  the current `template-schema.js` spec.  This is only necessary to do\n *  if you've edited the `template.schema.js`` file.\n */\nJSCLI.AddFunction(function ncRegenerateDefaultTemplate() {\n  UDATA.Call('SRV_TEMPLATE_REGENERATE_DEFAULT');\n  console.log('_default.template.toml regenerated from `template-schema.js`');\n});\n/** Command: RESET THE DATABASE from default data\n */\nJSCLI.AddFunction(function ncPushDatabase(jsonFile) {\n  jsonFile = jsonFile || 'data.reducedlinks.json';\n  DATASTORE.PromiseJSONFile(jsonFile)\n    .then(data => {\n      // data is { nodes, edges }\n      console.log(PR, `Sending data from ${jsonFile} to Server`, data);\n      // UDATA.Call() returns a promise, so return it to\n      // continue the asynchronous chain\n      return UDATA.Call('SRV_DBSET', data);\n    })\n    .then(d => {\n      if (d.OK) {\n        window.alert(\n          `assets/data/${jsonFile} was pushed to Server.\\nPress OK to refresh this page and MANUALLY REFRESH other clients.\\n\\n(note: if data hasn't changed, try command again)`\n        );\n        console.log(\n          `${PR} %cServer Database has been overwritten with ${jsonFile}`,\n          'color:blue'\n        );\n        console.log(`${PR} Reload apps to see new data`);\n        setTimeout(UNISYS.ForceReloadOnNavigation, 1000);\n      } else {\n        console.error(PR, 'Server Error', d);\n        window.alert(`Error ${JSON.stringify(d)}`);\n      }\n    });\n  // return syntax help\n  return 'FYI: ncPushDatabase(jsonFile) can load file in assets/data';\n});\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Command: EMPTY THE DATABASE from default data\n */\nJSCLI.AddFunction(function ncEmptyDatabase() {\n  window.ncPushDatabase('_nclogic_resetdb.json');\n  return 'FYI: pushing empty database from assets/data/_nclogic_resetdb...reloading';\n});\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Command: Unlock the database.  Used to recover from error conditions where\n *  a node or edge is inadvertently left locked.\n */\nJSCLI.AddFunction(function ncUnlockAll() {\n  UDATA.NetCall('SRV_DBUNLOCKALL', {});\n  return 'Unlocking all nodes and edges in the database, and enabling template edits.';\n});\nJSCLI.AddFunction(function ncUnlockAllNodes() {\n  UDATA.NetCall('SRV_DBUNLOCKALLNODES', {});\n  return 'Unlocking all nodes in the database.';\n});\nJSCLI.AddFunction(function ncUnlockAllEdges() {\n  UDATA.NetCall('SRV_DBUNLOCKALLEDGES', {});\n  return 'Unlocking all edges in the database.';\n});\nJSCLI.AddFunction(function ncNodeColorMap() {\n  console.log(UDATA.AppState('COLORMAP'));\n  return 'ncNodeColorMap.';\n});\nJSCLI.AddFunction(function ncDumpData() {\n  console.log('NCDATA', NCDATA);\n  return `ncDumpData: ${JSON.stringify(NCDATA)}`;\n});\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Command: Token Generator\n */\n/// ncMakeSharedTokens is a variant on ncMakeTokens\n/// This command skips `dataset` so tokens can be shared across graphs.\n/// Use ncMakeSharedTokens instead of ncMakeTokens to create shared tokens\nJSCLI.AddFunction(function ncMakeSharedTokens(clsId, projId, numGroups) {\n  return ncMakeTokens(clsId, projId, undefined, numGroups);\n});\n/// `datatset` is not being used but is retained for backwards compatibility\nJSCLI.AddFunction(function ncMakeTokens(clsId, projId, dataset, numGroups) {\n  // type checking\n  if (typeof clsId !== 'string')\n    return 'args: str classId, str projId, str dataset, int numGroups';\n  if (typeof projId !== 'string')\n    return 'args: str classId, str projId, str dataset, int numGroups';\n\n  // 2024/08 Make 'dataset' optional so tokens can be shared across graphs\n  // `dataset` can still be defined, but it is now optional and does not return an error\n  // if (typeof dataset !== 'string')\n  //   return 'args: str classId, str projId, str dataset, int numGroups';\n\n  if (clsId.length > 12) return 'classId arg1 should be 12 chars or less';\n  if (projId.length > 12) return 'classId arg1 should be 12 chars or less';\n  if (!Number.isInteger(numGroups)) return 'numGroups arg3 must be integer';\n  if (numGroups < 1) return 'numGroups arg3 must be positive integer';\n  // let's do this!\n  let out = `\\nTOKEN LIST for class '${clsId}' project '${projId}'\\n\\n`;\n  let pad = String(numGroups).length;\n  for (let i = 1; i <= numGroups; i++) {\n    let id = String(i);\n    id = id.padStart(pad, '0');\n    out += `group ${id}\\t${SESSION.MakeToken(clsId, projId, i, dataset)}\\n`;\n  }\n  if (window && window.location) {\n    let ubits = new URL(window.location);\n    let hash = ubits.hash.split('/')[0];\n    let url = `${ubits.protocol}//${ubits.host}/${hash}`;\n    out += `\\nexample url: ${SETTINGS.ServerAppURL()}/edit/${SESSION.MakeToken(\n      clsId,\n      projId,\n      1\n    )}\\n`;\n  }\n  console.log(out);\n  return '';\n});\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  nc-ui\n\n  General purpose re-usable UI components and snippets.\n\n  Used by:\n  * NCNode\n  * NCEdge\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst React = require('react');\nconst UNISYS = require('unisys/client');\nconst MD = require('markdown-it')();\nconst MDEMOJI = require('markdown-it-emoji');\nMD.use(MDEMOJI);\nconst MDPARSE = require('html-react-parser').default;\nconst NCDialogInsertImageURL = require('./components/NCDialogInsertImageURL');\nimport URDateField from './components/URDateField';\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst VIEWMODE = {\n  EDIT: 'edit',\n  VIEW: 'view'\n};\n\n/// MODULE INITIALIZATION /////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst MOD = UNISYS.NewModule(module.id);\nconst UDATA = UNISYS.NewDataLink(MOD);\n\n/// UTILITIES /////////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction DateFormatted() {\n  var today = new Date();\n  var year = String(today.getFullYear());\n  var date =\n    today.getMonth() + 1 + '/' + today.getDate() + '/' + year.substring(2, 4);\n  var time = today.toTimeString().substring(0, 5);\n  var dateTime = time + ' on ' + date;\n  return dateTime;\n}\n\n/** Converts a markdown string to HTML\n *  And does extra HACK processing as needed:\n *  -- Supports emojis\n *  -- add `_blank` to `a` tags.\n */\nfunction Markdownify(str = '') {\n  const htmlString = MD.render(str);\n  // HACK!!! MDPARSE does not give us direct access to the dom elements, so just\n  // hack it by adding to the parsed html string\n  const hackedHtmlString = htmlString.replace(/<a href/g, `<a target=\"_blank\" href`);\n  return MDPARSE(hackedHtmlString);\n}\n\n/// INPUT FORM CHANGE HANDLERS ////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** This processes the form data before passing it on to the parent handler.\n *  The callback function is generally an input state update method in\n *  NCNode or NCEdge\n *  Emulates m_UIStringInputUpdate but adds error checking on markdown text.\n *  @param {Object} event\n *  @param {function} cb Callback function\n */\nfunction m_UIMarkdownInputUpdate(event, cb) {\n  console.warn(\n    'WARNNIG: Markdown text is not being error checked!  Use with caution!'\n  );\n  const key = event.target.id;\n  const value = event.target.value;\n  if (typeof cb === 'function') cb(key, value);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** This processes the form data before passing it on to the parent handler.\n *  The callback function is generally an input state update method in\n *  NCNode or NCEdge\n *  @param {Object} event\n *  @param {function} cb Callback function\n */\nfunction m_UIStringInputUpdate(event, cb) {\n  const key = event.target.id;\n  const value = event.target.value;\n  if (typeof cb === 'function') cb(key, value);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** This processes the form data before passing it on to the parent handler.\n *  The callback function is generally an input state update method in\n *  NCNode or NCEdge\n *  @param {Object} event\n *  @param {function} cb Callback function\n */\nfunction m_UINumberInputUpdate(event, cb) {\n  const key = event.target.id;\n  const value = Number(event.target.value);\n  if (typeof cb === 'function') cb(key, value);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** This processes the form data before passing it on to the parent handler.\n *  The callback function is generally an input state update method in\n *  NCNode or NCEdge\n *  @param {Object} event\n *  @param {function} cb Callback function\n */\nfunction m_UISelectInputUpdate(event, cb) {\n  const key = event.target.id;\n  const value = event.target.value;\n  if (typeof cb === 'function') cb(key, value);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** This processes the form data before passing it on to the parent handler.\n *  The callback function is generally an input state update method in\n *  NCNode or NCEdge\n *  @param {Object} event\n *  @param {function} cb Callback function\n */\nfunction m_UIDateInputUpdate(event, cb) {\n  const key = event.target.id;\n  const value = event.target.value;\n  if (typeof cb === 'function') cb(key, value);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Insert a URL into the current input\n *  This processes the form data before passing it on to the parent handler.\n *  The callback function is generally an input state update method in\n *  NCNode or NCEdge\n *  @param {Object} event\n *  @param {function} cb Callback function\n */\nfunction m_UIInsertImageURL(url, parentId, cb) {\n  const inputEl = document.getElementById(parentId);\n  const selectionStart = inputEl.selectionStart;\n  const currentValue = String(inputEl.value);\n  // fake an event to emulate m_UIStringInputUpdate so markdown is treated as string\n  const event = {\n    target: {\n      id: parentId,\n      value:\n        currentValue.substring(0, selectionStart) +\n        `![image](${url})` +\n        currentValue.substring(selectionStart)\n    }\n  };\n  m_UIMarkdownInputUpdate(event, cb);\n}\nfunction m_UICancelInsertImageURL() {\n  // FUTURE ENHANCEMENT: Allow removing URL???\n}\n\n/// LAYOUT RENDERERS //////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction RenderTabSelectors(TABS, state, onclick) {\n  const { uSelectedTab, uViewMode, degrees } = state;\n  const columnsDef = `repeat(${Object.keys(TABS).length}, 1fr)`;\n  return (\n    <div\n      className=\"tabselectors\"\n      style={{ color: 'red', gridTemplateColumns: columnsDef }}\n    >\n      {Object.keys(TABS).map(k => {\n        return (\n          <button\n            id={k}\n            key={k}\n            type=\"button\"\n            className={uSelectedTab === TABS[k] ? 'selected' : ''}\n            onClick={onclick}\n            value={TABS[k]}\n            disabled={uViewMode === VIEWMODE.EDIT}\n          >\n            {TABS[k] === 'EDGES' ? `${TABS[k]} (${degrees})` : TABS[k]}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction RenderAttributesTabView(state, defs) {\n  const { attributes, degrees } = state;\n  const items = [];\n  Object.keys(attributes).forEach(k => {\n    items.push(RenderLabel(k, defs[k].displayLabel, defs[k].help));\n    const type = defs[k].type;\n    switch (type) {\n      case 'markdown':\n        items.push(RenderMarkdownValue(k, attributes[k]));\n        break;\n      case 'hdate':\n        items.push(RenderDateValue(k, attributes[k], defs[k].format, defs[k].allowFormatSelection));\n        break;\n      case 'string':\n      default:\n        items.push(RenderStringValue(k, attributes[k]));\n        break;\n    }\n  });\n\n  // degrees hack -- `degrees` is a built-in field, but is displayed in attributes\n  if (defs['degrees']) {\n    // only if defined, e.g. for nodeDefs\n    items.push(RenderLabel('degrees', defs['degrees'].displayLabel));\n    items.push(RenderStringValue('degrees', degrees));\n  }\n\n  return <div className=\"formview\">{items}</div>;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction RenderAttributesTabEdit(state, defs, onchange) {\n  const { attributes, degrees } = state;\n  const items = [];\n  Object.keys(attributes).forEach(k => {\n    items.push(RenderLabel(k, defs[k].displayLabel));\n    const type = defs[k].type;\n    const value = attributes[k] || ''; // catch `undefined` or React will complain about changing from uncontrolled to controlled\n    const helpText = defs[k].help;\n    switch (type) {\n      case 'markdown':\n        items.push(RenderMarkdownInput(k, value, onchange, helpText));\n        break;\n      case 'hdate':\n        items.push(RenderDateInput(k, value, defs[k].format, defs[k].allowFormatSelection, onchange, helpText));\n        break;\n      case 'string':\n        items.push(RenderStringInput(k, value, onchange, helpText));\n        break;\n      case 'number':\n        items.push(m_RenderNumberInput(k, value, onchange, helpText));\n        break;\n      case 'select':\n        items.push(RenderOptionsInput(k, value, defs, onchange, helpText));\n        break;\n      default:\n        items.push(RenderStringValue(k, value, onchange)); // display unsupported type\n    }\n  });\n\n  // degrees hack -- `degrees` is a built-in field, but is displayed in attributes\n  if (defs['degrees']) {\n    // only if defined, e.g. for nodeDefs\n    items.push(RenderLabel('degrees', defs['degrees'].displayLabel));\n    items.push(RenderStringValue('degrees', degrees));\n  }\n\n  return <div className=\"formview\">{items}</div>;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction RenderProvenanceItemsView(state, defs) {\n  const { provenance } = state;\n  const items = [];\n  Object.keys(provenance).forEach(k => {\n    items.push(RenderLabel(k, defs[k].displayLabel, defs[k].help));\n    const type = defs[k].type;\n    switch (type) {\n      case 'markdown':\n        items.push(RenderMarkdownValue(k, provenance[k]));\n        break;\n      case 'hdate':\n        items.push(RenderDateValue(k, provenance[k], defs[k].format, defs[k].allowFormatSelection));\n        break;\n      case 'string':\n      case 'number':\n      default:\n        items.push(RenderStringValue(k, provenance[k]));\n        break;\n    }\n  });\n  return items;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction RenderProvenanceItemsEdit(state, defs, onchange) {\n  const { provenance, degrees } = state;\n  const items = [];\n  Object.keys(provenance).forEach(k => {\n    items.push(RenderLabel(k, defs[k].displayLabel));\n    const type = defs[k].type;\n    const value = provenance[k] || ''; // catch `undefined` or React will complain about changing from uncontrolled to controlled\n    const helpText = defs[k].help;\n    switch (type) {\n      case 'markdown':\n        items.push(RenderMarkdownInput(k, value, onchange, helpText));\n        break;\n      case 'hdate':\n        items.push(RenderDateInput(k, value, defs[k].format, defs[k].allowFormatSelection, onchange, helpText));\n        break;\n      case 'string':\n        items.push(RenderStringInput(k, value, onchange, helpText));\n        break;\n      case 'number':\n        items.push(m_RenderNumberInput(k, value, onchange, helpText));\n        break;\n      case 'select':\n        items.push(RenderOptionsInput(k, value, defs, onchange, helpText));\n        break;\n      default:\n        items.push(RenderStringValue(k, value, onchange)); // display unsupported type\n    }\n  });\n  return items;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction RenderProvenanceTabView(state, defs) {\n  const { provenance, degrees, created, createdBy, updated, updatedBy, revision } = state;\n  // FIXME: These will be dynamically generated with the new Provenance template\n  return (\n    <div className=\"provenance formview\">\n      <div className=\"category\">PROVENANCE</div>\n      {RenderProvenanceItemsView(state, defs)}\n      <div className=\"category\">HISTORY</div>\n      {RenderLabel('createdlabel', defs.created.displayLabel)}\n      {RenderStringValue('createdlabel', RenderProvenanceByline(createdBy, created))}\n      {RenderLabel('updatedlabel', defs.updated.displayLabel)}\n      {RenderStringValue('updatedlabel', RenderProvenanceByline(updatedBy, updated))}\n      {RenderLabel('revisionlabel', defs.revision.displayLabel)}\n      {RenderStringValue('revisionlabel', revision)}\n    </div>\n  );\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction RenderProvenanceTabEdit(state, defs, onchange) {\n  const { provenance, degrees, created, createdBy, updated, updatedBy, revision } = state;\n  // FIXME: These will be dynamically generated with the new Provenance template\n  return (\n    <div className=\"provenance formview\">\n      <div className=\"category\">PROVENANCE</div>\n      {RenderProvenanceItemsEdit(state, defs, onchange)}\n      <div className=\"category\">HISTORY</div>\n      {RenderLabel('createdlabel', defs.created.displayLabel)}\n      {RenderStringValue('createdlabel', RenderProvenanceByline(createdBy, created))}\n      {RenderLabel('updatedlabel', defs.updated.displayLabel)}\n      {RenderStringValue('updatedlabel', RenderProvenanceByline(updatedBy, updated))}\n      {RenderLabel('revisionlabel', defs.revision.displayLabel)}\n      {RenderStringValue('revisionlabel', revision)}\n    </div>\n  );\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction RenderProvenanceByline(author, date) {\n  const by = author ? `${author}` : `(not recorded)`;\n  return `${by}, ${date}`; // leave author blank for older templates\n}\n\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/// FORM RENDERERS\n///\nfunction RenderLabel(key, label, helpText) {\n  return (\n    <label htmlFor={key} key={`${key}label`} title={helpText}>\n      {label}\n    </label>\n  );\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction RenderMarkdownValue(key, value = '') {\n  const val = String(value);\n  return (\n    <div id={key} key={`${key}value`} className=\"viewvalue\">\n      {Markdownify(val)}\n    </div>\n  );\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction RenderStringValue(key, value) {\n  return (\n    <div id={key} key={`${key}value`} className=\"viewvalue\">\n      {value}\n    </div>\n  );\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction RenderDateValue(key, value, dateFormat, allowFormatSelection) {\n  return (\n    <URDateField id={key} key={`${key}value`} value={value} dateFormat={dateFormat}\n      allowFormatSelection={allowFormatSelection}\n      readOnly />\n  )\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/**\n * Markdown String Input\n * There are two levels of callbacks necessary here.\n * 1. The `onChange` handler (in this module) processes the input's onChange event, and...\n * 2. ...then passes the resulting value to the `cb` function in the parent module.\n * @param {string} key\n * @param {string} value\n * @param {function} cb\n * @returns\n */\nfunction RenderMarkdownInput(key, value, cb, helpText) {\n  const rows = String(value).length > 35 ? 3 : 1;\n  return (\n    <div key={`${key}div`}>\n      <div className=\"help\">{helpText}</div>\n      <button\n        className=\"stylebutton\"\n        onClick={() => UDATA.LocalCall('IMAGE_URL_DIALOG_OPEN', { id: key })}\n      >\n        Insert Image URL...\n      </button>\n      <textarea\n        id={key}\n        key={`${key}input`}\n        type=\"string\"\n        value={value}\n        onChange={event => m_UIMarkdownInputUpdate(event, cb)}\n        autoComplete=\"off\" // turn off Chrome's default autocomplete, which conflicts\n        className={rows > 1 ? `long` : ''}\n        rows={rows}\n      />\n      <NCDialogInsertImageURL\n        id={key}\n        message=\"Paste image URL:\"\n        okmessage=\"Insert\"\n        onOK={url => m_UIInsertImageURL(url, key, cb)}\n        cancelmessage=\"Cancel\"\n        onCancel={m_UICancelInsertImageURL}\n      />\n    </div>\n  );\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/**\n * There are two levels of callbacks necessary here.\n * 1. The `onChange` handler (in this module) processes the input's onChange event, and...\n * 2. ...then passes the resulting value to the `cb` function in the parent module.\n * @param {string} key\n * @param {string} value\n * @param {function} cb\n * @param {string} helpText\n * @param {function} onFocus Handles showing autosuggest matchlist\n * @param {function} onBlur Handles hiding autosuggest matchlist\n * @returns\n */\nfunction RenderStringInput(key, value, cb, helpText, onFocus, onBlur) {\n  const rows = String(value).length > 35 ? 3 : 1;\n  return (\n    <div key={`${key}div`}>\n      <div className=\"help\">{helpText}</div>\n      <textarea\n        id={key}\n        key={`${key}input`}\n        type=\"string\"\n        value={value}\n        onChange={event => m_UIStringInputUpdate(event, cb)}\n        onFocus={() => typeof onFocus === 'function' && onFocus()}\n        onBlur={() => typeof onBlur === 'function' && onBlur()}\n        autoComplete=\"off\" // turn off Chrome's default autocomplete, which conflicts\n        className={rows > 1 ? `long` : ''}\n        rows={rows}\n      />\n    </div>\n  );\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** There are two levels of callbacks necessary here.\n *  1. The `onChange` handler (in this module) processes the input's onChange event, and...\n *  2. ...then passes the resulting value to the `cb` function in the parent module.\n *  @param {string} key\n *  @param {string} value will be converted to a Number()\n *  @param {function} cb\n *  @returns\n */\nfunction m_RenderNumberInput(key, value, cb, helpText) {\n  return (\n    <div key={`${key}div`}>\n      <div className=\"help\">{helpText}</div>\n      <input\n        id={key}\n        key={`${key}input`}\n        value={value ? value : 0}\n        type=\"number\"\n        onChange={event => m_UINumberInputUpdate(event, cb)}\n      />\n    </div>\n  );\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** There are two levels of callbacks necessary here.\n *  1. The `onChange` handler (in this module) processes the input's onChange event, and...\n *  2. ...then passes the resulting value to the `cb` function in the parent module.\n *  @param {string} key\n *  @param {string} value\n *  @param {function} cb\n *  @returns\n */\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction RenderOptionsInput(key, value, defs, cb, helpText) {\n  const options = defs[key].options;\n  return (\n    <div key={`${key}div`}>\n      <div className=\"help\">{helpText}</div>\n      <select\n        id={key}\n        key={`${key}select`}\n        value={value}\n        onChange={event => m_UISelectInputUpdate(event, cb)}\n      >\n        {options.map(o => (\n          <option key={o.label} value={o.label}>\n            {o.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** There are two levels of callbacks necessary here.\n *  1. The `onChange` handler (in this module) processes the input's onChange event, and...\n *  2. ...then passes the resulting value to the `cb` function in the parent module.\n *  @param {string} key\n *  @param {string} value Can be string or {value, format} object\n *  @param {string} dateFormat Format that the input string will be converted to\n *  @param {boolean} allowFormatSelection When true, user can select date format\n *                                        otherwise, the format is fixed.\n *  @param {function} cb Callback function\n *  @param {string} helpText\n *  @returns\n */\nfunction RenderDateInput(key, value, dateFormat, allowFormatSelection, cb, helpText) {\n  return (\n    <URDateField id={key} key={`${key}value`} value={value}\n      dateFormat={dateFormat}\n      allowFormatSelection={allowFormatSelection}\n      onChange={event => m_UIDateInputUpdate(event, cb)}\n      helpText={helpText}\n    />\n  )\n}\n\n/// EXPORT REACT COMPONENT ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = {\n  VIEWMODE,\n  DateFormatted,\n  Markdownify,\n  RenderTabSelectors,\n  RenderAttributesTabView,\n  RenderAttributesTabEdit,\n  RenderProvenanceTabView,\n  RenderProvenanceTabEdit,\n  RenderLabel,\n  RenderMarkdownValue,\n  RenderStringValue,\n  RenderMarkdownInput,\n  RenderStringInput,\n  RenderOptionsInput\n};\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  nc-utils\n\n  General purpose utilities for manipulating NCDATA.\n  Used by:\n  * nc-logic\n  * filter-mgr\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\n/// API METHODS ///////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API METHOD\n *  Generates a universal unique identifer for use with\n *  - comment ids\n *  This is a placeholder method.\n *  @return string\n */\nfunction GenerateUUID() {\n  // TODO generate actual unique id\n  return String(Math.random() * 128);\n}\n/** API METHOD\n *  Calculates and sets `degrees` for all nodes\n *  `degrees` is the number of edges connected to a node\n *  degrees needs to be recalculated whenever an edge is changed\n *  This modifies `data`\n *  @param {object} data\n *  @param {array} data.nodes\n *  @param {array} data.edges\n */\nfunction RecalculateAllNodeDegrees(data) {\n  const degrees = new Map();\n  function inc(nodeId) {\n    const val = degrees.get(nodeId) || 0;\n    degrees.set(nodeId, val + 1);\n  }\n  // Count edges efficiently\n  data.edges.forEach(e => {\n    inc(e.source);\n    inc(e.target);\n  });\n  // Apply the sums\n  data.nodes.forEach(n => {\n    n.degrees = degrees.get(n.id) || 0;\n  });\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API METHOD\n *  Calculates and sets `size` for all edges\n *  `size` is the sum of all edge weights that have the same source/targets\n *  By default `weight` is 1.\n *  @param {object} data\n *  @param {array} data.nodes\n *  @param {array} data.edges\n */\nfunction RecalculateAllEdgeSizes(data) {\n  const size = new Map();\n  function getKey(sourceId, targetId) {\n    // key always starts with the smaller value\n    return sourceId < targetId\n      ? `${sourceId}-${targetId}`\n      : `${targetId}-${sourceId}`;\n  }\n  function inc(weight, sourceId, targetId) {\n    const w = weight || 1;\n    const key = getKey(sourceId, targetId);\n    const val = size.get(key) || 0;\n    size.set(key, val + w);\n  }\n  // Count edges efficiently\n  data.edges.forEach(e => {\n    inc(e.weight, e.source, e.target);\n  });\n  // Apply the sums\n  data.edges.forEach(e => {\n    const key = getKey(e.source, e.target);\n    e.size = size.get(key) || 1;\n  });\n}\n\n/// MODULE EXPORTS ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = {\n  GenerateUUID,\n  RecalculateAllNodeDegrees,\n  RecalculateAllEdgeSizes\n};\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  RENDER MANAGER\n\n  render-mgr handles the transformation of NCDATA (and it's subvariants\n  FILTEREDNCDATA and VDATA) into `VDATA` format that can be\n  rendered by NCGraphRenderer.\n\n  It is loaded directly by NCGraph for processing.  In this way,\n  multiple renderers can be supported via separate  NCGraph components.\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst UNISYS = require('unisys/client');\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar MOD = UNISYS.NewModule(module.id);\nvar UDATA = UNISYS.NewDataLink(MOD);\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'render-mgr: ';\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet VDATA = {};\n\n/// LIFECYCLE HANDLERS ////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ lifecycle INITIALIZE handler\n/*/\nMOD.Hook('INITIALIZE', () => {\n  // Register any handlers?\n  // Probably not needed as NCGraph handles most events and uses this\n  // module as utility methods.\n}); // end UNISYS_INIT\n\n/// MODULE PUBLIC METHODS //////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API METHOD\n *  Interprets VDATA into a simplified form for the renderer\n *  @param {*} data NCDATA { nodes, edges }\n *  @returns {Object} {\n *                     nodes: [ ...{id, label, selected, selectedSecondary,\n *                                  size, color, opacity, strokeColor, strokeWidth,\n *                                  help}],\n *                     edges: [ ...{id, sourceId, targetId, size, color, opacity}]\n *                   }\n */\nMOD.ProcessNCData = data => {\n  if (DBG) console.log('ProcessNCData');\n  const nodes = m_UpdateNodes(data.nodes);\n  const edges = m_UpdateEdges(data.edges);\n  VDATA.nodes = nodes;\n  VDATA.edges = edges;\n  return VDATA;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nMOD.SetNCData = data => {\n  VDATA = data;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nMOD.UpdateSelection = data => {\n  const nodes = m_UpdateNodes(VDATA.nodes);\n  const edges = m_UpdateEdges(VDATA.edges);\n  VDATA.nodes = nodes;\n  VDATA.edges = edges;\n  return VDATA;\n};\n\n/// MODULE PRIVATE METHODS ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_UpdateNodes(nodes) {\n  const TEMPLATE = UDATA.AppState('TEMPLATE');\n  const SELECTION = UDATA.AppState('SELECTION');\n  const HILITE = UDATA.AppState('HILITE');\n  const SEARCH = UDATA.AppState('SEARCH');\n  const selectedNodes = SELECTION.nodes ? SELECTION.nodes.map(n => n.id) : [];\n  const autosuggestHiliteNodeId = HILITE.autosuggestHiliteNodeId;\n  const tableHiliteNodeId = HILITE.tableHiliteNodeId;\n  const foundNodes = SEARCH.suggestedNodes\n    ? SEARCH.suggestedNodes.map(n => n.id)\n    : [];\n  const highlightStrokeColor = TEMPLATE.sourceColor;\n  const foundStrokeColor = TEMPLATE.searchColor;\n\n  const COLORMAP = UDATA.AppState('COLORMAP');\n  return nodes.map(n => {\n    const isAutosuggestHilited = autosuggestHiliteNodeId === n.id;\n    const isTabletHilited = tableHiliteNodeId === n.id;\n    const isSelected = selectedNodes.includes(n.id);\n    const isSecondarySelected = SELECTION.selectedSecondary === n.id;\n    const isFound = foundNodes.includes(n.id);\n    // FIXME: Just copy over relevant attributes, don't copy the whole object!!!!\n    n.color = COLORMAP.nodeColorMap[n.type];\n    n.opacity = n.filteredTransparency;\n    n.size = Math.min(TEMPLATE.nodeSizeDefault + n.degrees, TEMPLATE.nodeSizeMax);\n    n.selected = false;\n    n.selectedSecondary = false;\n    if (isAutosuggestHilited) {\n      n.textColor = '#ccc';\n      n.strokeColor = '#ccc';\n      n.strokeWidth = '8px';\n    } else if (isTabletHilited) {\n      n.textColor = '#ccc';\n      n.strokeColor = '#ccc';\n      n.strokeWidth = '8px';\n    } else if (isSelected) {\n      // n.shape = 'rectangle';\n      n.textColor = highlightStrokeColor;\n      n.strokeColor = highlightStrokeColor;\n      n.strokeWidth = '5px';\n    } else if (isFound) {\n      n.textColor = foundStrokeColor;\n      n.strokeColor = foundStrokeColor;\n      n.strokeWidth = '5px';\n    } else {\n      n.textColor = '#333';\n      n.strokeColor = '#fff'; // default to white border\n      n.strokeWidth = '3px';\n    }\n    if (isSelected) {\n      n.selected = true; // selection state can be displayed simultaneously with hilite\n    }\n    if (isSecondarySelected) {\n      n.selectedSecondary = true; // edge source/target is selected\n    }\n    n.help = m_GetHelp(n);\n    return n;\n  });\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_UpdateEdges(edges) {\n  const TEMPLATE = UDATA.AppState('TEMPLATE');\n  const HILITE = UDATA.AppState('HILITE');\n  const { userHighlightNodeId } = HILITE;\n  return edges.map(e => {\n    // FIXME: Just copy over relevant attributes, don't copy the whole object!!!!\n    // width -- show full width unless mouse is over a node, in which case, do not show weight\n    //          size and max size checking was completed in edge-mgr\n    const sourceId = typeof e.source === 'number' ? e.source : e.source.id;\n    const targetId = typeof e.target === 'number' ? e.target : e.target.id;\n    if (\n      e.selected ||\n      userHighlightNodeId === undefined || // no mouseover\n      sourceId === userHighlightNodeId || // mouseover the source\n      targetId === userHighlightNodeId // or target\n    ) {\n      // leave size alone, max size checking is in edge-mgr\n      e.width = e.size;\n      e.opacity = e.filteredTransparency;\n    } else {\n      e.width = TEMPLATE.edgeSizeDefault; // mouse over a node, so just show thin line\n      e.opacity = TEMPLATE.edgeDefaultTransparency; // lighten\n    }\n    // opacity\n    return e;\n  });\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Returns the tooltip help text for the node, using labels defined in the template\n *  @param {*} node\n *  @returns {string}\n */\nfunction m_GetHelp(node) {\n  const TEMPLATE = UDATA.AppState('TEMPLATE');\n  const nodeDefs = TEMPLATE.nodeDefs;\n  let titleText = '';\n  Object.entries(nodeDefs).forEach(([key, def]) => {\n    if (def.includeInGraphTooltip && node[key] !== undefined) {\n      if (titleText) titleText += '\\n';\n      titleText += def.displayLabel + ': ' + node[key];\n    }\n  });\n  return titleText;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nfunction m_GetUpdatedDateText(nodeEdge) {\n  // console.warn('skipping m_GetUpdateDateText for now...revise after provenance/meta.revision is removed')\n  // const d = new Date(nodeEdge.meta.revision > 0 ? nodeEdge.meta.updated : nodeEdge.meta.created);\n  // const year = String(d.getFullYear());\n  // const date = (d.getMonth() + 1) + \"/\" + d.getDate() + \"/\" + year.substr(2, 4);\n  // const time = d.toTimeString().substr(0, 5);\n  // const author = nodeEdge._nlog ? nodeEdge._nlog[nodeEdge._nlog.length - 1] : 'unknown';\n  // const dateTime = date + ' at ' + time + \" by \" + author;\n  // return dateTime;\n}\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  SELECTION MANAGER\n\n  selection-mgr handles UI selection events like:\n  * mouse over graph node\n  * Others TBD as selection is rewritten.\n\n  SELECTION data is\n    { nodes: [], edges: [], selectedSecondary: undefined };\n\n  In general\n  * `nodes[0]` will be the selected graph node (using the animated 3 arrow\n                        cursor) with an open Node editor\n  * `edges[]` are the edges linked to `nodes[0]`\n  * `selectedSecondary` is the node id of the source or target node\n                        that are highlighted in the graph (using the\n                        animated single arrow cursor)\n\n  As of 2023-07 this is a WIP.  There are remnants of v1.x SELECTION management\n  in nc-logic.  A lot of the more complex logic has been cleaned up and\n  deprecated:\n    * AutoComplete\n    * NodeSelector\n    * EdgeEditor\n    * d3-simplenetgraph\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'selection-mgr: ';\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst SELECTION_MODE = {\n  NORMAL: 'normal', // graph is selectable\n  EDGE_EDIT: 'edge_edit', // edge is being edited\n  // NODE_EDIT is not necessary b/c the transparent screen prevents clicks\n  SOURCETARGET: 'sourcetarget', // waiting for a source or target\n  COMMENT_EDIT: 'comment_edit' // disable node selection during comment edit\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nlet m_SelectionMode = SELECTION_MODE.NORMAL; // default\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar MOD = UNISYS.NewModule(module.id);\nvar UDATA = UNISYS.NewDataLink(MOD);\n\n/// UNISYS HANDLERS ///////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** lifecycle INITIALIZE handler\n */\nMOD.Hook('INITIALIZE', () => {\n  UDATA.HandleMessage('SELECTMGR_SET_MODE', m_SetMode);\n  UDATA.HandleMessage('D3_SELECT_NODE', m_D3SelectNode);\n  UDATA.HandleMessage('SELECTMGR_SELECT_SECONDARY', m_SelectSecondary);\n  UDATA.HandleMessage('SELECTMGR_DESELECT_SECONDARY', m_DeselectSecondary);\n  // NODETABLE_SELECT_NODE\n  // AUTOSUGGEST_SELECT_NODE?\n}); // end UNISYS_INIT\n\n/// MODULE METHODS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Set Selection Mode via SELECTMGR_SET_MODE\n *  @param {Object} data\n *  @param {Object} data.mode NORMAL || EDGE_EDIT || SOURCETARGET\n */\nfunction m_SetMode(data) {\n  let newmode = SELECTION_MODE.NORMAL; // default\n  if (Object.values(SELECTION_MODE).includes(data.mode)) newmode = data.mode;\n  m_SelectionMode = newmode;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** User clicked on d3 graph node\n *  --  Normal mode, clicking on a node selects it\n *  --  SourceTarget mode is for selecting a source or target node while editing an edge\n *  @param {Object} data\n *  @param {array:string} data.nodeLabels\n *  @param {array:number} data.nodeIDs\n */\nfunction m_D3SelectNode(data) {\n  const node = m_GetNode(data);\n  if (m_SelectionMode === SELECTION_MODE.NORMAL) {\n    m_SendSelectionUpdate(node);\n  } else if (m_SelectionMode === SELECTION_MODE.EDGE_EDIT) {\n    // ignore selection during EDGE_EDIT if SOURCE/TARGET has not been selected yet\n    if (DBG)\n      console.log(PR, 'm_D3SelectNode: ignoring selection during edge edit mode');\n  } else if (m_SelectionMode === SELECTION_MODE.SOURCETARGET) {\n    m_SendSourceTargetSelectionUpdate(node);\n  } else if (m_SelectionMode === SELECTION_MODE.COMMENT_EDIT) {\n    // ignore selection during COMMENT edit so that selecting\n    // another node closes the comment\n  } else {\n    throw `Unknown SELECTION Mode ${m_SelectionMode}`;\n  }\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Get the node that was passed via the search string\n *  either nodeIDs or nodeLabels\n *  @param {Object} searchdata\n *  @param {array} searchdata.nodeLabels strings\n *  @param {array} searchdata.nodeIDs numbers\n *  @returns {Object} single node\n */\nfunction m_GetNode(searchdata) {\n  const NCDATA = UDATA.AppState('NCDATA');\n  const { nodeLabels = [], nodeIDs = [] } = searchdata;\n  const nodeLabel = nodeLabels[0];\n  const nodeId = nodeIDs[0];\n  let node;\n  if (nodeId) {\n    node = NCDATA.nodes.find(n => n.id === nodeId);\n  } else if (nodeLabel) {\n    node = NCDATA.nodes.find(n => n.label === nodeLabel);\n  } else {\n    // No node selected, so deselect\n  }\n  return node;\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Broadcast SELECTION and HILITE updates for selecting a single node\n *  @param {Object} node\n */\nfunction m_SendSelectionUpdate(node) {\n  const NCDATA = UDATA.AppState('NCDATA');\n  let newSelection, newHilite;\n  if (node === undefined) {\n    // Node not found, clear selection state\n    newSelection = { nodes: [], edges: [], selectedSecondary: undefined };\n    newHilite = { autosuggestHiliteNodeId: undefined };\n  } else {\n    // Load existing node and edges\n    const nid = node.id;\n    let edges = [];\n    if (NCDATA.edges)\n      edges = edges.concat(\n        NCDATA.edges.filter(edge => edge.source === nid || edge.target === nid)\n      );\n    // create select state object\n    newSelection = { nodes: [node], edges, selectedSecondary: undefined };\n    newHilite = { autosuggestHiliteNodeId: undefined };\n  }\n  // Broadcast selection/hilite updates\n  UDATA.SetAppState('SELECTION', newSelection);\n  UDATA.SetAppState('HILITE', newHilite);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Broadcast SELECT_SOURCETARGET updates for selecting a source or target\n *  @param {Object} node\n */\nfunction m_SendSourceTargetSelectionUpdate(node) {\n  if (node === undefined) return; // skip update\n  UDATA.LocalCall('SELECT_SOURCETARGET', { node });\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** During Edge editing, show animated cursor after user selects a source\n *  or target node.  (For secondary selections)\n *  Broadcast SELECTMGR_SELECT_SECONDARY updates for selecting a source or target\n *  @param {Object} data\n *  @param {Object} data.node\n */\nfunction m_SelectSecondary(data) {\n  const SELECTION = UDATA.AppState('SELECTION');\n  SELECTION.selectedSecondary = data.node.id;\n  UDATA.SetAppState('SELECTION', SELECTION);\n}\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Deselect the secondary selection\n *  During Edge editing, after the user has selected the source or target\n *  node, we turn off the secondary select (so the single blue rotating arrow\n *  is cleared from the graph)\n */\nfunction m_DeselectSecondary() {\n  // Broadcast secondary deselection -- remove animated arrow\n  const SELECTION = UDATA.AppState('SELECTION');\n  SELECTION.selectedSecondary = undefined;\n  UDATA.SetAppState('SELECTION', SELECTION);\n}\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Template Schema\n\n  The Template Schema defines a spec for\n  `[json-editor](https://github.com/json-editor/json-editor)`\n  to generate a UI for editing the template.  It identifies the objects that\n  the json-editor needs to support and provides meta data about how to\n  display and handle the edits.\n\n  `templateEditor-mgr.js` handles initialization client-side.\n\n  NOTE: This schema is NOT the same as the `toml` template file schema.  This\n  schema is used by `json-editor` to know how to display a UI for editing the\n  template itself.\n\n  IMPORTANT: If you modify the schema, generate a new template by\n\n    1. Start NetCreate\n    2. In web browser developer console, run:\n\n        `ncRegenerateDefaultTemplate()`\n    3. This will create a new `_default.template.toml` file.\n\n  Alternatively the default template's JSON can be generated from this schema spec by\n  by calling MOD.ParseTemplateSchema() directly. This is the rough equivalent of doing this:\n  1. Start NetCreate with a new db, e.g. `./nc.js --dataset=newdefault`\n  2. Clicking \"New Template\" on the \"More... > Edit Template\" tab.\n  3. Clicking \"Save Changes\"\n  4. Copy the file to `netcreate-2018/build/app/assets/templates/`\n  FIXME: rename filepath\n  5. Renaming the saved template to `_default.template.toml`\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst clone = require('rfdc')();\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'template-schema';\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst MOD = {};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Node Type Schema\n *  This is a subset of the full template schema.\n *\n *  We pull it out separately so that Node Types can be edited by themselves\n *  without having to scroll through the whole template.\n *\n *  When editing the main Template, this is loaded as a subset of the main schema.\n *  When editing node types, this is loaded by MOD.GetTypeEditorSchema to\n *  provide additional UI elements to manage deleting and renaming\n *  existing field types\n *\n *  Default \"No Type Selected\" has a label of \"\"\n *  Templates should always have one default.\n */\nMOD.NODETYPEOPTIONS = {\n  type: 'array',\n  title: 'Node Types',\n  format: 'table',\n  options: {\n    disable_collapse: true,\n    disable_array_add: false,\n    disable_array_delete: false,\n    disable_array_delete_all_rows: true,\n    disable_array_delete_last_row: true,\n    disable_array_reorder: false\n  }, // not editable\n  items: {\n    type: 'object',\n    properties: {\n      'color': {\n        type: 'string',\n        title: 'Color',\n        format: 'color',\n        default: '#eeeeee' // for \"No Type Selected\", must be in form '#nnnnnn' -- alpha or short '#nnn' do not work\n      },\n      'label': {\n        type: 'string',\n        title: 'Label',\n        default: '' // leave '' for \"No Type Selected\"\n      }\n    }\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Edge Type Schema\n *  This is a subset of the full template schema.\n *\n *  We pull it out separately so that Edge Types can be edited by themselves\n *  without having to scroll through the whole template.\n *\n *  When editing the main Template, this is loaded as a subset of the main schema.\n *  When editing edge types, this is loaded by MOD.GetTypeEditorSchema to\n *  provide additional UI elements to manage deleting and renaming\n *  existing field types\n */\nMOD.EDGETYPEOPTIONS = {\n  type: 'array',\n  title: 'Edge Types',\n  format: 'table',\n  options: {\n    disable_collapse: true,\n    disable_array_add: false,\n    disable_array_delete: false,\n    disable_array_delete_all_rows: true,\n    disable_array_delete_last_row: true,\n    disable_array_reorder: false\n  }, // not editable\n  items: {\n    type: 'object',\n    properties: {\n      'color': {\n        // currently unused\n        type: 'string',\n        title: 'Color',\n        format: 'color',\n        default: '#eeeeee' // for \"No Type Selected\", must be in form '#nnnnnn' -- alpha or short '#nnn' do not work\n      },\n      'label': {\n        type: 'string',\n        title: 'Label',\n        default: '' // leave '' for \"No Type Selected\"\n      }\n    }\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Main NetCreate Schema Template\n *  This references the NODETYPEOPTIONS and EGETYPEOPTIONS above to define\n *  options.\n *  Be sure to update `server-database.m_MigrateTemplate()` with any additions to\n *  the schema to maintain backward compatibility.\n */\nMOD.TEMPLATE = {\n  title: 'NetCreate Template',\n  version: 2.0, // match github Release number\n  type: 'object',\n  properties: {\n    'name': {\n      type: 'string',\n      description:\n        'A short descriptive title for the project.  This is displayed on the graph view.  It can contain spaces.  e.g. \"Alexander the Great\"',\n      default: 'Untitled Project'\n    },\n    'description': {\n      type: 'string',\n      description:\n        'Short description of the project, e.g. \"This is based on the Secret Histories of Prokopios\"',\n      default: 'No Description'\n    },\n    'citation': {\n      type: 'object',\n      description: 'Citation meta data',\n      properties: {\n        'text': {\n          type: 'string',\n          description: 'Bibliographic reference',\n          default: 'No citation set',\n          options: {\n            inputAttributes: { placeholder: 'Untitled Network' }\n          }\n        },\n        'hidden': {\n          type: 'boolean',\n          format: 'checkbox',\n          description: 'Hides the \"Cite Node\" and \"Cite Edge\" buttons.',\n          default: false\n        }\n      }\n    },\n    'requireLogin': {\n      type: 'boolean',\n      format: 'checkbox',\n      description: 'Users are required to log in to view the graph.',\n      default: false\n    },\n    'hideDeleteNodeButton': {\n      // Normally, only admins can delete nodes.  You're an admin if:\n      // -- is localhost (e.g. IP is 127.0.0.71)\n      // -- or has `?admin=true` GET parameter\n      // This will force hide the delete button even if you're an admin.\n      type: 'boolean',\n      format: 'checkbox',\n      description: 'Always hide Node delete button, even for admins.',\n      default: false\n    },\n    'allowLoggedInUserToImport': {\n      // Normally, only admins can import data.  You're an admin if:\n      // -- is localhost (e.g. IP is 127.0.0.71)\n      // -- or has `?admin=true` GET parameter\n      // This will allow any logged in user to import data.\n      type: 'boolean',\n      format: 'checkbox',\n      description:\n        'Allow any logged in user to import data.  Admins can always import data.',\n      default: false\n    },\n    'nodeSizeDefault': {\n      type: 'number',\n      description: 'Default size (radius) of nodes.',\n      default: 5\n    },\n    'nodeSizeMax': {\n      type: 'number',\n      description: 'Maximum size (radius) of nodes.',\n      default: 50\n    },\n    'edgeSizeDefault': {\n      type: 'number',\n      description: 'Default size (width) of edges.',\n      default: 1 // Was 0.175 to be barely visible, but edge weights now override this default to 1\n    },\n    'edgeSizeMax': {\n      type: 'number',\n      description:\n        'Maximum size (width) of edges.  Set to 0 to turn off maximum size limit.',\n      default: 25\n    },\n    'filterFade': {\n      type: 'string',\n      description:\n        'Display name of the filter function that shows matching items and fades others.',\n      default: 'Fade'\n    },\n    'filterFadeHelp': {\n      type: 'string',\n      description: 'Help text for the Fade filter, displayed on the VIEWS panel.',\n      default: 'Show matches, Fade others'\n    },\n    'filterReduce': {\n      type: 'string',\n      description:\n        'Display name of the filter function that shows matching items and reduces (removes) others.',\n      default: 'Reduce'\n    },\n    'filterReduceHelp': {\n      type: 'string',\n      description: 'Help text for the Reduce filter, displayed on the VIEWS panel.',\n      default: 'Show matches, Reduce (remove) others & recalculate sizes'\n    },\n    'filterFocus': {\n      type: 'string',\n      description:\n        'Display name of the filter fucntion that shows nodes connected to a selected node within a specified range.',\n      default: 'Focus'\n    },\n    'filterFocusHelp': {\n      type: 'string',\n      description: 'Help text for the Focus filter, displayed on the VIEWS panel.',\n      default: 'Show only nodes connected to the selected node within range'\n    },\n    'duplicateWarning': {\n      type: 'string',\n      description:\n        'Warning message to display if user is trying to create a node that already exists.',\n      default:\n        'NOTE: At least one other node has the same name. Use search or the node table to check the others.'\n    },\n    'nodeIsLockedMessage': {\n      type: 'string',\n      description:\n        'Warning message to display if user is trying to edit a node that someone is already editing.',\n      default:\n        'This node is currently being edited by someone else, please try again later.'\n    },\n    'edgeIsLockedMessage': {\n      type: 'string',\n      description:\n        'Warning message to display if user is trying to edit an edge that someone is already editing.',\n      default:\n        'This edge is currently being edited by someone else, please try again later.'\n    },\n    'templateIsLockedMessage': {\n      type: 'string',\n      description:\n        'Warning message to display if user is trying to edit a node or edge or import while the template is being edited.',\n      default: 'The template is currently being edited, please try again later.'\n    },\n    'importIsLockedMessage': {\n      type: 'string',\n      description:\n        'Warning message to display if user is trying to edit a node, edge, or template import is active.',\n      default: 'Data is currently being imported, please try again later.'\n    },\n    'nodeDefaultTransparency': {\n      type: 'number',\n      description: 'Default transparency for nodes (0 - 1).',\n      default: 1.0\n    },\n    'edgeDefaultTransparency': {\n      type: 'number',\n      description: 'Default transparency for edges (0 - 1).',\n      default: 0.7\n    },\n    'searchColor': {\n      type: 'string',\n      description: 'Outline color of nodes highlighted via search (hex).',\n      default: '#008800',\n      format: 'color'\n    },\n    'sourceColor': {\n      type: 'string',\n      description: 'Outline color of node selected to view / edit (hex).',\n      default: '#FFa500',\n      format: 'color'\n    },\n    'nodeDefs': {\n      properties: {\n        'id': {\n          type: 'object',\n          description: 'System-generated unique id number',\n          properties: {\n            'type': {\n              type: 'number',\n              options: { hidden: true }, // not editable\n              description: '\"id\" data type',\n              default: 'number'\n            },\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Id'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'ID'\n            },\n            'help': {\n              type: 'string',\n              options: { hidden: true }, // not editable\n              description: 'Help text to display on the Node Editor form',\n              default: 'System-generated unique id number'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"id\" value in tooltip on graph',\n              default: true\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              options: { hidden: true }, // not end-user editable, always hidden from Template Editor\n              description: 'Not used.  \"id\" is always hidden.',\n              default: false\n            }\n          }\n        },\n        'label': {\n          type: 'object',\n          description: 'Display name of the node',\n          properties: {\n            'type': {\n              type: 'string',\n              options: { hidden: true }, // not editable\n              description: '\"label\" data type',\n              default: 'string'\n            },\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'label'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Label'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: 'Display name of the node'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"label\" value in tooltip on graph',\n              default: true\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              options: { hidden: true }, // not end-user editable, always hidden from Template Editor\n              description: 'Not used.  \"label\" is always shown.',\n              format: 'checkbox',\n              default: false\n            }\n          }\n        },\n        'type': {\n          type: 'object',\n          description: 'Enumerated node types',\n          properties: {\n            'type': {\n              type: 'string',\n              options: { hidden: true }, // not editable\n              description: 'node \"type\" data type',\n              default: 'select'\n            },\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Type'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'NodeType' // matches Gephi\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: 'Select a category'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"type\" value in tooltip on graph',\n              default: true\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Hides \"type\" from Node Editor, Nodes Table, and exports',\n              default: false\n            },\n            'options': Object.assign({}, MOD.NODETYPEOPTIONS, {\n              description:\n                'NOTE: We recommend using the \"Edit Node Types\" feature to edit Node Types.  It provides additional dataset migration tools.'\n            })\n          }\n        },\n        'notes': {\n          // was \"Significance\"\n          type: 'object',\n          description: 'General purpose notes text field',\n          properties: {\n            'type': {\n              type: 'string',\n              description: '\"notes\" data type',\n              default: 'string'\n            },\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Notes'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Notes'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: 'General purpose notes text field'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"notes\" value in tooltip on graph',\n              default: true\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Hides \"notes\" from Node Editor, Nodes Table, and exports',\n              default: false\n            }\n          }\n        },\n        'info': {\n          // Info/Number\n          type: 'object',\n          description: 'General purpose numeric text field',\n          properties: {\n            'type': {\n              type: 'string',\n              description: '\"info\" data type',\n              default: 'number'\n            },\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Number'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Info'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: 'Some number comparison'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"info\" value in tooltip on graph',\n              default: true\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Hides \"info\" from Node Editor, Nodes Table, and exports',\n              default: false\n            }\n          }\n        },\n        'infoSource': {\n          type: 'object',\n          description: 'Who created the node',\n          properties: {\n            'type': {\n              type: 'string',\n              description: '\"infoSource\" data type',\n              default: 'string'\n            },\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Info Source'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'InfoSource'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: 'Who created this?  (aka Source)'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"infoSource\" value in tooltip on graph',\n              default: true\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: true\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description:\n                'Hides \"infoSource\" from Node Editor, Nodes Table, and exports',\n              default: false\n            }\n          }\n        },\n        'degrees': {\n          type: 'object',\n          description: 'Number of edges connected to this node (auto-calculated)',\n          properties: {\n            'type': {\n              type: 'string',\n              description: '\"degrees\" data type',\n              default: 'number'\n            },\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Degrees'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Degrees'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: 'Number of edges connected to this node'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"degrees\" value in tooltip on graph',\n              default: true\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description:\n                'Hides \"degrees\" from Node Editor, Nodes Table, and exports',\n              default: false\n            }\n          }\n        },\n        'created': {\n          // Built-in data DO NOT MODIFY!\n          type: 'object',\n          description:\n            'System-generated date.  This setting used to show/hide tooltip in graph and import/export',\n          properties: {\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Created'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Created'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: 'Date and time node was created'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"created\" value in tooltip on graph',\n              default: true\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Requires \"created\" for exports and imports',\n              default: false\n            }\n          }\n        },\n        'createdBy': {\n          // Built-in data DO NOT MODIFY!\n          type: 'object',\n          description:\n            'System-generated date.  This setting used to show/hide tooltip in graph and import/export',\n          properties: {\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Created By'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: 'Author who created the node'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Created By'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"created by\" value in tooltip on graph',\n              default: true\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Requires \"created by\" for exports and imports',\n              default: false\n            }\n          }\n        },\n        'updated': {\n          // Built-in data DO NOT MODIFY!\n          type: 'object',\n          description:\n            'System-generated date.  This setting used to show/hide tooltip in graph and import/export',\n          properties: {\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Updated'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Updated'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: 'Date and time node was last modified'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"updated\" value in tooltip on graph',\n              default: true\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Requires \"updated\" for exports and imports',\n              default: false\n            }\n          }\n        },\n        'updatedBy': {\n          // Built-in data DO NOT MODIFY!\n          type: 'object',\n          description:\n            'System-generated date.  This setting used to show/hide tooltip in graph and import/export',\n          properties: {\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Updated By'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Updated By'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: 'Author who updated the node'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"updated by\" value in tooltip on graph',\n              default: true\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Requires \"updated by\" for exports and imports',\n              default: false\n            }\n          }\n        },\n        'revision': {\n          // Built-in data DO NOT MODIFY!\n          type: 'object',\n          description:\n            'System-generated data.  This setting used to show/hide tooltip in graph and import/export',\n          properties: {\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Revision'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Revision'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: 'Number of times this node has been revised'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"revision\" value in tooltip on graph',\n              default: true\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Requires \"revision\" for exports and imports',\n              default: true\n            }\n          }\n        }\n      }\n    },\n    'edgeDefs': {\n      properties: {\n        'id': {\n          type: 'object',\n          description: 'System-generated unique id number',\n          properties: {\n            'type': {\n              type: 'number',\n              options: { hidden: true }, // not editable\n              description: '\"id\" data type',\n              default: 'number'\n            },\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Id'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'ID'\n            },\n            'help': {\n              type: 'string',\n              options: { hidden: true }, // not editable\n              description: 'Help text to display on the Edge Editor form',\n              default: 'System-generated unique id number'\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              options: { hidden: true }, // not end-user editable, always hidden from Template Editor\n              description: 'Not used.  \"id\" is always hidden.',\n              default: false\n            }\n          }\n        },\n        'source': {\n          type: 'object',\n          description: 'Node the edge is connected to',\n          properties: {\n            'type': {\n              type: 'string',\n              options: { hidden: true }, // not editable\n              description: '\"source\" data type',\n              default: 'number'\n            },\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Source'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Source'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: 'Edge source node'\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              options: { hidden: true }, // not end-user editable, always hidden from Template Editor\n              description: 'Not used.  \"source\" is always shown.',\n              default: false\n            }\n          }\n        },\n        'target': {\n          type: 'object',\n          description: 'Node the edge is connected to',\n          properties: {\n            'type': {\n              type: 'string',\n              options: { hidden: true }, // not editable\n              description: '\"target\" data type',\n              default: 'number'\n            },\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Target'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Target'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: 'Edge target node'\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              options: { hidden: true }, // not end-user editable, always hidden from Template Editor\n              description: 'Not used.  \"target\" is always shown.',\n              default: false\n            }\n          }\n        },\n        'type': {\n          type: 'object',\n          description: 'Enumerated edge types',\n          properties: {\n            'type': {\n              type: 'string',\n              options: { hidden: true }, // not editable\n              description: 'edge \"type\" data type',\n              default: 'select'\n            },\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Type'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'EdgeType' // matches Gephi?\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: 'Type of edge connection'\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Hides \"type\" from Edge Editor, Edges Table, and exports',\n              default: false\n            },\n            'options': Object.assign({}, MOD.EDGETYPEOPTIONS, {\n              description:\n                'NOTE: We recommend using the \"Edit Edge Types\" feature to edit Edge Types.  It provides additional dataset migration tools.'\n            })\n          }\n        },\n        'notes': {\n          // was \"Signficance\"\n          type: 'object',\n          description: 'General purpose notes text field',\n          properties: {\n            'type': {\n              type: 'string',\n              description: '\"notes\" data type',\n              default: 'string'\n            },\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Notes'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Notes'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: 'Significance of the connection'\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Hides \"notes\" from Edge Editor, Edges Table, and exports',\n              default: false\n            }\n          }\n        },\n        'info': {\n          // Info/Number/Date\n          type: 'object',\n          description: 'General purpose numeric text field',\n          properties: {\n            'type': {\n              type: 'string',\n              description: '\"info\" data type',\n              default: 'number'\n            },\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Date'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Date'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: '\"YYYY-MM-DD\" format\"'\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Hides \"info\" from Edge Editor, Edges Table, and exports',\n              default: false\n            }\n          }\n        },\n        'weight': {\n          // Weight/Number\n          type: 'object',\n          description: 'Weight of this edge',\n          properties: {\n            'type': {\n              type: 'number',\n              description: '\"weight\" data type',\n              default: 'number'\n            },\n            'defaultValue': {\n              type: 'number',\n              description: 'The default \"weight\" of new edges',\n              default: 1\n            },\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Weight'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Weight'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Edge Editor form',\n              default: 'Weight of edge'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"weight\" value in tooltip on graph',\n              default: true\n            },\n            'isRequired': {\n              type: 'boolean',\n              format: 'checkbox',\n              description:\n                'Make \"weight\" a required value.  When \"true\", \"weight\" will be set to `defaultValue` for all edges if \"weight\" was not previously defined.  Be sure to define `defaultValue`',\n              default: true\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description:\n                'Hides \"weight\" from Edge Editor, Edges Table, and exports',\n              default: false\n            }\n          }\n        },\n        'infoSource': {\n          type: 'object',\n          description: 'Who created the edge',\n          properties: {\n            'type': {\n              type: 'string',\n              description: '\"infoSource\" data type',\n              default: 'string'\n            },\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Info Source'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'InfoSource'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Edge Editor form',\n              default: 'Who created this?  (aka Source)'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"infoSource\" value in tooltip on graph',\n              default: true\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: true\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description:\n                'Hides \"infoSource\" from Edge Editor, Edges Table, and exports',\n              default: false\n            }\n          }\n        },\n        'citation': {\n          type: 'object',\n          description: 'Source of the edge',\n          properties: {\n            'type': {\n              type: 'string',\n              description: '\"citation\" data type',\n              default: 'string'\n            },\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Citation'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Citation'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: 'Source Book.Chapter (e.g. \"Part 2 06.03\")'\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description:\n                'Hides \"citation\" from Edge Editor, Edges Table, and exports',\n              default: false\n            }\n          }\n        },\n        'category': {\n          type: 'object',\n          description: 'General purpose string text field (deprecated)',\n          properties: {\n            'type': {\n              type: 'string',\n              description: '\"category\" data type',\n              default: 'string'\n            },\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Category'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Category'\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Node Editor form',\n              default: 'Category (deprecated)'\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description:\n                'Hides \"category\" from Edge Editor, Edges Table, and exports',\n              default: true\n            }\n          }\n        },\n        'created': {\n          // Built-in data DO NOT MODIFY!\n          type: 'object',\n          description:\n            'System-generated date.  This setting used to show/hide tooltip in graph and import/export',\n          properties: {\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Created'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Created'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"created\" value in tooltip on graph',\n              default: true\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Edge Editor form',\n              default: 'Date and time edge was created'\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Requires \"created\" for exports and imports',\n              default: false\n            }\n          }\n        },\n        'createdBy': {\n          // Built-in data DO NOT MODIFY!\n          type: 'object',\n          description:\n            'System-generated date.  This setting used to show/hide tooltip in graph and import/export',\n          properties: {\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Created By'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Created By'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"created by\" value in tooltip on graph',\n              default: true\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Edge Editor form',\n              default: 'Author who created the edge'\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: true\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Requires \"created by\" for exports and imports',\n              default: false\n            }\n          }\n        },\n        'updated': {\n          // Built-in data DO NOT MODIFY!\n          type: 'object',\n          description:\n            'System-generated date.  This setting used to show/hide tooltip in graph and import/export',\n          properties: {\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Updated'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Updated'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"updated\" value in tooltip on graph',\n              default: true\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Edge Editor form',\n              default: 'Date and time edge was last modified'\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Requires \"updated\" for exports and imports',\n              default: false\n            }\n          }\n        },\n        'updatedBy': {\n          // Built-in data DO NOT MODIFY!\n          type: 'object',\n          description:\n            'System-generated date.  This setting used to show/hide tooltip in graph and import/export',\n          properties: {\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Updated By'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Updated By'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"updated by\" value in tooltip on graph',\n              default: true\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Edge Editor form',\n              default: 'Author who updated the nodedgee'\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: true\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Requires \"updated by\" for exports and imports',\n              default: false\n            }\n          }\n        },\n        'revision': {\n          // Built-in data DO NOT MODIFY!\n          type: 'object',\n          description:\n            'System-generated data.  This setting used to show/hide tooltip in graph and import/export',\n          properties: {\n            'displayLabel': {\n              type: 'string',\n              description: 'Label to use for system display',\n              default: 'Revision'\n            },\n            'exportLabel': {\n              type: 'string',\n              description: 'Label to use for exported csv file field name',\n              default: 'Revision'\n            },\n            'includeInGraphTooltip': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show \"revision\" value in tooltip on graph',\n              default: true\n            },\n            'help': {\n              type: 'string',\n              description: 'Help text to display on the Edge Editor form',\n              default: 'Number of times this edge has been revised'\n            },\n            'isProvenance': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Show in Provenance tab',\n              default: false\n            },\n            'hidden': {\n              type: 'boolean',\n              format: 'checkbox',\n              description: 'Requires \"revision\" for exports and imports',\n              default: true\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\n/// SCHEMA METHODS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/*/ API METHOD for Extra schema definition for the Type Editor UI\n *  This introduces a wrapper around the Node or Edge Type Schema to provide\n *  extra UI elements for managing Type changes that the normal Template\n *  editor does not have:\n *  - Adds a checkbox to mark a type for deletion\n *  - Adds a field to map a deleted type to another type\n *\n *  Used by the \"Edit Node Types\" and \"Edit Edge Types\" buttons.\n/*/\nMOD.GetTypeEditorSchema = schemaTypeOptions => {\n  const typeOptions = clone(schemaTypeOptions);\n  try {\n    typeOptions.options.disable_array_delete = true;\n    typeOptions.items.properties.label.options = {\n      // For some reason inputAttribute 'disabled' does not work here\n      // so we use a className to mark the field\n      // then in Template.onEditNodeTypes we set the\n      // disabled property via js\n      inputAttributes: { class: 'disabledField' }\n    };\n    typeOptions.items.properties.replacement = {\n      type: 'string',\n      title: 'Change To'\n    };\n    typeOptions.items.properties.delete = {\n      type: 'boolean',\n      title: 'Delete?',\n      format: 'checkbox'\n    };\n  } catch (err) {\n    console.error('GetTypeEditorSchema Error:', err);\n  }\n  return {\n    title: 'Edit Type Options',\n    type: 'object',\n    description:\n      'NOTE that labels are case-sensitive, so \"Person\" is different from \"person\"',\n    options: {\n      disable_array_add: true,\n      disable_array_delete: true,\n      disable_array_delete_all_rows: true,\n      disable_array_delete_last_row: true,\n      disable_array_reorder: true,\n      disable_collapse: true,\n      disable_properties: true\n    }, // not editable\n    properties: {\n      'options': typeOptions\n    }\n  };\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** API METHOD\n *  ParseTemplateSchema generates and resturns the default template json\n *  Use this to create a pristine defaul template json\n/*/\nMOD.ParseTemplateSchema = () => {\n  let currNodeOrEdge;\n  // optionsDefinition is eithert MOD.NODETYPEOPTIONS or MOD.EDGETYPEOPTIONS\n  function u_ParseOptions(optionsDefinition) {\n    const json = {};\n    const options = optionsDefinition.items.properties;\n    Object.keys(options).forEach(key => {\n      json[key] = options[key].default;\n    });\n    return [json];\n  }\n  function u_ParseProperty(prop) {\n    if (prop.type === 'string') return prop.default || ''; // fall back to '' if default is not defined\n    if (prop.type === 'number') return prop.default || 0; // fall back to 0 if no default\n    if (prop.type === 'boolean') return prop.default || false; // fall back to false if no default\n    return '';\n  }\n  function u_ParseProperties(properties, currJson) {\n    Object.keys(properties).forEach(templatePropertyKey => {\n      if (templatePropertyKey === 'nodeDefs') currNodeOrEdge = 'nodes';\n      if (templatePropertyKey === 'edgeDefs') currNodeOrEdge = 'edges';\n      // REVIEW logic assumes that `edgeDefs` is the last category that has `options`\n      // if we add a new category, we may need to clear `currNodeOrEdge`\n\n      const prop = properties[templatePropertyKey];\n      if (prop.properties) {\n        currJson[templatePropertyKey] = u_ParseProperties(prop.properties, {});\n      } else if (templatePropertyKey === 'options') {\n        // Special handling for nodeDef and edgeDef `type` options as these are not defined in the main\n        // schema, but are instead separated\n        if (currNodeOrEdge === 'nodes') {\n          currJson.options = u_ParseOptions(MOD.NODETYPEOPTIONS);\n        } else if (currNodeOrEdge === 'edges') {\n          currJson.options = u_ParseOptions(MOD.EDGETYPEOPTIONS);\n        } else {\n          throw `${PR}.ParseTemplateSchema encountered unknown 'options' in ${JSON.stringify(\n            properties\n          )} at ${templatePropertyKey}`;\n        }\n      } else {\n        currJson[templatePropertyKey] = u_ParseProperty(prop);\n      }\n    });\n    return currJson;\n  }\n  let json = { version: MOD.TEMPLATE.version };  // Insert template version\n  u_ParseProperties(MOD.TEMPLATE.properties, json);\n  return json;\n};\n\n/// RUNTIME INITIALIZATION ////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nMOD.ParseTemplateSchema();\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  Template Editor Manager\n\n  Client-side\n\n  This handles the UI logic for the \"Edit Template\" subpanel on the \"More...\"\n  tab.\n\n  The actual template loading is handled by `server-database.js`.\n\n  The internal template representation is JSON.\n  The template definition itself is stored as a TOML file, which is then\n  converted to JSON when loaded.\n\n  The default json-editor schema is defined in `template-schema.js`\n\n\n  ##  BACKGROUND\n\n  Template data is loaded by `server-database` DB.InitializeDatabase call.\n\n  With Version 1.4 of NetCreate, we introduce a new TOML template format that\n  is easier to work with directly.\n  * If you open a project that does not have a TOML template, the app will\n    try to load the old JSON version and convert it.  See\n    server-database.m_LoadJSONTemplate() and m_MigrateJSONtoTOML().\n  * If you try to load a TOML template that is missing some key fields\n    (e.g. error message definitions), then the app will fall back on\n    fields defined in the schema.  See server-database.m_LoadTOMLTemplate()).\n\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst UNISYS = require('unisys/client');\nconst TOML = require('@iarna/toml');\nconst DATASTORE = require('system/datastore');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar MOD = UNISYS.NewModule(module.id);\nvar UDATA = UNISYS.NewDataLink(MOD);\n\n/// MODULE METHODS ////////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Used when importing a TOML file\n *  Makes sure TOML file is readable. Returns JSON\n */\nMOD.ValidateTOMLFile = async data => {\n  const { tomlfile } = data;\n  try {\n    let tomlText = await tomlfile.text();\n    const json = TOML.parse(tomlText);\n    const isValid = true;\n    return { isValid, templateJSON: json };\n  } catch (err) {\n    return { isValid: false, error: err };\n  }\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Update TEMPLATE AppState\n    Called by Template.jsx to update the template data with the info from the form.\n    Mostly used to process whether the form is:\n    a) updating the whole template data, or\n    b) updating only node types, or\n    c) updateing only edge types\n\n    IMPORTANT: Does NOT save the template or SetAppState!  Use SaveTemplateFile!\n      SaveTemplateFile will trigger a TEMPLATE state update.\n      Generally you won't call UpdateTemplate without a followup call to\n      SaveTemplateFile.\n\n    MAJOR SIDE EFFECT: Updates NCDATA with changes!\n    `templateSnippet` can be the whole template object, or just the node types or\n    edge types.\n */\nMOD.UpdateTemplate = (templateSnippet, editScope) => {\n  let TEMPLATE = UDATA.AppState('TEMPLATE');\n\n  // a) Replace whole template?\n  if (editScope === 'root') TEMPLATE = templateSnippet;\n\n  // b) Replace NODE type options?\n  if (editScope === 'nodeTypeOptions') {\n    // 1. Clean/validate -- Remove any extra empty labels\n    //    Added Rows will have a blank 'label' but a non-blank 'replacement'\n    let numOfEmptyLabels = 0;\n    TEMPLATE.nodeDefs.type.options = templateSnippet.options.filter(o => {\n      // if there's a replacement, always add it\n      if (o.replacement !== '') return true;\n      // if the label is blank...\n      if (o.label === '') {\n        if (numOfEmptyLabels < 1) {\n          // ... and there has only been one, add it\n          numOfEmptyLabels++;\n          return true;\n        } else {\n          // ... otherwise, remove extras\n          return false;\n        }\n      }\n      // keep all other adjustments\n      return true;\n    });\n    // 2. Update NCDATA with new types\n    UDATA.LocalCall('NODE_TYPES_UPDATE', {\n      nodeTypesChanges: templateSnippet.options\n    });\n    // 3. Remove Types marked for deletion\n    TEMPLATE.nodeDefs.type.options = TEMPLATE.nodeDefs.type.options.filter(\n      o => !o.delete\n    );\n    // 4. Update types with replacement labels\n    TEMPLATE.nodeDefs.type.options = TEMPLATE.nodeDefs.type.options.map(o => {\n      if (o.replacement) {\n        o.label = o.replacement;\n        o.replacement = '';\n      }\n      return o;\n    });\n  }\n\n  // c) Replace EDGE type options?\n  if (editScope === 'edgeTypeOptions') {\n    // 1. Clean/validate -- Remove any extra empty labels\n    //    Added Rows will have a blank 'label' but a non-blank 'replacement'\n    let numOfEmptyLabels = 0;\n    TEMPLATE.edgeDefs.type.options = templateSnippet.options.filter(o => {\n      // if there's a replacement, always add it\n      if (o.replacement !== '') return true;\n      // if the label is blank...\n      if (o.label === '') {\n        if (numOfEmptyLabels < 1) {\n          // ... and there has only been one, add it\n          numOfEmptyLabels++;\n          return true;\n        } else {\n          // ... otherwise, remove extras\n          return false;\n        }\n      }\n      // keep all other adjustments\n      return true;\n    });\n    // 2. Update NCDATA with new types\n    UDATA.LocalCall('EDGE_TYPES_UPDATE', {\n      edgeTypesChanges: templateSnippet.options\n    });\n    // 3. Remove Types marked for deletion\n    TEMPLATE.edgeDefs.type.options = TEMPLATE.edgeDefs.type.options.filter(\n      o => !o.delete\n    );\n    // 4. Update types with replacements\n    TEMPLATE.edgeDefs.type.options = TEMPLATE.edgeDefs.type.options.map(o => {\n      if (o.replacement) {\n        o.label = o.replacement;\n        o.replacement = '';\n      }\n      return o;\n    });\n  }\n  // This call is redundant.  SaveTemplateToFile will trigger a state update.\n  // UDATA.SetAppState(\"TEMPLATE\", TEMPLATE);\n  return TEMPLATE;\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Save template file to disk\n    in case we do not necessarily want to autosave template data\n    This calls: datastore > server > server-database\n */\nMOD.SaveTemplateToFile = template => {\n  return DATASTORE.SaveTemplateFile(template);\n};\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n/** Download template to local file\n */\nMOD.DownloadTemplate = () => {\n  DATASTORE.GetTemplateTOMLFileName() // datastore > server > server-database\n    .then(data => {\n      const filename = data.filename;\n      const TEMPLATE = UDATA.AppState('TEMPLATE');\n      const toml = TOML.stringify(TEMPLATE);\n      const link = document.createElement('a');\n      const blob = new Blob(['\\ufeff', toml]);\n      const url = URL.createObjectURL(blob);\n      link.href = url;\n      link.download = filename;\n      document.body.appendChild(link); // Required for FF\n      link.click();\n      document.body.removeChild(link);\n    });\n};\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n","/*//////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\\n\n  UI MANAGER\n\n  ui-mgr handles the custom definition of a UI\n\n  It maps the template-schema variables to\n  the visual display of components.\n\n  What does it take care of?\n  * order of display items?\n  * visible status?\n\n  Available Field Types\n  * string\n  * number\n  * datetime\n  * date\n  * time\n  * enum\n  * color\n\n\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * //////////////////////////////////////*/\n\nconst UNISYS = require('unisys/client');\n\n/// CONSTANTS & DECLARATIONS //////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nconst DBG = false;\nconst PR = 'ui-mgr: ';\n\n/// INITIALIZE MODULE /////////////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nvar MOD = UNISYS.NewModule(module.id);\nvar UDATA = UNISYS.NewDataLink(MOD);\n\n// /// UNISYS HANDLERS ///////////////////////////////////////////////////////////\n// /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// /** lifecycle INITIALIZE handler\n//  */\n// MOD.Hook(\"INITIALIZE\", () => {\n//   UDATA.HandleMessage('USER_HILITE_NODE', m_UserHighlightNode);\n//   UDATA.HandleMessage('AUTOSUGGEST_HILITE_NODE', m_AutoSuggestHiliteNode);\n//   UDATA.HandleMessage('TABLE_HILITE_NODE', m_TableHiliteNode);\n// }); // end UNISYS_INIT\n\n// /// MODULE METHODS ////////////////////////////////////////////////////////////\n// /// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// function m_UserHighlightNode(data) {\n//   // console.log('mouseover', data.nodeId)\n//   const HILITE = UDATA.AppState('HILITE');\n//   HILITE.userHighlightNodeId = data.nodeId;\n//   UDATA.SetAppState('HILITE', HILITE);\n// }\n\n/// EXPORT CLASS DEFINITION ///////////////////////////////////////////////////\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nmodule.exports = MOD;\n"]}